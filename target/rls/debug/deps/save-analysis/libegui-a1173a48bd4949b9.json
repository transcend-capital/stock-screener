{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0","program":"C:\\Users\\Tyra Bjurman\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","egui","--edition=2021","C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"convert_bytemuck\"","--cfg","feature=\"default_fonts\"","--cfg","feature=\"single_threaded\"","--cfg","feature=\"tracing\"","-C","metadata=a1173a48bd4949b9","-C","extra-filename=-a1173a48bd4949b9","--out-dir","c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps","--extern","ahash=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libahash-62f719d609381109.rmeta","--extern","epaint=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libepaint-d7bd6769fd111461.rmeta","--extern","nohash_hasher=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libnohash_hasher-9150af6f0cc16b49.rmeta","--extern","tracing=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libtracing-b62a08bf68a02b73.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Tyra Bjurman\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libegui-a1173a48bd4949b9.rmeta"},"prelude":{"crate_id":{"name":"egui","disambiguator":[11556362777420533189,0]},"crate_root":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src","external_crates":[{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[5748888646060736057,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11647781593125135854,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13810207351280985286,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10856308035441163175,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15195352194256834944,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8936219983177082535,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9514052684633617057,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11173665669995955307,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11489992985031151541,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16828784558795307081,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10060143980449217236,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14817981415011782061,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16087529398371340149,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":14,"id":{"name":"epaint","disambiguator":[15603212726322193755,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":15,"id":{"name":"emath","disambiguator":[1857022275223742910,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":16,"id":{"name":"bytemuck","disambiguator":[6027384491255769145,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":17,"id":{"name":"bytemuck_derive","disambiguator":[3807360260228750469,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":18,"id":{"name":"atomic_refcell","disambiguator":[5087543260144174942,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","num":19,"id":{"name":"ahash","disambiguator":[7678121960710224047,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":20,"id":{"name":"once_cell","disambiguator":[7981614201203751029,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":21,"id":{"name":"getrandom","disambiguator":[8713240416360518369,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":22,"id":{"name":"cfg_if","disambiguator":[13690946024276880309,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":23,"id":{"name":"ab_glyph","disambiguator":[16103060746931527796,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":24,"id":{"name":"ab_glyph_rasterizer","disambiguator":[17601843927899529409,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":25,"id":{"name":"owned_ttf_parser","disambiguator":[15467540707023769811,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","num":26,"id":{"name":"ttf_parser","disambiguator":[15142029793234110151,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","num":27,"id":{"name":"nohash_hasher","disambiguator":[16649505969791144709,0]}}],"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":18615,"line_start":1,"line_end":593,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4601},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22446,"byte_end":22450,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"alias_span":null,"name":"Area","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22476,"byte_end":22492,"line_start":17,"line_end":17,"column_start":25,"column_end":41},"alias_span":null,"name":"CollapsingHeader","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22494,"byte_end":22512,"line_start":17,"line_end":17,"column_start":43,"column_end":61},"alias_span":null,"name":"CollapsingResponse","value":"","parent":{"krate":0,"index":20}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22530,"byte_end":22531,"line_start":18,"line_end":18,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"ComboBox","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":4626},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22544,"byte_end":22549,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":4676},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22563,"byte_end":22575,"line_start":20,"line_end":20,"column_start":13,"column_end":25},"alias_span":null,"name":"CentralPanel","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22577,"byte_end":22586,"line_start":20,"line_end":20,"column_start":27,"column_end":36},"alias_span":null,"name":"SidePanel","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22588,"byte_end":22602,"line_start":20,"line_end":20,"column_start":38,"column_end":52},"alias_span":null,"name":"TopBottomPanel","value":"","parent":{"krate":0,"index":20}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22616,"byte_end":22617,"line_start":21,"line_end":21,"column_start":12,"column_end":13},"alias_span":null,"name":"*","value":"show_tooltip_for, show_tooltip_at_pointer","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":4698},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22631,"byte_end":22637,"line_start":22,"line_end":22,"column_start":13,"column_end":19},"alias_span":null,"name":"Resize","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":4728},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22656,"byte_end":22666,"line_start":23,"line_end":23,"column_start":18,"column_end":28},"alias_span":null,"name":"ScrollArea","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22680,"byte_end":22686,"line_start":24,"line_end":24,"column_start":13,"column_end":19},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":5884},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\mod.rs","byte_start":559094,"byte_end":559101,"line_start":9,"line_end":9,"column_start":18,"column_end":25},"alias_span":null,"name":"History","value":"","parent":{"krate":0,"index":2310}},{"kind":"Use","ref_id":{"krate":0,"index":5915},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\mod.rs","byte_start":559124,"byte_end":559133,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"alias_span":null,"name":"IdTypeMap","value":"","parent":{"krate":0,"index":2310}},{"kind":"Use","ref_id":{"krate":14,"index":1222},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\mod.rs","byte_start":559159,"byte_end":559163,"line_start":12,"line_end":12,"column_start":24,"column_end":28},"alias_span":null,"name":"hash","value":"","parent":{"krate":0,"index":2310}},{"kind":"Use","ref_id":{"krate":14,"index":1227},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\mod.rs","byte_start":559165,"byte_end":559174,"line_start":12,"line_end":12,"column_start":30,"column_end":39},"alias_span":null,"name":"hash_with","value":"","parent":{"krate":0,"index":2310}},{"kind":"Use","ref_id":{"krate":0,"index":3497},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681005,"byte_end":681011,"line_start":14,"line_end":14,"column_start":5,"column_end":11},"alias_span":null,"name":"Arrows","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6051},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681013,"byte_end":681016,"line_start":14,"line_end":14,"column_start":13,"column_end":16},"alias_span":null,"name":"Bar","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681018,"byte_end":681026,"line_start":14,"line_end":14,"column_start":18,"column_end":26},"alias_span":null,"name":"BarChart","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681028,"byte_end":681035,"line_start":14,"line_end":14,"column_start":28,"column_end":35},"alias_span":null,"name":"BoxElem","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":3585},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681037,"byte_end":681044,"line_start":14,"line_end":14,"column_start":37,"column_end":44},"alias_span":null,"name":"BoxPlot","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6068},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681046,"byte_end":681055,"line_start":14,"line_end":14,"column_start":46,"column_end":55},"alias_span":null,"name":"BoxSpread","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6180},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681057,"byte_end":681062,"line_start":14,"line_end":14,"column_start":57,"column_end":62},"alias_span":null,"name":"HLine","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681064,"byte_end":681068,"line_start":14,"line_end":14,"column_start":64,"column_end":68},"alias_span":null,"name":"Line","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6111},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681070,"byte_end":681079,"line_start":14,"line_end":14,"column_start":70,"column_end":79},"alias_span":null,"name":"LineStyle","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6148},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681081,"byte_end":681092,"line_start":14,"line_end":14,"column_start":81,"column_end":92},"alias_span":null,"name":"MarkerShape","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6127},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681098,"byte_end":681109,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"alias_span":null,"name":"Orientation","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6217},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681111,"byte_end":681120,"line_start":15,"line_end":15,"column_start":18,"column_end":27},"alias_span":null,"name":"PlotImage","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681122,"byte_end":681128,"line_start":15,"line_end":15,"column_start":29,"column_end":35},"alias_span":null,"name":"Points","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681130,"byte_end":681137,"line_start":15,"line_end":15,"column_start":37,"column_end":44},"alias_span":null,"name":"Polygon","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6208},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681139,"byte_end":681143,"line_start":15,"line_end":15,"column_start":46,"column_end":50},"alias_span":null,"name":"Text","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6194},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681145,"byte_end":681150,"line_start":15,"line_end":15,"column_start":52,"column_end":57},"alias_span":null,"name":"VLine","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6099},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681152,"byte_end":681157,"line_start":15,"line_end":15,"column_start":59,"column_end":64},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681159,"byte_end":681165,"line_start":15,"line_end":15,"column_start":66,"column_end":72},"alias_span":null,"name":"Values","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6228},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681187,"byte_end":681193,"line_start":17,"line_end":17,"column_start":18,"column_end":24},"alias_span":null,"name":"Corner","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":6245},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681195,"byte_end":681201,"line_start":17,"line_end":17,"column_start":26,"column_end":32},"alias_span":null,"name":"Legend","value":"","parent":{"krate":0,"index":2896}},{"kind":"Use","ref_id":{"krate":0,"index":4086},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\mod.rs","byte_start":851574,"byte_end":851582,"line_start":8,"line_end":8,"column_start":14,"column_end":22},"alias_span":null,"name":"TextEdit","value":"","parent":{"krate":0,"index":4055}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\mod.rs","byte_start":851598,"byte_end":851599,"line_start":8,"line_end":8,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"CCursorRange, CursorRange","parent":{"krate":0,"index":4055}},{"kind":"Use","ref_id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\mod.rs","byte_start":851609,"byte_end":851623,"line_start":8,"line_end":8,"column_start":49,"column_end":63},"alias_span":null,"name":"TextEditOutput","value":"","parent":{"krate":0,"index":4055}},{"kind":"Use","ref_id":{"krate":0,"index":6357},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\mod.rs","byte_start":851632,"byte_end":851645,"line_start":8,"line_end":8,"column_start":72,"column_end":85},"alias_span":null,"name":"TextEditState","value":"","parent":{"krate":0,"index":4055}},{"kind":"Use","ref_id":{"krate":0,"index":4241},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\mod.rs","byte_start":851664,"byte_end":851674,"line_start":9,"line_end":9,"column_start":18,"column_end":28},"alias_span":null,"name":"TextBuffer","value":"","parent":{"krate":0,"index":4055}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621005,"byte_end":621006,"line_start":23,"line_end":23,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Button, Checkbox, RadioButton","parent":{"krate":0,"index":2674}},{"kind":"Use","ref_id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621028,"byte_end":621037,"line_start":24,"line_end":24,"column_start":21,"column_end":30},"alias_span":null,"name":"DragValue","value":"","parent":{"krate":0,"index":2674}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621058,"byte_end":621059,"line_start":25,"line_end":25,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"Hyperlink","parent":{"krate":0,"index":2674}},{"kind":"Use","ref_id":{"krate":0,"index":6039},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621076,"byte_end":621081,"line_start":26,"line_end":26,"column_start":16,"column_end":21},"alias_span":null,"name":"Image","value":"","parent":{"krate":0,"index":2674}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621098,"byte_end":621099,"line_start":27,"line_end":27,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"Label","parent":{"krate":0,"index":2674}},{"kind":"Use","ref_id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621123,"byte_end":621134,"line_start":28,"line_end":28,"column_start":23,"column_end":34},"alias_span":null,"name":"ProgressBar","value":"","parent":{"krate":0,"index":2674}},{"kind":"Use","ref_id":{"krate":0,"index":3902},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621160,"byte_end":621175,"line_start":29,"line_end":29,"column_start":25,"column_end":40},"alias_span":null,"name":"SelectableLabel","value":"","parent":{"krate":0,"index":2674}},{"kind":"Use","ref_id":{"krate":0,"index":3913},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621196,"byte_end":621205,"line_start":30,"line_end":30,"column_start":20,"column_end":29},"alias_span":null,"name":"Separator","value":"","parent":{"krate":0,"index":2674}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621223,"byte_end":621224,"line_start":31,"line_end":31,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"Slider","parent":{"krate":0,"index":2674}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621243,"byte_end":621244,"line_start":32,"line_end":32,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2674}},{"kind":"Use","ref_id":{"krate":0,"index":4241},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621266,"byte_end":621276,"line_start":33,"line_end":33,"column_start":21,"column_end":31},"alias_span":null,"name":"TextBuffer","value":"","parent":{"krate":0,"index":2674}},{"kind":"Use","ref_id":{"krate":0,"index":4086},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621278,"byte_end":621286,"line_start":33,"line_end":33,"column_start":33,"column_end":41},"alias_span":null,"name":"TextEdit","value":"","parent":{"krate":0,"index":2674}},{"kind":"Use","ref_id":{"krate":14,"index":0},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12284,"byte_end":12290,"line_start":381,"line_end":381,"column_start":9,"column_end":15},"alias_span":null,"name":"epaint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12308,"byte_end":12313,"line_start":382,"line_end":382,"column_start":17,"column_end":22},"alias_span":null,"name":"emath","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":416},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12332,"byte_end":12336,"line_start":384,"line_end":384,"column_start":17,"column_end":21},"alias_span":null,"name":"lerp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":78},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12338,"byte_end":12342,"line_start":384,"line_end":384,"column_start":23,"column_end":27},"alias_span":null,"name":"pos2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":419},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12344,"byte_end":12349,"line_start":384,"line_end":384,"column_start":29,"column_end":34},"alias_span":null,"name":"remap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":421},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12351,"byte_end":12362,"line_start":384,"line_end":384,"column_start":36,"column_end":47},"alias_span":null,"name":"remap_clamp","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":304},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12364,"byte_end":12368,"line_start":384,"line_end":384,"column_start":49,"column_end":53},"alias_span":null,"name":"vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":440},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12370,"byte_end":12375,"line_start":384,"line_end":384,"column_start":55,"column_end":60},"alias_span":null,"name":"Align","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":461},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12377,"byte_end":12383,"line_start":384,"line_end":384,"column_start":62,"column_end":68},"alias_span":null,"name":"Align2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":462},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12377,"byte_end":12383,"line_start":384,"line_end":384,"column_start":62,"column_end":68},"alias_span":null,"name":"Align2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":427},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12385,"byte_end":12391,"line_start":384,"line_end":384,"column_start":70,"column_end":76},"alias_span":null,"name":"NumExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":563},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12393,"byte_end":12397,"line_start":384,"line_end":384,"column_start":78,"column_end":82},"alias_span":null,"name":"Pos2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":604},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12399,"byte_end":12403,"line_start":384,"line_end":384,"column_start":84,"column_end":88},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":722},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12405,"byte_end":12409,"line_start":384,"line_end":384,"column_start":90,"column_end":94},"alias_span":null,"name":"Vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":86},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12434,"byte_end":12439,"line_start":386,"line_end":386,"column_start":5,"column_end":10},"alias_span":null,"name":"color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":332},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12441,"byte_end":12446,"line_start":386,"line_end":386,"column_start":12,"column_end":17},"alias_span":null,"name":"mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1987},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12459,"byte_end":12467,"line_start":387,"line_end":387,"column_start":12,"column_end":20},"alias_span":null,"name":"FontData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":2012},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12469,"byte_end":12484,"line_start":387,"line_end":387,"column_start":22,"column_end":37},"alias_span":null,"name":"FontDefinitions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1961},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12486,"byte_end":12496,"line_start":387,"line_end":387,"column_start":39,"column_end":49},"alias_span":null,"name":"FontFamily","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1950},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12498,"byte_end":12504,"line_start":387,"line_end":387,"column_start":51,"column_end":57},"alias_span":null,"name":"FontId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1999},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12506,"byte_end":12515,"line_start":387,"line_end":387,"column_start":59,"column_end":68},"alias_span":null,"name":"FontTweak","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":2203},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12532,"byte_end":12545,"line_start":388,"line_end":388,"column_start":15,"column_end":28},"alias_span":null,"name":"TexturesDelta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1534},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12551,"byte_end":12561,"line_start":389,"line_end":389,"column_start":5,"column_end":15},"alias_span":null,"name":"AlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":2252},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12563,"byte_end":12574,"line_start":389,"line_end":389,"column_start":17,"column_end":28},"alias_span":null,"name":"ClippedMesh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":2253},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12563,"byte_end":12574,"line_start":389,"line_end":389,"column_start":17,"column_end":28},"alias_span":null,"name":"ClippedMesh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1415},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12576,"byte_end":12583,"line_start":389,"line_end":389,"column_start":30,"column_end":37},"alias_span":null,"name":"Color32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1522},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12585,"byte_end":12595,"line_start":389,"line_end":389,"column_start":39,"column_end":49},"alias_span":null,"name":"ColorImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1509},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12597,"byte_end":12606,"line_start":389,"line_end":389,"column_start":51,"column_end":60},"alias_span":null,"name":"ImageData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1616},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12608,"byte_end":12612,"line_start":389,"line_end":389,"column_start":62,"column_end":66},"alias_span":null,"name":"Mesh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1452},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12614,"byte_end":12618,"line_start":389,"line_end":389,"column_start":68,"column_end":72},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1739},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12620,"byte_end":12628,"line_start":389,"line_end":389,"column_start":74,"column_end":82},"alias_span":null,"name":"Rounding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1659},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12630,"byte_end":12635,"line_start":389,"line_end":389,"column_start":84,"column_end":89},"alias_span":null,"name":"Shape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1812},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12637,"byte_end":12643,"line_start":389,"line_end":389,"column_start":91,"column_end":97},"alias_span":null,"name":"Stroke","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1104},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12649,"byte_end":12662,"line_start":390,"line_end":390,"column_start":5,"column_end":18},"alias_span":null,"name":"TextureHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":2214},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12664,"byte_end":12673,"line_start":390,"line_end":390,"column_start":20,"column_end":29},"alias_span":null,"name":"TextureId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":1987},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12730,"byte_end":12738,"line_start":395,"line_end":395,"column_start":9,"column_end":17},"alias_span":null,"name":"FontData","value":"","parent":{"krate":0,"index":4424}},{"kind":"Use","ref_id":{"krate":14,"index":2012},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12740,"byte_end":12755,"line_start":395,"line_end":395,"column_start":19,"column_end":34},"alias_span":null,"name":"FontDefinitions","value":"","parent":{"krate":0,"index":4424}},{"kind":"Use","ref_id":{"krate":14,"index":1961},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12757,"byte_end":12767,"line_start":395,"line_end":395,"column_start":36,"column_end":46},"alias_span":null,"name":"FontFamily","value":"","parent":{"krate":0,"index":4424}},{"kind":"Use","ref_id":{"krate":14,"index":807},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12769,"byte_end":12774,"line_start":395,"line_end":395,"column_start":48,"column_end":53},"alias_span":null,"name":"Fonts","value":"","parent":{"krate":0,"index":4424}},{"kind":"Use","ref_id":{"krate":14,"index":2105},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12776,"byte_end":12782,"line_start":395,"line_end":395,"column_start":55,"column_end":61},"alias_span":null,"name":"Galley","value":"","parent":{"krate":0,"index":4424}},{"kind":"Use","ref_id":{"krate":14,"index":2058},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12784,"byte_end":12793,"line_start":395,"line_end":395,"column_start":63,"column_end":72},"alias_span":null,"name":"LayoutJob","value":"","parent":{"krate":0,"index":4424}},{"kind":"Use","ref_id":{"krate":14,"index":2074},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12795,"byte_end":12808,"line_start":395,"line_end":395,"column_start":74,"column_end":87},"alias_span":null,"name":"LayoutSection","value":"","parent":{"krate":0,"index":4424}},{"kind":"Use","ref_id":{"krate":14,"index":2086},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12810,"byte_end":12820,"line_start":395,"line_end":395,"column_start":89,"column_end":99},"alias_span":null,"name":"TextFormat","value":"","parent":{"krate":0,"index":4424}},{"kind":"Use","ref_id":{"krate":14,"index":1029},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12830,"byte_end":12838,"line_start":396,"line_end":396,"column_start":9,"column_end":17},"alias_span":null,"name":"TAB_SIZE","value":"","parent":{"krate":0,"index":4424}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12876,"byte_end":12877,"line_start":401,"line_end":401,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"ScrollArea, Area, resize, area, ComboBox, scroll_area, CentralPanel, Frame, window, popup","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4782},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12892,"byte_end":12899,"line_start":402,"line_end":402,"column_start":14,"column_end":21},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12928,"byte_end":12929,"line_start":404,"line_end":404,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"TouchPhase, NUM_POINTER_BUTTONS, TouchId, Event, Key, Modifiers, PointerButton, RawInput","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12939,"byte_end":12945,"line_start":405,"line_end":405,"column_start":9,"column_end":15},"alias_span":null,"name":"output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5140},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12954,"byte_end":12964,"line_start":405,"line_end":405,"column_start":24,"column_end":34},"alias_span":null,"name":"CursorIcon","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5103},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12966,"byte_end":12976,"line_start":405,"line_end":405,"column_start":36,"column_end":46},"alias_span":null,"name":"FullOutput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5116},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12978,"byte_end":12992,"line_start":405,"line_end":405,"column_start":48,"column_end":62},"alias_span":null,"name":"PlatformOutput","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5221},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12994,"byte_end":13004,"line_start":405,"line_end":405,"column_start":64,"column_end":74},"alias_span":null,"name":"WidgetInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13024,"byte_end":13028,"line_start":407,"line_end":407,"column_start":11,"column_end":15},"alias_span":null,"name":"Grid","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13039,"byte_end":13041,"line_start":408,"line_end":408,"column_start":10,"column_end":12},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13043,"byte_end":13048,"line_start":408,"line_end":408,"column_start":14,"column_end":19},"alias_span":null,"name":"IdMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5353},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13069,"byte_end":13079,"line_start":409,"line_end":409,"column_start":19,"column_end":29},"alias_span":null,"name":"InputState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5289},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13081,"byte_end":13095,"line_start":409,"line_end":409,"column_start":31,"column_end":45},"alias_span":null,"name":"MultiTouchInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5403},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13097,"byte_end":13109,"line_start":409,"line_end":409,"column_start":47,"column_end":59},"alias_span":null,"name":"PointerState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5452},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13125,"byte_end":13132,"line_start":410,"line_end":410,"column_start":14,"column_end":21},"alias_span":null,"name":"LayerId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5421},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13134,"byte_end":13139,"line_start":410,"line_end":410,"column_start":23,"column_end":28},"alias_span":null,"name":"Order","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13154,"byte_end":13155,"line_start":411,"line_end":411,"column_start":13,"column_end":14},"alias_span":null,"name":"*","value":"Direction, Region, Layout","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5537},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13169,"byte_end":13175,"line_start":412,"line_end":412,"column_start":13,"column_end":19},"alias_span":null,"name":"Memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5637},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13190,"byte_end":13197,"line_start":413,"line_end":413,"column_start":14,"column_end":21},"alias_span":null,"name":"Painter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5663},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13214,"byte_end":13227,"line_start":414,"line_end":414,"column_start":16,"column_end":29},"alias_span":null,"name":"InnerResponse","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5644},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13229,"byte_end":13237,"line_start":414,"line_end":414,"column_start":31,"column_end":39},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5670},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13251,"byte_end":13256,"line_start":415,"line_end":415,"column_start":12,"column_end":17},"alias_span":null,"name":"Sense","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1863},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13270,"byte_end":13283,"line_start":416,"line_end":416,"column_start":13,"column_end":26},"alias_span":null,"name":"FontSelection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5718},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13285,"byte_end":13290,"line_start":416,"line_end":416,"column_start":28,"column_end":33},"alias_span":null,"name":"Style","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13292,"byte_end":13301,"line_start":416,"line_end":416,"column_start":35,"column_end":44},"alias_span":null,"name":"TextStyle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5787},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13303,"byte_end":13310,"line_start":416,"line_end":416,"column_start":46,"column_end":53},"alias_span":null,"name":"Visuals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":2105},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13324,"byte_end":13330,"line_start":417,"line_end":417,"column_start":12,"column_end":18},"alias_span":null,"name":"Galley","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":2086},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13332,"byte_end":13342,"line_start":417,"line_end":417,"column_start":20,"column_end":30},"alias_span":null,"name":"TextFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13353,"byte_end":13355,"line_start":418,"line_end":418,"column_start":9,"column_end":11},"alias_span":null,"name":"Ui","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5955},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13375,"byte_end":13383,"line_start":419,"line_end":419,"column_start":19,"column_end":27},"alias_span":null,"name":"RichText","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5977},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13385,"byte_end":13395,"line_start":419,"line_end":419,"column_start":29,"column_end":39},"alias_span":null,"name":"WidgetText","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13411,"byte_end":13412,"line_start":420,"line_end":420,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"Button, Widget, Image, Label, plot, TextBuffer, Slider, reset_button_with, reset_button, TextEdit, WidgetWithState, DragValue","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":18615,"line_start":1,"line_end":593,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":20},{"krate":0,"index":644},{"krate":0,"index":806},{"krate":0,"index":881},{"krate":0,"index":896},{"krate":0,"index":967},{"krate":0,"index":1003},{"krate":0,"index":1147},{"krate":0,"index":1168},{"krate":0,"index":1205},{"krate":0,"index":1272},{"krate":0,"index":1358},{"krate":0,"index":1529},{"krate":0,"index":1664},{"krate":0,"index":1706},{"krate":0,"index":1814},{"krate":0,"index":1823},{"krate":0,"index":1999},{"krate":0,"index":2310},{"krate":0,"index":2543},{"krate":0,"index":2674},{"krate":0,"index":4322},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":4329},{"krate":0,"index":4332},{"krate":0,"index":4335},{"krate":0,"index":4338},{"krate":0,"index":4341},{"krate":0,"index":4344},{"krate":0,"index":4347},{"krate":0,"index":4348},{"krate":0,"index":4350},{"krate":0,"index":4353},{"krate":0,"index":4356},{"krate":0,"index":4359},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4373},{"krate":0,"index":4376},{"krate":0,"index":4379},{"krate":0,"index":4382},{"krate":0,"index":4385},{"krate":0,"index":4388},{"krate":0,"index":4391},{"krate":0,"index":4392},{"krate":0,"index":4394},{"krate":0,"index":4397},{"krate":0,"index":4400},{"krate":0,"index":4403},{"krate":0,"index":4406},{"krate":0,"index":4409},{"krate":0,"index":4412},{"krate":0,"index":4415},{"krate":0,"index":4418},{"krate":0,"index":4421},{"krate":0,"index":4424},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4458},{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461},{"krate":0,"index":4464},{"krate":0,"index":4467},{"krate":0,"index":4470},{"krate":0,"index":4473},{"krate":0,"index":4476},{"krate":0,"index":4479},{"krate":0,"index":4480},{"krate":0,"index":4483},{"krate":0,"index":4486},{"krate":0,"index":4487},{"krate":0,"index":4490},{"krate":0,"index":4493},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4500},{"krate":0,"index":4503},{"krate":0,"index":4504},{"krate":0,"index":4507},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4514},{"krate":0,"index":4517},{"krate":0,"index":4520},{"krate":0,"index":4521},{"krate":0,"index":4524},{"krate":0,"index":4527},{"krate":0,"index":4530},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4537},{"krate":0,"index":4540},{"krate":0,"index":4543},{"krate":0,"index":4544},{"krate":0,"index":4547},{"krate":0,"index":4550},{"krate":0,"index":4551},{"krate":0,"index":4552},{"krate":0,"index":4553},{"krate":0,"index":4554},{"krate":0,"index":4555},{"krate":0,"index":4556},{"krate":0,"index":6367},{"krate":0,"index":6396},{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6401},{"krate":0,"index":6402},{"krate":0,"index":4563},{"krate":0,"index":4566}],"decl_id":null,"docs":" `egui`:  an easy-to-use GUI in pure Rust!","sig":null,"attributes":[{"value":"/ `egui`:  an easy-to-use GUI in pure Rust!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":45,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":46,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Try the live web demo: <https://www.egui.rs/#demo>. Read more about egui at <https://github.com/emilk/egui>.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":50,"byte_end":162,"line_start":3,"line_end":3,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":163,"byte_end":166,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ `egui` is in heavy development, with each new version having breaking changes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":167,"byte_end":249,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ You need to have rust 1.56.0 or later to use `egui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":250,"byte_end":306,"line_start":6,"line_end":6,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":307,"byte_end":310,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ To quickly get started with egui, you can take a look at [`eframe_template`](https://github.com/emilk/eframe_template)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":311,"byte_end":433,"line_start":8,"line_end":8,"column_start":1,"column_end":123}},{"value":"/ which uses [`eframe`](https://docs.rs/eframe).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":434,"byte_end":484,"line_start":9,"line_end":9,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":485,"byte_end":488,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ To create a GUI using egui you first need a [`Context`] (by convention referred to by `ctx`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ Then you add a [`Window`] or a [`SidePanel`] to get a [`Ui`], which is what you'll be using to add all the buttons and labels that you need.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":587,"byte_end":731,"line_start":12,"line_end":12,"column_start":1,"column_end":145}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":732,"byte_end":735,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":736,"byte_end":739,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Using egui","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":740,"byte_end":756,"line_start":15,"line_end":15,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":757,"byte_end":760,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To see what is possible to build with egui you can check out the online demo at <https://www.egui.rs/#demo>.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":761,"byte_end":873,"line_start":17,"line_end":17,"column_start":1,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":874,"byte_end":877,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ If you like the \"learning by doing\" approach, clone <https://github.com/emilk/eframe_template> and get started using egui right away.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":878,"byte_end":1015,"line_start":19,"line_end":19,"column_start":1,"column_end":138}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1016,"byte_end":1019,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ### A simple example","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1020,"byte_end":1044,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1045,"byte_end":1048,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Here is a simple counter that can be incremented and decremented using two buttons:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1049,"byte_end":1136,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1137,"byte_end":1144,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ fn ui_counter(ui: &mut egui::Ui, counter: &mut i32) {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1145,"byte_end":1202,"line_start":25,"line_end":25,"column_start":1,"column_end":58}},{"value":"/     // Put the buttons and label on the same row:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1203,"byte_end":1256,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/     ui.horizontal(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1257,"byte_end":1285,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/         if ui.button(\"-\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1286,"byte_end":1327,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/             *counter -= 1;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1328,"byte_end":1358,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1359,"byte_end":1372,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/         ui.label(counter.to_string());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1373,"byte_end":1415,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/         if ui.button(\"+\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1416,"byte_end":1457,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/             *counter += 1;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1458,"byte_end":1488,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/         }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1489,"byte_end":1502,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1503,"byte_end":1514,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1515,"byte_end":1520,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1521,"byte_end":1528,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1529,"byte_end":1532,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ In some GUI frameworks this would require defining multiple types and functions with callbacks or message handlers,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1533,"byte_end":1652,"line_start":39,"line_end":39,"column_start":1,"column_end":120}},{"value":"/ but thanks to `egui` being immediate mode everything is one self-contained function!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1653,"byte_end":1741,"line_start":40,"line_end":40,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1742,"byte_end":1745,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ### Getting a [`Ui`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1746,"byte_end":1770,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1771,"byte_end":1774,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Use one of [`SidePanel`], [`TopBottomPanel`], [`CentralPanel`], [`Window`] or [`Area`] to","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1775,"byte_end":1868,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/ get access to an [`Ui`] where you can put widgets. For example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1869,"byte_end":1936,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1937,"byte_end":1940,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1941,"byte_end":1948,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ctx(|ctx| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1949,"byte_end":1983,"line_start":48,"line_end":48,"column_start":1,"column_end":35}},{"value":"/ egui::CentralPanel::default().show(&ctx, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":1984,"byte_end":2035,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/     ui.add(egui::Label::new(\"Hello World!\"));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2036,"byte_end":2085,"line_start":50,"line_end":50,"column_start":1,"column_end":50}},{"value":"/     ui.label(\"A shorter and more convenient way to add a label.\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2086,"byte_end":2156,"line_start":51,"line_end":51,"column_start":1,"column_end":71}},{"value":"/     if ui.button(\"Click me\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2157,"byte_end":2201,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/         // take some action here","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2202,"byte_end":2238,"line_start":53,"line_end":53,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2239,"byte_end":2248,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2249,"byte_end":2256,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2257,"byte_end":2266,"line_start":56,"line_end":56,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2267,"byte_end":2274,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2275,"byte_end":2278,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ### Quick start","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2279,"byte_end":2298,"line_start":59,"line_end":59,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2299,"byte_end":2302,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2303,"byte_end":2310,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2311,"byte_end":2343,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ # let mut my_string = String::new();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2344,"byte_end":2384,"line_start":63,"line_end":63,"column_start":1,"column_end":41}},{"value":"/ # let mut my_boolean = true;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2385,"byte_end":2417,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ # let mut my_f32 = 42.0;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2418,"byte_end":2446,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ ui.label(\"This is a label\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2447,"byte_end":2479,"line_start":66,"line_end":66,"column_start":1,"column_end":33}},{"value":"/ ui.hyperlink(\"https://github.com/emilk/egui\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2480,"byte_end":2530,"line_start":67,"line_end":67,"column_start":1,"column_end":51}},{"value":"/ ui.text_edit_singleline(&mut my_string);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2531,"byte_end":2575,"line_start":68,"line_end":68,"column_start":1,"column_end":45}},{"value":"/ if ui.button(\"Click me\").clicked() { }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2576,"byte_end":2618,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/ ui.add(egui::Slider::new(&mut my_f32, 0.0..=100.0));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2619,"byte_end":2675,"line_start":70,"line_end":70,"column_start":1,"column_end":57}},{"value":"/ ui.add(egui::DragValue::new(&mut my_f32));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2676,"byte_end":2722,"line_start":71,"line_end":71,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2723,"byte_end":2726,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ui.checkbox(&mut my_boolean, \"Checkbox\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2727,"byte_end":2772,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2773,"byte_end":2776,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq)]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2777,"byte_end":2801,"line_start":75,"line_end":75,"column_start":1,"column_end":25}},{"value":"/ enum Enum { First, Second, Third }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2802,"byte_end":2840,"line_start":76,"line_end":76,"column_start":1,"column_end":39}},{"value":"/ let mut my_enum = Enum::First;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2841,"byte_end":2875,"line_start":77,"line_end":77,"column_start":1,"column_end":35}},{"value":"/ ui.horizontal(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2876,"byte_end":2900,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/     ui.radio_value(&mut my_enum, Enum::First, \"First\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2901,"byte_end":2960,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"/     ui.radio_value(&mut my_enum, Enum::Second, \"Second\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":2961,"byte_end":3022,"line_start":80,"line_end":80,"column_start":1,"column_end":62}},{"value":"/     ui.radio_value(&mut my_enum, Enum::Third, \"Third\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3023,"byte_end":3082,"line_start":81,"line_end":81,"column_start":1,"column_end":60}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3083,"byte_end":3090,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3091,"byte_end":3094,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ui.separator();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3095,"byte_end":3114,"line_start":84,"line_end":84,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3115,"byte_end":3118,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ # let my_image = egui::TextureId::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3119,"byte_end":3167,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/ ui.image(my_image, [640.0, 480.0]);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3168,"byte_end":3207,"line_start":87,"line_end":87,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3208,"byte_end":3211,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ui.collapsing(\"Click to see what is hidden!\", |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3212,"byte_end":3268,"line_start":89,"line_end":89,"column_start":1,"column_end":57}},{"value":"/     ui.label(\"Not much, as it turns out\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3269,"byte_end":3315,"line_start":90,"line_end":90,"column_start":1,"column_end":47}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3316,"byte_end":3323,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3324,"byte_end":3333,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3334,"byte_end":3341,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3342,"byte_end":3345,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ## Conventions","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3346,"byte_end":3364,"line_start":95,"line_end":95,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3365,"byte_end":3368,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ Conventions unless otherwise specified:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3369,"byte_end":3412,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3413,"byte_end":3416,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ * angles are in radians","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3417,"byte_end":3444,"line_start":99,"line_end":99,"column_start":1,"column_end":28}},{"value":"/ * `Vec2::X` is right and `Vec2::Y` is down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3445,"byte_end":3492,"line_start":100,"line_end":100,"column_start":1,"column_end":48}},{"value":"/ * `Pos2::ZERO` is left top.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3493,"byte_end":3524,"line_start":101,"line_end":101,"column_start":1,"column_end":32}},{"value":"/ * Positions and sizes are measured in _points_. Each point may consist of many physical pixels.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3525,"byte_end":3624,"line_start":102,"line_end":102,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3625,"byte_end":3628,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Integrating with egui","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3629,"byte_end":3656,"line_start":104,"line_end":104,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3657,"byte_end":3660,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Most likely you are using an existing `egui` backend/integration such as [`eframe`](https://docs.rs/eframe), [`bevy_egui`](https://docs.rs/bevy_egui),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3661,"byte_end":3815,"line_start":106,"line_end":106,"column_start":1,"column_end":155}},{"value":"/ or [`egui-miniquad`](https://github.com/not-fl3/egui-miniquad),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3816,"byte_end":3883,"line_start":107,"line_end":107,"column_start":1,"column_end":68}},{"value":"/ but if you want to integrate `egui` into a new game engine, this is the section for you.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3884,"byte_end":3976,"line_start":108,"line_end":108,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3977,"byte_end":3980,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ To write your own integration for egui you need to do this:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":3981,"byte_end":4044,"line_start":110,"line_end":110,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4045,"byte_end":4048,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4049,"byte_end":4063,"line_start":112,"line_end":112,"column_start":1,"column_end":15}},{"value":"/ # fn handle_platform_output(_: egui::PlatformOutput) {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4064,"byte_end":4123,"line_start":113,"line_end":113,"column_start":1,"column_end":60}},{"value":"/ # fn gather_input() -> egui::RawInput { egui::RawInput::default() }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4124,"byte_end":4195,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ # fn paint(textures_detla: egui::TexturesDelta, _: Vec<egui::ClippedMesh>) {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4196,"byte_end":4277,"line_start":115,"line_end":115,"column_start":1,"column_end":82}},{"value":"/ let mut ctx = egui::Context::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4278,"byte_end":4321,"line_start":116,"line_end":116,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4322,"byte_end":4325,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ // Game loop:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4326,"byte_end":4343,"line_start":118,"line_end":118,"column_start":1,"column_end":18}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4344,"byte_end":4354,"line_start":119,"line_end":119,"column_start":1,"column_end":11}},{"value":"/     let raw_input: egui::RawInput = gather_input();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4355,"byte_end":4410,"line_start":120,"line_end":120,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4411,"byte_end":4414,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/     let full_output = ctx.run(raw_input, |ctx| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4415,"byte_end":4467,"line_start":122,"line_end":122,"column_start":1,"column_end":53}},{"value":"/         egui::CentralPanel::default().show(&ctx, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4468,"byte_end":4527,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/             ui.label(\"Hello world!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4528,"byte_end":4569,"line_start":124,"line_end":124,"column_start":1,"column_end":42}},{"value":"/             if ui.button(\"Click me\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4570,"byte_end":4622,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/                 // take some action here","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4623,"byte_end":4667,"line_start":126,"line_end":126,"column_start":1,"column_end":45}},{"value":"/             }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4668,"byte_end":4685,"line_start":127,"line_end":127,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4686,"byte_end":4701,"line_start":128,"line_end":128,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4702,"byte_end":4713,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"/     handle_platform_output(full_output.platform_output);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4714,"byte_end":4774,"line_start":130,"line_end":130,"column_start":1,"column_end":61}},{"value":"/     let clipped_meshes = ctx.tessellate(full_output.shapes); // create triangles to paint","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4775,"byte_end":4868,"line_start":131,"line_end":131,"column_start":1,"column_end":94}},{"value":"/     paint(full_output.textures_delta, clipped_meshes);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4869,"byte_end":4927,"line_start":132,"line_end":132,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4928,"byte_end":4933,"line_start":133,"line_end":133,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4934,"byte_end":4941,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4942,"byte_end":4945,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4946,"byte_end":4949,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Understanding immediate mode","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4950,"byte_end":4984,"line_start":137,"line_end":137,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4985,"byte_end":4988,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ `egui` is an immediate mode GUI library. It is useful to fully grok what \"immediate mode\" implies.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":4989,"byte_end":5091,"line_start":139,"line_end":139,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5092,"byte_end":5095,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Here is an example to illustrate it:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5096,"byte_end":5136,"line_start":141,"line_end":141,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5137,"byte_end":5140,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5141,"byte_end":5148,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5149,"byte_end":5181,"line_start":144,"line_end":144,"column_start":1,"column_end":33}},{"value":"/ if ui.button(\"click me\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5182,"byte_end":5222,"line_start":145,"line_end":145,"column_start":1,"column_end":41}},{"value":"/     take_action()","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5223,"byte_end":5244,"line_start":146,"line_end":146,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5245,"byte_end":5250,"line_start":147,"line_end":147,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5251,"byte_end":5260,"line_start":148,"line_end":148,"column_start":1,"column_end":10}},{"value":"/ # fn take_action() {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5261,"byte_end":5286,"line_start":149,"line_end":149,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5287,"byte_end":5294,"line_start":150,"line_end":150,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5295,"byte_end":5298,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ This code is being executed each frame at maybe 60 frames per second.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5299,"byte_end":5372,"line_start":152,"line_end":152,"column_start":1,"column_end":74}},{"value":"/ Each frame egui does these things:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5373,"byte_end":5411,"line_start":153,"line_end":153,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5412,"byte_end":5415,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ * lays out the letters `click me` in order to figure out the size of the button","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5416,"byte_end":5499,"line_start":155,"line_end":155,"column_start":1,"column_end":84}},{"value":"/ * decides where on screen to place the button","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5500,"byte_end":5549,"line_start":156,"line_end":156,"column_start":1,"column_end":50}},{"value":"/ * check if the mouse is hovering or clicking that location","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5550,"byte_end":5612,"line_start":157,"line_end":157,"column_start":1,"column_end":63}},{"value":"/ * chose button colors based on if it is being hovered or clicked","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5613,"byte_end":5681,"line_start":158,"line_end":158,"column_start":1,"column_end":69}},{"value":"/ * add a [`Shape::Rect`] and [`Shape::Text`] to the list of shapes to be painted later this frame","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5682,"byte_end":5782,"line_start":159,"line_end":159,"column_start":1,"column_end":101}},{"value":"/ * return a [`Response`] with the `clicked` member so the user can check for interactions","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5783,"byte_end":5875,"line_start":160,"line_end":160,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5876,"byte_end":5879,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ There is no button being created and stored somewhere.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5880,"byte_end":5938,"line_start":162,"line_end":162,"column_start":1,"column_end":59}},{"value":"/ The only output of this call is some colored shapes, and a [`Response`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":5939,"byte_end":6015,"line_start":163,"line_end":163,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6016,"byte_end":6019,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Read more about the pros and cons of immediate mode at <https://github.com/emilk/egui#why-immediate-mode>.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6020,"byte_end":6130,"line_start":165,"line_end":165,"column_start":1,"column_end":111}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6131,"byte_end":6134,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ ## How widgets works","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6135,"byte_end":6159,"line_start":167,"line_end":167,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6160,"byte_end":6163,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6164,"byte_end":6171,"line_start":169,"line_end":169,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6172,"byte_end":6204,"line_start":170,"line_end":170,"column_start":1,"column_end":33}},{"value":"/ if ui.button(\"click me\").clicked() { take_action() }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6205,"byte_end":6261,"line_start":171,"line_end":171,"column_start":1,"column_end":57}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6262,"byte_end":6271,"line_start":172,"line_end":172,"column_start":1,"column_end":10}},{"value":"/ # fn take_action() {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6272,"byte_end":6297,"line_start":173,"line_end":173,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6298,"byte_end":6305,"line_start":174,"line_end":174,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6306,"byte_end":6309,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ is short for","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6310,"byte_end":6326,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6327,"byte_end":6330,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6331,"byte_end":6338,"line_start":178,"line_end":178,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6339,"byte_end":6371,"line_start":179,"line_end":179,"column_start":1,"column_end":33}},{"value":"/ let button = egui::Button::new(\"click me\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6372,"byte_end":6419,"line_start":180,"line_end":180,"column_start":1,"column_end":48}},{"value":"/ if ui.add(button).clicked() { take_action() }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6420,"byte_end":6469,"line_start":181,"line_end":181,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6470,"byte_end":6479,"line_start":182,"line_end":182,"column_start":1,"column_end":10}},{"value":"/ # fn take_action() {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6480,"byte_end":6505,"line_start":183,"line_end":183,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6506,"byte_end":6513,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6514,"byte_end":6517,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ which is short for","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6518,"byte_end":6540,"line_start":186,"line_end":186,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6541,"byte_end":6544,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6545,"byte_end":6552,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # use egui::Widget;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6553,"byte_end":6576,"line_start":189,"line_end":189,"column_start":1,"column_end":24}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6577,"byte_end":6609,"line_start":190,"line_end":190,"column_start":1,"column_end":33}},{"value":"/ let button = egui::Button::new(\"click me\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6610,"byte_end":6657,"line_start":191,"line_end":191,"column_start":1,"column_end":48}},{"value":"/ let response = button.ui(ui);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6658,"byte_end":6691,"line_start":192,"line_end":192,"column_start":1,"column_end":34}},{"value":"/ if response.clicked() { take_action() }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6692,"byte_end":6735,"line_start":193,"line_end":193,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6736,"byte_end":6745,"line_start":194,"line_end":194,"column_start":1,"column_end":10}},{"value":"/ # fn take_action() {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6746,"byte_end":6771,"line_start":195,"line_end":195,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6772,"byte_end":6779,"line_start":196,"line_end":196,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6780,"byte_end":6783,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ [`Button`] uses the builder pattern to create the data required to show it. The [`Button`] is then discarded.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6784,"byte_end":6897,"line_start":198,"line_end":198,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6898,"byte_end":6901,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ [`Button`] implements `trait` [`Widget`], which looks like this:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6902,"byte_end":6970,"line_start":200,"line_end":200,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6971,"byte_end":6978,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/ # use egui::*;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6979,"byte_end":6997,"line_start":202,"line_end":202,"column_start":1,"column_end":19}},{"value":"/ pub trait Widget {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":6998,"byte_end":7020,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/     /// Allocate space, interact, paint, and return a [`Response`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7021,"byte_end":7092,"line_start":204,"line_end":204,"column_start":1,"column_end":72}},{"value":"/     fn ui(self, ui: &mut Ui) -> Response;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7093,"byte_end":7138,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7139,"byte_end":7144,"line_start":206,"line_end":206,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7145,"byte_end":7152,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7153,"byte_end":7156,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ ## Auto-sizing panels and windows","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7157,"byte_end":7194,"line_start":209,"line_end":209,"column_start":1,"column_end":38}},{"value":"/ In egui, all panels and windows auto-shrink to fit the content.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7195,"byte_end":7262,"line_start":210,"line_end":210,"column_start":1,"column_end":68}},{"value":"/ If the window or panel is also resizable, this can lead to a weird behavior","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7263,"byte_end":7342,"line_start":211,"line_end":211,"column_start":1,"column_end":80}},{"value":"/ where you can drag the edge of the panel/window to make it larger, and","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7343,"byte_end":7417,"line_start":212,"line_end":212,"column_start":1,"column_end":75}},{"value":"/ when you release the panel/window shrinks again.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7418,"byte_end":7470,"line_start":213,"line_end":213,"column_start":1,"column_end":53}},{"value":"/ This is an artifact of immediate mode, and here are some alternatives on how to avoid it:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7471,"byte_end":7564,"line_start":214,"line_end":214,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7565,"byte_end":7568,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ 1. Turn off resizing with [`Window::resizable`], [`SidePanel::resizable`], [`TopBottomPanel::resizable`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7569,"byte_end":7678,"line_start":216,"line_end":216,"column_start":1,"column_end":110}},{"value":"/ 2. Wrap your panel contents in a [`ScrollArea`], or use [`Window::vscroll`] and [`Window::hscroll`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7679,"byte_end":7783,"line_start":217,"line_end":217,"column_start":1,"column_end":105}},{"value":"/ 3. Use a justified layout:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7784,"byte_end":7814,"line_start":218,"line_end":218,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7815,"byte_end":7818,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7819,"byte_end":7826,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7827,"byte_end":7859,"line_start":221,"line_end":221,"column_start":1,"column_end":33}},{"value":"/ ui.with_layout(egui::Layout::top_down_justified(egui::Align::Center), |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7860,"byte_end":7940,"line_start":222,"line_end":222,"column_start":1,"column_end":81}},{"value":"/     ui.button(\"I am becoming wider as needed\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7941,"byte_end":7992,"line_start":223,"line_end":223,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":7993,"byte_end":8000,"line_start":224,"line_end":224,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8001,"byte_end":8010,"line_start":225,"line_end":225,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8011,"byte_end":8018,"line_start":226,"line_end":226,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8019,"byte_end":8022,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ 4. Fill in extra space with emptiness:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8023,"byte_end":8065,"line_start":228,"line_end":228,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8066,"byte_end":8069,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8070,"byte_end":8077,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8078,"byte_end":8110,"line_start":231,"line_end":231,"column_start":1,"column_end":33}},{"value":"/ ui.allocate_space(ui.available_size()); // put this LAST in your panel/window code","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8111,"byte_end":8197,"line_start":232,"line_end":232,"column_start":1,"column_end":87}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8198,"byte_end":8207,"line_start":233,"line_end":233,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8208,"byte_end":8215,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8216,"byte_end":8219,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ ## Sizes","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8220,"byte_end":8232,"line_start":236,"line_end":236,"column_start":1,"column_end":13}},{"value":"/ You can control the size of widgets using [`Ui::add_sized`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8233,"byte_end":8297,"line_start":237,"line_end":237,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8298,"byte_end":8301,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8302,"byte_end":8309,"line_start":239,"line_end":239,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8310,"byte_end":8342,"line_start":240,"line_end":240,"column_start":1,"column_end":33}},{"value":"/ # let mut my_value = 0.0_f32;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8343,"byte_end":8376,"line_start":241,"line_end":241,"column_start":1,"column_end":34}},{"value":"/ ui.add_sized([40.0, 20.0], egui::DragValue::new(&mut my_value));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8377,"byte_end":8445,"line_start":242,"line_end":242,"column_start":1,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8446,"byte_end":8455,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8456,"byte_end":8463,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8464,"byte_end":8467,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ ## Code snippets","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8468,"byte_end":8488,"line_start":246,"line_end":246,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8489,"byte_end":8492,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8493,"byte_end":8500,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8501,"byte_end":8533,"line_start":249,"line_end":249,"column_start":1,"column_end":33}},{"value":"/ # let mut some_bool = true;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8534,"byte_end":8565,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/ // Miscellaneous tips and tricks","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8566,"byte_end":8602,"line_start":251,"line_end":251,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8603,"byte_end":8606,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ ui.horizontal_wrapped(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8607,"byte_end":8639,"line_start":253,"line_end":253,"column_start":1,"column_end":33}},{"value":"/     ui.spacing_mut().item_spacing.x = 0.0; // remove spacing between widgets","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8640,"byte_end":8720,"line_start":254,"line_end":254,"column_start":1,"column_end":81}},{"value":"/     // `radio_value` also works for enums, integers, and more.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8721,"byte_end":8787,"line_start":255,"line_end":255,"column_start":1,"column_end":67}},{"value":"/     ui.radio_value(&mut some_bool, false, \"Off\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8788,"byte_end":8841,"line_start":256,"line_end":256,"column_start":1,"column_end":54}},{"value":"/     ui.radio_value(&mut some_bool, true, \"On\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8842,"byte_end":8893,"line_start":257,"line_end":257,"column_start":1,"column_end":52}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8894,"byte_end":8901,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8902,"byte_end":8905,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ ui.group(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8906,"byte_end":8925,"line_start":260,"line_end":260,"column_start":1,"column_end":20}},{"value":"/     ui.label(\"Within a frame\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8926,"byte_end":8961,"line_start":261,"line_end":261,"column_start":1,"column_end":36}},{"value":"/     ui.set_min_height(200.0);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8962,"byte_end":8995,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":8996,"byte_end":9003,"line_start":263,"line_end":263,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9004,"byte_end":9007,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ // A `scope` creates a temporary [`Ui`] in which you can change settings:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9008,"byte_end":9085,"line_start":265,"line_end":265,"column_start":1,"column_end":78}},{"value":"/ ui.scope(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9086,"byte_end":9105,"line_start":266,"line_end":266,"column_start":1,"column_end":20}},{"value":"/     ui.visuals_mut().override_text_color = Some(egui::Color32::RED);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9106,"byte_end":9178,"line_start":267,"line_end":267,"column_start":1,"column_end":73}},{"value":"/     ui.style_mut().override_text_style = Some(egui::TextStyle::Monospace);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9179,"byte_end":9257,"line_start":268,"line_end":268,"column_start":1,"column_end":79}},{"value":"/     ui.style_mut().wrap = Some(false);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9258,"byte_end":9300,"line_start":269,"line_end":269,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9301,"byte_end":9304,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/     ui.label(\"This text will be red, monospace, and won't wrap to a new line\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9305,"byte_end":9388,"line_start":271,"line_end":271,"column_start":1,"column_end":84}},{"value":"/ }); // the temporary settings are reverted here","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9389,"byte_end":9440,"line_start":272,"line_end":272,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9441,"byte_end":9450,"line_start":273,"line_end":273,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9451,"byte_end":9458,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9550,"byte_end":9573,"line_start":278,"line_end":278,"column_start":1,"column_end":24}},{"value":"warn(clippy :: all, clippy :: await_holding_lock, clippy :: char_lit_as_u8,\n       clippy :: checked_conversions, clippy :: dbg_macro, clippy ::\n       debug_assert_with_mut_call, clippy :: disallowed_method, clippy ::\n       doc_markdown, clippy :: empty_enum, clippy :: enum_glob_use, clippy ::\n       exit, clippy :: expl_impl_clone_on_copy, clippy ::\n       explicit_deref_methods, clippy :: explicit_into_iter_loop, clippy ::\n       fallible_impl_from, clippy :: filter_map_next, clippy ::\n       flat_map_option, clippy :: float_cmp_const, clippy ::\n       fn_params_excessive_bools, clippy :: from_iter_instead_of_collect,\n       clippy :: if_let_mutex, clippy :: implicit_clone, clippy ::\n       imprecise_flops, clippy :: inefficient_to_string, clippy ::\n       invalid_upcast_comparisons, clippy :: large_digit_groups, clippy ::\n       large_stack_arrays, clippy :: large_types_passed_by_value, clippy ::\n       let_unit_value, clippy :: linkedlist, clippy :: lossy_float_literal,\n       clippy :: macro_use_imports, clippy :: manual_ok_or, clippy ::\n       map_err_ignore, clippy :: map_flatten, clippy :: map_unwrap_or, clippy\n       :: match_on_vec_items, clippy :: match_same_arms, clippy ::\n       match_wild_err_arm, clippy :: match_wildcard_for_single_variants,\n       clippy :: mem_forget, clippy :: mismatched_target_os, clippy ::\n       missing_errors_doc, clippy :: missing_safety_doc, clippy :: mut_mut,\n       clippy :: mutex_integer, clippy :: needless_borrow, clippy ::\n       needless_continue, clippy :: needless_for_each, clippy ::\n       needless_pass_by_value, clippy :: option_option, clippy ::\n       path_buf_push_overwrite, clippy :: ptr_as_ptr, clippy ::\n       ref_option_ref, clippy :: rest_pat_in_fully_bound_structs, clippy ::\n       same_functions_in_if_condition, clippy ::\n       semicolon_if_nothing_returned, clippy :: single_match_else, clippy ::\n       string_add_assign, clippy :: string_add, clippy :: string_lit_as_bytes,\n       clippy :: string_to_string, clippy :: todo, clippy ::\n       trait_duplication_in_bounds, clippy :: unimplemented, clippy ::\n       unnested_or_patterns, clippy :: unused_self, clippy ::\n       useless_transmute, clippy :: verbose_file_reads, clippy ::\n       zero_sized_map_values, future_incompatible, nonstandard_style,\n       rust_2018_idioms, rustdoc :: missing_crate_level_docs)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":9574,"byte_end":11865,"line_start":279,"line_end":354,"column_start":1,"column_end":3}},{"value":"allow(clippy :: float_cmp)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":11866,"byte_end":11894,"line_start":355,"line_end":355,"column_start":1,"column_end":29}},{"value":"allow(clippy :: manual_range_contains)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":11895,"byte_end":11935,"line_start":356,"line_end":356,"column_start":1,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"containers","qualname":"::containers","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":77},{"krate":0,"index":147},{"krate":0,"index":192},{"krate":0,"index":236},{"krate":0,"index":343},{"krate":0,"index":384},{"krate":0,"index":430},{"krate":0,"index":513},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":641}],"decl_id":null,"docs":" Containers are pieces of the UI which wraps other pieces of UI. Examples: [`Window`], [`ScrollArea`], [`Resize`], [`SidePanel`], etc.","sig":null,"attributes":[{"value":"/ Containers are pieces of the UI which wraps other pieces of UI. Examples: [`Window`], [`ScrollArea`], [`Resize`], [`SidePanel`], etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22006,"byte_end":22143,"line_start":1,"line_end":1,"column_start":1,"column_end":138}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22144,"byte_end":22147,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ For instance, a [`Frame`] adds a frame and background to some contained UI.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22148,"byte_end":22227,"line_start":3,"line_end":3,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":4601},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23933,"byte_end":23937,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"Area","qualname":"::containers::area::Area","value":"Area {  }","parent":null,"children":[{"krate":0,"index":4602},{"krate":0,"index":4603},{"krate":0,"index":4604},{"krate":0,"index":4605},{"krate":0,"index":4606},{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609},{"krate":0,"index":4610}],"decl_id":null,"docs":" An area on the screen that can be moved by dragging.","sig":null,"attributes":[{"value":"/ An area on the screen that can be moved by dragging.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23529,"byte_end":23585,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23586,"byte_end":23589,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This forms the base of the [`Window`] container.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23590,"byte_end":23642,"line_start":33,"line_end":33,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23643,"byte_end":23646,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23647,"byte_end":23654,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ctx(|ctx| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23655,"byte_end":23689,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/ egui::Area::new(\"my_area\")","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23690,"byte_end":23720,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/     .fixed_pos(egui::pos2(32.0, 32.0))","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23721,"byte_end":23763,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/     .show(ctx, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23764,"byte_end":23789,"line_start":39,"line_end":39,"column_start":1,"column_end":26}},{"value":"/         ui.label(\"Floating text!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23790,"byte_end":23829,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23830,"byte_end":23841,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23842,"byte_end":23851,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"must_use = \"You should call .show()\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23852,"byte_end":23891,"line_start":43,"line_end":43,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24194,"byte_end":24197,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Area>::new","value":"pub fn new<impl Hash: Hash>(impl Hash) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24544,"byte_end":24546,"line_start":72,"line_end":72,"column_start":12,"column_end":14},"name":"id","qualname":"<Area>::id","value":"pub fn id(Self, Id) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24628,"byte_end":24633,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"layer","qualname":"<Area>::layer","value":"pub fn layer(&Self) -> LayerId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24878,"byte_end":24885,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Area>::enabled","value":"pub fn enabled(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If false, no content responds to click\n and widgets will be shown grayed out.\n You won't be able to move the window.\n Default: `true`.\n","sig":null,"attributes":[{"value":"/ If false, no content responds to click","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24707,"byte_end":24749,"line_start":81,"line_end":81,"column_start":5,"column_end":47}},{"value":"/ and widgets will be shown grayed out.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24754,"byte_end":24795,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ You won't be able to move the window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24800,"byte_end":24841,"line_start":83,"line_end":83,"column_start":5,"column_end":46}},{"value":"/ Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24846,"byte_end":24866,"line_start":84,"line_end":84,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25023,"byte_end":25030,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"movable","qualname":"<Area>::movable","value":"pub fn movable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" moveable by dragging the area?\n","sig":null,"attributes":[{"value":"/ moveable by dragging the area?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24977,"byte_end":25011,"line_start":90,"line_end":90,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25167,"byte_end":25177,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<Area>::is_enabled","value":"pub fn is_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25234,"byte_end":25244,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"is_movable","qualname":"<Area>::is_movable","value":"pub fn is_movable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25417,"byte_end":25429,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"name":"interactable","qualname":"<Area>::interactable","value":"pub fn interactable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If false, clicks goes straight through to what is behind us.\n Good for tooltips etc.\n","sig":null,"attributes":[{"value":"/ If false, clicks goes straight through to what is behind us.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25310,"byte_end":25374,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/ Good for tooltips etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25379,"byte_end":25405,"line_start":106,"line_end":106,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25657,"byte_end":25662,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"order","qualname":"<Area>::order","value":"pub fn order(Self, Order) -> Self","parent":null,"children":[],"decl_id":null,"docs":" `order(Order::Foreground)` for an Area that should always be on top\n","sig":null,"attributes":[{"value":"/ `order(Order::Foreground)` for an Area that should always be on top","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25574,"byte_end":25645,"line_start":113,"line_end":113,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25756,"byte_end":25767,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"default_pos","qualname":"<Area>::default_pos","value":"pub fn default_pos<impl Into<Pos2>: Into<Pos2>>(Self, impl Into<Pos2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25964,"byte_end":25973,"line_start":125,"line_end":125,"column_start":12,"column_end":21},"name":"fixed_pos","qualname":"<Area>::fixed_pos","value":"pub fn fixed_pos<impl Into<Pos2>: Into<Pos2>>(Self, impl Into<Pos2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Positions the window and prevents it from being moved\n","sig":null,"attributes":[{"value":"/ Positions the window and prevents it from being moved","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":25895,"byte_end":25952,"line_start":124,"line_end":124,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26186,"byte_end":26197,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"current_pos","qualname":"<Area>::current_pos","value":"pub fn current_pos<impl Into<Pos2>: Into<Pos2>>(Self, impl Into<Pos2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Positions the window but you can still move it.\n","sig":null,"attributes":[{"value":"/ Positions the window but you can still move it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26123,"byte_end":26174,"line_start":131,"line_end":131,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26787,"byte_end":26793,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"anchor","qualname":"<Area>::anchor","value":"pub fn anchor<impl Into<Vec2>: Into<Vec2>>(Self, Align2, impl Into<Vec2>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set anchor and distance.","sig":null,"attributes":[{"value":"/ Set anchor and distance.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26321,"byte_end":26349,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26354,"byte_end":26357,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ An anchor of `Align2::RIGHT_TOP` means \"put the right-top corner of the window","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26362,"byte_end":26444,"line_start":139,"line_end":139,"column_start":5,"column_end":87}},{"value":"/ in the right-top corner of the screen\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26449,"byte_end":26492,"line_start":140,"line_end":140,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26497,"byte_end":26500,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The offset is added to the position, so e.g. an offset of `[-5.0, 5.0]`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26505,"byte_end":26580,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ would move the window left and down from the given anchor.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26585,"byte_end":26647,"line_start":143,"line_end":143,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26652,"byte_end":26655,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Anchoring also makes the window immovable.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26660,"byte_end":26706,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26711,"byte_end":26714,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ It is an error to set both an anchor and a position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26719,"byte_end":26775,"line_start":147,"line_end":147,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":27018,"byte_end":27029,"line_start":154,"line_end":154,"column_start":12,"column_end":23},"name":"drag_bounds","qualname":"<Area>::drag_bounds","value":"pub fn drag_bounds(Self, Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constrain the area up to which the window can be dragged.\n","sig":null,"attributes":[{"value":"/ Constrain the area up to which the window can be dragged.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":26945,"byte_end":27006,"line_start":153,"line_end":153,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":27479,"byte_end":27483,"line_start":177,"line_end":177,"column_start":12,"column_end":16},"name":"show","qualname":"<Area>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &Context, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":29280,"byte_end":29305,"line_start":238,"line_end":238,"column_start":12,"column_end":37},"name":"show_open_close_animation","qualname":"<Area>::show_open_close_animation","value":"pub fn show_open_close_animation(&Self, &Context, &Frame, bool)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40387,"byte_end":40403,"line_start":138,"line_end":138,"column_start":12,"column_end":28},"name":"CollapsingHeader","qualname":"::containers::collapsing_header::CollapsingHeader","value":"CollapsingHeader {  }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" A header which can be collapsed/expanded, revealing a contained [`Ui`] region.","sig":null,"attributes":[{"value":"/ A header which can be collapsed/expanded, revealing a contained [`Ui`] region.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":39984,"byte_end":40066,"line_start":123,"line_end":123,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40067,"byte_end":40070,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40071,"byte_end":40074,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40075,"byte_end":40082,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40083,"byte_end":40115,"line_start":127,"line_end":127,"column_start":1,"column_end":33}},{"value":"/ egui::CollapsingHeader::new(\"Heading\")","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40116,"byte_end":40158,"line_start":128,"line_end":128,"column_start":1,"column_end":43}},{"value":"/     .show(ui, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40159,"byte_end":40183,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/         ui.label(\"Contents\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40184,"byte_end":40217,"line_start":130,"line_end":130,"column_start":1,"column_end":34}},{"value":"/     });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40218,"byte_end":40229,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40230,"byte_end":40233,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ // Short version:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40234,"byte_end":40255,"line_start":133,"line_end":133,"column_start":1,"column_end":22}},{"value":"/ ui.collapsing(\"Heading\", |ui| { ui.label(\"Contents\"); });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40256,"byte_end":40317,"line_start":134,"line_end":134,"column_start":1,"column_end":62}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40318,"byte_end":40327,"line_start":135,"line_end":135,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40328,"byte_end":40335,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"must_use = \"You should call .show()\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40336,"byte_end":40375,"line_start":137,"line_end":137,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":41006,"byte_end":41009,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"new","qualname":"<CollapsingHeader>::new","value":"pub fn new<impl Into<WidgetText>: Into<WidgetText>>(impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" The `CollapsingHeader` starts out collapsed unless you call `default_open`.","sig":null,"attributes":[{"value":"/ The `CollapsingHeader` starts out collapsed unless you call `default_open`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40645,"byte_end":40724,"line_start":151,"line_end":151,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40729,"byte_end":40732,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ The label is used as an [`Id`] source.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40737,"byte_end":40779,"line_start":153,"line_end":153,"column_start":5,"column_end":47}},{"value":"/ If the label is unique and static this is fine,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40784,"byte_end":40835,"line_start":154,"line_end":154,"column_start":5,"column_end":56}},{"value":"/ but if it changes or there are several `CollapsingHeader` with the same title","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40840,"byte_end":40921,"line_start":155,"line_end":155,"column_start":5,"column_end":86}},{"value":"/ you need to provide a unique id source with [`Self::id_source`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40926,"byte_end":40994,"line_start":156,"line_end":156,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":41523,"byte_end":41535,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"default_open","qualname":"<CollapsingHeader>::default_open","value":"pub fn default_open(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" By default, the `CollapsingHeader` is collapsed.\n Call `.default_open(true)` to change this.\n","sig":null,"attributes":[{"value":"/ By default, the `CollapsingHeader` is collapsed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":41408,"byte_end":41460,"line_start":173,"line_end":173,"column_start":5,"column_end":57}},{"value":"/ Call `.default_open(true)` to change this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":41465,"byte_end":41511,"line_start":174,"line_end":174,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":41908,"byte_end":41912,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"open","qualname":"<CollapsingHeader>::open","value":"pub fn open(Self, Option<bool>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calling `.open(Some(true))` will make the collapsing header open this frame (or stay open).","sig":null,"attributes":[{"value":"/ Calling `.open(Some(true))` will make the collapsing header open this frame (or stay open).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":41626,"byte_end":41721,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":41726,"byte_end":41729,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Calling `.open(Some(false))` will make the collapsing header close this frame (or stay closed).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":41734,"byte_end":41833,"line_start":182,"line_end":182,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":41838,"byte_end":41841,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Calling `.open(None)` has no effect (default).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":41846,"byte_end":41896,"line_start":184,"line_end":184,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42170,"byte_end":42179,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"name":"id_source","qualname":"<CollapsingHeader>::id_source","value":"pub fn id_source<impl Hash: Hash>(Self, impl Hash) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Explicitly set the source of the `Id` of this widget, instead of using title label.\n This is useful if the title label is dynamic or not unique.\n","sig":null,"attributes":[{"value":"/ Explicitly set the source of the `Id` of this widget, instead of using title label.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42003,"byte_end":42090,"line_start":190,"line_end":190,"column_start":5,"column_end":92}},{"value":"/ This is useful if the title label is dynamic or not unique.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42095,"byte_end":42158,"line_start":191,"line_end":191,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42457,"byte_end":42464,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"enabled","qualname":"<CollapsingHeader>::enabled","value":"pub fn enabled(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you set this to `false`, the `CollapsingHeader` will be grayed out and un-clickable.","sig":null,"attributes":[{"value":"/ If you set this to `false`, the `CollapsingHeader` will be grayed out and un-clickable.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42291,"byte_end":42382,"line_start":197,"line_end":197,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42387,"byte_end":42390,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This is a convenience for [`Ui::set_enabled`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42395,"byte_end":42445,"line_start":199,"line_end":199,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42652,"byte_end":42662,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"selectable","qualname":"<CollapsingHeader>::selectable","value":"pub fn selectable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Can the `CollapsingHeader` be selected by clicking it? Default: `false`.","sig":null,"attributes":[{"value":"/ Can the `CollapsingHeader` be selected by clicking it? Default: `false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42556,"byte_end":42632,"line_start":205,"line_end":205,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42637,"byte_end":42640,"line_start":206,"line_end":206,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43260,"byte_end":43268,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"selected","qualname":"<CollapsingHeader>::selected","value":"pub fn selected(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you set this to 'true', the `CollapsingHeader` will be shown as selected.","sig":null,"attributes":[{"value":"/ If you set this to 'true', the `CollapsingHeader` will be shown as selected.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42763,"byte_end":42843,"line_start":212,"line_end":212,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42848,"byte_end":42851,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42856,"byte_end":42868,"line_start":214,"line_end":214,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42873,"byte_end":42880,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42885,"byte_end":42917,"line_start":216,"line_end":216,"column_start":5,"column_end":37}},{"value":"/ let mut selected = false;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42922,"byte_end":42951,"line_start":217,"line_end":217,"column_start":5,"column_end":34}},{"value":"/ let response = egui::CollapsingHeader::new(\"Select and open me\")","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":42956,"byte_end":43024,"line_start":218,"line_end":218,"column_start":5,"column_end":73}},{"value":"/     .selectable(true)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43029,"byte_end":43054,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/     .selected(selected)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43059,"byte_end":43086,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/     .show(ui, |ui| ui.label(\"Content\"));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43091,"byte_end":43135,"line_start":221,"line_end":221,"column_start":5,"column_end":49}},{"value":"/ if response.header_response.clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43140,"byte_end":43183,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/     selected = true;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43188,"byte_end":43212,"line_start":223,"line_end":223,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43217,"byte_end":43222,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43227,"byte_end":43236,"line_start":225,"line_end":225,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43241,"byte_end":43248,"line_start":226,"line_end":226,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43662,"byte_end":43677,"line_start":240,"line_end":240,"column_start":12,"column_end":27},"name":"show_background","qualname":"<CollapsingHeader>::show_background","value":"pub fn show_background(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Should the `CollapsingHeader` show a background behind it? Default: `false`.","sig":null,"attributes":[{"value":"/ Should the `CollapsingHeader` show a background behind it? Default: `false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43363,"byte_end":43443,"line_start":232,"line_end":232,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43448,"byte_end":43451,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ To show it behind all `CollapsingHeader` you can just use:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43456,"byte_end":43518,"line_start":234,"line_end":234,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43523,"byte_end":43530,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43535,"byte_end":43567,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/ ui.visuals_mut().collapsing_header_frame = true;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43572,"byte_end":43624,"line_start":237,"line_end":237,"column_start":5,"column_end":57}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43629,"byte_end":43638,"line_start":238,"line_end":238,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43643,"byte_end":43650,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44513,"byte_end":44517,"line_start":262,"line_end":262,"column_start":12,"column_end":16},"name":"icon","qualname":"<CollapsingHeader>::icon","value":"pub fn icon<impl FnOnce(&mut Ui, f32, &Response) + 'static: FnOnce(&mut Ui,\n                                                                   f32,\n                                                                   &Response)\n            -> () +\n            'static>(Self, impl FnOnce(&mut Ui, f32, &Response) + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Use the provided function to render a different `CollapsingHeader` icon.\n Defaults to a triangle that animates as the `CollapsingHeader` opens and closes.","sig":null,"attributes":[{"value":"/ Use the provided function to render a different `CollapsingHeader` icon.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43793,"byte_end":43869,"line_start":245,"line_end":245,"column_start":5,"column_end":81}},{"value":"/ Defaults to a triangle that animates as the `CollapsingHeader` opens and closes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43874,"byte_end":43958,"line_start":246,"line_end":246,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43963,"byte_end":43966,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43971,"byte_end":43987,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":43992,"byte_end":43999,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44004,"byte_end":44036,"line_start":250,"line_end":250,"column_start":5,"column_end":37}},{"value":"/ fn circle_icon(ui: &mut egui::Ui, openness: f32, response: &egui::Response) {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44041,"byte_end":44122,"line_start":251,"line_end":251,"column_start":5,"column_end":86}},{"value":"/     let stroke = ui.style().interact(&response).fg_stroke;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44127,"byte_end":44189,"line_start":252,"line_end":252,"column_start":5,"column_end":67}},{"value":"/     let radius = egui::lerp(2.0..=3.0, openness);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44194,"byte_end":44247,"line_start":253,"line_end":253,"column_start":5,"column_end":58}},{"value":"/     ui.painter().circle_filled(response.rect.center(), radius, stroke.color);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44252,"byte_end":44333,"line_start":254,"line_end":254,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44338,"byte_end":44343,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44348,"byte_end":44351,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ egui::CollapsingHeader::new(\"Circles\")","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44356,"byte_end":44398,"line_start":257,"line_end":257,"column_start":5,"column_end":47}},{"value":"/   .icon(circle_icon)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44403,"byte_end":44427,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/   .show(ui, |ui| { ui.label(\"Hi!\"); });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44432,"byte_end":44475,"line_start":259,"line_end":259,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44480,"byte_end":44489,"line_start":260,"line_end":260,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44494,"byte_end":44501,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":48789,"byte_end":48793,"line_start":386,"line_end":386,"column_start":12,"column_end":16},"name":"show","qualname":"<CollapsingHeader>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &mut Ui, impl FnOnce(&mut Ui) -> R)\n-> CollapsingResponse<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":48768,"byte_end":48777,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":50420,"byte_end":50438,"line_start":439,"line_end":439,"column_start":12,"column_end":30},"name":"CollapsingResponse","qualname":"::containers::collapsing_header::CollapsingResponse","value":"CollapsingResponse { header_response, body_response, body_returned }","parent":null,"children":[{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" The response from showing a [`CollapsingHeader`].\n","sig":null,"attributes":[{"value":"/ The response from showing a [`CollapsingHeader`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":50355,"byte_end":50408,"line_start":438,"line_end":438,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":50452,"byte_end":50467,"line_start":440,"line_end":440,"column_start":9,"column_end":24},"name":"header_response","qualname":"::containers::collapsing_header::CollapsingResponse::header_response","value":"response::Response","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":50515,"byte_end":50528,"line_start":442,"line_end":442,"column_start":9,"column_end":22},"name":"body_response","qualname":"::containers::collapsing_header::CollapsingResponse::body_response","value":"std::option::Option<response::Response>","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" None iff collapsed.\n","sig":null,"attributes":[{"value":"/ None iff collapsed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":50483,"byte_end":50506,"line_start":441,"line_end":441,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":50584,"byte_end":50597,"line_start":444,"line_end":444,"column_start":9,"column_end":22},"name":"body_returned","qualname":"::containers::collapsing_header::CollapsingResponse::body_returned","value":"std::option::Option<R>","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" None iff collapsed.\n","sig":null,"attributes":[{"value":"/ None iff collapsed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":50552,"byte_end":50575,"line_start":443,"line_end":443,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51307,"byte_end":51315,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ComboBox","qualname":"::containers::combo_box::ComboBox","value":"ComboBox {  }","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"decl_id":null,"docs":" A drop-down selection menu with a descriptive label.","sig":null,"attributes":[{"value":"/ A drop-down selection menu with a descriptive label.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":50671,"byte_end":50727,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":50728,"byte_end":50731,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":50732,"byte_end":50739,"line_start":6,"line_end":6,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":50740,"byte_end":50773,"line_start":7,"line_end":7,"column_start":1,"column_end":34}},{"value":"/ # enum Enum { First, Second, Third }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":50774,"byte_end":50814,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/ # let mut selected = Enum::First;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":50815,"byte_end":50852,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":50853,"byte_end":50885,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ egui::ComboBox::from_label(\"Select one!\")","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":50886,"byte_end":50931,"line_start":11,"line_end":11,"column_start":1,"column_end":46}},{"value":"/     .selected_text(format!(\"{:?}\", selected))","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":50932,"byte_end":50981,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/     .show_ui(ui, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":50982,"byte_end":51009,"line_start":13,"line_end":13,"column_start":1,"column_end":28}},{"value":"/         ui.selectable_value(&mut selected, Enum::First, \"First\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51010,"byte_end":51079,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/         ui.selectable_value(&mut selected, Enum::Second, \"Second\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51080,"byte_end":51151,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/         ui.selectable_value(&mut selected, Enum::Third, \"Third\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51152,"byte_end":51221,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51222,"byte_end":51231,"line_start":17,"line_end":17,"column_start":1,"column_end":10}},{"value":"/ );","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51232,"byte_end":51238,"line_start":18,"line_end":18,"column_start":1,"column_end":7}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51239,"byte_end":51248,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51249,"byte_end":51256,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"must_use = \"You should call .show*\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51257,"byte_end":51295,"line_start":21,"line_end":21,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51501,"byte_end":51504,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<ComboBox>::new","value":"pub fn new<impl std::hash::Hash: std::hash::Hash,\n           impl Into<WidgetText>: Into<WidgetText>>(impl std::hash::Hash,\n                                                    impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new `ComboBox` with id and label\n","sig":null,"attributes":[{"value":"/ Create new `ComboBox` with id and label","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51446,"byte_end":51489,"line_start":30,"line_end":30,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51817,"byte_end":51827,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"from_label","qualname":"<ComboBox>::from_label","value":"pub fn from_label<impl Into<WidgetText>: Into<WidgetText>>(impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Label shown next to the combo box\n","sig":null,"attributes":[{"value":"/ Label shown next to the combo box","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51768,"byte_end":51805,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":52118,"byte_end":52132,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"name":"from_id_source","qualname":"<ComboBox>::from_id_source","value":"pub fn from_id_source<impl std::hash::Hash: std::hash::Hash>(impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Without label.\n","sig":null,"attributes":[{"value":"/ Without label.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":52088,"byte_end":52106,"line_start":51,"line_end":51,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":52418,"byte_end":52423,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"width","qualname":"<ComboBox>::width","value":"pub fn width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the width of the button and menu\n","sig":null,"attributes":[{"value":"/ Set the width of the button and menu","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":52366,"byte_end":52406,"line_start":61,"line_end":61,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":52574,"byte_end":52587,"line_start":68,"line_end":68,"column_start":12,"column_end":25},"name":"selected_text","qualname":"<ComboBox>::selected_text","value":"pub fn selected_text<impl Into<WidgetText>: Into<WidgetText>>(Self,\n                                                              impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" What we show as the currently selected value\n","sig":null,"attributes":[{"value":"/ What we show as the currently selected value","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":52514,"byte_end":52562,"line_start":67,"line_end":67,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":52886,"byte_end":52893,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"show_ui","qualname":"<ComboBox>::show_ui","value":"pub fn show_ui<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n               R>(Self, &mut Ui, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<Option<R>>","parent":null,"children":[],"decl_id":null,"docs":" Show the combo box, with the given ui code for the menu contents.","sig":null,"attributes":[{"value":"/ Show the combo box, with the given ui code for the menu contents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":52721,"byte_end":52790,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":52795,"byte_end":52798,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Returns `InnerResponse { inner: None }` if the combo box is closed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":52803,"byte_end":52874,"line_start":75,"line_end":75,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54650,"byte_end":54660,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"show_index","qualname":"<ComboBox>::show_index","value":"pub fn show_index<impl Fn(usize) -> String: Fn(usize) ->\n                  String>(Self, &mut Ui, &mut usize, usize,\n                          impl Fn(usize) -> String) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Show a list of items with the given selected index.","sig":null,"attributes":[{"value":"/ Show a list of items with the given selected index.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54097,"byte_end":54152,"line_start":116,"line_end":116,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54157,"byte_end":54160,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54165,"byte_end":54168,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54173,"byte_end":54180,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54185,"byte_end":54218,"line_start":120,"line_end":120,"column_start":5,"column_end":38}},{"value":"/ # enum Enum { First, Second, Third }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54223,"byte_end":54263,"line_start":121,"line_end":121,"column_start":5,"column_end":45}},{"value":"/ # let mut selected = Enum::First;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54268,"byte_end":54305,"line_start":122,"line_end":122,"column_start":5,"column_end":42}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54310,"byte_end":54342,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"/ let alternatives = [\"a\", \"b\", \"c\", \"d\"];","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54347,"byte_end":54391,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/ let mut selected = 2;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54396,"byte_end":54421,"line_start":125,"line_end":125,"column_start":5,"column_end":30}},{"value":"/ egui::ComboBox::from_label(\"Select one!\").show_index(","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54426,"byte_end":54483,"line_start":126,"line_end":126,"column_start":5,"column_end":62}},{"value":"/     ui,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54488,"byte_end":54499,"line_start":127,"line_end":127,"column_start":5,"column_end":16}},{"value":"/     &mut selected,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54504,"byte_end":54526,"line_start":128,"line_end":128,"column_start":5,"column_end":27}},{"value":"/     alternatives.len(),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54531,"byte_end":54558,"line_start":129,"line_end":129,"column_start":5,"column_end":32}},{"value":"/     |i| alternatives[i].to_owned()","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54563,"byte_end":54601,"line_start":130,"line_end":130,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54606,"byte_end":54612,"line_start":131,"line_end":131,"column_start":5,"column_end":11}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54617,"byte_end":54626,"line_start":132,"line_end":132,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":54631,"byte_end":54638,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4626},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59388,"byte_end":59393,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Frame","qualname":"::containers::frame::Frame","value":"Frame { margin, rounding, shadow, fill, stroke }","parent":null,"children":[{"krate":0,"index":4627},{"krate":0,"index":4628},{"krate":0,"index":4629},{"krate":0,"index":4630},{"krate":0,"index":4631}],"decl_id":null,"docs":" Color and margin of a rectangular background of a [`Ui`].\n","sig":null,"attributes":[{"value":"/ Color and margin of a rectangular background of a [`Ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59225,"byte_end":59286,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"must_use = \"You should call .show()\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59337,"byte_end":59376,"line_start":8,"line_end":8,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":4627},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59425,"byte_end":59431,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"margin","qualname":"::containers::frame::Frame::margin","value":"style::Margin","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":" On each side\n","sig":null,"attributes":[{"value":"/ On each side","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59400,"byte_end":59416,"line_start":10,"line_end":10,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4628},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59449,"byte_end":59457,"line_start":12,"line_end":12,"column_start":9,"column_end":17},"name":"rounding","qualname":"::containers::frame::Frame::rounding","value":"epaint::Rounding","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4629},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59477,"byte_end":59483,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"shadow","qualname":"::containers::frame::Frame::shadow","value":"epaint::Shadow","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4630},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59501,"byte_end":59505,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"fill","qualname":"::containers::frame::Frame::fill","value":"epaint::Color32","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4631},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59524,"byte_end":59530,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"stroke","qualname":"::containers::frame::Frame::stroke","value":"epaint::Stroke","parent":{"krate":0,"index":4626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59567,"byte_end":59571,"line_start":19,"line_end":19,"column_start":12,"column_end":16},"name":"none","qualname":"<Frame>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59700,"byte_end":59705,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"group","qualname":"<Frame>::group","value":"pub fn group(&Style) -> Self","parent":null,"children":[],"decl_id":null,"docs":" For when you want to group a few widgets together within a frame.\n","sig":null,"attributes":[{"value":"/ For when you want to group a few widgets together within a frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59619,"byte_end":59688,"line_start":23,"line_end":23,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":60639,"byte_end":60645,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"window","qualname":"<Frame>::window","value":"pub fn window(&Style) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":60963,"byte_end":60967,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"menu","qualname":"<Frame>::menu","value":"pub fn menu(&Style) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":61290,"byte_end":61295,"line_start":73,"line_end":73,"column_start":12,"column_end":17},"name":"popup","qualname":"<Frame>::popup","value":"pub fn popup(&Style) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":61659,"byte_end":61670,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"dark_canvas","qualname":"<Frame>::dark_canvas","value":"pub fn dark_canvas(&Style) -> Self","parent":null,"children":[],"decl_id":null,"docs":" dark canvas to draw on\n","sig":null,"attributes":[{"value":"/ dark canvas to draw on","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":61621,"byte_end":61647,"line_start":83,"line_end":83,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":62008,"byte_end":62012,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"fill","qualname":"<Frame>::fill","value":"pub fn fill(Self, Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":62105,"byte_end":62111,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Frame>::stroke","value":"pub fn stroke(Self, Stroke) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":62209,"byte_end":62217,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"rounding","qualname":"<Frame>::rounding","value":"pub fn rounding<impl Into<Rounding>: Into<Rounding>>(Self,\n                                                     impl Into<Rounding>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":62383,"byte_end":62389,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"margin","qualname":"<Frame>::margin","value":"pub fn margin<impl Into<Margin>: Into<Margin>>(Self, impl Into<Margin>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Margin on each side of the frame.\n","sig":null,"attributes":[{"value":"/ Margin on each side of the frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":62334,"byte_end":62371,"line_start":111,"line_end":111,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":62505,"byte_end":62511,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"shadow","qualname":"<Frame>::shadow","value":"pub fn shadow(Self, Shadow) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":62609,"byte_end":62630,"line_start":122,"line_end":122,"column_start":12,"column_end":33},"name":"multiply_with_opacity","qualname":"<Frame>::multiply_with_opacity","value":"pub fn multiply_with_opacity(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":62898,"byte_end":62906,"line_start":130,"line_end":130,"column_start":12,"column_end":20},"name":"Prepared","qualname":"::containers::frame::Prepared","value":"Prepared { frame, content_ui }","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":62917,"byte_end":62922,"line_start":131,"line_end":131,"column_start":9,"column_end":14},"name":"frame","qualname":"::containers::frame::Prepared::frame","value":"containers::frame::Frame","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":62978,"byte_end":62988,"line_start":133,"line_end":133,"column_start":9,"column_end":19},"name":"content_ui","qualname":"::containers::frame::Prepared::content_ui","value":"ui::Ui","parent":{"krate":0,"index":220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":63021,"byte_end":63026,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"begin","qualname":"<Frame>::begin","value":"pub fn begin(Self, &mut Ui) -> Prepared","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":63920,"byte_end":63924,"line_start":160,"line_end":160,"column_start":12,"column_end":16},"name":"show","qualname":"<Frame>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &mut Ui, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":64414,"byte_end":64419,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"paint","qualname":"<Frame>::paint","value":"pub fn paint(&Self, Rect) -> Shape","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":65050,"byte_end":65060,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"outer_rect","qualname":"<Prepared>::outer_rect","value":"pub fn outer_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":65320,"byte_end":65323,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"end","qualname":"<Prepared>::end","value":"pub fn end(Self, &mut Ui) -> Response","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"panel","qualname":"::containers::panel","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":4643},{"krate":0,"index":4645},{"krate":0,"index":4647},{"krate":0,"index":4648},{"krate":0,"index":241},{"krate":0,"index":4650},{"krate":0,"index":4655},{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4660},{"krate":0,"index":4661},{"krate":0,"index":244},{"krate":0,"index":248},{"krate":0,"index":255},{"krate":0,"index":268},{"krate":0,"index":4663},{"krate":0,"index":4668},{"krate":0,"index":4670},{"krate":0,"index":4671},{"krate":0,"index":4673},{"krate":0,"index":4674},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":295},{"krate":0,"index":308},{"krate":0,"index":4676},{"krate":0,"index":4678},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":342}],"decl_id":null,"docs":" Panels are [`Ui`] regions taking up e.g. the left side of a [`Ui`] or screen.","sig":null,"attributes":[{"value":"/ Panels are [`Ui`] regions taking up e.g. the left side of a [`Ui`] or screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":65743,"byte_end":65824,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":65825,"byte_end":65828,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Panels can either be a child of a [`Ui`] (taking up a portion of the parent)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":65829,"byte_end":65909,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ or be top-level (taking up a portion of the whole screen).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":65910,"byte_end":65972,"line_start":4,"line_end":4,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":65973,"byte_end":65976,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Together with [`Window`] and [`Area`]:s, top-level panels are","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":65977,"byte_end":66042,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ the only places where you can put you widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66043,"byte_end":66093,"line_start":7,"line_end":7,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66094,"byte_end":66097,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The order in which you add panels matter!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66098,"byte_end":66143,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/ The first panel you add will always be the outermost, and the last you add will always be the innermost.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66144,"byte_end":66252,"line_start":10,"line_end":10,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66253,"byte_end":66256,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ You must never open one top-level panel from within another panel. Add one panel, then the next.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66257,"byte_end":66357,"line_start":12,"line_end":12,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66358,"byte_end":66361,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Always add any [`CentralPanel`] last.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66362,"byte_end":66403,"line_start":14,"line_end":14,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66404,"byte_end":66407,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Add your [`Window`]:s after any top-level panels.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66408,"byte_end":66461,"line_start":16,"line_end":16,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4651},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67050,"byte_end":67054,"line_start":43,"line_end":43,"column_start":5,"column_end":9},"name":"Left","qualname":"::containers::panel::Side::Left","value":"Side::Left","parent":{"krate":0,"index":4650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4653},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67060,"byte_end":67065,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"Right","qualname":"::containers::panel::Side::Right","value":"Side::Right","parent":{"krate":0,"index":4650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4650},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67039,"byte_end":67043,"line_start":42,"line_end":42,"column_start":10,"column_end":14},"name":"Side","qualname":"::containers::panel::Side","value":"pub enum Side { Left, Right, }","parent":null,"children":[{"krate":0,"index":4651},{"krate":0,"index":4653}],"decl_id":null,"docs":" `Left` or `Right`\n","sig":null,"attributes":[{"value":"/ `Left` or `Right`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66967,"byte_end":66988,"line_start":40,"line_end":40,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68177,"byte_end":68186,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"SidePanel","qualname":"::containers::panel::SidePanel","value":"SidePanel {  }","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254}],"decl_id":null,"docs":" A panel that covers the entire left or right side of a [`Ui`] or screen.","sig":null,"attributes":[{"value":"/ A panel that covers the entire left or right side of a [`Ui`] or screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67607,"byte_end":67683,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67684,"byte_end":67687,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ The order in which you add panels matter!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67688,"byte_end":67733,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/ The first panel you add will always be the outermost, and the last you add will always be the innermost.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67734,"byte_end":67842,"line_start":73,"line_end":73,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67843,"byte_end":67846,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ See the [module level docs](crate::containers::panel) for more details.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67847,"byte_end":67922,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67923,"byte_end":67926,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67927,"byte_end":67934,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ctx(|ctx| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67935,"byte_end":67969,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/ egui::SidePanel::left(\"my_left_panel\").show(ctx, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67970,"byte_end":68029,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"/    ui.label(\"Hello World!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68030,"byte_end":68062,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68063,"byte_end":68070,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68071,"byte_end":68080,"line_start":82,"line_end":82,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68081,"byte_end":68088,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68089,"byte_end":68092,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ See also [`TopBottomPanel`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68093,"byte_end":68125,"line_start":85,"line_end":85,"column_start":1,"column_end":33}},{"value":"must_use = \"You should call .show()\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68126,"byte_end":68165,"line_start":86,"line_end":86,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68420,"byte_end":68424,"line_start":98,"line_end":98,"column_start":12,"column_end":16},"name":"left","qualname":"<SidePanel>::left","value":"pub fn left<impl std::hash::Hash: std::hash::Hash>(impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" `id_source`: Something unique, e.g. `\"my_left_panel\"`.\n","sig":null,"attributes":[{"value":"/ `id_source`: Something unique, e.g. `\"my_left_panel\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68350,"byte_end":68408,"line_start":97,"line_end":97,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68591,"byte_end":68596,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"right","qualname":"<SidePanel>::right","value":"pub fn right<impl std::hash::Hash: std::hash::Hash>(impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" `id_source`: Something unique, e.g. `\"my_right_panel\"`.\n","sig":null,"attributes":[{"value":"/ `id_source`: Something unique, e.g. `\"my_right_panel\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68520,"byte_end":68579,"line_start":102,"line_end":102,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68758,"byte_end":68761,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<SidePanel>::new","value":"pub fn new<impl std::hash::Hash: std::hash::Hash>(Side, impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" `id_source`: Something unique, e.g. `\"my_panel\"`.\n","sig":null,"attributes":[{"value":"/ `id_source`: Something unique, e.g. `\"my_panel\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68693,"byte_end":68746,"line_start":107,"line_end":107,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69434,"byte_end":69443,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"resizable","qualname":"<SidePanel>::resizable","value":"pub fn resizable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Can panel be resized by dragging the edge of it?","sig":null,"attributes":[{"value":"/ Can panel be resized by dragging the edge of it?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69042,"byte_end":69094,"line_start":119,"line_end":119,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69099,"byte_end":69102,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Default is `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69107,"byte_end":69129,"line_start":121,"line_end":121,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69134,"byte_end":69137,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ If you want your panel to be resizable you also need a widget in it that","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69142,"byte_end":69218,"line_start":123,"line_end":123,"column_start":5,"column_end":81}},{"value":"/ takes up more space as you resize it, such as:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69223,"byte_end":69273,"line_start":124,"line_end":124,"column_start":5,"column_end":55}},{"value":"/ * Wrapping text ([`Ui::horizontal_wrapped`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69278,"byte_end":69327,"line_start":125,"line_end":125,"column_start":5,"column_end":54}},{"value":"/ * A [`ScrollArea`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69332,"byte_end":69355,"line_start":126,"line_end":126,"column_start":5,"column_end":28}},{"value":"/ * A [`Separator`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69360,"byte_end":69382,"line_start":127,"line_end":127,"column_start":5,"column_end":27}},{"value":"/ * A [`TextEdit`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69387,"byte_end":69408,"line_start":128,"line_end":128,"column_start":5,"column_end":26}},{"value":"/ * …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69413,"byte_end":69422,"line_start":129,"line_end":129,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69603,"byte_end":69616,"line_start":136,"line_end":136,"column_start":12,"column_end":25},"name":"default_width","qualname":"<SidePanel>::default_width","value":"pub fn default_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The initial wrapping width of the `SidePanel`.\n","sig":null,"attributes":[{"value":"/ The initial wrapping width of the `SidePanel`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69541,"byte_end":69591,"line_start":135,"line_end":135,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69732,"byte_end":69741,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"min_width","qualname":"<SidePanel>::min_width","value":"pub fn min_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":69875,"byte_end":69884,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"max_width","qualname":"<SidePanel>::max_width","value":"pub fn max_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":70076,"byte_end":70087,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"width_range","qualname":"<SidePanel>::width_range","value":"pub fn width_range(Self, RangeInclusive<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The allowable width range for resizable panels.\n","sig":null,"attributes":[{"value":"/ The allowable width range for resizable panels.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":70013,"byte_end":70064,"line_start":151,"line_end":151,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":70264,"byte_end":70269,"line_start":158,"line_end":158,"column_start":12,"column_end":17},"name":"frame","qualname":"<SidePanel>::frame","value":"pub fn frame(Self, Frame) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change the background color, margins, etc.\n","sig":null,"attributes":[{"value":"/ Change the background color, margins, etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":70206,"byte_end":70252,"line_start":157,"line_end":157,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":70426,"byte_end":70437,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"show_inside","qualname":"<SidePanel>::show_inside","value":"pub fn show_inside<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                   R>(Self, &mut Ui, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Show the panel inside a `Ui`.\n","sig":null,"attributes":[{"value":"/ Show the panel inside a `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":70381,"byte_end":70414,"line_start":165,"line_end":165,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":75027,"byte_end":75031,"line_start":287,"line_end":287,"column_start":12,"column_end":16},"name":"show","qualname":"<SidePanel>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &Context, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Show the panel at the top level.\n","sig":null,"attributes":[{"value":"/ Show the panel at the top level.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":74979,"byte_end":75015,"line_start":286,"line_end":286,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4664},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":76336,"byte_end":76339,"line_start":327,"line_end":327,"column_start":5,"column_end":8},"name":"Top","qualname":"::containers::panel::TopBottomSide::Top","value":"TopBottomSide::Top","parent":{"krate":0,"index":4663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4666},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":76345,"byte_end":76351,"line_start":328,"line_end":328,"column_start":5,"column_end":11},"name":"Bottom","qualname":"::containers::panel::TopBottomSide::Bottom","value":"TopBottomSide::Bottom","parent":{"krate":0,"index":4663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4663},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":76316,"byte_end":76329,"line_start":326,"line_end":326,"column_start":10,"column_end":23},"name":"TopBottomSide","qualname":"::containers::panel::TopBottomSide","value":"pub enum TopBottomSide { Top, Bottom, }","parent":null,"children":[{"krate":0,"index":4664},{"krate":0,"index":4666}],"decl_id":null,"docs":" `Top` or `Bottom`\n","sig":null,"attributes":[{"value":"/ `Top` or `Bottom`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":76244,"byte_end":76265,"line_start":324,"line_end":324,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77519,"byte_end":77533,"line_start":371,"line_end":371,"column_start":12,"column_end":26},"name":"TopBottomPanel","qualname":"::containers::panel::TopBottomPanel","value":"TopBottomPanel {  }","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"decl_id":null,"docs":" A panel that covers the entire top or bottom of a [`Ui`] or screen.","sig":null,"attributes":[{"value":"/ A panel that covers the entire top or bottom of a [`Ui`] or screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":76960,"byte_end":77031,"line_start":354,"line_end":354,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77032,"byte_end":77035,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"/ The order in which you add panels matter!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77036,"byte_end":77081,"line_start":356,"line_end":356,"column_start":1,"column_end":46}},{"value":"/ The first panel you add will always be the outermost, and the last you add will always be the innermost.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77082,"byte_end":77190,"line_start":357,"line_end":357,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77191,"byte_end":77194,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ See the [module level docs](crate::containers::panel) for more details.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77195,"byte_end":77270,"line_start":359,"line_end":359,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77271,"byte_end":77274,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77275,"byte_end":77282,"line_start":361,"line_end":361,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ctx(|ctx| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77283,"byte_end":77317,"line_start":362,"line_end":362,"column_start":1,"column_end":35}},{"value":"/ egui::TopBottomPanel::top(\"my_panel\").show(ctx, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77318,"byte_end":77376,"line_start":363,"line_end":363,"column_start":1,"column_end":59}},{"value":"/    ui.label(\"Hello World!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77377,"byte_end":77409,"line_start":364,"line_end":364,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77410,"byte_end":77417,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77418,"byte_end":77427,"line_start":366,"line_end":366,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77428,"byte_end":77435,"line_start":367,"line_end":367,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77436,"byte_end":77439,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ See also [`SidePanel`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77440,"byte_end":77467,"line_start":369,"line_end":369,"column_start":1,"column_end":28}},{"value":"must_use = \"You should call .show()\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77468,"byte_end":77507,"line_start":370,"line_end":370,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77790,"byte_end":77793,"line_start":382,"line_end":382,"column_start":12,"column_end":15},"name":"top","qualname":"<TopBottomPanel>::top","value":"pub fn top<impl std::hash::Hash: std::hash::Hash>(impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" `id_source`: Something unique, e.g. `\"my_top_panel\"`.\n","sig":null,"attributes":[{"value":"/ `id_source`: Something unique, e.g. `\"my_top_panel\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77721,"byte_end":77778,"line_start":381,"line_end":381,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77969,"byte_end":77975,"line_start":387,"line_end":387,"column_start":12,"column_end":18},"name":"bottom","qualname":"<TopBottomPanel>::bottom","value":"pub fn bottom<impl std::hash::Hash: std::hash::Hash>(impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" `id_source`: Something unique, e.g. `\"my_bottom_panel\"`.\n","sig":null,"attributes":[{"value":"/ `id_source`: Something unique, e.g. `\"my_bottom_panel\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77897,"byte_end":77957,"line_start":386,"line_end":386,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78147,"byte_end":78150,"line_start":392,"line_end":392,"column_start":12,"column_end":15},"name":"new","qualname":"<TopBottomPanel>::new","value":"pub fn new<impl std::hash::Hash: std::hash::Hash>(TopBottomSide,\n                                                  impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" `id_source`: Something unique, e.g. `\"my_panel\"`.\n","sig":null,"attributes":[{"value":"/ `id_source`: Something unique, e.g. `\"my_panel\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78082,"byte_end":78135,"line_start":391,"line_end":391,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78835,"byte_end":78844,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"resizable","qualname":"<TopBottomPanel>::resizable","value":"pub fn resizable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Can panel be resized by dragging the edge of it?","sig":null,"attributes":[{"value":"/ Can panel be resized by dragging the edge of it?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78442,"byte_end":78494,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78499,"byte_end":78502,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Default is `false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78507,"byte_end":78530,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78535,"byte_end":78538,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If you want your panel to be resizable you also need a widget in it that","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78543,"byte_end":78619,"line_start":407,"line_end":407,"column_start":5,"column_end":81}},{"value":"/ takes up more space as you resize it, such as:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78624,"byte_end":78674,"line_start":408,"line_end":408,"column_start":5,"column_end":55}},{"value":"/ * Wrapping text ([`Ui::horizontal_wrapped`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78679,"byte_end":78728,"line_start":409,"line_end":409,"column_start":5,"column_end":54}},{"value":"/ * A [`ScrollArea`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78733,"byte_end":78756,"line_start":410,"line_end":410,"column_start":5,"column_end":28}},{"value":"/ * A [`Separator`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78761,"byte_end":78783,"line_start":411,"line_end":411,"column_start":5,"column_end":27}},{"value":"/ * A [`TextEdit`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78788,"byte_end":78809,"line_start":412,"line_end":412,"column_start":5,"column_end":26}},{"value":"/ * …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78814,"byte_end":78823,"line_start":413,"line_end":413,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79053,"byte_end":79067,"line_start":421,"line_end":421,"column_start":12,"column_end":26},"name":"default_height","qualname":"<TopBottomPanel>::default_height","value":"pub fn default_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The initial height of the `SidePanel`.\n Defaults to [`style::Spacing::interact_size`].y.\n","sig":null,"attributes":[{"value":"/ The initial height of the `SidePanel`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78942,"byte_end":78984,"line_start":419,"line_end":419,"column_start":5,"column_end":47}},{"value":"/ Defaults to [`style::Spacing::interact_size`].y.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":78989,"byte_end":79041,"line_start":420,"line_end":420,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79192,"byte_end":79202,"line_start":426,"line_end":426,"column_start":12,"column_end":22},"name":"min_height","qualname":"<TopBottomPanel>::min_height","value":"pub fn min_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79340,"byte_end":79350,"line_start":431,"line_end":431,"column_start":12,"column_end":22},"name":"max_height","qualname":"<TopBottomPanel>::max_height","value":"pub fn max_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79547,"byte_end":79559,"line_start":437,"line_end":437,"column_start":12,"column_end":24},"name":"height_range","qualname":"<TopBottomPanel>::height_range","value":"pub fn height_range(Self, RangeInclusive<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The allowable height range for resizable panels.\n","sig":null,"attributes":[{"value":"/ The allowable height range for resizable panels.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79483,"byte_end":79535,"line_start":436,"line_end":436,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79739,"byte_end":79744,"line_start":443,"line_end":443,"column_start":12,"column_end":17},"name":"frame","qualname":"<TopBottomPanel>::frame","value":"pub fn frame(Self, Frame) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change the background color, margins, etc.\n","sig":null,"attributes":[{"value":"/ Change the background color, margins, etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79681,"byte_end":79727,"line_start":442,"line_end":442,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79906,"byte_end":79917,"line_start":451,"line_end":451,"column_start":12,"column_end":23},"name":"show_inside","qualname":"<TopBottomPanel>::show_inside","value":"pub fn show_inside<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                   R>(Self, &mut Ui, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Show the panel inside a `Ui`.\n","sig":null,"attributes":[{"value":"/ Show the panel inside a `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79861,"byte_end":79894,"line_start":450,"line_end":450,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":84644,"byte_end":84648,"line_start":574,"line_end":574,"column_start":12,"column_end":16},"name":"show","qualname":"<TopBottomPanel>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &Context, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Show the panel at the top level.\n","sig":null,"attributes":[{"value":"/ Show the panel at the top level.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":84596,"byte_end":84632,"line_start":573,"line_end":573,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":4676},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86483,"byte_end":86495,"line_start":633,"line_end":633,"column_start":12,"column_end":24},"name":"CentralPanel","qualname":"::containers::panel::CentralPanel","value":"CentralPanel {  }","parent":null,"children":[{"krate":0,"index":4677}],"decl_id":null,"docs":" A panel that covers the remainder of the screen,\n i.e. whatever area is left after adding other panels.","sig":null,"attributes":[{"value":"/ A panel that covers the remainder of the screen,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":85919,"byte_end":85971,"line_start":615,"line_end":615,"column_start":1,"column_end":53}},{"value":"/ i.e. whatever area is left after adding other panels.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":85972,"byte_end":86029,"line_start":616,"line_end":616,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86030,"byte_end":86033,"line_start":617,"line_end":617,"column_start":1,"column_end":4}},{"value":"/ `CentralPanel` must be added after all other panels.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86034,"byte_end":86090,"line_start":618,"line_end":618,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86091,"byte_end":86094,"line_start":619,"line_end":619,"column_start":1,"column_end":4}},{"value":"/ NOTE: Any [`Window`]s and [`Area`]s will cover the top-level `CentralPanel`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86095,"byte_end":86175,"line_start":620,"line_end":620,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86176,"byte_end":86179,"line_start":621,"line_end":621,"column_start":1,"column_end":4}},{"value":"/ See the [module level docs](crate::containers::panel) for more details.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86180,"byte_end":86255,"line_start":622,"line_end":622,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86256,"byte_end":86259,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86260,"byte_end":86267,"line_start":624,"line_end":624,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ctx(|ctx| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86268,"byte_end":86302,"line_start":625,"line_end":625,"column_start":1,"column_end":35}},{"value":"/ egui::CentralPanel::default().show(ctx, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86303,"byte_end":86353,"line_start":626,"line_end":626,"column_start":1,"column_end":51}},{"value":"/    ui.label(\"Hello World!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86354,"byte_end":86386,"line_start":627,"line_end":627,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86387,"byte_end":86394,"line_start":628,"line_end":628,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86395,"byte_end":86404,"line_start":629,"line_end":629,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86405,"byte_end":86412,"line_start":630,"line_end":630,"column_start":1,"column_end":8}},{"value":"must_use = \"You should call .show()\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86413,"byte_end":86452,"line_start":631,"line_end":631,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86609,"byte_end":86614,"line_start":639,"line_end":639,"column_start":12,"column_end":17},"name":"frame","qualname":"<CentralPanel>::frame","value":"pub fn frame(Self, Frame) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change the background color, margins, etc.\n","sig":null,"attributes":[{"value":"/ Change the background color, margins, etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86551,"byte_end":86597,"line_start":638,"line_end":638,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86774,"byte_end":86785,"line_start":647,"line_end":647,"column_start":12,"column_end":23},"name":"show_inside","qualname":"<CentralPanel>::show_inside","value":"pub fn show_inside<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                   R>(Self, &mut Ui, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Show the panel inside a `Ui`.\n","sig":null,"attributes":[{"value":"/ Show the panel inside a `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86729,"byte_end":86762,"line_start":646,"line_end":646,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":87640,"byte_end":87644,"line_start":674,"line_end":674,"column_start":12,"column_end":16},"name":"show","qualname":"<CentralPanel>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &Context, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Show the panel at the top level.\n","sig":null,"attributes":[{"value":"/ Show the panel at the top level.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":87592,"byte_end":87628,"line_start":673,"line_end":673,"column_start":5,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"popup","qualname":"::containers::popup","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":4680},{"krate":0,"index":4683},{"krate":0,"index":4685},{"krate":0,"index":4687},{"krate":0,"index":345},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":378}],"decl_id":null,"docs":" Show popup windows, tooltips, context menus etc.\n","sig":null,"attributes":[{"value":"/ Show popup windows, tooltips, context menus etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":88765,"byte_end":88817,"line_start":1,"line_end":1,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90629,"byte_end":90641,"line_start":69,"line_end":69,"column_start":8,"column_end":20},"name":"show_tooltip","qualname":"::containers::popup::show_tooltip","value":"pub fn show_tooltip<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                    R>(&Context, Id, impl FnOnce(&mut Ui) -> R) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Show a tooltip at the current pointer position (if any).","sig":null,"attributes":[{"value":"/ Show a tooltip at the current pointer position (if any).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90164,"byte_end":90224,"line_start":52,"line_end":52,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90225,"byte_end":90228,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Most of the time it is easier to use [`Response::on_hover_ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90229,"byte_end":90296,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90297,"byte_end":90300,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ See also [`show_tooltip_text`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90301,"byte_end":90336,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90337,"byte_end":90340,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the tooltip could not be placed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90341,"byte_end":90395,"line_start":58,"line_end":58,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90396,"byte_end":90399,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90400,"byte_end":90407,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90408,"byte_end":90440,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ if ui.ui_contains_pointer() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90441,"byte_end":90474,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/     egui::show_tooltip(ui.ctx(), egui::Id::new(\"my_tooltip\"), |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90475,"byte_end":90547,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/         ui.label(\"Helpful text\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90548,"byte_end":90585,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/     });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90586,"byte_end":90597,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90598,"byte_end":90603,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90604,"byte_end":90613,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90614,"byte_end":90621,"line_start":68,"line_end":68,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91269,"byte_end":91292,"line_start":94,"line_end":94,"column_start":8,"column_end":31},"name":"show_tooltip_at_pointer","qualname":"::containers::popup::show_tooltip_at_pointer","value":"pub fn show_tooltip_at_pointer<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui)\n                               -> R>(&Context, Id, impl FnOnce(&mut Ui) -> R)\n-> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Show a tooltip at the current pointer position (if any).","sig":null,"attributes":[{"value":"/ Show a tooltip at the current pointer position (if any).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90793,"byte_end":90853,"line_start":77,"line_end":77,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90854,"byte_end":90857,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Most of the time it is easier to use [`Response::on_hover_ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90858,"byte_end":90925,"line_start":79,"line_end":79,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90926,"byte_end":90929,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ See also [`show_tooltip_text`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90930,"byte_end":90965,"line_start":81,"line_end":81,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90966,"byte_end":90969,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the tooltip could not be placed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":90970,"byte_end":91024,"line_start":83,"line_end":83,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91025,"byte_end":91028,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91029,"byte_end":91036,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91037,"byte_end":91069,"line_start":86,"line_end":86,"column_start":1,"column_end":33}},{"value":"/ if ui.ui_contains_pointer() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91070,"byte_end":91103,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/     egui::show_tooltip_at_pointer(ui.ctx(), egui::Id::new(\"my_tooltip\"), |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91104,"byte_end":91187,"line_start":88,"line_end":88,"column_start":1,"column_end":84}},{"value":"/         ui.label(\"Helpful text\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91188,"byte_end":91225,"line_start":89,"line_end":89,"column_start":1,"column_end":38}},{"value":"/     });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91226,"byte_end":91237,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91238,"byte_end":91243,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91244,"byte_end":91253,"line_start":92,"line_end":92,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91254,"byte_end":91261,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91733,"byte_end":91749,"line_start":110,"line_end":110,"column_start":8,"column_end":24},"name":"show_tooltip_for","qualname":"::containers::popup::show_tooltip_for","value":"pub fn show_tooltip_for<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                        R>(&Context, Id, &Rect, impl FnOnce(&mut Ui) -> R)\n-> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Show a tooltip under the given area.","sig":null,"attributes":[{"value":"/ Show a tooltip under the given area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91594,"byte_end":91634,"line_start":107,"line_end":107,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91635,"byte_end":91638,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ If the tooltip does not fit under the area, it tries to place it above it instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":91639,"byte_end":91725,"line_start":109,"line_end":109,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":92350,"byte_end":92365,"line_start":135,"line_end":135,"column_start":8,"column_end":23},"name":"show_tooltip_at","qualname":"::containers::popup::show_tooltip_at","value":"pub fn show_tooltip_at<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                       R>(&Context, Id, Option<Pos2>,\n                          impl FnOnce(&mut Ui) -> R) -> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Show a tooltip at the given position.","sig":null,"attributes":[{"value":"/ Show a tooltip at the given position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":92242,"byte_end":92283,"line_start":132,"line_end":132,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":92284,"byte_end":92287,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the tooltip could not be placed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":92288,"byte_end":92342,"line_start":134,"line_end":134,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95419,"byte_end":95436,"line_start":236,"line_end":236,"column_start":8,"column_end":25},"name":"show_tooltip_text","qualname":"::containers::popup::show_tooltip_text","value":"pub fn show_tooltip_text<impl Into<WidgetText>: Into<WidgetText>>(&Context,\n                                                                  Id,\n                                                                  impl Into<WidgetText>)\n-> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Show some text at the current pointer position (if any).","sig":null,"attributes":[{"value":"/ Show some text at the current pointer position (if any).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":94992,"byte_end":95052,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95053,"byte_end":95056,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ Most of the time it is easier to use [`Response::on_hover_text`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95057,"byte_end":95126,"line_start":223,"line_end":223,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95127,"byte_end":95130,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ See also [`show_tooltip`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95131,"byte_end":95161,"line_start":225,"line_end":225,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95162,"byte_end":95165,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the tooltip could not be placed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95166,"byte_end":95220,"line_start":227,"line_end":227,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95221,"byte_end":95224,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95225,"byte_end":95232,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95233,"byte_end":95265,"line_start":230,"line_end":230,"column_start":1,"column_end":33}},{"value":"/ if ui.ui_contains_pointer() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95266,"byte_end":95299,"line_start":231,"line_end":231,"column_start":1,"column_end":34}},{"value":"/     egui::show_tooltip_text(ui.ctx(), egui::Id::new(\"my_tooltip\"), \"Helpful text\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95300,"byte_end":95387,"line_start":232,"line_end":232,"column_start":1,"column_end":88}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95388,"byte_end":95393,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95394,"byte_end":95403,"line_start":234,"line_end":234,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":95404,"byte_end":95411,"line_start":235,"line_end":235,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":378},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96987,"byte_end":97005,"line_start":287,"line_end":287,"column_start":8,"column_end":26},"name":"popup_below_widget","qualname":"::containers::popup::popup_below_widget","value":"pub fn popup_below_widget<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                          R>(&Ui, Id, &Response, impl FnOnce(&mut Ui) -> R)\n-> Option<R>","parent":null,"children":[],"decl_id":null,"docs":" Shows a popup below another widget.","sig":null,"attributes":[{"value":"/ Shows a popup below another widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96238,"byte_end":96277,"line_start":265,"line_end":265,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96278,"byte_end":96281,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ Useful for drop-down menus (combo boxes) or suggestion menus under text fields.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96282,"byte_end":96365,"line_start":267,"line_end":267,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96366,"byte_end":96369,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ You must open the popup with [`Memory::open_popup`] or  [`Memory::toggle_popup`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96370,"byte_end":96455,"line_start":269,"line_end":269,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96456,"byte_end":96459,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the popup is not open.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96460,"byte_end":96504,"line_start":271,"line_end":271,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96505,"byte_end":96508,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96509,"byte_end":96516,"line_start":273,"line_end":273,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96517,"byte_end":96549,"line_start":274,"line_end":274,"column_start":1,"column_end":33}},{"value":"/ let response = ui.button(\"Open popup\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96550,"byte_end":96593,"line_start":275,"line_end":275,"column_start":1,"column_end":44}},{"value":"/ let popup_id = ui.make_persistent_id(\"my_unique_id\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96594,"byte_end":96651,"line_start":276,"line_end":276,"column_start":1,"column_end":58}},{"value":"/ if response.clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96652,"byte_end":96679,"line_start":277,"line_end":277,"column_start":1,"column_end":28}},{"value":"/     ui.memory().toggle_popup(popup_id);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96680,"byte_end":96723,"line_start":278,"line_end":278,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96724,"byte_end":96729,"line_start":279,"line_end":279,"column_start":1,"column_end":6}},{"value":"/ egui::popup::popup_below_widget(ui, popup_id, &response, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96730,"byte_end":96797,"line_start":280,"line_end":280,"column_start":1,"column_end":68}},{"value":"/     ui.set_min_width(200.0); // if you want to control the size","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96798,"byte_end":96865,"line_start":281,"line_end":281,"column_start":1,"column_end":68}},{"value":"/     ui.label(\"Some more info, or things you can select:\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96866,"byte_end":96928,"line_start":282,"line_end":282,"column_start":1,"column_end":63}},{"value":"/     ui.label(\"…\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96929,"byte_end":96953,"line_start":283,"line_end":283,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96954,"byte_end":96961,"line_start":284,"line_end":284,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96962,"byte_end":96971,"line_start":285,"line_end":285,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":96972,"byte_end":96979,"line_start":286,"line_end":286,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4698},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":99319,"byte_end":99325,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Resize","qualname":"::containers::resize::Resize","value":"Resize {  }","parent":null,"children":[{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701},{"krate":0,"index":4702},{"krate":0,"index":4703},{"krate":0,"index":4704},{"krate":0,"index":4705}],"decl_id":null,"docs":" A region that can be resized by dragging the bottom right corner.\n","sig":null,"attributes":[{"value":"/ A region that can be resized by dragging the bottom right corner.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":99168,"byte_end":99237,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"must_use = \"You should call .show()\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":99268,"byte_end":99307,"line_start":31,"line_end":31,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100001,"byte_end":100003,"line_start":63,"line_end":63,"column_start":12,"column_end":14},"name":"id","qualname":"<Resize>::id","value":"pub fn id(Self, Id) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign an explicit and globally unique id.\n","sig":null,"attributes":[{"value":"/ Assign an explicit and globally unique id.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":99943,"byte_end":99989,"line_start":62,"line_end":62,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100198,"byte_end":100207,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"id_source","qualname":"<Resize>::id_source","value":"pub fn id_source<impl std::hash::Hash: std::hash::Hash>(Self,\n                                                        impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A source for the unique `Id`, e.g. `.id_source(\"second_resize_area\")` or `.id_source(loop_index)`.\n","sig":null,"attributes":[{"value":"/ A source for the unique `Id`, e.g. `.id_source(\"second_resize_area\")` or `.id_source(loop_index)`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100084,"byte_end":100186,"line_start":68,"line_end":68,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100674,"byte_end":100687,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"default_width","qualname":"<Resize>::default_width","value":"pub fn default_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Preferred / suggested width. Actual width will depend on contents.","sig":null,"attributes":[{"value":"/ Preferred / suggested width. Actual width will depend on contents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100336,"byte_end":100406,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100411,"byte_end":100414,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Examples:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100419,"byte_end":100432,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ * if the contents is text, this will decide where we break long lines.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100437,"byte_end":100511,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ * if the contents is a canvas, this decides the width of it,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100516,"byte_end":100580,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/ * if the contents is some buttons, this is ignored and we will auto-size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100585,"byte_end":100662,"line_start":79,"line_end":79,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101176,"byte_end":101190,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"default_height","qualname":"<Resize>::default_height","value":"pub fn default_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Preferred / suggested height. Actual height will depend on contents.","sig":null,"attributes":[{"value":"/ Preferred / suggested height. Actual height will depend on contents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100781,"byte_end":100853,"line_start":85,"line_end":85,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100858,"byte_end":100861,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Examples:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100866,"byte_end":100879,"line_start":87,"line_end":87,"column_start":5,"column_end":18}},{"value":"/ * if the contents is a `ScrollArea` then this decides the maximum size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100884,"byte_end":100959,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ * if the contents is a canvas, this decides the height of it,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":100964,"byte_end":101029,"line_start":89,"line_end":89,"column_start":5,"column_end":70}},{"value":"/ * if the contents is text and buttons, then the `default_height` is ignored","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101034,"byte_end":101113,"line_start":90,"line_end":90,"column_start":5,"column_end":84}},{"value":"/   and the height is picked automatically..","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101118,"byte_end":101164,"line_start":91,"line_end":91,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101293,"byte_end":101305,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"default_size","qualname":"<Resize>::default_size","value":"pub fn default_size<impl Into<Vec2>: Into<Vec2>>(Self, impl Into<Vec2>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101479,"byte_end":101487,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"min_size","qualname":"<Resize>::min_size","value":"pub fn min_size<impl Into<Vec2>: Into<Vec2>>(Self, impl Into<Vec2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Won't shrink to smaller than this\n","sig":null,"attributes":[{"value":"/ Won't shrink to smaller than this","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101430,"byte_end":101467,"line_start":102,"line_end":102,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101648,"byte_end":101657,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"min_width","qualname":"<Resize>::min_width","value":"pub fn min_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Won't shrink to smaller than this\n","sig":null,"attributes":[{"value":"/ Won't shrink to smaller than this","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101599,"byte_end":101636,"line_start":107,"line_end":107,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101803,"byte_end":101813,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"min_height","qualname":"<Resize>::min_height","value":"pub fn min_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Won't shrink to smaller than this\n","sig":null,"attributes":[{"value":"/ Won't shrink to smaller than this","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101754,"byte_end":101791,"line_start":112,"line_end":112,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101961,"byte_end":101969,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"max_size","qualname":"<Resize>::max_size","value":"pub fn max_size<impl Into<Vec2>: Into<Vec2>>(Self, impl Into<Vec2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Won't expand to larger than this\n","sig":null,"attributes":[{"value":"/ Won't expand to larger than this","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":101913,"byte_end":101949,"line_start":118,"line_end":118,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":102180,"byte_end":102189,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"resizable","qualname":"<Resize>::resizable","value":"pub fn resizable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Can you resize it with the mouse?\n Note that a window can still auto-resize\n","sig":null,"attributes":[{"value":"/ Can you resize it with the mouse?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":102082,"byte_end":102119,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/ Note that a window can still auto-resize","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":102124,"byte_end":102168,"line_start":125,"line_end":125,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":102294,"byte_end":102306,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"is_resizable","qualname":"<Resize>::is_resizable","value":"pub fn is_resizable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":102510,"byte_end":102520,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"auto_sized","qualname":"<Resize>::auto_sized","value":"pub fn auto_sized(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Not manually resizable, just takes the size of its contents.\n Text will not wrap, but will instead make your window width expand.\n","sig":null,"attributes":[{"value":"/ Not manually resizable, just takes the size of its contents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":102358,"byte_end":102422,"line_start":135,"line_end":135,"column_start":5,"column_end":69}},{"value":"/ Text will not wrap, but will instead make your window width expand.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":102427,"byte_end":102498,"line_start":136,"line_end":136,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":102673,"byte_end":102683,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"fixed_size","qualname":"<Resize>::fixed_size","value":"pub fn fixed_size<impl Into<Vec2>: Into<Vec2>>(Self, impl Into<Vec2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":102916,"byte_end":102927,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"with_stroke","qualname":"<Resize>::with_stroke","value":"pub fn with_stroke(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":106742,"byte_end":106746,"line_start":257,"line_end":257,"column_start":12,"column_end":16},"name":"show","qualname":"<Resize>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &mut Ui, impl FnOnce(&mut Ui) -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4711},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":110253,"byte_end":110258,"line_start":13,"line_end":13,"column_start":12,"column_end":17},"name":"State","qualname":"::containers::scroll_area::State","value":"State { offset, vel }","parent":null,"children":[{"krate":0,"index":4712},{"krate":0,"index":4713},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4718}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4712},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":110320,"byte_end":110326,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"offset","qualname":"::containers::scroll_area::State::offset","value":"epaint::Vec2","parent":{"krate":0,"index":4711},"children":[],"decl_id":null,"docs":" Positive offset means scrolling down/right\n","sig":null,"attributes":[{"value":"/ Positive offset means scrolling down/right","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":110265,"byte_end":110311,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":4715},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":110465,"byte_end":110468,"line_start":21,"line_end":21,"column_start":9,"column_end":12},"name":"vel","qualname":"::containers::scroll_area::State::vel","value":"epaint::Vec2","parent":{"krate":0,"index":4711},"children":[],"decl_id":null,"docs":" Momentum, used for kinetic scrolling\n","sig":null,"attributes":[{"value":"/ Momentum, used for kinetic scrolling","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":110368,"byte_end":110408,"line_start":19,"line_end":19,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111243,"byte_end":111247,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"load","qualname":"<State>::load","value":"pub fn load(&Context, Id) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111344,"byte_end":111349,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"store","qualname":"<State>::store","value":"pub fn store(Self, &Context, Id)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111448,"byte_end":111464,"line_start":54,"line_end":54,"column_start":12,"column_end":28},"name":"ScrollAreaOutput","qualname":"::containers::scroll_area::ScrollAreaOutput","value":"ScrollAreaOutput { inner, id, state, inner_rect }","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111518,"byte_end":111523,"line_start":56,"line_end":56,"column_start":9,"column_end":14},"name":"inner","qualname":"::containers::scroll_area::ScrollAreaOutput::inner","value":"R","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" What the user closure returned.\n","sig":null,"attributes":[{"value":"/ What the user closure returned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111474,"byte_end":111509,"line_start":55,"line_end":55,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111571,"byte_end":111573,"line_start":59,"line_end":59,"column_start":9,"column_end":11},"name":"id","qualname":"::containers::scroll_area::ScrollAreaOutput::id","value":"id::Id","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" `Id` of the `ScrollArea`.\n","sig":null,"attributes":[{"value":"/ `Id` of the `ScrollArea`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111533,"byte_end":111562,"line_start":58,"line_end":58,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111634,"byte_end":111639,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"state","qualname":"::containers::scroll_area::ScrollAreaOutput::state","value":"containers::scroll_area::State","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" The current state of the scroll area.\n","sig":null,"attributes":[{"value":"/ The current state of the scroll area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111584,"byte_end":111625,"line_start":61,"line_end":61,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111724,"byte_end":111734,"line_start":65,"line_end":65,"column_start":9,"column_end":19},"name":"inner_rect","qualname":"::containers::scroll_area::ScrollAreaOutput::inner_rect","value":"epaint::Rect","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Where on the screen the content is (excludes scroll bars).\n","sig":null,"attributes":[{"value":"/ Where on the screen the content is (excludes scroll bars).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111653,"byte_end":111715,"line_start":64,"line_end":64,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":4728},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":112046,"byte_end":112056,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"ScrollArea","qualname":"::containers::scroll_area::ScrollArea","value":"ScrollArea {  }","parent":null,"children":[{"krate":0,"index":4729},{"krate":0,"index":4731},{"krate":0,"index":4733},{"krate":0,"index":4734},{"krate":0,"index":4735},{"krate":0,"index":4736},{"krate":0,"index":4737},{"krate":0,"index":4738},{"krate":0,"index":4739},{"krate":0,"index":4740}],"decl_id":null,"docs":" Add vertical and/or horizontal scrolling to a contained [`Ui`].","sig":null,"attributes":[{"value":"/ Add vertical and/or horizontal scrolling to a contained [`Ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111745,"byte_end":111812,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111813,"byte_end":111816,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111817,"byte_end":111824,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111825,"byte_end":111857,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/ egui::ScrollArea::vertical().show(ui, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111858,"byte_end":111906,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/     // Add a lot of widgets here.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111907,"byte_end":111944,"line_start":73,"line_end":73,"column_start":1,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111945,"byte_end":111952,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111953,"byte_end":111962,"line_start":75,"line_end":75,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111963,"byte_end":111970,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"must_use = \"You should call .show()\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111995,"byte_end":112034,"line_start":78,"line_end":78,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":112710,"byte_end":112720,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<ScrollArea>::horizontal","value":"pub fn horizontal() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a horizontal scroll area.\n","sig":null,"attributes":[{"value":"/ Create a horizontal scroll area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":112662,"byte_end":112698,"line_start":99,"line_end":99,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":112823,"byte_end":112831,"line_start":105,"line_end":105,"column_start":12,"column_end":20},"name":"vertical","qualname":"<ScrollArea>::vertical","value":"pub fn vertical() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a vertical scroll area.\n","sig":null,"attributes":[{"value":"/ Create a vertical scroll area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":112777,"byte_end":112811,"line_start":104,"line_end":104,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":112966,"byte_end":112970,"line_start":110,"line_end":110,"column_start":12,"column_end":16},"name":"both","qualname":"<ScrollArea>::both","value":"pub fn both() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a bi-directional (horizontal and vertical) scroll area.\n","sig":null,"attributes":[{"value":"/ Create a bi-directional (horizontal and vertical) scroll area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":112888,"byte_end":112954,"line_start":109,"line_end":109,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113161,"byte_end":113168,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"neither","qualname":"<ScrollArea>::neither","value":"pub fn neither() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a scroll area where both direction of scrolling is disabled.\n It's unclear why you would want to do this.\n","sig":null,"attributes":[{"value":"/ Create a scroll area where both direction of scrolling is disabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113026,"byte_end":113097,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ It's unclear why you would want to do this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113102,"byte_end":113149,"line_start":115,"line_end":115,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113396,"byte_end":113399,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<ScrollArea>::new","value":"pub fn new([bool; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a scroll area where you decide which axis has scrolling enabled.\n For instance, `ScrollAre::new([true, false])` enable horizontal scrolling.\n","sig":null,"attributes":[{"value":"/ Create a scroll area where you decide which axis has scrolling enabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113226,"byte_end":113301,"line_start":120,"line_end":120,"column_start":5,"column_end":80}},{"value":"/ For instance, `ScrollAre::new([true, false])` enable horizontal scrolling.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113306,"byte_end":113384,"line_start":121,"line_end":121,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114043,"byte_end":114052,"line_start":142,"line_end":142,"column_start":12,"column_end":21},"name":"max_width","qualname":"<ScrollArea>::max_width","value":"pub fn max_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The maximum width of the outer frame of the scroll area.","sig":null,"attributes":[{"value":"/ The maximum width of the outer frame of the scroll area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113810,"byte_end":113870,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113875,"byte_end":113878,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Use `f32::INFINITY` if you want the scroll area to expand to fit the surrounding `Ui` (default).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113883,"byte_end":113983,"line_start":139,"line_end":139,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113988,"byte_end":113991,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::auto_shrink`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":113996,"byte_end":114031,"line_start":141,"line_end":141,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114384,"byte_end":114394,"line_start":152,"line_end":152,"column_start":12,"column_end":22},"name":"max_height","qualname":"<ScrollArea>::max_height","value":"pub fn max_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The maximum height of the outer frame of the scroll area.","sig":null,"attributes":[{"value":"/ The maximum height of the outer frame of the scroll area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114150,"byte_end":114211,"line_start":147,"line_end":147,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114216,"byte_end":114219,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Use `f32::INFINITY` if you want the scroll area to expand to fit the surrounding `Ui` (default).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114224,"byte_end":114324,"line_start":149,"line_end":149,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114329,"byte_end":114332,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::auto_shrink`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114337,"byte_end":114372,"line_start":151,"line_end":151,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114767,"byte_end":114785,"line_start":163,"line_end":163,"column_start":12,"column_end":30},"name":"min_scrolled_width","qualname":"<ScrollArea>::min_scrolled_width","value":"pub fn min_scrolled_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The minimum width of a horizontal scroll area which requires scroll bars.","sig":null,"attributes":[{"value":"/ The minimum width of a horizontal scroll area which requires scroll bars.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114494,"byte_end":114571,"line_start":157,"line_end":157,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114576,"byte_end":114579,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The `ScrollArea` will only become smaller than this if the content is smaller than this","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114584,"byte_end":114675,"line_start":159,"line_end":159,"column_start":5,"column_end":96}},{"value":"/ (and so we don't require scroll bars).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114680,"byte_end":114722,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114727,"byte_end":114730,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Default: `64.0`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114735,"byte_end":114755,"line_start":162,"line_end":162,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115182,"byte_end":115201,"line_start":174,"line_end":174,"column_start":12,"column_end":31},"name":"min_scrolled_height","qualname":"<ScrollArea>::min_scrolled_height","value":"pub fn min_scrolled_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The minimum height of a vertical scroll area which requires scroll bars.","sig":null,"attributes":[{"value":"/ The minimum height of a vertical scroll area which requires scroll bars.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114910,"byte_end":114986,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114991,"byte_end":114994,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The `ScrollArea` will only become smaller than this if the content is smaller than this","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":114999,"byte_end":115090,"line_start":170,"line_end":170,"column_start":5,"column_end":96}},{"value":"/ (and so we don't require scroll bars).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115095,"byte_end":115137,"line_start":171,"line_end":171,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115142,"byte_end":115145,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Default: `64.0`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115150,"byte_end":115170,"line_start":173,"line_end":173,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115491,"byte_end":115509,"line_start":181,"line_end":181,"column_start":12,"column_end":30},"name":"always_show_scroll","qualname":"<ScrollArea>::always_show_scroll","value":"pub fn always_show_scroll(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If `false` (default), the scroll bar will be hidden when not needed/\n If `true`, the scroll bar will always be displayed even if not needed.\n","sig":null,"attributes":[{"value":"/ If `false` (default), the scroll bar will be hidden when not needed/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115328,"byte_end":115400,"line_start":179,"line_end":179,"column_start":5,"column_end":77}},{"value":"/ If `true`, the scroll bar will always be displayed even if not needed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115405,"byte_end":115479,"line_start":180,"line_end":180,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115748,"byte_end":115757,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"id_source","qualname":"<ScrollArea>::id_source","value":"pub fn id_source<impl std::hash::Hash: std::hash::Hash>(Self,\n                                                        impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A source for the unique `Id`, e.g. `.id_source(\"second_scroll_area\")` or `.id_source(loop_index)`.\n","sig":null,"attributes":[{"value":"/ A source for the unique `Id`, e.g. `.id_source(\"second_scroll_area\")` or `.id_source(loop_index)`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115634,"byte_end":115736,"line_start":186,"line_end":186,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116189,"byte_end":116202,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"scroll_offset","qualname":"<ScrollArea>::scroll_offset","value":"pub fn scroll_offset(Self, Vec2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the horizontal and vertical scroll offset position.","sig":null,"attributes":[{"value":"/ Set the horizontal and vertical scroll offset position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115886,"byte_end":115945,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115950,"byte_end":115953,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ See also: [`Self::vertical_scroll_offset`], [`Self::horizontal_scroll_offset`],","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":115958,"byte_end":116041,"line_start":194,"line_end":194,"column_start":5,"column_end":88}},{"value":"/ [`Ui::scroll_to_cursor`](crate::ui::Ui::scroll_to_cursor) and","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116046,"byte_end":116111,"line_start":195,"line_end":195,"column_start":5,"column_end":70}},{"value":"/ [`Response::scroll_to_me`](crate::Response::scroll_to_me)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116116,"byte_end":116177,"line_start":196,"line_end":196,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116576,"byte_end":116598,"line_start":207,"line_end":207,"column_start":12,"column_end":34},"name":"vertical_scroll_offset","qualname":"<ScrollArea>::vertical_scroll_offset","value":"pub fn vertical_scroll_offset(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the vertical scroll offset position.","sig":null,"attributes":[{"value":"/ Set the vertical scroll offset position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116341,"byte_end":116385,"line_start":203,"line_end":203,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116390,"byte_end":116393,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ See also: [`Self::scroll_offset`], [`Ui::scroll_to_cursor`](crate::ui::Ui::scroll_to_cursor) and","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116398,"byte_end":116498,"line_start":205,"line_end":205,"column_start":5,"column_end":105}},{"value":"/ [`Response::scroll_to_me`](crate::Response::scroll_to_me)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116503,"byte_end":116564,"line_start":206,"line_end":206,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116931,"byte_end":116955,"line_start":216,"line_end":216,"column_start":12,"column_end":36},"name":"horizontal_scroll_offset","qualname":"<ScrollArea>::horizontal_scroll_offset","value":"pub fn horizontal_scroll_offset(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the horizontal scroll offset position.","sig":null,"attributes":[{"value":"/ Set the horizontal scroll offset position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116694,"byte_end":116740,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116745,"byte_end":116748,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ See also: [`Self::scroll_offset`], [`Ui::scroll_to_cursor`](crate::ui::Ui::scroll_to_cursor) and","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116753,"byte_end":116853,"line_start":214,"line_end":214,"column_start":5,"column_end":105}},{"value":"/ [`Response::scroll_to_me`](crate::Response::scroll_to_me)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":116858,"byte_end":116919,"line_start":215,"line_end":215,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117112,"byte_end":117119,"line_start":222,"line_end":222,"column_start":12,"column_end":19},"name":"hscroll","qualname":"<ScrollArea>::hscroll","value":"pub fn hscroll(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turn on/off scrolling on the horizontal axis.\n","sig":null,"attributes":[{"value":"/ Turn on/off scrolling on the horizontal axis.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117051,"byte_end":117100,"line_start":221,"line_end":221,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117273,"byte_end":117280,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"vscroll","qualname":"<ScrollArea>::vscroll","value":"pub fn vscroll(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turn on/off scrolling on the vertical axis.\n","sig":null,"attributes":[{"value":"/ Turn on/off scrolling on the vertical axis.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117214,"byte_end":117261,"line_start":227,"line_end":227,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117445,"byte_end":117452,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"scroll2","qualname":"<ScrollArea>::scroll2","value":"pub fn scroll2(Self, [bool; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turn on/off scrolling on the horizontal/vertical axes.\n","sig":null,"attributes":[{"value":"/ Turn on/off scrolling on the horizontal/vertical axes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117375,"byte_end":117433,"line_start":233,"line_end":233,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117974,"byte_end":117990,"line_start":247,"line_end":247,"column_start":12,"column_end":28},"name":"enable_scrolling","qualname":"<ScrollArea>::enable_scrolling","value":"pub fn enable_scrolling(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Control the scrolling behavior\n If `true` (default), the scroll area will respond to user scrolling\n If `false`, the scroll area will not respond to user scrolling","sig":null,"attributes":[{"value":"/ Control the scrolling behavior","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117549,"byte_end":117583,"line_start":239,"line_end":239,"column_start":5,"column_end":39}},{"value":"/ If `true` (default), the scroll area will respond to user scrolling","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117588,"byte_end":117659,"line_start":240,"line_end":240,"column_start":5,"column_end":76}},{"value":"/ If `false`, the scroll area will not respond to user scrolling","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117664,"byte_end":117730,"line_start":241,"line_end":241,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117735,"byte_end":117738,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ This can be used, for example, to optionally freeze scrolling while the user","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117743,"byte_end":117823,"line_start":243,"line_end":243,"column_start":5,"column_end":85}},{"value":"/ is inputing text in a `TextEdit` widget contained within the scroll area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117828,"byte_end":117905,"line_start":244,"line_end":244,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117910,"byte_end":117913,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This controls both scrolling directions.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":117918,"byte_end":117962,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118361,"byte_end":118372,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"auto_shrink","qualname":"<ScrollArea>::auto_shrink","value":"pub fn auto_shrink(Self, [bool; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" For each axis, should the containing area shrink if the content is small?","sig":null,"attributes":[{"value":"/ For each axis, should the containing area shrink if the content is small?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118090,"byte_end":118167,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118172,"byte_end":118175,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ If true, egui will add blank space outside the scroll area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118180,"byte_end":118243,"line_start":254,"line_end":254,"column_start":5,"column_end":68}},{"value":"/ If false, egui will add blank space inside the scroll area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118248,"byte_end":118311,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118316,"byte_end":118319,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Default: `[true; 2]`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118324,"byte_end":118349,"line_start":257,"line_end":257,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":119119,"byte_end":119133,"line_start":273,"line_end":273,"column_start":12,"column_end":26},"name":"stick_to_right","qualname":"<ScrollArea>::stick_to_right","value":"pub fn stick_to_right(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The scroll handle will stick to the rightmost position even while the content size\n changes dynamically. This can be useful to simulate text scrollers coming in from right\n hand side. The scroll handle remains stuck until user manually changes position. Once \"unstuck\"\n it will remain focused on whatever content viewport the user left it on. If the scroll\n handle is dragged all the way to the right it will again become stuck and remain there\n until manually pulled from the end position.\n","sig":null,"attributes":[{"value":"/ The scroll handle will stick to the rightmost position even while the content size","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118578,"byte_end":118664,"line_start":267,"line_end":267,"column_start":5,"column_end":91}},{"value":"/ changes dynamically. This can be useful to simulate text scrollers coming in from right","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118669,"byte_end":118760,"line_start":268,"line_end":268,"column_start":5,"column_end":96}},{"value":"/ hand side. The scroll handle remains stuck until user manually changes position. Once \"unstuck\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118765,"byte_end":118864,"line_start":269,"line_end":269,"column_start":5,"column_end":104}},{"value":"/ it will remain focused on whatever content viewport the user left it on. If the scroll","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118869,"byte_end":118959,"line_start":270,"line_end":270,"column_start":5,"column_end":95}},{"value":"/ handle is dragged all the way to the right it will again become stuck and remain there","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":118964,"byte_end":119054,"line_start":271,"line_end":271,"column_start":5,"column_end":95}},{"value":"/ until manually pulled from the end position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":119059,"byte_end":119107,"line_start":272,"line_end":272,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":119731,"byte_end":119746,"line_start":284,"line_end":284,"column_start":12,"column_end":27},"name":"stick_to_bottom","qualname":"<ScrollArea>::stick_to_bottom","value":"pub fn stick_to_bottom(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The scroll handle will stick to the bottom position even while the content size\n changes dynamically. This can be useful to simulate terminal UIs or log/info scrollers.\n The scroll handle remains stuck until user manually changes position. Once \"unstuck\"\n it will remain focused on whatever content viewport the user left it on. If the scroll\n handle is dragged to the bottom it will again become stuck and remain there until manually\n pulled from the end position.\n","sig":null,"attributes":[{"value":"/ The scroll handle will stick to the bottom position even while the content size","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":119215,"byte_end":119298,"line_start":278,"line_end":278,"column_start":5,"column_end":88}},{"value":"/ changes dynamically. This can be useful to simulate terminal UIs or log/info scrollers.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":119303,"byte_end":119394,"line_start":279,"line_end":279,"column_start":5,"column_end":96}},{"value":"/ The scroll handle remains stuck until user manually changes position. Once \"unstuck\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":119399,"byte_end":119487,"line_start":280,"line_end":280,"column_start":5,"column_end":93}},{"value":"/ it will remain focused on whatever content viewport the user left it on. If the scroll","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":119492,"byte_end":119582,"line_start":281,"line_end":281,"column_start":5,"column_end":95}},{"value":"/ handle is dragged to the bottom it will again become stuck and remain there until manually","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":119587,"byte_end":119681,"line_start":282,"line_end":282,"column_start":5,"column_end":99}},{"value":"/ pulled from the end position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":119686,"byte_end":119719,"line_start":283,"line_end":283,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124336,"byte_end":124340,"line_start":420,"line_end":420,"column_start":12,"column_end":16},"name":"show","qualname":"<ScrollArea>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &mut Ui, impl FnOnce(&mut Ui) -> R)\n-> ScrollAreaOutput<R>","parent":null,"children":[],"decl_id":null,"docs":" Show the `ScrollArea`, and add the contents to the viewport.","sig":null,"attributes":[{"value":"/ Show the `ScrollArea`, and add the contents to the viewport.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124164,"byte_end":124228,"line_start":417,"line_end":417,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124233,"byte_end":124236,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ If the inner area can be very long, consider using [`Self::show_rows`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124241,"byte_end":124324,"line_start":419,"line_end":419,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":125217,"byte_end":125226,"line_start":444,"line_end":444,"column_start":12,"column_end":21},"name":"show_rows","qualname":"<ScrollArea>::show_rows","value":"pub fn show_rows<R,\n                 impl FnOnce(&mut Ui, std::ops::Range<usize>) -> R: FnOnce(&mut Ui,\n                                                                           std::ops::Range<usize>)\n                 ->\n                 R>(Self, &mut Ui, f32, usize,\n                    impl FnOnce(&mut Ui, std::ops::Range<usize>) -> R)\n-> ScrollAreaOutput<R>","parent":null,"children":[],"decl_id":null,"docs":" Efficiently show only the visible part of a large number of rows.","sig":null,"attributes":[{"value":"/ Efficiently show only the visible part of a large number of rows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124550,"byte_end":124619,"line_start":428,"line_end":428,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124624,"byte_end":124627,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124632,"byte_end":124639,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124644,"byte_end":124676,"line_start":431,"line_end":431,"column_start":5,"column_end":37}},{"value":"/ let text_style = egui::TextStyle::Body;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124681,"byte_end":124724,"line_start":432,"line_end":432,"column_start":5,"column_end":48}},{"value":"/ let row_height = ui.text_style_height(&text_style);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124729,"byte_end":124784,"line_start":433,"line_end":433,"column_start":5,"column_end":60}},{"value":"/ // let row_height = ui.spacing().interact_size.y; // if you are adding buttons instead of labels.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124789,"byte_end":124890,"line_start":434,"line_end":434,"column_start":5,"column_end":106}},{"value":"/ let total_rows = 10_000;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124895,"byte_end":124923,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/ egui::ScrollArea::vertical().show_rows(ui, row_height, total_rows, |ui, row_range| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":124928,"byte_end":125016,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/     for row in row_range {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":125021,"byte_end":125051,"line_start":437,"line_end":437,"column_start":5,"column_end":35}},{"value":"/         let text = format!(\"Row {}/{}\", row + 1, total_rows);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":125056,"byte_end":125121,"line_start":438,"line_end":438,"column_start":5,"column_end":70}},{"value":"/         ui.label(text);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":125126,"byte_end":125153,"line_start":439,"line_end":439,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":125158,"byte_end":125167,"line_start":440,"line_end":440,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":125172,"byte_end":125179,"line_start":441,"line_end":441,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":125184,"byte_end":125193,"line_start":442,"line_end":442,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":125198,"byte_end":125205,"line_start":443,"line_end":443,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":126802,"byte_end":126815,"line_start":479,"line_end":479,"column_start":12,"column_end":25},"name":"show_viewport","qualname":"<ScrollArea>::show_viewport","value":"pub fn show_viewport<R, impl FnOnce(&mut Ui, Rect) -> R: FnOnce(&mut Ui, Rect)\n                     -> R>(Self, &mut Ui, impl FnOnce(&mut Ui, Rect) -> R)\n-> ScrollAreaOutput<R>","parent":null,"children":[],"decl_id":null,"docs":" This can be used to only paint the visible part of the contents.","sig":null,"attributes":[{"value":"/ This can be used to only paint the visible part of the contents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":126520,"byte_end":126588,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":126593,"byte_end":126596,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ `add_contents` is past the viewport, which is the relative view of the content.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":126601,"byte_end":126684,"line_start":477,"line_end":477,"column_start":5,"column_end":88}},{"value":"/ So if the passed rect has min = zero, then show the top left content (the user has not scrolled).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":126689,"byte_end":126790,"line_start":478,"line_end":478,"column_start":5,"column_end":106}}]},{"kind":"Struct","id":{"krate":0,"index":521},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142664,"byte_end":142670,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Window","qualname":"::containers::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"decl_id":null,"docs":" Builder for a floating window which can be dragged, closed, collapsed, resized and scrolled (off by default).","sig":null,"attributes":[{"value":"/ Builder for a floating window which can be dragged, closed, collapsed, resized and scrolled (off by default).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142058,"byte_end":142171,"line_start":8,"line_end":8,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142172,"byte_end":142175,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ You can customize:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142176,"byte_end":142198,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/ * title","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142199,"byte_end":142210,"line_start":11,"line_end":11,"column_start":1,"column_end":12}},{"value":"/ * default, minimum, maximum and/or fixed size","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142211,"byte_end":142260,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/ * if the window has a scroll area (off by default)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142261,"byte_end":142315,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/ * if the window can be collapsed (minimized) to just the title bar (yes, by default)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142316,"byte_end":142404,"line_start":14,"line_end":14,"column_start":1,"column_end":89}},{"value":"/ * if there should be a close button (none by default)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142405,"byte_end":142462,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142463,"byte_end":142466,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142467,"byte_end":142474,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ctx(|ctx| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142475,"byte_end":142509,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ egui::Window::new(\"My Window\").show(ctx, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142510,"byte_end":142561,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"/    ui.label(\"Hello World!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142562,"byte_end":142594,"line_start":20,"line_end":20,"column_start":1,"column_end":33}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142595,"byte_end":142602,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142603,"byte_end":142612,"line_start":22,"line_end":22,"column_start":1,"column_end":10}},{"value":"must_use = \"You should call .show()\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142613,"byte_end":142652,"line_start":23,"line_end":23,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":143177,"byte_end":143180,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Window>::new","value":"pub fn new<impl Into<WidgetText>: Into<WidgetText>>(impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" The window title is used as a unique [`Id`] and must be unique, and should not change.\n This is true even if you disable the title bar with `.title_bar(false)`.\n If you need a changing title, you must call `window.id(…)` with a fixed id.\n","sig":null,"attributes":[{"value":"/ The window title is used as a unique [`Id`] and must be unique, and should not change.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142908,"byte_end":142998,"line_start":36,"line_end":36,"column_start":5,"column_end":95}},{"value":"/ This is true even if you disable the title bar with `.title_bar(false)`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":143003,"byte_end":143079,"line_start":37,"line_end":37,"column_start":5,"column_end":81}},{"value":"/ If you need a changing title, you must call `window.id(…)` with a fixed id.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":143084,"byte_end":143165,"line_start":38,"line_end":38,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":143878,"byte_end":143880,"line_start":58,"line_end":58,"column_start":12,"column_end":14},"name":"id","qualname":"<Window>::id","value":"pub fn id(Self, Id) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Assign a unique id to the Window. Required if the title changes, or is shared with another window.\n","sig":null,"attributes":[{"value":"/ Assign a unique id to the Window. Required if the title changes, or is shared with another window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":143764,"byte_end":143866,"line_start":57,"line_end":57,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144255,"byte_end":144259,"line_start":68,"line_end":68,"column_start":12,"column_end":16},"name":"open","qualname":"<Window>::open","value":"pub fn open(Self, &'open mut bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Call this to add a close-button to the window title bar.","sig":null,"attributes":[{"value":"/ Call this to add a close-button to the window title bar.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":143971,"byte_end":144031,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144036,"byte_end":144039,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ * If `*open == false`, the window will not be visible.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144044,"byte_end":144102,"line_start":65,"line_end":65,"column_start":5,"column_end":63}},{"value":"/ * If `*open == true`, the window will have a close button.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144107,"byte_end":144169,"line_start":66,"line_end":66,"column_start":5,"column_end":67}},{"value":"/ * If the close button is pressed, `*open` will be set to `false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144174,"byte_end":144243,"line_start":67,"line_end":67,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144436,"byte_end":144443,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Window>::enabled","value":"pub fn enabled(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If `false` the window will be grayed out and non-interactive.\n","sig":null,"attributes":[{"value":"/ If `false` the window will be grayed out and non-interactive.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144359,"byte_end":144424,"line_start":73,"line_end":73,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144700,"byte_end":144706,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"mutate","qualname":"<Window>::mutate","value":"pub fn mutate<impl Fn(&mut Self): Fn(&mut Self) ->\n              ()>(Self, impl Fn(&mut Self)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Usage: `Window::new(…).mutate(|w| w.resize = w.resize.auto_expand_width(true))`\n Not sure this is a good interface for this.\n","sig":null,"attributes":[{"value":"/ Usage: `Window::new(…).mutate(|w| w.resize = w.resize.auto_expand_width(true))`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144551,"byte_end":144636,"line_start":79,"line_end":79,"column_start":5,"column_end":88}},{"value":"/ Not sure this is a good interface for this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144641,"byte_end":144688,"line_start":80,"line_end":80,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144937,"byte_end":144943,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"resize","qualname":"<Window>::resize","value":"pub fn resize<impl Fn(Resize) -> Resize: Fn(Resize) ->\n              Resize>(Self, impl Fn(Resize) -> Resize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Usage: `Window::new(…).resize(|r| r.auto_expand_width(true))`\n Not sure this is a good interface for this.\n","sig":null,"attributes":[{"value":"/ Usage: `Window::new(…).resize(|r| r.auto_expand_width(true))`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144806,"byte_end":144873,"line_start":86,"line_end":86,"column_start":5,"column_end":70}},{"value":"/ Not sure this is a good interface for this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":144878,"byte_end":144925,"line_start":87,"line_end":87,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145124,"byte_end":145129,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"frame","qualname":"<Window>::frame","value":"pub fn frame(Self, Frame) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change the background color, margins, etc.\n","sig":null,"attributes":[{"value":"/ Change the background color, margins, etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145066,"byte_end":145112,"line_start":93,"line_end":93,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145270,"byte_end":145279,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"min_width","qualname":"<Window>::min_width","value":"pub fn min_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set minimum width of the window.\n","sig":null,"attributes":[{"value":"/ Set minimum width of the window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145222,"byte_end":145258,"line_start":99,"line_end":99,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145444,"byte_end":145454,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"min_height","qualname":"<Window>::min_height","value":"pub fn min_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set minimum height of the window.\n","sig":null,"attributes":[{"value":"/ Set minimum height of the window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145395,"byte_end":145432,"line_start":104,"line_end":104,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145710,"byte_end":145721,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"current_pos","qualname":"<Window>::current_pos","value":"pub fn current_pos<impl Into<Pos2>: Into<Pos2>>(Self, impl Into<Pos2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set current position of the window.\n If the window is movable it is up to you to keep track of where it moved to!\n","sig":null,"attributes":[{"value":"/ Set current position of the window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145574,"byte_end":145613,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/ If the window is movable it is up to you to keep track of where it moved to!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145618,"byte_end":145698,"line_start":111,"line_end":111,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145903,"byte_end":145914,"line_start":118,"line_end":118,"column_start":12,"column_end":23},"name":"default_pos","qualname":"<Window>::default_pos","value":"pub fn default_pos<impl Into<Pos2>: Into<Pos2>>(Self, impl Into<Pos2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set initial position of the window.\n","sig":null,"attributes":[{"value":"/ Set initial position of the window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":145852,"byte_end":145891,"line_start":117,"line_end":117,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146511,"byte_end":146517,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"anchor","qualname":"<Window>::anchor","value":"pub fn anchor<impl Into<Vec2>: Into<Vec2>>(Self, Align2, impl Into<Vec2>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set anchor and distance.","sig":null,"attributes":[{"value":"/ Set anchor and distance.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146045,"byte_end":146073,"line_start":123,"line_end":123,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146078,"byte_end":146081,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ An anchor of `Align2::RIGHT_TOP` means \"put the right-top corner of the window","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146086,"byte_end":146168,"line_start":125,"line_end":125,"column_start":5,"column_end":87}},{"value":"/ in the right-top corner of the screen\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146173,"byte_end":146216,"line_start":126,"line_end":126,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146221,"byte_end":146224,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The offset is added to the position, so e.g. an offset of `[-5.0, 5.0]`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146229,"byte_end":146304,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/ would move the window left and down from the given anchor.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146309,"byte_end":146371,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146376,"byte_end":146379,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Anchoring also makes the window immovable.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146384,"byte_end":146430,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146435,"byte_end":146438,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ It is an error to set both an anchor and a position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146443,"byte_end":146499,"line_start":133,"line_end":133,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146702,"byte_end":146714,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"default_size","qualname":"<Window>::default_size","value":"pub fn default_size<impl Into<Vec2>: Into<Vec2>>(Self, impl Into<Vec2>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set initial size of the window.\n","sig":null,"attributes":[{"value":"/ Set initial size of the window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146655,"byte_end":146690,"line_start":139,"line_end":139,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146900,"byte_end":146913,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"default_width","qualname":"<Window>::default_width","value":"pub fn default_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set initial width of the window.\n","sig":null,"attributes":[{"value":"/ Set initial width of the window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":146852,"byte_end":146888,"line_start":145,"line_end":145,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":147090,"byte_end":147104,"line_start":151,"line_end":151,"column_start":12,"column_end":26},"name":"default_height","qualname":"<Window>::default_height","value":"pub fn default_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set initial height of the window.\n","sig":null,"attributes":[{"value":"/ Set initial height of the window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":147041,"byte_end":147078,"line_start":150,"line_end":150,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":147296,"byte_end":147308,"line_start":157,"line_end":157,"column_start":12,"column_end":24},"name":"default_rect","qualname":"<Window>::default_rect","value":"pub fn default_rect(Self, Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set initial position and size of the window.\n","sig":null,"attributes":[{"value":"/ Set initial position and size of the window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":147236,"byte_end":147284,"line_start":156,"line_end":156,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":147492,"byte_end":147501,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"fixed_pos","qualname":"<Window>::fixed_pos","value":"pub fn fixed_pos<impl Into<Pos2>: Into<Pos2>>(Self, impl Into<Pos2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the window position and prevents it from being dragged around.\n","sig":null,"attributes":[{"value":"/ Sets the window position and prevents it from being dragged around.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":147409,"byte_end":147480,"line_start":161,"line_end":161,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":147708,"byte_end":147718,"line_start":168,"line_end":168,"column_start":12,"column_end":22},"name":"fixed_size","qualname":"<Window>::fixed_size","value":"pub fn fixed_size<impl Into<Vec2>: Into<Vec2>>(Self, impl Into<Vec2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the window size and prevents it from being resized by dragging its edges.\n","sig":null,"attributes":[{"value":"/ Sets the window size and prevents it from being resized by dragging its edges.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":147614,"byte_end":147696,"line_start":167,"line_end":167,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":147950,"byte_end":147960,"line_start":174,"line_end":174,"column_start":12,"column_end":22},"name":"fixed_rect","qualname":"<Window>::fixed_rect","value":"pub fn fixed_rect(Self, Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the window pos and size and prevents it from being moved and resized by dragging its edges.\n","sig":null,"attributes":[{"value":"/ Sets the window pos and size and prevents it from being moved and resized by dragging its edges.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":147838,"byte_end":147938,"line_start":173,"line_end":173,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148210,"byte_end":148219,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"resizable","qualname":"<Window>::resizable","value":"pub fn resizable(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Can the user resize the window by dragging its edges?\n Note that even if you set this to `false` the window may still auto-resize.\n","sig":null,"attributes":[{"value":"/ Can the user resize the window by dragging its edges?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148057,"byte_end":148114,"line_start":178,"line_end":178,"column_start":5,"column_end":62}},{"value":"/ Note that even if you set this to `false` the window may still auto-resize.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148119,"byte_end":148198,"line_start":179,"line_end":179,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148406,"byte_end":148417,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"collapsible","qualname":"<Window>::collapsible","value":"pub fn collapsible(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Can the window be collapsed by clicking on its title?\n","sig":null,"attributes":[{"value":"/ Can the window be collapsed by clicking on its title?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148337,"byte_end":148394,"line_start":185,"line_end":185,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148653,"byte_end":148662,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"title_bar","qualname":"<Window>::title_bar","value":"pub fn title_bar(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show title bar on top of the window?\n If `false`, the window will not be collapsible nor have a close-button.\n","sig":null,"attributes":[{"value":"/ Show title bar on top of the window?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148521,"byte_end":148561,"line_start":191,"line_end":191,"column_start":5,"column_end":45}},{"value":"/ If `false`, the window will not be collapsible nor have a close-button.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148566,"byte_end":148641,"line_start":192,"line_end":192,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148941,"byte_end":148951,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"auto_sized","qualname":"<Window>::auto_sized","value":"pub fn auto_sized(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Not resizable, just takes the size of its contents.\n Also disabled scrolling.\n Text will not wrap, but will instead make your window width expand.\n","sig":null,"attributes":[{"value":"/ Not resizable, just takes the size of its contents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148765,"byte_end":148820,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/ Also disabled scrolling.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148825,"byte_end":148853,"line_start":199,"line_end":199,"column_start":5,"column_end":33}},{"value":"/ Text will not wrap, but will instead make your window width expand.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":148858,"byte_end":148929,"line_start":200,"line_end":200,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149170,"byte_end":149177,"line_start":208,"line_end":208,"column_start":12,"column_end":19},"name":"scroll2","qualname":"<Window>::scroll2","value":"pub fn scroll2(Self, [bool; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable/disable horizontal/vertical scrolling. `false` by default.\n","sig":null,"attributes":[{"value":"/ Enable/disable horizontal/vertical scrolling. `false` by default.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149089,"byte_end":149158,"line_start":207,"line_end":207,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149364,"byte_end":149371,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"hscroll","qualname":"<Window>::hscroll","value":"pub fn hscroll(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable/disable horizontal scrolling. `false` by default.\n","sig":null,"attributes":[{"value":"/ Enable/disable horizontal scrolling. `false` by default.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149292,"byte_end":149352,"line_start":213,"line_end":213,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149553,"byte_end":149560,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"vscroll","qualname":"<Window>::vscroll","value":"pub fn vscroll(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enable/disable vertical scrolling. `false` by default.\n","sig":null,"attributes":[{"value":"/ Enable/disable vertical scrolling. `false` by default.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149483,"byte_end":149541,"line_start":219,"line_end":219,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149745,"byte_end":149756,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"drag_bounds","qualname":"<Window>::drag_bounds","value":"pub fn drag_bounds(Self, Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constrain the area up to which the window can be dragged.\n","sig":null,"attributes":[{"value":"/ Constrain the area up to which the window can be dragged.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149672,"byte_end":149733,"line_start":225,"line_end":225,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":150100,"byte_end":150104,"line_start":236,"line_end":236,"column_start":12,"column_end":16},"name":"show","qualname":"<Window>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &Context, impl FnOnce(&mut Ui) -> R)\n-> Option<InnerResponse<Option<R>>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `None` if the window is not open (if [`Window::open`] was called with `&mut false`).\n Returns `Some(InnerResponse { inner: None })` if the window is collapsed.\n","sig":null,"attributes":[{"value":"/ Returns `None` if the window is not open (if [`Window::open`] was called with `&mut false`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149896,"byte_end":149992,"line_start":233,"line_end":233,"column_start":5,"column_end":101}},{"value":"/ Returns `Some(InnerResponse { inner: None })` if the window is collapsed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149997,"byte_end":150074,"line_start":234,"line_end":234,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":150079,"byte_end":150088,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4782},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179455,"byte_end":179462,"line_start":145,"line_end":145,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"","parent":null,"children":[],"decl_id":null,"docs":" Your handle to egui.","sig":null,"attributes":[{"value":"/ Your handle to egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178170,"byte_end":178194,"line_start":108,"line_end":108,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178195,"byte_end":178198,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ This is the first thing you need when working with egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178199,"byte_end":178259,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"/ Contains the [`InputState`], [`Memory`], [`PlatformOutput`], and more.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178260,"byte_end":178334,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178335,"byte_end":178338,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ [`Context`] is cheap to clone, and any clones refers to the same mutable data","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178339,"byte_end":178420,"line_start":113,"line_end":113,"column_start":1,"column_end":82}},{"value":"/ ([`Context`] uses refcounting internally).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178421,"byte_end":178467,"line_start":114,"line_end":114,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178468,"byte_end":178471,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ All methods are marked `&self`; `Context` has interior mutability (protected by a mutex).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178472,"byte_end":178565,"line_start":116,"line_end":116,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178566,"byte_end":178569,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178570,"byte_end":178573,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ You can store","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178574,"byte_end":178591,"line_start":119,"line_end":119,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178592,"byte_end":178595,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178596,"byte_end":178610,"line_start":121,"line_end":121,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178611,"byte_end":178614,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ ``` no_run","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178615,"byte_end":178629,"line_start":123,"line_end":123,"column_start":1,"column_end":15}},{"value":"/ # fn handle_platform_output(_: egui::PlatformOutput) {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178630,"byte_end":178689,"line_start":124,"line_end":124,"column_start":1,"column_end":60}},{"value":"/ # fn paint(textures_detla: egui::TexturesDelta, _: Vec<egui::ClippedMesh>) {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178690,"byte_end":178771,"line_start":125,"line_end":125,"column_start":1,"column_end":82}},{"value":"/ let mut ctx = egui::Context::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178772,"byte_end":178815,"line_start":126,"line_end":126,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178816,"byte_end":178819,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ // Game loop:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178820,"byte_end":178837,"line_start":128,"line_end":128,"column_start":1,"column_end":18}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178838,"byte_end":178848,"line_start":129,"line_end":129,"column_start":1,"column_end":11}},{"value":"/     let raw_input = egui::RawInput::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178849,"byte_end":178899,"line_start":130,"line_end":130,"column_start":1,"column_end":51}},{"value":"/     let full_output = ctx.run(raw_input, |ctx| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178900,"byte_end":178952,"line_start":131,"line_end":131,"column_start":1,"column_end":53}},{"value":"/         egui::CentralPanel::default().show(&ctx, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":178953,"byte_end":179012,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"/             ui.label(\"Hello world!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179013,"byte_end":179054,"line_start":133,"line_end":133,"column_start":1,"column_end":42}},{"value":"/             if ui.button(\"Click me\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179055,"byte_end":179107,"line_start":134,"line_end":134,"column_start":1,"column_end":53}},{"value":"/                 // take some action here","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179108,"byte_end":179152,"line_start":135,"line_end":135,"column_start":1,"column_end":45}},{"value":"/             }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179153,"byte_end":179170,"line_start":136,"line_end":136,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179171,"byte_end":179186,"line_start":137,"line_end":137,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179187,"byte_end":179198,"line_start":138,"line_end":138,"column_start":1,"column_end":12}},{"value":"/     handle_platform_output(full_output.platform_output);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179199,"byte_end":179259,"line_start":139,"line_end":139,"column_start":1,"column_end":61}},{"value":"/     let clipped_meshes = ctx.tessellate(full_output.shapes); // create triangles to paint","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179260,"byte_end":179353,"line_start":140,"line_end":140,"column_start":1,"column_end":94}},{"value":"/     paint(full_output.textures_delta, clipped_meshes);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179354,"byte_end":179412,"line_start":141,"line_end":141,"column_start":1,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179413,"byte_end":179418,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179419,"byte_end":179426,"line_start":143,"line_end":143,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181046,"byte_end":181049,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"run","qualname":"<Context>::run","value":"pub fn run<impl FnOnce(&Context): FnOnce(&Context) ->\n           ()>(&Self, RawInput, impl FnOnce(&Context)) -> FullOutput","parent":null,"children":[],"decl_id":null,"docs":" Run the ui code for one frame.","sig":null,"attributes":[{"value":"/ Run the ui code for one frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180149,"byte_end":180183,"line_start":173,"line_end":173,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180188,"byte_end":180191,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Put your widgets into a [`SidePanel`], [`TopBottomPanel`], [`CentralPanel`], [`Window`] or [`Area`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180196,"byte_end":180300,"line_start":175,"line_end":175,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180305,"byte_end":180308,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This will modify the internal reference to point to a new generation of [`Context`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180313,"byte_end":180401,"line_start":177,"line_end":177,"column_start":5,"column_end":93}},{"value":"/ Any old clones of this [`Context`] will refer to the old [`Context`], which will not get new input.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180406,"byte_end":180509,"line_start":178,"line_end":178,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180514,"byte_end":180517,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ You can alternatively run [`Self::begin_frame`] and [`Context::end_frame`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180522,"byte_end":180601,"line_start":180,"line_end":180,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180606,"byte_end":180609,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180614,"byte_end":180621,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ // One egui context that you keep reusing:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180626,"byte_end":180672,"line_start":183,"line_end":183,"column_start":5,"column_end":51}},{"value":"/ let mut ctx = egui::Context::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180677,"byte_end":180720,"line_start":184,"line_end":184,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180725,"byte_end":180728,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ // Each frame:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180733,"byte_end":180751,"line_start":186,"line_end":186,"column_start":5,"column_end":23}},{"value":"/ let input = egui::RawInput::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180756,"byte_end":180798,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ let full_output = ctx.run(input, |ctx| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180803,"byte_end":180847,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/     egui::CentralPanel::default().show(&ctx, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180852,"byte_end":180907,"line_start":189,"line_end":189,"column_start":5,"column_end":60}},{"value":"/         ui.label(\"Hello egui!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180912,"byte_end":180948,"line_start":190,"line_end":190,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180953,"byte_end":180964,"line_start":191,"line_end":191,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180969,"byte_end":180976,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ // handle full_output","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":180981,"byte_end":181006,"line_start":193,"line_end":193,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181011,"byte_end":181018,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181023,"byte_end":181034,"line_start":195,"line_end":195,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181711,"byte_end":181722,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"begin_frame","qualname":"<Context>::begin_frame","value":"pub fn begin_frame(&Self, RawInput)","parent":null,"children":[],"decl_id":null,"docs":" An alternative to calling [`Self::run`].","sig":null,"attributes":[{"value":"/ An alternative to calling [`Self::run`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181220,"byte_end":181264,"line_start":202,"line_end":202,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181269,"byte_end":181272,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181277,"byte_end":181284,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ // One egui context that you keep reusing:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181289,"byte_end":181335,"line_start":205,"line_end":205,"column_start":5,"column_end":51}},{"value":"/ let mut ctx = egui::Context::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181340,"byte_end":181383,"line_start":206,"line_end":206,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181388,"byte_end":181391,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ // Each frame:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181396,"byte_end":181414,"line_start":208,"line_end":208,"column_start":5,"column_end":23}},{"value":"/ let input = egui::RawInput::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181419,"byte_end":181461,"line_start":209,"line_end":209,"column_start":5,"column_end":47}},{"value":"/ ctx.begin_frame(input);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181466,"byte_end":181493,"line_start":210,"line_end":210,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181498,"byte_end":181501,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ egui::CentralPanel::default().show(&ctx, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181506,"byte_end":181557,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/     ui.label(\"Hello egui!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181562,"byte_end":181594,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181599,"byte_end":181606,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181611,"byte_end":181614,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ let full_output = ctx.end_frame();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181619,"byte_end":181657,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ // handle full_output","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181662,"byte_end":181687,"line_start":217,"line_end":217,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":181692,"byte_end":181699,"line_start":218,"line_end":218,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190099,"byte_end":190112,"line_start":422,"line_end":422,"column_start":12,"column_end":25},"name":"layer_painter","qualname":"<Context>::layer_painter","value":"pub fn layer_painter(&Self, LayerId) -> Painter","parent":null,"children":[],"decl_id":null,"docs":" Get a full-screen painter for a new or existing layer\n","sig":null,"attributes":[{"value":"/ Get a full-screen painter for a new or existing layer","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190030,"byte_end":190087,"line_start":421,"line_end":421,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190322,"byte_end":190335,"line_start":428,"line_end":428,"column_start":12,"column_end":25},"name":"debug_painter","qualname":"<Context>::debug_painter","value":"pub fn debug_painter(&Self) -> Painter","parent":null,"children":[],"decl_id":null,"docs":" Paint on top of everything else\n","sig":null,"attributes":[{"value":"/ Paint on top of everything else","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190275,"byte_end":190310,"line_start":427,"line_end":427,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190666,"byte_end":190680,"line_start":435,"line_end":435,"column_start":12,"column_end":26},"name":"available_rect","qualname":"<Context>::available_rect","value":"pub fn available_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" How much space is still available after panels has been added.\n This is the \"background\" area, what egui doesn't cover with panels (but may cover with windows).\n This is also the area to which windows are constrained.\n","sig":null,"attributes":[{"value":"/ How much space is still available after panels has been added.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190419,"byte_end":190485,"line_start":432,"line_end":432,"column_start":5,"column_end":71}},{"value":"/ This is the \"background\" area, what egui doesn't cover with panels (but may cover with windows).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190490,"byte_end":190590,"line_start":433,"line_end":433,"column_start":5,"column_end":105}},{"value":"/ This is also the area to which windows are constrained.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190595,"byte_end":190654,"line_start":434,"line_end":434,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190929,"byte_end":190935,"line_start":446,"line_end":446,"column_start":12,"column_end":18},"name":"memory","qualname":"<Context>::memory","value":"pub fn memory(&Self) -> RwLockWriteGuard<, Memory>","parent":null,"children":[],"decl_id":null,"docs":" Stores all the egui state.","sig":null,"attributes":[{"value":"/ Stores all the egui state.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190806,"byte_end":190836,"line_start":442,"line_end":442,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190841,"byte_end":190844,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ If you want to store/restore egui, serialize this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190849,"byte_end":190903,"line_start":444,"line_end":444,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190908,"byte_end":190917,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191113,"byte_end":191117,"line_start":452,"line_end":452,"column_start":12,"column_end":16},"name":"data","qualname":"<Context>::data","value":"pub fn data(&Self) -> RwLockWriteGuard<, crate::util::IdTypeMap>","parent":null,"children":[],"decl_id":null,"docs":" Stores superficial widget state.\n","sig":null,"attributes":[{"value":"/ Stores superficial widget state.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191051,"byte_end":191087,"line_start":450,"line_end":450,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191092,"byte_end":191101,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191619,"byte_end":191625,"line_start":468,"line_end":468,"column_start":12,"column_end":18},"name":"output","qualname":"<Context>::output","value":"pub fn output(&Self) -> RwLockWriteGuard<, PlatformOutput>","parent":null,"children":[],"decl_id":null,"docs":" What egui outputs each frame.","sig":null,"attributes":[{"value":"/ What egui outputs each frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191415,"byte_end":191448,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191453,"byte_end":191456,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191461,"byte_end":191468,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/ # let mut ctx = egui::Context::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191473,"byte_end":191518,"line_start":464,"line_end":464,"column_start":5,"column_end":50}},{"value":"/ ctx.output().cursor_icon = egui::CursorIcon::Progress;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191523,"byte_end":191581,"line_start":465,"line_end":465,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191586,"byte_end":191593,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191598,"byte_end":191607,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192526,"byte_end":192531,"line_start":497,"line_end":497,"column_start":12,"column_end":17},"name":"input","qualname":"<Context>::input","value":"pub fn input(&Self) -> RwLockReadGuard<, InputState>","parent":null,"children":[],"decl_id":null,"docs":" Access the [`InputState`].","sig":null,"attributes":[{"value":"/ Access the [`InputState`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191913,"byte_end":191943,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191948,"byte_end":191951,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ Note that this locks the [`Context`], so be careful with if-let bindings:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":191956,"byte_end":192033,"line_start":479,"line_end":479,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192038,"byte_end":192041,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192046,"byte_end":192053,"line_start":481,"line_end":481,"column_start":5,"column_end":12}},{"value":"/ # let mut ctx = egui::Context::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192058,"byte_end":192103,"line_start":482,"line_end":482,"column_start":5,"column_end":50}},{"value":"/ if let Some(pos) = ctx.input().pointer.hover_pos() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192108,"byte_end":192164,"line_start":483,"line_end":483,"column_start":5,"column_end":61}},{"value":"/     // ⚠️ Using `ctx` again here will lead to a dead-lock!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192169,"byte_end":192235,"line_start":484,"line_end":484,"column_start":5,"column_end":67}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192240,"byte_end":192245,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192250,"byte_end":192253,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ if let Some(pos) = { ctx.input().pointer.hover_pos() } {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192258,"byte_end":192318,"line_start":487,"line_end":487,"column_start":5,"column_end":65}},{"value":"/     // This is fine!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192323,"byte_end":192347,"line_start":488,"line_end":488,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192352,"byte_end":192357,"line_start":489,"line_end":489,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192362,"byte_end":192365,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let pos = ctx.input().pointer.hover_pos();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192370,"byte_end":192416,"line_start":491,"line_end":491,"column_start":5,"column_end":51}},{"value":"/ if let Some(pos) = pos {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192421,"byte_end":192449,"line_start":492,"line_end":492,"column_start":5,"column_end":33}},{"value":"/     // This is fine!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192454,"byte_end":192478,"line_start":493,"line_end":493,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192483,"byte_end":192488,"line_start":494,"line_end":494,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192493,"byte_end":192500,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192505,"byte_end":192514,"line_start":496,"line_end":496,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192664,"byte_end":192673,"line_start":502,"line_end":502,"column_start":12,"column_end":21},"name":"input_mut","qualname":"<Context>::input_mut","value":"pub fn input_mut(&Self) -> RwLockWriteGuard<, InputState>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192643,"byte_end":192652,"line_start":501,"line_end":501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192956,"byte_end":192961,"line_start":509,"line_end":509,"column_start":12,"column_end":17},"name":"fonts","qualname":"<Context>::fonts","value":"pub fn fonts(&Self) -> RwLockReadGuard<, Fonts>","parent":null,"children":[],"decl_id":null,"docs":" Not valid until first call to [`Context::run()`].\n That's because since we don't know the proper `pixels_per_point` until then.\n","sig":null,"attributes":[{"value":"/ Not valid until first call to [`Context::run()`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192792,"byte_end":192845,"line_start":506,"line_end":506,"column_start":5,"column_end":58}},{"value":"/ That's because since we don't know the proper `pixels_per_point` until then.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192850,"byte_end":192930,"line_start":507,"line_end":507,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":192935,"byte_end":192944,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":193367,"byte_end":193374,"line_start":523,"line_end":523,"column_start":12,"column_end":19},"name":"options","qualname":"<Context>::options","value":"pub fn options(&Self) -> RwLockWriteGuard<, Options>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":193346,"byte_end":193355,"line_start":522,"line_end":522,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":193572,"byte_end":193592,"line_start":529,"line_end":529,"column_start":12,"column_end":32},"name":"tessellation_options","qualname":"<Context>::tessellation_options","value":"pub fn tessellation_options(&Self) -> RwLockWriteGuard<, TessellationOptions>","parent":null,"children":[],"decl_id":null,"docs":" Change the options used by the tessellator.\n","sig":null,"attributes":[{"value":"/ Change the options used by the tessellator.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":193499,"byte_end":193546,"line_start":527,"line_end":527,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":193551,"byte_end":193560,"line_start":528,"line_end":528,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":194042,"byte_end":194057,"line_start":538,"line_end":538,"column_start":12,"column_end":27},"name":"request_repaint","qualname":"<Context>::request_repaint","value":"pub fn request_repaint(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Call this if there is need to repaint the UI, i.e. if you are showing an animation.\n If this is called at least once in a frame, then there will be another frame right after this.\n Call as many times as you wish, only one repaint will be issued.\n","sig":null,"attributes":[{"value":"/ Call this if there is need to repaint the UI, i.e. if you are showing an animation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":193767,"byte_end":193854,"line_start":535,"line_end":535,"column_start":5,"column_end":92}},{"value":"/ If this is called at least once in a frame, then there will be another frame right after this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":193859,"byte_end":193957,"line_start":536,"line_end":536,"column_start":5,"column_end":103}},{"value":"/ Call as many times as you wish, only one repaint will be issued.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":193962,"byte_end":194030,"line_start":537,"line_end":537,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":194518,"byte_end":194527,"line_start":549,"line_end":549,"column_start":12,"column_end":21},"name":"set_fonts","qualname":"<Context>::set_fonts","value":"pub fn set_fonts(&Self, FontDefinitions)","parent":null,"children":[],"decl_id":null,"docs":" Tell `egui` which fonts to use.","sig":null,"attributes":[{"value":"/ Tell `egui` which fonts to use.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":194211,"byte_end":194246,"line_start":543,"line_end":543,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":194251,"byte_end":194254,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ The default `egui` fonts only support latin and cyrillic alphabets,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":194259,"byte_end":194330,"line_start":545,"line_end":545,"column_start":5,"column_end":76}},{"value":"/ but you can call this to install additional fonts that support e.g. korean characters.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":194335,"byte_end":194425,"line_start":546,"line_end":546,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":194430,"byte_end":194433,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ The new fonts will become active at the start of the next frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":194438,"byte_end":194506,"line_start":548,"line_end":548,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195051,"byte_end":195056,"line_start":561,"line_end":561,"column_start":12,"column_end":17},"name":"style","qualname":"<Context>::style","value":"pub fn style(&Self) -> Arc<Style>","parent":null,"children":[],"decl_id":null,"docs":" The [`Style`] used by all subsequent windows, panels etc.\n","sig":null,"attributes":[{"value":"/ The [`Style`] used by all subsequent windows, panels etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":194978,"byte_end":195039,"line_start":560,"line_end":560,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195536,"byte_end":195545,"line_start":576,"line_end":576,"column_start":12,"column_end":21},"name":"set_style","qualname":"<Context>::set_style","value":"pub fn set_style<impl Into<Arc<Style>>: Into<Arc<Style>>>(&Self,\n                                                          impl Into<Arc<Style>>)","parent":null,"children":[],"decl_id":null,"docs":" The [`Style`] used by all new windows, panels etc.","sig":null,"attributes":[{"value":"/ The [`Style`] used by all new windows, panels etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195128,"byte_end":195182,"line_start":565,"line_end":565,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195187,"byte_end":195190,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ You can also use [`Ui::style_mut`] to change the style of a single [`Ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195195,"byte_end":195273,"line_start":567,"line_end":567,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195278,"byte_end":195281,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195286,"byte_end":195298,"line_start":569,"line_end":569,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195303,"byte_end":195310,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/ # let mut ctx = egui::Context::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195315,"byte_end":195360,"line_start":571,"line_end":571,"column_start":5,"column_end":50}},{"value":"/ let mut style: egui::Style = (*ctx.style()).clone();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195365,"byte_end":195421,"line_start":572,"line_end":572,"column_start":5,"column_end":61}},{"value":"/ style.spacing.item_spacing = egui::vec2(10.0, 20.0);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195426,"byte_end":195482,"line_start":573,"line_end":573,"column_start":5,"column_end":61}},{"value":"/ ctx.set_style(style);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195487,"byte_end":195512,"line_start":574,"line_end":574,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195517,"byte_end":195524,"line_start":575,"line_end":575,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195983,"byte_end":195994,"line_start":589,"line_end":589,"column_start":12,"column_end":23},"name":"set_visuals","qualname":"<Context>::set_visuals","value":"pub fn set_visuals(&Self, crate::Visuals)","parent":null,"children":[],"decl_id":null,"docs":" The [`Visuals`] used by all subsequent windows, panels etc.","sig":null,"attributes":[{"value":"/ The [`Visuals`] used by all subsequent windows, panels etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195641,"byte_end":195704,"line_start":580,"line_end":580,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195709,"byte_end":195712,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ You can also use [`Ui::visuals_mut`] to change the visuals of a single [`Ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195717,"byte_end":195799,"line_start":582,"line_end":582,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195804,"byte_end":195807,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195812,"byte_end":195824,"line_start":584,"line_end":584,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195829,"byte_end":195836,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/ # let mut ctx = egui::Context::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195841,"byte_end":195886,"line_start":586,"line_end":586,"column_start":5,"column_end":50}},{"value":"/ ctx.set_visuals(egui::Visuals::light()); // Switch to light mode","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195891,"byte_end":195959,"line_start":587,"line_end":587,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":195964,"byte_end":195971,"line_start":588,"line_end":588,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":196210,"byte_end":196226,"line_start":595,"line_end":595,"column_start":12,"column_end":28},"name":"pixels_per_point","qualname":"<Context>::pixels_per_point","value":"pub fn pixels_per_point(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The number of physical pixels for each logical point.\n","sig":null,"attributes":[{"value":"/ The number of physical pixels for each logical point.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":196119,"byte_end":196176,"line_start":593,"line_end":593,"column_start":5,"column_end":62}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":196181,"byte_end":196198,"line_start":594,"line_end":594,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":196638,"byte_end":196658,"line_start":604,"line_end":604,"column_start":12,"column_end":32},"name":"set_pixels_per_point","qualname":"<Context>::set_pixels_per_point","value":"pub fn set_pixels_per_point(&Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set the number of physical pixels for each logical point.\n Will become active at the start of the next frame.","sig":null,"attributes":[{"value":"/ Set the number of physical pixels for each logical point.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":196294,"byte_end":196355,"line_start":599,"line_end":599,"column_start":5,"column_end":66}},{"value":"/ Will become active at the start of the next frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":196360,"byte_end":196414,"line_start":600,"line_end":600,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":196419,"byte_end":196422,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ Note that this may be overwritten by input from the integration via [`RawInput::pixels_per_point`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":196427,"byte_end":196530,"line_start":602,"line_end":602,"column_start":5,"column_end":108}},{"value":"/ For instance, when using `egui_web` the browsers native zoom level will always be used.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":196535,"byte_end":196626,"line_start":603,"line_end":603,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198837,"byte_end":198849,"line_start":665,"line_end":665,"column_start":12,"column_end":24},"name":"load_texture","qualname":"<Context>::load_texture","value":"pub fn load_texture<impl Into<String>: Into<String>,\n                    impl Into<ImageData>: Into<ImageData>>(&Self,\n                                                           impl Into<String>,\n                                                           impl Into<ImageData>)\n-> TextureHandle","parent":null,"children":[],"decl_id":null,"docs":" Allocate a texture.","sig":null,"attributes":[{"value":"/ Allocate a texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":197723,"byte_end":197746,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":197751,"byte_end":197754,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ In order to display an image you must convert it to a texture using this function.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":197759,"byte_end":197845,"line_start":638,"line_end":638,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":197850,"byte_end":197853,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ Make sure to only call this once for each image, i.e. NOT in your main GUI code.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":197858,"byte_end":197942,"line_start":640,"line_end":640,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":197947,"byte_end":197950,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ The given name can be useful for later debugging, and will be visible if you call [`Self::texture_ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":197955,"byte_end":198062,"line_start":642,"line_end":642,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198067,"byte_end":198070,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ For how to load an image, see [`ImageData`] and [`ColorImage::from_rgba_unmultiplied`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198075,"byte_end":198166,"line_start":644,"line_end":644,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198171,"byte_end":198174,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198179,"byte_end":198186,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"/ struct MyImage {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198191,"byte_end":198211,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     texture: Option<egui::TextureHandle>,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198216,"byte_end":198261,"line_start":648,"line_end":648,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198266,"byte_end":198271,"line_start":649,"line_end":649,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198276,"byte_end":198279,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ impl MyImage {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198284,"byte_end":198302,"line_start":651,"line_end":651,"column_start":5,"column_end":23}},{"value":"/     fn ui(&mut self, ui: &mut egui::Ui) {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198307,"byte_end":198352,"line_start":652,"line_end":652,"column_start":5,"column_end":50}},{"value":"/         let texture: &egui::TextureHandle = self.texture.get_or_insert_with(|| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198357,"byte_end":198441,"line_start":653,"line_end":653,"column_start":5,"column_end":89}},{"value":"/             // Load the texture only once.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198446,"byte_end":198492,"line_start":654,"line_end":654,"column_start":5,"column_end":51}},{"value":"/             ui.ctx().load_texture(\"my-image\", egui::ColorImage::example())","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198497,"byte_end":198575,"line_start":655,"line_end":655,"column_start":5,"column_end":83}},{"value":"/         });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198580,"byte_end":198595,"line_start":656,"line_end":656,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198600,"byte_end":198603,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/         // Show the image:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198608,"byte_end":198638,"line_start":658,"line_end":658,"column_start":5,"column_end":35}},{"value":"/         ui.image(texture, texture.size_vec2());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198643,"byte_end":198694,"line_start":659,"line_end":659,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198699,"byte_end":198708,"line_start":660,"line_end":660,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198713,"byte_end":198718,"line_start":661,"line_end":661,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198723,"byte_end":198730,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198735,"byte_end":198738,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ Se also [`crate::ImageData`], [`crate::Ui::image`] and [`crate::ImageButton`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":198743,"byte_end":198825,"line_start":664,"line_end":664,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":199359,"byte_end":199370,"line_start":680,"line_end":680,"column_start":12,"column_end":23},"name":"tex_manager","qualname":"<Context>::tex_manager","value":"pub fn tex_manager(&Self) -> Arc<RwLock<epaint::textures::TextureManager>>","parent":null,"children":[],"decl_id":null,"docs":" Low-level texture manager.","sig":null,"attributes":[{"value":"/ Low-level texture manager.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":199132,"byte_end":199162,"line_start":675,"line_end":675,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":199167,"byte_end":199170,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ In general it is easier to use [`Self::load_texture`] and [`TextureHandle`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":199175,"byte_end":199255,"line_start":677,"line_end":677,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":199260,"byte_end":199263,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ You can show stats about the allocated textures using [`Self::texture_ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":199268,"byte_end":199347,"line_start":679,"line_end":679,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":201203,"byte_end":201212,"line_start":724,"line_end":724,"column_start":12,"column_end":21},"name":"end_frame","qualname":"<Context>::end_frame","value":"pub fn end_frame(&Self) -> FullOutput","parent":null,"children":[],"decl_id":null,"docs":" Call at the end of each frame.\n","sig":null,"attributes":[{"value":"/ Call at the end of each frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":201141,"byte_end":201175,"line_start":722,"line_end":722,"column_start":5,"column_end":39}},{"value":"must_use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":201180,"byte_end":201191,"line_start":723,"line_end":723,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":202698,"byte_end":202708,"line_start":776,"line_end":776,"column_start":12,"column_end":22},"name":"tessellate","qualname":"<Context>::tessellate","value":"pub fn tessellate(&Self, Vec<ClippedShape>) -> Vec<ClippedMesh>","parent":null,"children":[],"decl_id":null,"docs":" Tessellate the given shapes into triangle meshes.\n","sig":null,"attributes":[{"value":"/ Tessellate the given shapes into triangle meshes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":202633,"byte_end":202686,"line_start":775,"line_end":775,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":203718,"byte_end":203727,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"used_rect","qualname":"<Context>::used_rect","value":"pub fn used_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" How much space is used by panels and windows.\n","sig":null,"attributes":[{"value":"/ How much space is used by panels and windows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":203657,"byte_end":203706,"line_start":796,"line_end":796,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":204092,"byte_end":204101,"line_start":807,"line_end":807,"column_start":12,"column_end":21},"name":"used_size","qualname":"<Context>::used_size","value":"pub fn used_size(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" How much space is used by panels and windows.\n You can shrink your egui area to this size and still fit all egui components.\n","sig":null,"attributes":[{"value":"/ How much space is used by panels and windows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":203945,"byte_end":203994,"line_start":805,"line_end":805,"column_start":5,"column_end":54}},{"value":"/ You can shrink your egui area to this size and still fit all egui components.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":203999,"byte_end":204080,"line_start":806,"line_end":806,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":204323,"byte_end":204343,"line_start":814,"line_end":814,"column_start":12,"column_end":32},"name":"is_pointer_over_area","qualname":"<Context>::is_pointer_over_area","value":"pub fn is_pointer_over_area(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the pointer (mouse/touch) over any egui area?\n","sig":null,"attributes":[{"value":"/ Is the pointer (mouse/touch) over any egui area?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":204259,"byte_end":204311,"line_start":813,"line_end":813,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205264,"byte_end":205283,"line_start":836,"line_end":836,"column_start":12,"column_end":31},"name":"wants_pointer_input","qualname":"<Context>::wants_pointer_input","value":"pub fn wants_pointer_input(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if egui is currently interested in the pointer (mouse or touch).\n Could be the pointer is hovering over a [`Window`] or the user is dragging a widget.\n If `false`, the pointer is outside of any egui area and so\n you may be interested in what it is doing (e.g. controlling your game).\n Returns `false` if a drag started outside of egui and then moved over an egui area.\n","sig":null,"attributes":[{"value":"/ True if egui is currently interested in the pointer (mouse or touch).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":204847,"byte_end":204920,"line_start":831,"line_end":831,"column_start":5,"column_end":78}},{"value":"/ Could be the pointer is hovering over a [`Window`] or the user is dragging a widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":204925,"byte_end":205013,"line_start":832,"line_end":832,"column_start":5,"column_end":93}},{"value":"/ If `false`, the pointer is outside of any egui area and so","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205018,"byte_end":205080,"line_start":833,"line_end":833,"column_start":5,"column_end":67}},{"value":"/ you may be interested in what it is doing (e.g. controlling your game).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205085,"byte_end":205160,"line_start":834,"line_end":834,"column_start":5,"column_end":80}},{"value":"/ Returns `false` if a drag started outside of egui and then moved over an egui area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205165,"byte_end":205252,"line_start":835,"line_end":835,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205589,"byte_end":205605,"line_start":842,"line_end":842,"column_start":12,"column_end":28},"name":"is_using_pointer","qualname":"<Context>::is_using_pointer","value":"pub fn is_using_pointer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is egui currently using the pointer position (e.g. dragging a slider).\n NOTE: this will return `false` if the pointer is just hovering over an egui area.\n","sig":null,"attributes":[{"value":"/ Is egui currently using the pointer position (e.g. dragging a slider).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205413,"byte_end":205487,"line_start":840,"line_end":840,"column_start":5,"column_end":79}},{"value":"/ NOTE: this will return `false` if the pointer is just hovering over an egui area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205492,"byte_end":205577,"line_start":841,"line_end":841,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205793,"byte_end":205813,"line_start":847,"line_end":847,"column_start":12,"column_end":32},"name":"wants_keyboard_input","qualname":"<Context>::wants_keyboard_input","value":"pub fn wants_keyboard_input(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `true`, egui is currently listening on text input (e.g. typing text in a [`TextEdit`]).\n","sig":null,"attributes":[{"value":"/ If `true`, egui is currently listening on text input (e.g. typing text in a [`TextEdit`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205687,"byte_end":205781,"line_start":846,"line_end":846,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206340,"byte_end":206357,"line_start":863,"line_end":863,"column_start":12,"column_end":29},"name":"pointer_hover_pos","qualname":"<Context>::pointer_hover_pos","value":"pub fn pointer_hover_pos(&Self) -> Option<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" If it is a good idea to show a tooltip, where is pointer?\n","sig":null,"attributes":[{"value":"/ If it is a good idea to show a tooltip, where is pointer?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206245,"byte_end":206306,"line_start":861,"line_end":861,"column_start":5,"column_end":66}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206311,"byte_end":206328,"line_start":862,"line_end":862,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206759,"byte_end":206779,"line_start":873,"line_end":873,"column_start":12,"column_end":32},"name":"pointer_interact_pos","qualname":"<Context>::pointer_interact_pos","value":"pub fn pointer_interact_pos(&Self) -> Option<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" If you detect a click or drag and wants to know where it happened, use this.","sig":null,"attributes":[{"value":"/ If you detect a click or drag and wants to know where it happened, use this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206435,"byte_end":206515,"line_start":867,"line_end":867,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206520,"byte_end":206523,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ Latest position of the mouse, but ignoring any [`Event::PointerGone`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206528,"byte_end":206601,"line_start":869,"line_end":869,"column_start":5,"column_end":78}},{"value":"/ if there were interactions this frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206606,"byte_end":206648,"line_start":870,"line_end":870,"column_start":5,"column_end":47}},{"value":"/ When tapping a touch screen, this will be the location of the touch.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206653,"byte_end":206725,"line_start":871,"line_end":871,"column_start":5,"column_end":77}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206730,"byte_end":206747,"line_start":872,"line_end":872,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206910,"byte_end":206921,"line_start":878,"line_end":878,"column_start":12,"column_end":23},"name":"multi_touch","qualname":"<Context>::multi_touch","value":"pub fn multi_touch(&Self) -> Option<MultiTouchInfo>","parent":null,"children":[],"decl_id":null,"docs":" Calls [`InputState::multi_touch`].\n","sig":null,"attributes":[{"value":"/ Calls [`InputState::multi_touch`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":206860,"byte_end":206898,"line_start":877,"line_end":877,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207145,"byte_end":207160,"line_start":886,"line_end":886,"column_start":12,"column_end":27},"name":"translate_layer","qualname":"<Context>::translate_layer","value":"pub fn translate_layer(&Self, LayerId, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Move all the graphics at the given layer.\n Can be used to implement drag-and-drop (see relevant demo).\n","sig":null,"attributes":[{"value":"/ Move all the graphics at the given layer.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207020,"byte_end":207065,"line_start":884,"line_end":884,"column_start":5,"column_end":50}},{"value":"/ Can be used to implement drag-and-drop (see relevant demo).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207070,"byte_end":207133,"line_start":885,"line_end":885,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207370,"byte_end":207381,"line_start":893,"line_end":893,"column_start":12,"column_end":23},"name":"layer_id_at","qualname":"<Context>::layer_id_at","value":"pub fn layer_id_at(&Self, Pos2) -> Option<LayerId>","parent":null,"children":[],"decl_id":null,"docs":" Top-most layer at the given position.\n","sig":null,"attributes":[{"value":"/ Top-most layer at the given position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207317,"byte_end":207358,"line_start":892,"line_end":892,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207717,"byte_end":207731,"line_start":900,"line_end":900,"column_start":12,"column_end":26},"name":"top_most_layer","qualname":"<Context>::top_most_layer","value":"pub fn top_most_layer(&Self) -> Option<LayerId>","parent":null,"children":[],"decl_id":null,"docs":" The overall top-most layer. When an area is clicked on or interacted\n with, it is moved above all other areas.\n","sig":null,"attributes":[{"value":"/ The overall top-most layer. When an area is clicked on or interacted","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207584,"byte_end":207656,"line_start":898,"line_end":898,"column_start":5,"column_end":77}},{"value":"/ with, it is moved above all other areas.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207661,"byte_end":207705,"line_start":899,"line_end":899,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207858,"byte_end":207869,"line_start":905,"line_end":905,"column_start":12,"column_end":23},"name":"move_to_top","qualname":"<Context>::move_to_top","value":"pub fn move_to_top(&Self, LayerId)","parent":null,"children":[],"decl_id":null,"docs":" Moves the given area to the top.\n","sig":null,"attributes":[{"value":"/ Moves the given area to the top.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207810,"byte_end":207846,"line_start":904,"line_end":904,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":208443,"byte_end":208457,"line_start":921,"line_end":921,"column_start":12,"column_end":26},"name":"debug_on_hover","qualname":"<Context>::debug_on_hover","value":"pub fn debug_on_hover(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether or not to debug widget layout on hover.\n","sig":null,"attributes":[{"value":"/ Whether or not to debug widget layout on hover.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":208380,"byte_end":208431,"line_start":920,"line_end":920,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":208611,"byte_end":208629,"line_start":926,"line_end":926,"column_start":12,"column_end":30},"name":"set_debug_on_hover","qualname":"<Context>::set_debug_on_hover","value":"pub fn set_debug_on_hover(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Turn on/off whether or not to debug widget layout on hover.\n","sig":null,"attributes":[{"value":"/ Turn on/off whether or not to debug widget layout on hover.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":208536,"byte_end":208599,"line_start":925,"line_end":925,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":209406,"byte_end":209418,"line_start":944,"line_end":944,"column_start":12,"column_end":24},"name":"animate_bool","qualname":"<Context>::animate_bool","value":"pub fn animate_bool(&Self, Id, bool) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Returns a value in the range [0, 1], to indicate \"how on\" this thing is.","sig":null,"attributes":[{"value":"/ Returns a value in the range [0, 1], to indicate \"how on\" this thing is.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":208847,"byte_end":208923,"line_start":935,"line_end":935,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":208928,"byte_end":208931,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ The first time called it will return `if value { 1.0 } else { 0.0 }`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":208936,"byte_end":209008,"line_start":937,"line_end":937,"column_start":5,"column_end":77}},{"value":"/ Calling this with `value = true` will always yield a number larger than zero, quickly going towards one.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":209013,"byte_end":209121,"line_start":938,"line_end":938,"column_start":5,"column_end":113}},{"value":"/ Calling this with `value = false` will always yield a number less than one, quickly going towards zero.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":209126,"byte_end":209233,"line_start":939,"line_end":939,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":209238,"byte_end":209241,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ The function will call [`Self::request_repaint()`] when appropriate.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":209246,"byte_end":209318,"line_start":941,"line_end":941,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":209323,"byte_end":209326,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ The animation time is taken from [`Style::animation_time`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":209331,"byte_end":209394,"line_start":943,"line_end":943,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":209677,"byte_end":209699,"line_start":950,"line_end":950,"column_start":12,"column_end":34},"name":"animate_bool_with_time","qualname":"<Context>::animate_bool_with_time","value":"pub fn animate_bool_with_time(&Self, Id, bool, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Like [`Self::animate_bool`] but allows you to control the animation time.\n","sig":null,"attributes":[{"value":"/ Like [`Self::animate_bool`] but allows you to control the animation time.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":209588,"byte_end":209665,"line_start":949,"line_end":949,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":210386,"byte_end":210409,"line_start":967,"line_end":967,"column_start":12,"column_end":35},"name":"animate_value_with_time","qualname":"<Context>::animate_value_with_time","value":"pub fn animate_value_with_time(&Self, Id, f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Allows you to smoothly change the f32 value.\n At the first call the value is written to memory.\n When it is called with a new value, it linearly interpolates to it in the given time.\n","sig":null,"attributes":[{"value":"/ Allows you to smoothly change the f32 value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":210174,"byte_end":210222,"line_start":964,"line_end":964,"column_start":5,"column_end":53}},{"value":"/ At the first call the value is written to memory.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":210227,"byte_end":210280,"line_start":965,"line_end":965,"column_start":5,"column_end":58}},{"value":"/ When it is called with a new value, it linearly interpolates to it in the given time.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":210285,"byte_end":210374,"line_start":966,"line_end":966,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":210911,"byte_end":210927,"line_start":983,"line_end":983,"column_start":12,"column_end":28},"name":"clear_animations","qualname":"<Context>::clear_animations","value":"pub fn clear_animations(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clear memory of any animations.\n","sig":null,"attributes":[{"value":"/ Clear memory of any animations.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":210864,"byte_end":210899,"line_start":982,"line_end":982,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":211033,"byte_end":211044,"line_start":989,"line_end":989,"column_start":12,"column_end":23},"name":"settings_ui","qualname":"<Context>::settings_ui","value":"pub fn settings_ui(&Self, &mut Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":211686,"byte_end":211699,"line_start":1008,"line_end":1008,"column_start":12,"column_end":25},"name":"inspection_ui","qualname":"<Context>::inspection_ui","value":"pub fn inspection_ui(&Self, &mut Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":214455,"byte_end":214465,"line_start":1084,"line_end":1084,"column_start":12,"column_end":22},"name":"texture_ui","qualname":"<Context>::texture_ui","value":"pub fn texture_ui(&Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":" Show stats about the allocated textures.\n","sig":null,"attributes":[{"value":"/ Show stats about the allocated textures.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":214399,"byte_end":214443,"line_start":1083,"line_end":1083,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":216874,"byte_end":216883,"line_start":1140,"line_end":1140,"column_start":12,"column_end":21},"name":"memory_ui","qualname":"<Context>::memory_ui","value":"pub fn memory_ui(&Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":220448,"byte_end":220456,"line_start":1243,"line_end":1243,"column_start":12,"column_end":20},"name":"style_ui","qualname":"<Context>::style_ui","value":"pub fn style_ui(&Self, &mut Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4787},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221260,"byte_end":221268,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"RawInput","qualname":"::data::input::RawInput","value":"RawInput { screen_rect, pixels_per_point, max_texture_side, time, predicted_dt, modifiers, events, hovered_files, dropped_files }","parent":null,"children":[{"krate":0,"index":4788},{"krate":0,"index":4789},{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4794},{"krate":0,"index":4795},{"krate":0,"index":4796}],"decl_id":null,"docs":" What the integrations provides to egui at the start of each frame.","sig":null,"attributes":[{"value":"/ What the integrations provides to egui at the start of each frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":220734,"byte_end":220804,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":220805,"byte_end":220808,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Set the values that make sense, leave the rest at their `Default::default()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":220809,"byte_end":220890,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":220891,"byte_end":220894,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ You can check if `egui` is using the inputs using","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":220895,"byte_end":220948,"line_start":9,"line_end":9,"column_start":1,"column_end":54}},{"value":"/ [`crate::Context::wants_pointer_input`] and [`crate::Context::wants_keyboard_input`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":220949,"byte_end":221038,"line_start":10,"line_end":10,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221039,"byte_end":221042,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ All coordinates are in points (logical pixels) with origin (0, 0) in the top left corner.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221043,"byte_end":221136,"line_start":12,"line_end":12,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":4788},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221661,"byte_end":221672,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"name":"screen_rect","qualname":"::data::input::RawInput::screen_rect","value":"std::option::Option<epaint::Rect>","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" Position and size of the area that egui should use.\n Usually you would set this to","sig":null,"attributes":[{"value":"/ Position and size of the area that egui should use.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221275,"byte_end":221330,"line_start":16,"line_end":16,"column_start":5,"column_end":60}},{"value":"/ Usually you would set this to","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221335,"byte_end":221368,"line_start":17,"line_end":17,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221373,"byte_end":221376,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ `Some(Rect::from_pos_size(Default::default(), screen_size))`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221381,"byte_end":221446,"line_start":19,"line_end":19,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221451,"byte_end":221454,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ but you could also constrain egui to some smaller portion of your window if you like.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221459,"byte_end":221548,"line_start":21,"line_end":21,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221553,"byte_end":221556,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ `None` will be treated as \"same as last frame\", with the default being a very big area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221561,"byte_end":221652,"line_start":23,"line_end":23,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":4789},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221913,"byte_end":221929,"line_start":29,"line_end":29,"column_start":9,"column_end":25},"name":"pixels_per_point","qualname":"::data::input::RawInput::pixels_per_point","value":"std::option::Option<f32>","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" Also known as device pixel ratio, > 1 for high resolution screens.\n If text looks blurry you probably forgot to set this.\n Set this the first frame, whenever it changes, or just on every frame.\n","sig":null,"attributes":[{"value":"/ Also known as device pixel ratio, > 1 for high resolution screens.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221693,"byte_end":221763,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ If text looks blurry you probably forgot to set this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221768,"byte_end":221825,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/ Set this the first frame, whenever it changes, or just on every frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221830,"byte_end":221904,"line_start":28,"line_end":28,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":4790},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222174,"byte_end":222190,"line_start":36,"line_end":36,"column_start":9,"column_end":25},"name":"max_texture_side","qualname":"::data::input::RawInput::max_texture_side","value":"std::option::Option<usize>","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" Maximum size of one side of the font texture.","sig":null,"attributes":[{"value":"/ Maximum size of one side of the font texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":221949,"byte_end":221998,"line_start":31,"line_end":31,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222003,"byte_end":222006,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Ask your graphics drivers about this. This corresponds to `GL_MAX_TEXTURE_SIZE`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222011,"byte_end":222095,"line_start":33,"line_end":33,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222100,"byte_end":222103,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The default is a very small (but very portable) 2048.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222108,"byte_end":222165,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":4791},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222413,"byte_end":222417,"line_start":40,"line_end":40,"column_start":9,"column_end":13},"name":"time","qualname":"::data::input::RawInput::time","value":"std::option::Option<f64>","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" Monotonically increasing time, in seconds. Relative to whatever. Used for animations.\n If `None` is provided, egui will assume a time delta of `predicted_dt` (default 1/60 seconds).\n","sig":null,"attributes":[{"value":"/ Monotonically increasing time, in seconds. Relative to whatever. Used for animations.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222212,"byte_end":222301,"line_start":38,"line_end":38,"column_start":5,"column_end":94}},{"value":"/ If `None` is provided, egui will assume a time delta of `predicted_dt` (default 1/60 seconds).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222306,"byte_end":222404,"line_start":39,"line_end":39,"column_start":5,"column_end":103}}]},{"kind":"Field","id":{"krate":0,"index":4792},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222617,"byte_end":222629,"line_start":45,"line_end":45,"column_start":9,"column_end":21},"name":"predicted_dt","qualname":"::data::input::RawInput::predicted_dt","value":"f32","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" Should be set to the expected time between frames when painting at vsync speeds.\n The default for this is 1/60.\n Can safely be left at its default value.\n","sig":null,"attributes":[{"value":"/ Should be set to the expected time between frames when painting at vsync speeds.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222437,"byte_end":222521,"line_start":42,"line_end":42,"column_start":5,"column_end":89}},{"value":"/ The default for this is 1/60.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222526,"byte_end":222559,"line_start":43,"line_end":43,"column_start":5,"column_end":38}},{"value":"/ Can safely be left at its default value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222564,"byte_end":222608,"line_start":44,"line_end":44,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4793},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222709,"byte_end":222718,"line_start":48,"line_end":48,"column_start":9,"column_end":18},"name":"modifiers","qualname":"::data::input::RawInput::modifiers","value":"data::input::Modifiers","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" Which modifier keys are down at the start of the frame?\n","sig":null,"attributes":[{"value":"/ Which modifier keys are down at the start of the frame?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222641,"byte_end":222700,"line_start":47,"line_end":47,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":4794},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223057,"byte_end":223063,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"name":"events","qualname":"::data::input::RawInput::events","value":"std::vec::Vec<data::input::Event>","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" In-order events received this frame.","sig":null,"attributes":[{"value":"/ In-order events received this frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222736,"byte_end":222776,"line_start":50,"line_end":50,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222781,"byte_end":222784,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ There is currently no way to know if egui handles a particular event,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222789,"byte_end":222862,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ but you can check if egui is using the keyboard with [`crate::Context::wants_keyboard_input`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222867,"byte_end":222964,"line_start":53,"line_end":53,"column_start":5,"column_end":102}},{"value":"/ and/or the pointer (mouse/touch) with [`crate::Context::is_using_pointer`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":222969,"byte_end":223048,"line_start":54,"line_end":54,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":4795},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223128,"byte_end":223141,"line_start":58,"line_end":58,"column_start":9,"column_end":22},"name":"hovered_files","qualname":"::data::input::RawInput::hovered_files","value":"std::vec::Vec<data::input::HoveredFile>","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" Dragged files hovering over egui.\n","sig":null,"attributes":[{"value":"/ Dragged files hovering over egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223082,"byte_end":223119,"line_start":57,"line_end":57,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":4796},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223341,"byte_end":223354,"line_start":64,"line_end":64,"column_start":9,"column_end":22},"name":"dropped_files","qualname":"::data::input::RawInput::dropped_files","value":"std::vec::Vec<data::input::DroppedFile>","parent":{"krate":0,"index":4787},"children":[],"decl_id":null,"docs":" Dragged files dropped into egui.","sig":null,"attributes":[{"value":"/ Dragged files dropped into egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223166,"byte_end":223202,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223207,"byte_end":223210,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Note: when using `eframe` on Windows you need to enable","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223215,"byte_end":223274,"line_start":62,"line_end":62,"column_start":5,"column_end":64}},{"value":"/ drag-and-drop support using `epi::NativeOptions`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223279,"byte_end":223332,"line_start":63,"line_end":63,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223989,"byte_end":223993,"line_start":88,"line_end":88,"column_start":12,"column_end":16},"name":"take","qualname":"<RawInput>::take","value":"pub fn take(&mut Self) -> RawInput","parent":null,"children":[],"decl_id":null,"docs":" Helper: move volatile (deltas and events), clone the rest.","sig":null,"attributes":[{"value":"/ Helper: move volatile (deltas and events), clone the rest.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223818,"byte_end":223880,"line_start":84,"line_end":84,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223885,"byte_end":223888,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ * [`Self::hovered_files`] is cloned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223893,"byte_end":223933,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ * [`Self::dropped_files`] is moved.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223938,"byte_end":223977,"line_start":87,"line_end":87,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":224559,"byte_end":224565,"line_start":103,"line_end":103,"column_start":12,"column_end":18},"name":"append","qualname":"<RawInput>::append","value":"pub fn append(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Add on new input.\n","sig":null,"attributes":[{"value":"/ Add on new input.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":224526,"byte_end":224547,"line_start":102,"line_end":102,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":4805},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":225570,"byte_end":225581,"line_start":131,"line_end":131,"column_start":12,"column_end":23},"name":"HoveredFile","qualname":"::data::input::HoveredFile","value":"HoveredFile { path, mime }","parent":null,"children":[{"krate":0,"index":4806},{"krate":0,"index":4807}],"decl_id":null,"docs":" A file about to be dropped into egui.\n","sig":null,"attributes":[{"value":"/ A file about to be dropped into egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":225396,"byte_end":225437,"line_start":128,"line_end":128,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":4806},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":225633,"byte_end":225637,"line_start":133,"line_end":133,"column_start":9,"column_end":13},"name":"path","qualname":"::data::input::HoveredFile::path","value":"std::option::Option<std::path::PathBuf>","parent":{"krate":0,"index":4805},"children":[],"decl_id":null,"docs":" Set by the `egui-winit` backend.\n","sig":null,"attributes":[{"value":"/ Set by the `egui-winit` backend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":225588,"byte_end":225624,"line_start":132,"line_end":132,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4807},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":225769,"byte_end":225773,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"name":"mime","qualname":"::data::input::HoveredFile::mime","value":"std::string::String","parent":{"krate":0,"index":4805},"children":[],"decl_id":null,"docs":" With the `egui_web` backend, this is set to the mime-type of the file (if available).\n","sig":null,"attributes":[{"value":"/ With the `egui_web` backend, this is set to the mime-type of the file (if available).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":225671,"byte_end":225760,"line_start":134,"line_end":134,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":4818},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":225948,"byte_end":225959,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"DroppedFile","qualname":"::data::input::DroppedFile","value":"DroppedFile { path, name, last_modified, bytes }","parent":null,"children":[{"krate":0,"index":4819},{"krate":0,"index":4820},{"krate":0,"index":4821},{"krate":0,"index":4822}],"decl_id":null,"docs":" A file dropped into egui.\n","sig":null,"attributes":[{"value":"/ A file dropped into egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":225786,"byte_end":225815,"line_start":138,"line_end":138,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":4819},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226011,"byte_end":226015,"line_start":143,"line_end":143,"column_start":9,"column_end":13},"name":"path","qualname":"::data::input::DroppedFile::path","value":"std::option::Option<std::path::PathBuf>","parent":{"krate":0,"index":4818},"children":[],"decl_id":null,"docs":" Set by the `egui-winit` backend.\n","sig":null,"attributes":[{"value":"/ Set by the `egui-winit` backend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":225966,"byte_end":226002,"line_start":142,"line_end":142,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":4820},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226110,"byte_end":226114,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"name":"name","qualname":"::data::input::DroppedFile::name","value":"std::string::String","parent":{"krate":0,"index":4818},"children":[],"decl_id":null,"docs":" Name of the file. Set by the `egui_web` backend.\n","sig":null,"attributes":[{"value":"/ Name of the file. Set by the `egui_web` backend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226049,"byte_end":226101,"line_start":144,"line_end":144,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":4821},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226171,"byte_end":226184,"line_start":147,"line_end":147,"column_start":9,"column_end":22},"name":"last_modified","qualname":"::data::input::DroppedFile::last_modified","value":"std::option::Option<std::time::SystemTime>","parent":{"krate":0,"index":4818},"children":[],"decl_id":null,"docs":" Set by the `egui_web` backend.\n","sig":null,"attributes":[{"value":"/ Set by the `egui_web` backend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226128,"byte_end":226162,"line_start":146,"line_end":146,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":4822},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226264,"byte_end":226269,"line_start":149,"line_end":149,"column_start":9,"column_end":14},"name":"bytes","qualname":"::data::input::DroppedFile::bytes","value":"std::option::Option<std::sync::Arc<[u8]>>","parent":{"krate":0,"index":4818},"children":[],"decl_id":null,"docs":" Set by the `egui_web` backend.\n","sig":null,"attributes":[{"value":"/ Set by the `egui_web` backend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226221,"byte_end":226255,"line_start":148,"line_end":148,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4834},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226607,"byte_end":226611,"line_start":159,"line_end":159,"column_start":5,"column_end":9},"name":"Copy","qualname":"::data::input::Event::Copy","value":"Event::Copy","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" The integration detected a \"copy\" event (e.g. Cmd+C).\n","sig":null,"attributes":[{"value":"/ The integration detected a \"copy\" event (e.g. Cmd+C).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226545,"byte_end":226602,"line_start":158,"line_end":158,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4836},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226678,"byte_end":226681,"line_start":161,"line_end":161,"column_start":5,"column_end":8},"name":"Cut","qualname":"::data::input::Event::Cut","value":"Event::Cut","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" The integration detected a \"cut\" event (e.g. Cmd+X).\n","sig":null,"attributes":[{"value":"/ The integration detected a \"cut\" event (e.g. Cmd+X).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226617,"byte_end":226673,"line_start":160,"line_end":160,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4838},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226750,"byte_end":226755,"line_start":163,"line_end":163,"column_start":5,"column_end":10},"name":"Paste","qualname":"::data::input::Event::Paste","value":"Event::Paste(String)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" The integration detected a \"paste\" event (e.g. Cmd+V).\n","sig":null,"attributes":[{"value":"/ The integration detected a \"paste\" event (e.g. Cmd+V).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226687,"byte_end":226745,"line_start":162,"line_end":162,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4841},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226904,"byte_end":226908,"line_start":167,"line_end":167,"column_start":5,"column_end":9},"name":"Text","qualname":"::data::input::Event::Text","value":"Event::Text(String)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" Text input, e.g. via keyboard.","sig":null,"attributes":[{"value":"/ Text input, e.g. via keyboard.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226769,"byte_end":226803,"line_start":164,"line_end":164,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226808,"byte_end":226811,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ When the user presses enter/return, do not send a `Text` (just [`Key::Enter`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226816,"byte_end":226899,"line_start":166,"line_end":166,"column_start":5,"column_end":88}}]},{"kind":"StructVariant","id":{"krate":0,"index":4844},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226961,"byte_end":226964,"line_start":169,"line_end":169,"column_start":5,"column_end":8},"name":"Key","qualname":"::data::input::Event::Key","value":"Event::Key { key, pressed, modifiers }","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" A key was pressed or released.\n","sig":null,"attributes":[{"value":"/ A key was pressed or released.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226922,"byte_end":226956,"line_start":168,"line_end":168,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4848},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227208,"byte_end":227220,"line_start":178,"line_end":178,"column_start":5,"column_end":17},"name":"PointerMoved","qualname":"::data::input::Event::PointerMoved","value":"Event::PointerMoved(Pos2)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" The mouse or touch moved to a new place.\n","sig":null,"attributes":[{"value":"/ The mouse or touch moved to a new place.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227159,"byte_end":227203,"line_start":177,"line_end":177,"column_start":5,"column_end":49}}]},{"kind":"StructVariant","id":{"krate":0,"index":4851},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227313,"byte_end":227326,"line_start":181,"line_end":181,"column_start":5,"column_end":18},"name":"PointerButton","qualname":"::data::input::Event::PointerButton","value":"Event::PointerButton { pos, button, pressed, modifiers }","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" A mouse button was pressed or released (or a touch started or stopped).\n","sig":null,"attributes":[{"value":"/ A mouse button was pressed or released (or a touch started or stopped).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227233,"byte_end":227308,"line_start":180,"line_end":180,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4856},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227961,"byte_end":227972,"line_start":196,"line_end":196,"column_start":5,"column_end":16},"name":"PointerGone","qualname":"::data::input::Event::PointerGone","value":"Event::PointerGone","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" The mouse left the screen, or the last/primary touch input disappeared.","sig":null,"attributes":[{"value":"/ The mouse left the screen, or the last/primary touch input disappeared.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227691,"byte_end":227766,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227771,"byte_end":227774,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This means there is no longer a cursor on the screen for hovering etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227779,"byte_end":227853,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227858,"byte_end":227861,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ On touch-up first send `PointerButton{pressed: false, …}` followed by `PointerLeft`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227866,"byte_end":227956,"line_start":195,"line_end":195,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4858},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228399,"byte_end":228405,"line_start":205,"line_end":205,"column_start":5,"column_end":11},"name":"Scroll","qualname":"::data::input::Event::Scroll","value":"Event::Scroll(Vec2)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" How many points (logical pixels) the user scrolled.","sig":null,"attributes":[{"value":"/ How many points (logical pixels) the user scrolled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":227979,"byte_end":228034,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228039,"byte_end":228042,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The direction of the vector indicates how to move the _content_ that is being viewed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228047,"byte_end":228136,"line_start":200,"line_end":200,"column_start":5,"column_end":94}},{"value":"/ So if you get positive values, the content being viewed should move to the right and down,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228141,"byte_end":228235,"line_start":201,"line_end":201,"column_start":5,"column_end":99}},{"value":"/ revealing new things to the left and up.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228240,"byte_end":228284,"line_start":202,"line_end":202,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228289,"byte_end":228292,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Shift-scroll should result in horizontal scrolling (it is up to the integrations to do this).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228297,"byte_end":228394,"line_start":204,"line_end":204,"column_start":5,"column_end":102}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4861},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228602,"byte_end":228606,"line_start":211,"line_end":211,"column_start":5,"column_end":9},"name":"Zoom","qualname":"::data::input::Event::Zoom","value":"Event::Zoom(f32)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" Zoom scale factor this frame (e.g. from ctrl-scroll or pinch gesture).\n * `zoom = 1`: no change.\n * `zoom < 1`: pinch together\n * `zoom > 1`: pinch spread\n","sig":null,"attributes":[{"value":"/ Zoom scale factor this frame (e.g. from ctrl-scroll or pinch gesture).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228418,"byte_end":228492,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ * `zoom = 1`: no change.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228497,"byte_end":228525,"line_start":208,"line_end":208,"column_start":5,"column_end":33}},{"value":"/ * `zoom < 1`: pinch together","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228530,"byte_end":228562,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/ * `zoom > 1`: pinch spread","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228567,"byte_end":228597,"line_start":210,"line_end":210,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4864},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228649,"byte_end":228665,"line_start":214,"line_end":214,"column_start":5,"column_end":21},"name":"CompositionStart","qualname":"::data::input::Event::CompositionStart","value":"Event::CompositionStart","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" IME composition start.\n","sig":null,"attributes":[{"value":"/ IME composition start.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228618,"byte_end":228644,"line_start":213,"line_end":213,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4866},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228719,"byte_end":228736,"line_start":216,"line_end":216,"column_start":5,"column_end":22},"name":"CompositionUpdate","qualname":"::data::input::Event::CompositionUpdate","value":"Event::CompositionUpdate(String)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" A new IME candidate is being suggested.\n","sig":null,"attributes":[{"value":"/ A new IME candidate is being suggested.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228671,"byte_end":228714,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4869},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228804,"byte_end":228818,"line_start":218,"line_end":218,"column_start":5,"column_end":19},"name":"CompositionEnd","qualname":"::data::input::Event::CompositionEnd","value":"Event::CompositionEnd(String)","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" IME composition ended with this final result.\n","sig":null,"attributes":[{"value":"/ IME composition ended with this final result.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228750,"byte_end":228799,"line_start":217,"line_end":217,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":4872},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228967,"byte_end":228972,"line_start":222,"line_end":222,"column_start":5,"column_end":10},"name":"Touch","qualname":"::data::input::Event::Touch","value":"Event::Touch { device_id, id, phase, pos, force }","parent":{"krate":0,"index":4833},"children":[],"decl_id":null,"docs":" On touch screens, report this *in addition to*\n [`Self::PointerMoved`], [`Self::PointerButton`], [`Self::PointerGone`]\n","sig":null,"attributes":[{"value":"/ On touch screens, report this *in addition to*","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228833,"byte_end":228883,"line_start":220,"line_end":220,"column_start":5,"column_end":55}},{"value":"/ [`Self::PointerMoved`], [`Self::PointerButton`], [`Self::PointerGone`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":228888,"byte_end":228962,"line_start":221,"line_end":221,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":4833},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226533,"byte_end":226538,"line_start":157,"line_end":157,"column_start":10,"column_end":15},"name":"Event","qualname":"::data::input::Event","value":"pub enum Event {\n    Copy,\n    Cut,\n    Paste(String),\n    Text(String),\n    Key {\n        key: Key,\n        pressed: bool,\n        modifiers: Modifiers,\n    },\n    PointerMoved(Pos2),\n    PointerButton {\n        pos: Pos2,\n        button: PointerButton,\n        pressed: bool,\n        modifiers: Modifiers,\n    },\n    PointerGone,\n    Scroll(Vec2),\n    Zoom(f32),\n    CompositionStart,\n    CompositionUpdate(String),\n    CompositionEnd(String),\n    Touch {\n        device_id: TouchDeviceId,\n        id: TouchId,\n        phase: TouchPhase,\n        pos: Pos2,\n        force: f32,\n    },\n}","parent":null,"children":[{"krate":0,"index":4834},{"krate":0,"index":4836},{"krate":0,"index":4838},{"krate":0,"index":4841},{"krate":0,"index":4844},{"krate":0,"index":4848},{"krate":0,"index":4851},{"krate":0,"index":4856},{"krate":0,"index":4858},{"krate":0,"index":4861},{"krate":0,"index":4864},{"krate":0,"index":4866},{"krate":0,"index":4869},{"krate":0,"index":4872}],"decl_id":null,"docs":" An input event generated by the integration.","sig":null,"attributes":[{"value":"/ An input event generated by the integration.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226308,"byte_end":226356,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226357,"byte_end":226360,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ This only covers events that egui cares about.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":226361,"byte_end":226411,"line_start":154,"line_end":154,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4887},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":229947,"byte_end":229954,"line_start":245,"line_end":245,"column_start":5,"column_end":12},"name":"Primary","qualname":"::data::input::PointerButton::Primary","value":"PointerButton::Primary","parent":{"krate":0,"index":4886},"children":[],"decl_id":null,"docs":" The primary mouse button is usually the left one.\n","sig":null,"attributes":[{"value":"/ The primary mouse button is usually the left one.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":229889,"byte_end":229942,"line_start":244,"line_end":244,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4890},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230097,"byte_end":230106,"line_start":248,"line_end":248,"column_start":5,"column_end":14},"name":"Secondary","qualname":"::data::input::PointerButton::Secondary","value":"PointerButton::Secondary","parent":{"krate":0,"index":4886},"children":[],"decl_id":null,"docs":" The secondary mouse button is usually the right one,\n and most often used for context menus or other optional things.\n","sig":null,"attributes":[{"value":"/ The secondary mouse button is usually the right one,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":229964,"byte_end":230020,"line_start":246,"line_end":246,"column_start":5,"column_end":61}},{"value":"/ and most often used for context menus or other optional things.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230025,"byte_end":230092,"line_start":247,"line_end":247,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4893},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230219,"byte_end":230225,"line_start":250,"line_end":250,"column_start":5,"column_end":11},"name":"Middle","qualname":"::data::input::PointerButton::Middle","value":"PointerButton::Middle","parent":{"krate":0,"index":4886},"children":[],"decl_id":null,"docs":" The tertiary mouse button is usually the middle mouse button (e.g. clicking the scroll wheel).\n","sig":null,"attributes":[{"value":"/ The tertiary mouse button is usually the middle mouse button (e.g. clicking the scroll wheel).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230116,"byte_end":230214,"line_start":249,"line_end":249,"column_start":5,"column_end":103}}]},{"kind":"Enum","id":{"krate":0,"index":4886},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":229869,"byte_end":229882,"line_start":243,"line_end":243,"column_start":10,"column_end":23},"name":"PointerButton","qualname":"::data::input::PointerButton","value":"pub enum PointerButton { Primary = , Secondary = , Middle = , }","parent":null,"children":[{"krate":0,"index":4887},{"krate":0,"index":4890},{"krate":0,"index":4893}],"decl_id":null,"docs":" Mouse button (or similar for touch input)\n","sig":null,"attributes":[{"value":"/ Mouse button (or similar for touch input)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":229692,"byte_end":229737,"line_start":240,"line_end":240,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230350,"byte_end":230369,"line_start":254,"line_end":254,"column_start":11,"column_end":30},"name":"NUM_POINTER_BUTTONS","qualname":"::data::input::NUM_POINTER_BUTTONS","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Number of pointer buttons supported by egui, i.e. the number of possible states of [`PointerButton`].\n","sig":null,"attributes":[{"value":"/ Number of pointer buttons supported by egui, i.e. the number of possible states of [`PointerButton`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230234,"byte_end":230339,"line_start":253,"line_end":253,"column_start":1,"column_end":106}}]},{"kind":"Struct","id":{"krate":0,"index":4907},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230660,"byte_end":230669,"line_start":261,"line_end":261,"column_start":12,"column_end":21},"name":"Modifiers","qualname":"::data::input::Modifiers","value":"Modifiers { alt, ctrl, shift, mac_cmd, command }","parent":null,"children":[{"krate":0,"index":4908},{"krate":0,"index":4909},{"krate":0,"index":4910},{"krate":0,"index":4911},{"krate":0,"index":4912}],"decl_id":null,"docs":" State of the modifier keys. These must be fed to egui.","sig":null,"attributes":[{"value":"/ State of the modifier keys. These must be fed to egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230383,"byte_end":230441,"line_start":256,"line_end":256,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230442,"byte_end":230445,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ The best way to compare `Modifiers` is by using [`Modifiers::matches`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230446,"byte_end":230521,"line_start":258,"line_end":258,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":4908},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230741,"byte_end":230744,"line_start":263,"line_end":263,"column_start":9,"column_end":12},"name":"alt","qualname":"::data::input::Modifiers::alt","value":"bool","parent":{"krate":0,"index":4907},"children":[],"decl_id":null,"docs":" Either of the alt keys are down (option ⌥ on Mac).\n","sig":null,"attributes":[{"value":"/ Either of the alt keys are down (option ⌥ on Mac).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230676,"byte_end":230732,"line_start":262,"line_end":262,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":4909},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230894,"byte_end":230898,"line_start":267,"line_end":267,"column_start":9,"column_end":13},"name":"ctrl","qualname":"::data::input::Modifiers::ctrl","value":"bool","parent":{"krate":0,"index":4907},"children":[],"decl_id":null,"docs":" Either of the control keys are down.\n When checking for keyboard shortcuts, consider using [`Self::command`] instead.\n","sig":null,"attributes":[{"value":"/ Either of the control keys are down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230757,"byte_end":230797,"line_start":265,"line_end":265,"column_start":5,"column_end":45}},{"value":"/ When checking for keyboard shortcuts, consider using [`Self::command`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230802,"byte_end":230885,"line_start":266,"line_end":266,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":4910},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230958,"byte_end":230963,"line_start":270,"line_end":270,"column_start":9,"column_end":14},"name":"shift","qualname":"::data::input::Modifiers::shift","value":"bool","parent":{"krate":0,"index":4907},"children":[],"decl_id":null,"docs":" Either of the shift keys are down.\n","sig":null,"attributes":[{"value":"/ Either of the shift keys are down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230911,"byte_end":230949,"line_start":269,"line_end":269,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":4911},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231065,"byte_end":231072,"line_start":273,"line_end":273,"column_start":9,"column_end":16},"name":"mac_cmd","qualname":"::data::input::Modifiers::mac_cmd","value":"bool","parent":{"krate":0,"index":4907},"children":[],"decl_id":null,"docs":" The Mac ⌘ Command key. Should always be set to `false` on other platforms.\n","sig":null,"attributes":[{"value":"/ The Mac ⌘ Command key. Should always be set to `false` on other platforms.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":230976,"byte_end":231056,"line_start":272,"line_end":272,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":4912},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231403,"byte_end":231410,"line_start":279,"line_end":279,"column_start":9,"column_end":16},"name":"command","qualname":"::data::input::Modifiers::command","value":"bool","parent":{"krate":0,"index":4907},"children":[],"decl_id":null,"docs":" On Windows and Linux, set this to the same value as `ctrl`.\n On Mac, this should be set whenever one of the ⌘ Command keys are down (same as `mac_cmd`).\n This is so that egui can, for instance, select all text by checking for `command + A`\n and it will work on both Mac and Windows.\n","sig":null,"attributes":[{"value":"/ On Windows and Linux, set this to the same value as `ctrl`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231085,"byte_end":231148,"line_start":275,"line_end":275,"column_start":5,"column_end":68}},{"value":"/ On Mac, this should be set whenever one of the ⌘ Command keys are down (same as `mac_cmd`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231153,"byte_end":231250,"line_start":276,"line_end":276,"column_start":5,"column_end":100}},{"value":"/ This is so that egui can, for instance, select all text by checking for `command + A`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231255,"byte_end":231344,"line_start":277,"line_end":277,"column_start":5,"column_end":94}},{"value":"/ and it will work on both Mac and Windows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231349,"byte_end":231394,"line_start":278,"line_end":278,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231449,"byte_end":231452,"line_start":283,"line_end":283,"column_start":12,"column_end":15},"name":"new","qualname":"<Modifiers>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231513,"byte_end":231517,"line_start":287,"line_end":287,"column_start":15,"column_end":19},"name":"NONE","qualname":"::data::input::Modifiers::NONE","value":"Self","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":818},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231666,"byte_end":231669,"line_start":295,"line_end":295,"column_start":15,"column_end":18},"name":"ALT","qualname":"::data::input::Modifiers::ALT","value":"Self","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231816,"byte_end":231820,"line_start":302,"line_end":302,"column_start":15,"column_end":19},"name":"CTRL","qualname":"::data::input::Modifiers::CTRL","value":"Self","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231967,"byte_end":231972,"line_start":309,"line_end":309,"column_start":15,"column_end":20},"name":"SHIFT","qualname":"::data::input::Modifiers::SHIFT","value":"Self","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232151,"byte_end":232158,"line_start":317,"line_end":317,"column_start":15,"column_end":22},"name":"MAC_CMD","qualname":"::data::input::Modifiers::MAC_CMD","value":"Self","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":" The Mac ⌘ Command key\n","sig":null,"attributes":[{"value":"/ The Mac ⌘ Command key","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232109,"byte_end":232136,"line_start":316,"line_end":316,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232358,"byte_end":232365,"line_start":325,"line_end":325,"column_start":15,"column_end":22},"name":"COMMAND","qualname":"::data::input::Modifiers::COMMAND","value":"Self","parent":{"krate":0,"index":815},"children":[],"decl_id":null,"docs":" On Mac: ⌘ Command key, elsewhere: Ctrl key\n","sig":null,"attributes":[{"value":"/ On Mac: ⌘ Command key, elsewhere: Ctrl key","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232295,"byte_end":232343,"line_start":324,"line_end":324,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232532,"byte_end":232539,"line_start":334,"line_end":334,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Modifiers>::is_none","value":"pub fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232503,"byte_end":232520,"line_start":333,"line_end":333,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232630,"byte_end":232633,"line_start":339,"line_end":339,"column_start":12,"column_end":15},"name":"any","qualname":"<Modifiers>::any","value":"pub fn any(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232601,"byte_end":232618,"line_start":338,"line_end":338,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232757,"byte_end":232767,"line_start":345,"line_end":345,"column_start":12,"column_end":22},"name":"shift_only","qualname":"<Modifiers>::shift_only","value":"pub fn shift_only(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is shift the only pressed button?\n","sig":null,"attributes":[{"value":"/ Is shift the only pressed button?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232686,"byte_end":232723,"line_start":343,"line_end":343,"column_start":5,"column_end":42}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232728,"byte_end":232745,"line_start":344,"line_end":344,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232949,"byte_end":232961,"line_start":351,"line_end":351,"column_start":12,"column_end":24},"name":"command_only","qualname":"<Modifiers>::command_only","value":"pub fn command_only(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if only [`Self::ctrl`] or only [`Self::mac_cmd`] is pressed.\n","sig":null,"attributes":[{"value":"/ true if only [`Self::ctrl`] or only [`Self::mac_cmd`] is pressed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232846,"byte_end":232915,"line_start":349,"line_end":349,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":232920,"byte_end":232937,"line_start":350,"line_end":350,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233723,"byte_end":233730,"line_start":367,"line_end":367,"column_start":12,"column_end":19},"name":"matches","qualname":"<Modifiers>::matches","value":"pub fn matches(&Self, Modifiers) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check for equality but with proper handling of [`Self::command`].","sig":null,"attributes":[{"value":"/ Check for equality but with proper handling of [`Self::command`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233039,"byte_end":233108,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233113,"byte_end":233116,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233121,"byte_end":233128,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ # use egui::Modifiers;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233133,"byte_end":233159,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/ assert!(Modifiers::CTRL.matches(Modifiers::CTRL));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233164,"byte_end":233218,"line_start":359,"line_end":359,"column_start":5,"column_end":59}},{"value":"/ assert!(!Modifiers::CTRL.matches(Modifiers::CTRL | Modifiers::SHIFT));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233223,"byte_end":233297,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/ assert!(!(Modifiers::CTRL | Modifiers::SHIFT).matches(Modifiers::CTRL));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233302,"byte_end":233378,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/ assert!((Modifiers::CTRL | Modifiers::COMMAND).matches(Modifiers::CTRL));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233383,"byte_end":233460,"line_start":362,"line_end":362,"column_start":5,"column_end":82}},{"value":"/ assert!((Modifiers::CTRL | Modifiers::COMMAND).matches(Modifiers::COMMAND));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233465,"byte_end":233545,"line_start":363,"line_end":363,"column_start":5,"column_end":85}},{"value":"/ assert!((Modifiers::MAC_CMD | Modifiers::COMMAND).matches(Modifiers::COMMAND));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233550,"byte_end":233633,"line_start":364,"line_end":364,"column_start":5,"column_end":88}},{"value":"/ assert!(!Modifiers::COMMAND.matches(Modifiers::MAC_CMD));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233638,"byte_end":233699,"line_start":365,"line_end":365,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":233704,"byte_end":233711,"line_start":366,"line_end":366,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4925},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235656,"byte_end":235665,"line_start":426,"line_end":426,"column_start":5,"column_end":14},"name":"ArrowDown","qualname":"::data::input::Key::ArrowDown","value":"Key::ArrowDown","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4927},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235671,"byte_end":235680,"line_start":427,"line_end":427,"column_start":5,"column_end":14},"name":"ArrowLeft","qualname":"::data::input::Key::ArrowLeft","value":"Key::ArrowLeft","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4929},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235686,"byte_end":235696,"line_start":428,"line_end":428,"column_start":5,"column_end":15},"name":"ArrowRight","qualname":"::data::input::Key::ArrowRight","value":"Key::ArrowRight","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4931},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235702,"byte_end":235709,"line_start":429,"line_end":429,"column_start":5,"column_end":12},"name":"ArrowUp","qualname":"::data::input::Key::ArrowUp","value":"Key::ArrowUp","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4933},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235716,"byte_end":235722,"line_start":431,"line_end":431,"column_start":5,"column_end":11},"name":"Escape","qualname":"::data::input::Key::Escape","value":"Key::Escape","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4935},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235728,"byte_end":235731,"line_start":432,"line_end":432,"column_start":5,"column_end":8},"name":"Tab","qualname":"::data::input::Key::Tab","value":"Key::Tab","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4937},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235737,"byte_end":235746,"line_start":433,"line_end":433,"column_start":5,"column_end":14},"name":"Backspace","qualname":"::data::input::Key::Backspace","value":"Key::Backspace","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4939},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235752,"byte_end":235757,"line_start":434,"line_end":434,"column_start":5,"column_end":10},"name":"Enter","qualname":"::data::input::Key::Enter","value":"Key::Enter","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4941},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235763,"byte_end":235768,"line_start":435,"line_end":435,"column_start":5,"column_end":10},"name":"Space","qualname":"::data::input::Key::Space","value":"Key::Space","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235775,"byte_end":235781,"line_start":437,"line_end":437,"column_start":5,"column_end":11},"name":"Insert","qualname":"::data::input::Key::Insert","value":"Key::Insert","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4945},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235787,"byte_end":235793,"line_start":438,"line_end":438,"column_start":5,"column_end":11},"name":"Delete","qualname":"::data::input::Key::Delete","value":"Key::Delete","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4947},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235799,"byte_end":235803,"line_start":439,"line_end":439,"column_start":5,"column_end":9},"name":"Home","qualname":"::data::input::Key::Home","value":"Key::Home","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4949},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235809,"byte_end":235812,"line_start":440,"line_end":440,"column_start":5,"column_end":8},"name":"End","qualname":"::data::input::Key::End","value":"Key::End","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4951},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235818,"byte_end":235824,"line_start":441,"line_end":441,"column_start":5,"column_end":11},"name":"PageUp","qualname":"::data::input::Key::PageUp","value":"Key::PageUp","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4953},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235830,"byte_end":235838,"line_start":442,"line_end":442,"column_start":5,"column_end":13},"name":"PageDown","qualname":"::data::input::Key::PageDown","value":"Key::PageDown","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4955},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235898,"byte_end":235902,"line_start":445,"line_end":445,"column_start":5,"column_end":9},"name":"Num0","qualname":"::data::input::Key::Num0","value":"Key::Num0","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Either from the main row or from the numpad.\n","sig":null,"attributes":[{"value":"/ Either from the main row or from the numpad.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235845,"byte_end":235893,"line_start":444,"line_end":444,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4957},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235961,"byte_end":235965,"line_start":447,"line_end":447,"column_start":5,"column_end":9},"name":"Num1","qualname":"::data::input::Key::Num1","value":"Key::Num1","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Either from the main row or from the numpad.\n","sig":null,"attributes":[{"value":"/ Either from the main row or from the numpad.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235908,"byte_end":235956,"line_start":446,"line_end":446,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4959},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236024,"byte_end":236028,"line_start":449,"line_end":449,"column_start":5,"column_end":9},"name":"Num2","qualname":"::data::input::Key::Num2","value":"Key::Num2","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Either from the main row or from the numpad.\n","sig":null,"attributes":[{"value":"/ Either from the main row or from the numpad.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235971,"byte_end":236019,"line_start":448,"line_end":448,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4961},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236087,"byte_end":236091,"line_start":451,"line_end":451,"column_start":5,"column_end":9},"name":"Num3","qualname":"::data::input::Key::Num3","value":"Key::Num3","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Either from the main row or from the numpad.\n","sig":null,"attributes":[{"value":"/ Either from the main row or from the numpad.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236034,"byte_end":236082,"line_start":450,"line_end":450,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4963},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236150,"byte_end":236154,"line_start":453,"line_end":453,"column_start":5,"column_end":9},"name":"Num4","qualname":"::data::input::Key::Num4","value":"Key::Num4","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Either from the main row or from the numpad.\n","sig":null,"attributes":[{"value":"/ Either from the main row or from the numpad.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236097,"byte_end":236145,"line_start":452,"line_end":452,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4965},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236213,"byte_end":236217,"line_start":455,"line_end":455,"column_start":5,"column_end":9},"name":"Num5","qualname":"::data::input::Key::Num5","value":"Key::Num5","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Either from the main row or from the numpad.\n","sig":null,"attributes":[{"value":"/ Either from the main row or from the numpad.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236160,"byte_end":236208,"line_start":454,"line_end":454,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4967},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236276,"byte_end":236280,"line_start":457,"line_end":457,"column_start":5,"column_end":9},"name":"Num6","qualname":"::data::input::Key::Num6","value":"Key::Num6","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Either from the main row or from the numpad.\n","sig":null,"attributes":[{"value":"/ Either from the main row or from the numpad.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236223,"byte_end":236271,"line_start":456,"line_end":456,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4969},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236339,"byte_end":236343,"line_start":459,"line_end":459,"column_start":5,"column_end":9},"name":"Num7","qualname":"::data::input::Key::Num7","value":"Key::Num7","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Either from the main row or from the numpad.\n","sig":null,"attributes":[{"value":"/ Either from the main row or from the numpad.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236286,"byte_end":236334,"line_start":458,"line_end":458,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236402,"byte_end":236406,"line_start":461,"line_end":461,"column_start":5,"column_end":9},"name":"Num8","qualname":"::data::input::Key::Num8","value":"Key::Num8","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Either from the main row or from the numpad.\n","sig":null,"attributes":[{"value":"/ Either from the main row or from the numpad.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236349,"byte_end":236397,"line_start":460,"line_end":460,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4973},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236465,"byte_end":236469,"line_start":463,"line_end":463,"column_start":5,"column_end":9},"name":"Num9","qualname":"::data::input::Key::Num9","value":"Key::Num9","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":" Either from the main row or from the numpad.\n","sig":null,"attributes":[{"value":"/ Either from the main row or from the numpad.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236412,"byte_end":236460,"line_start":462,"line_end":462,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4975},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236476,"byte_end":236477,"line_start":465,"line_end":465,"column_start":5,"column_end":6},"name":"A","qualname":"::data::input::Key::A","value":"Key::A","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4977},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236514,"byte_end":236515,"line_start":466,"line_end":466,"column_start":5,"column_end":6},"name":"B","qualname":"::data::input::Key::B","value":"Key::B","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4979},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236521,"byte_end":236522,"line_start":467,"line_end":467,"column_start":5,"column_end":6},"name":"C","qualname":"::data::input::Key::C","value":"Key::C","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4981},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236528,"byte_end":236529,"line_start":468,"line_end":468,"column_start":5,"column_end":6},"name":"D","qualname":"::data::input::Key::D","value":"Key::D","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4983},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236535,"byte_end":236536,"line_start":469,"line_end":469,"column_start":5,"column_end":6},"name":"E","qualname":"::data::input::Key::E","value":"Key::E","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4985},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236542,"byte_end":236543,"line_start":470,"line_end":470,"column_start":5,"column_end":6},"name":"F","qualname":"::data::input::Key::F","value":"Key::F","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4987},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236549,"byte_end":236550,"line_start":471,"line_end":471,"column_start":5,"column_end":6},"name":"G","qualname":"::data::input::Key::G","value":"Key::G","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4989},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236556,"byte_end":236557,"line_start":472,"line_end":472,"column_start":5,"column_end":6},"name":"H","qualname":"::data::input::Key::H","value":"Key::H","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4991},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236563,"byte_end":236564,"line_start":473,"line_end":473,"column_start":5,"column_end":6},"name":"I","qualname":"::data::input::Key::I","value":"Key::I","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4993},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236570,"byte_end":236571,"line_start":474,"line_end":474,"column_start":5,"column_end":6},"name":"J","qualname":"::data::input::Key::J","value":"Key::J","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4995},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236577,"byte_end":236578,"line_start":475,"line_end":475,"column_start":5,"column_end":6},"name":"K","qualname":"::data::input::Key::K","value":"Key::K","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4997},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236630,"byte_end":236631,"line_start":476,"line_end":476,"column_start":5,"column_end":6},"name":"L","qualname":"::data::input::Key::L","value":"Key::L","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4999},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236637,"byte_end":236638,"line_start":477,"line_end":477,"column_start":5,"column_end":6},"name":"M","qualname":"::data::input::Key::M","value":"Key::M","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5001},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236644,"byte_end":236645,"line_start":478,"line_end":478,"column_start":5,"column_end":6},"name":"N","qualname":"::data::input::Key::N","value":"Key::N","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5003},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236651,"byte_end":236652,"line_start":479,"line_end":479,"column_start":5,"column_end":6},"name":"O","qualname":"::data::input::Key::O","value":"Key::O","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5005},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236658,"byte_end":236659,"line_start":480,"line_end":480,"column_start":5,"column_end":6},"name":"P","qualname":"::data::input::Key::P","value":"Key::P","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5007},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236665,"byte_end":236666,"line_start":481,"line_end":481,"column_start":5,"column_end":6},"name":"Q","qualname":"::data::input::Key::Q","value":"Key::Q","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5009},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236672,"byte_end":236673,"line_start":482,"line_end":482,"column_start":5,"column_end":6},"name":"R","qualname":"::data::input::Key::R","value":"Key::R","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5011},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236679,"byte_end":236680,"line_start":483,"line_end":483,"column_start":5,"column_end":6},"name":"S","qualname":"::data::input::Key::S","value":"Key::S","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5013},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236686,"byte_end":236687,"line_start":484,"line_end":484,"column_start":5,"column_end":6},"name":"T","qualname":"::data::input::Key::T","value":"Key::T","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5015},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236693,"byte_end":236694,"line_start":485,"line_end":485,"column_start":5,"column_end":6},"name":"U","qualname":"::data::input::Key::U","value":"Key::U","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5017},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236747,"byte_end":236748,"line_start":486,"line_end":486,"column_start":5,"column_end":6},"name":"V","qualname":"::data::input::Key::V","value":"Key::V","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5019},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236754,"byte_end":236755,"line_start":487,"line_end":487,"column_start":5,"column_end":6},"name":"W","qualname":"::data::input::Key::W","value":"Key::W","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5021},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236803,"byte_end":236804,"line_start":488,"line_end":488,"column_start":5,"column_end":6},"name":"X","qualname":"::data::input::Key::X","value":"Key::X","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5023},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236810,"byte_end":236811,"line_start":489,"line_end":489,"column_start":5,"column_end":6},"name":"Y","qualname":"::data::input::Key::Y","value":"Key::Y","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5025},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236817,"byte_end":236818,"line_start":490,"line_end":490,"column_start":5,"column_end":6},"name":"Z","qualname":"::data::input::Key::Z","value":"Key::Z","parent":{"krate":0,"index":4924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4924},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235646,"byte_end":235649,"line_start":425,"line_end":425,"column_start":10,"column_end":13},"name":"Key","qualname":"::data::input::Key","value":"pub enum Key {\n    ArrowDown,\n    ArrowLeft,\n    ArrowRight,\n    ArrowUp,\n    Escape,\n    Tab,\n    Backspace,\n    Enter,\n    Space,\n    Insert,\n    Delete,\n    Home,\n    End,\n    PageUp,\n    PageDown,\n    Num0,\n    Num1,\n    Num2,\n    Num3,\n    Num4,\n    Num5,\n    Num6,\n    Num7,\n    Num8,\n    Num9,\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    N,\n    O,\n    P,\n    Q,\n    R,\n    S,\n    T,\n    U,\n    V,\n    W,\n    X,\n    Y,\n    Z,\n}","parent":null,"children":[{"krate":0,"index":4925},{"krate":0,"index":4927},{"krate":0,"index":4929},{"krate":0,"index":4931},{"krate":0,"index":4933},{"krate":0,"index":4935},{"krate":0,"index":4937},{"krate":0,"index":4939},{"krate":0,"index":4941},{"krate":0,"index":4943},{"krate":0,"index":4945},{"krate":0,"index":4947},{"krate":0,"index":4949},{"krate":0,"index":4951},{"krate":0,"index":4953},{"krate":0,"index":4955},{"krate":0,"index":4957},{"krate":0,"index":4959},{"krate":0,"index":4961},{"krate":0,"index":4963},{"krate":0,"index":4965},{"krate":0,"index":4967},{"krate":0,"index":4969},{"krate":0,"index":4971},{"krate":0,"index":4973},{"krate":0,"index":4975},{"krate":0,"index":4977},{"krate":0,"index":4979},{"krate":0,"index":4981},{"krate":0,"index":4983},{"krate":0,"index":4985},{"krate":0,"index":4987},{"krate":0,"index":4989},{"krate":0,"index":4991},{"krate":0,"index":4993},{"krate":0,"index":4995},{"krate":0,"index":4997},{"krate":0,"index":4999},{"krate":0,"index":5001},{"krate":0,"index":5003},{"krate":0,"index":5005},{"krate":0,"index":5007},{"krate":0,"index":5009},{"krate":0,"index":5011},{"krate":0,"index":5013},{"krate":0,"index":5015},{"krate":0,"index":5017},{"krate":0,"index":5019},{"krate":0,"index":5021},{"krate":0,"index":5023},{"krate":0,"index":5025}],"decl_id":null,"docs":" Keyboard keys.","sig":null,"attributes":[{"value":"/ Keyboard keys.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235117,"byte_end":235135,"line_start":416,"line_end":416,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235136,"byte_end":235139,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ Includes all keys egui is interested in (such as `Home` and `End`)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235140,"byte_end":235210,"line_start":418,"line_end":418,"column_start":1,"column_end":71}},{"value":"/ plus a few that are useful for detecting keyboard shortcuts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235211,"byte_end":235275,"line_start":419,"line_end":419,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235276,"byte_end":235279,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ Many keys are omitted because they are not always physical keys (depending on keyboard language), e.g. `;` and `§`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235280,"byte_end":235400,"line_start":421,"line_end":421,"column_start":1,"column_end":120}},{"value":"/ and are therefor unsuitable as keyboard shortcuts if you want your app to be portable.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":235401,"byte_end":235491,"line_start":422,"line_end":422,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236875,"byte_end":236877,"line_start":494,"line_end":494,"column_start":12,"column_end":14},"name":"ui","qualname":"<RawInput>::ui","value":"pub fn ui(&Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5045},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238355,"byte_end":238368,"line_start":533,"line_end":533,"column_start":12,"column_end":25},"name":"TouchDeviceId","qualname":"::data::input::TouchDeviceId","value":"","parent":null,"children":[],"decl_id":null,"docs":" this is a `u64` as values of this kind can always be obtained by hashing\n","sig":null,"attributes":[{"value":"/ this is a `u64` as values of this kind can always be obtained by hashing","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238128,"byte_end":238204,"line_start":530,"line_end":530,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":5047},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238369,"byte_end":238376,"line_start":533,"line_end":533,"column_start":26,"column_end":33},"name":"0","qualname":"::data::input::TouchDeviceId::0","value":"u64","parent":{"krate":0,"index":5045},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5064},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238695,"byte_end":238702,"line_start":540,"line_end":540,"column_start":12,"column_end":19},"name":"TouchId","qualname":"::data::input::TouchId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Unique identification of a touch occurrence (finger or pen or …).\n A Touch ID is valid until the finger is lifted.\n A new ID is used for the next touch.\n","sig":null,"attributes":[{"value":"/ Unique identification of a touch occurrence (finger or pen or …).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238380,"byte_end":238451,"line_start":535,"line_end":535,"column_start":1,"column_end":70}},{"value":"/ A Touch ID is valid until the finger is lifted.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238452,"byte_end":238503,"line_start":536,"line_end":536,"column_start":1,"column_end":52}},{"value":"/ A new ID is used for the next touch.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238504,"byte_end":238544,"line_start":537,"line_end":537,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5066},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238703,"byte_end":238710,"line_start":540,"line_end":540,"column_start":20,"column_end":27},"name":"0","qualname":"::data::input::TouchId::0","value":"u64","parent":{"krate":0,"index":5064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5084},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238961,"byte_end":238966,"line_start":547,"line_end":547,"column_start":5,"column_end":10},"name":"Start","qualname":"::data::input::TouchPhase::Start","value":"TouchPhase::Start","parent":{"krate":0,"index":5083},"children":[],"decl_id":null,"docs":" User just placed a touch point on the touch surface\n","sig":null,"attributes":[{"value":"/ User just placed a touch point on the touch surface","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238901,"byte_end":238956,"line_start":546,"line_end":546,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5086},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239126,"byte_end":239130,"line_start":550,"line_end":550,"column_start":5,"column_end":9},"name":"Move","qualname":"::data::input::TouchPhase::Move","value":"TouchPhase::Move","parent":{"krate":0,"index":5083},"children":[],"decl_id":null,"docs":" User moves a touch point along the surface. This event is also sent when\n any attributes (position, force, …) of the touch point change.\n","sig":null,"attributes":[{"value":"/ User moves a touch point along the surface. This event is also sent when","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238972,"byte_end":239048,"line_start":548,"line_end":548,"column_start":5,"column_end":81}},{"value":"/ any attributes (position, force, …) of the touch point change.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239053,"byte_end":239121,"line_start":549,"line_end":549,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5088},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239236,"byte_end":239239,"line_start":553,"line_end":553,"column_start":5,"column_end":8},"name":"End","qualname":"::data::input::TouchPhase::End","value":"TouchPhase::End","parent":{"krate":0,"index":5083},"children":[],"decl_id":null,"docs":" User lifted the finger or pen from the surface, or slid off the edge of\n the surface\n","sig":null,"attributes":[{"value":"/ User lifted the finger or pen from the surface, or slid off the edge of","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239136,"byte_end":239211,"line_start":551,"line_end":551,"column_start":5,"column_end":80}},{"value":"/ the surface","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239216,"byte_end":239231,"line_start":552,"line_end":552,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5090},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239449,"byte_end":239455,"line_start":557,"line_end":557,"column_start":5,"column_end":11},"name":"Cancel","qualname":"::data::input::TouchPhase::Cancel","value":"TouchPhase::Cancel","parent":{"krate":0,"index":5083},"children":[],"decl_id":null,"docs":" Touch operation has been disrupted by something (various reasons are possible,\n maybe a pop-up alert or any other kind of interruption which may not have\n been intended by the user)\n","sig":null,"attributes":[{"value":"/ Touch operation has been disrupted by something (various reasons are possible,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239245,"byte_end":239327,"line_start":554,"line_end":554,"column_start":5,"column_end":87}},{"value":"/ maybe a pop-up alert or any other kind of interruption which may not have","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239332,"byte_end":239409,"line_start":555,"line_end":555,"column_start":5,"column_end":82}},{"value":"/ been intended by the user)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239414,"byte_end":239444,"line_start":556,"line_end":556,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":5083},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238884,"byte_end":238894,"line_start":545,"line_end":545,"column_start":10,"column_end":20},"name":"TouchPhase","qualname":"::data::input::TouchPhase","value":"pub enum TouchPhase { Start, Move, End, Cancel, }","parent":null,"children":[{"krate":0,"index":5084},{"krate":0,"index":5086},{"krate":0,"index":5088},{"krate":0,"index":5090}],"decl_id":null,"docs":" In what phase a touch event is in.\n","sig":null,"attributes":[{"value":"/ In what phase a touch event is in.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":238714,"byte_end":238752,"line_start":542,"line_end":542,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":840},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"output","qualname":"::data::output","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":5103},{"krate":0,"index":5108},{"krate":0,"index":5110},{"krate":0,"index":5112},{"krate":0,"index":5113},{"krate":0,"index":844},{"krate":0,"index":5116},{"krate":0,"index":5123},{"krate":0,"index":5125},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":846},{"krate":0,"index":5131},{"krate":0,"index":5134},{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":852},{"krate":0,"index":5140},{"krate":0,"index":5191},{"krate":0,"index":5193},{"krate":0,"index":5194},{"krate":0,"index":5196},{"krate":0,"index":5197},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":5199},{"krate":0,"index":5215},{"krate":0,"index":5217},{"krate":0,"index":5218},{"krate":0,"index":862},{"krate":0,"index":5221},{"krate":0,"index":5230},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":864},{"krate":0,"index":866}],"decl_id":null,"docs":" All the data egui returns to the backend at the end of each frame.\n","sig":null,"attributes":[{"value":"/ All the data egui returns to the backend at the end of each frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":239732,"byte_end":239802,"line_start":1,"line_end":1,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":5103},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":239974,"byte_end":239984,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"FullOutput","qualname":"::data::output::FullOutput","value":"FullOutput { platform_output, needs_repaint, textures_delta, shapes }","parent":null,"children":[{"krate":0,"index":5104},{"krate":0,"index":5105},{"krate":0,"index":5106},{"krate":0,"index":5107}],"decl_id":null,"docs":" What egui emits each frame from [`crate::Context::run`].","sig":null,"attributes":[{"value":"/ What egui emits each frame from [`crate::Context::run`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":239828,"byte_end":239888,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":239889,"byte_end":239892,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The backend should use this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":239893,"byte_end":239925,"line_start":7,"line_end":7,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5104},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240033,"byte_end":240048,"line_start":11,"line_end":11,"column_start":9,"column_end":24},"name":"platform_output","qualname":"::data::output::FullOutput::platform_output","value":"data::output::PlatformOutput","parent":{"krate":0,"index":5103},"children":[],"decl_id":null,"docs":" Non-rendering related output.\n","sig":null,"attributes":[{"value":"/ Non-rendering related output.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":239991,"byte_end":240024,"line_start":10,"line_end":10,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5105},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240281,"byte_end":240294,"line_start":16,"line_end":16,"column_start":9,"column_end":22},"name":"needs_repaint","qualname":"::data::output::FullOutput::needs_repaint","value":"bool","parent":{"krate":0,"index":5103},"children":[],"decl_id":null,"docs":" If `true`, egui is requesting immediate repaint (i.e. on the next frame).","sig":null,"attributes":[{"value":"/ If `true`, egui is requesting immediate repaint (i.e. on the next frame).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240071,"byte_end":240148,"line_start":13,"line_end":13,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240153,"byte_end":240156,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ This happens for instance when there is an animation, or if a user has called `Context::request_repaint()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240161,"byte_end":240272,"line_start":15,"line_end":15,"column_start":5,"column_end":116}}]},{"kind":"Field","id":{"krate":0,"index":5106},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240555,"byte_end":240569,"line_start":22,"line_end":22,"column_start":9,"column_end":23},"name":"textures_delta","qualname":"::data::output::FullOutput::textures_delta","value":"epaint::textures::TexturesDelta","parent":{"krate":0,"index":5103},"children":[],"decl_id":null,"docs":" Texture changes since last frame (including the font texture).","sig":null,"attributes":[{"value":"/ Texture changes since last frame (including the font texture).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240307,"byte_end":240373,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240378,"byte_end":240381,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ The backend needs to apply [`crate::TexturesDelta::set`] _before_ painting,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240386,"byte_end":240465,"line_start":20,"line_end":20,"column_start":5,"column_end":84}},{"value":"/ and free any texture in [`crate::TexturesDelta::free`] _after_ painting.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240470,"byte_end":240546,"line_start":21,"line_end":21,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":5107},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240724,"byte_end":240730,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"name":"shapes","qualname":"::data::output::FullOutput::shapes","value":"std::vec::Vec<epaint::ClippedShape>","parent":{"krate":0,"index":5103},"children":[],"decl_id":null,"docs":" What to paint.","sig":null,"attributes":[{"value":"/ What to paint.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240609,"byte_end":240627,"line_start":24,"line_end":24,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240632,"byte_end":240635,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ You can use [`crate::Context::tessellate`] to turn this into triangles.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240640,"byte_end":240715,"line_start":26,"line_end":26,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240818,"byte_end":240824,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"append","qualname":"<FullOutput>::append","value":"pub fn append(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Add on new output.\n","sig":null,"attributes":[{"value":"/ Add on new output.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240784,"byte_end":240806,"line_start":31,"line_end":31,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5116},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241577,"byte_end":241591,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"PlatformOutput","qualname":"::data::output::PlatformOutput","value":"PlatformOutput { cursor_icon, open_url, copied_text, events, mutable_text_under_cursor, text_cursor_pos }","parent":null,"children":[{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5121},{"krate":0,"index":5122}],"decl_id":null,"docs":" The non-rendering part of what egui emits each frame.","sig":null,"attributes":[{"value":"/ The non-rendering part of what egui emits each frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241283,"byte_end":241340,"line_start":47,"line_end":47,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241341,"byte_end":241344,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ You can access (and modify) this with [`crate::Context::output`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241345,"byte_end":241414,"line_start":49,"line_end":49,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241415,"byte_end":241418,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The backend should use this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241419,"byte_end":241451,"line_start":51,"line_end":51,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5117},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241639,"byte_end":241650,"line_start":56,"line_end":56,"column_start":9,"column_end":20},"name":"cursor_icon","qualname":"::data::output::PlatformOutput::cursor_icon","value":"data::output::CursorIcon","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":" Set the cursor to this icon.\n","sig":null,"attributes":[{"value":"/ Set the cursor to this icon.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241598,"byte_end":241630,"line_start":55,"line_end":55,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5118},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241704,"byte_end":241712,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"name":"open_url","qualname":"::data::output::PlatformOutput::open_url","value":"std::option::Option<data::output::OpenUrl>","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":" If set, open this url.\n","sig":null,"attributes":[{"value":"/ If set, open this url.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241669,"byte_end":241695,"line_start":58,"line_end":58,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":5119},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241905,"byte_end":241916,"line_start":64,"line_end":64,"column_start":9,"column_end":20},"name":"copied_text","qualname":"::data::output::PlatformOutput::copied_text","value":"std::string::String","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":" If set, put this text in the system clipboard. Ignore if empty.","sig":null,"attributes":[{"value":"/ If set, put this text in the system clipboard. Ignore if empty.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241736,"byte_end":241803,"line_start":61,"line_end":61,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241808,"byte_end":241811,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This is often a response to [`crate::Event::Copy`] or [`crate::Event::Cut`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241816,"byte_end":241896,"line_start":63,"line_end":63,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":5120},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241994,"byte_end":242000,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"events","qualname":"::data::output::PlatformOutput::events","value":"std::vec::Vec<data::output::OutputEvent>","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":" Events that may be useful to e.g. a screen reader.\n","sig":null,"attributes":[{"value":"/ Events that may be useful to e.g. a screen reader.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":241931,"byte_end":241985,"line_start":66,"line_end":66,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":5121},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242155,"byte_end":242180,"line_start":71,"line_end":71,"column_start":9,"column_end":34},"name":"mutable_text_under_cursor","qualname":"::data::output::PlatformOutput::mutable_text_under_cursor","value":"bool","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":" Is there a mutable `TextEdit` under the cursor?\n Use by `egui_web` to show/hide mobile keyboard and IME agent.\n","sig":null,"attributes":[{"value":"/ Is there a mutable `TextEdit` under the cursor?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242025,"byte_end":242076,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/ Use by `egui_web` to show/hide mobile keyboard and IME agent.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242081,"byte_end":242146,"line_start":70,"line_end":70,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":5122},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242263,"byte_end":242278,"line_start":74,"line_end":74,"column_start":9,"column_end":24},"name":"text_cursor_pos","qualname":"::data::output::PlatformOutput::text_cursor_pos","value":"std::option::Option<epaint::Pos2>","parent":{"krate":0,"index":5116},"children":[],"decl_id":null,"docs":" Screen-space position of text edit cursor (used for IME).\n","sig":null,"attributes":[{"value":"/ Screen-space position of text edit cursor (used for IME).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242193,"byte_end":242254,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242452,"byte_end":242460,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"open_url","qualname":"<PlatformOutput>::open_url","value":"pub fn open_url<impl ToString: ToString>(&mut Self, impl ToString)","parent":null,"children":[],"decl_id":null,"docs":" Open the given url in a web browser.\n If egui is running in a browser, the same tab will be reused.\n","sig":null,"attributes":[{"value":"/ Open the given url in a web browser.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242330,"byte_end":242370,"line_start":78,"line_end":78,"column_start":5,"column_end":45}},{"value":"/ If egui is running in a browser, the same tab will be reused.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242375,"byte_end":242440,"line_start":79,"line_end":79,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242651,"byte_end":242669,"line_start":85,"line_end":85,"column_start":12,"column_end":30},"name":"events_description","qualname":"<PlatformOutput>::events_description","value":"pub fn events_description(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" This can be used by a text-to-speech system to describe the events (if any).\n","sig":null,"attributes":[{"value":"/ This can be used by a text-to-speech system to describe the events (if any).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242559,"byte_end":242639,"line_start":84,"line_end":84,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":243274,"byte_end":243280,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"append","qualname":"<PlatformOutput>::append","value":"pub fn append(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Add on new output.\n","sig":null,"attributes":[{"value":"/ Add on new output.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":243240,"byte_end":243262,"line_start":101,"line_end":101,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":243999,"byte_end":244003,"line_start":125,"line_end":125,"column_start":12,"column_end":16},"name":"take","qualname":"<PlatformOutput>::take","value":"pub fn take(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Take everything ephemeral (everything except `cursor_icon` currently)\n","sig":null,"attributes":[{"value":"/ Take everything ephemeral (everything except `cursor_icon` currently)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":243914,"byte_end":243987,"line_start":124,"line_end":124,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":5131},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244283,"byte_end":244290,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"OpenUrl","qualname":"::data::output::OpenUrl","value":"OpenUrl { url, new_tab }","parent":null,"children":[{"krate":0,"index":5132},{"krate":0,"index":5133}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5132},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244301,"byte_end":244304,"line_start":135,"line_end":135,"column_start":9,"column_end":12},"name":"url","qualname":"::data::output::OpenUrl::url","value":"std::string::String","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5133},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244456,"byte_end":244463,"line_start":139,"line_end":139,"column_start":9,"column_end":16},"name":"new_tab","qualname":"::data::output::OpenUrl::new_tab","value":"bool","parent":{"krate":0,"index":5131},"children":[],"decl_id":null,"docs":" If `true`, open the url in a new tab.\n If `false` open it in the same tab.\n Only matters when in a web browser.\n","sig":null,"attributes":[{"value":"/ If `true`, open the url in a new tab.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244318,"byte_end":244359,"line_start":136,"line_end":136,"column_start":5,"column_end":46}},{"value":"/ If `false` open it in the same tab.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244364,"byte_end":244403,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/ Only matters when in a web browser.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244408,"byte_end":244447,"line_start":138,"line_end":138,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244545,"byte_end":244553,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"same_tab","qualname":"<OpenUrl>::same_tab","value":"pub fn same_tab<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244493,"byte_end":244533,"line_start":143,"line_end":143,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244734,"byte_end":244741,"line_start":152,"line_end":152,"column_start":12,"column_end":19},"name":"new_tab","qualname":"<OpenUrl>::new_tab","value":"pub fn new_tab<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244682,"byte_end":244722,"line_start":151,"line_end":151,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5141},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245268,"byte_end":245275,"line_start":169,"line_end":169,"column_start":5,"column_end":12},"name":"Default","qualname":"::data::output::CursorIcon::Default","value":"CursorIcon::Default","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Normal cursor icon, whatever that is.\n","sig":null,"attributes":[{"value":"/ Normal cursor icon, whatever that is.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245222,"byte_end":245263,"line_start":168,"line_end":168,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5143},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245305,"byte_end":245309,"line_start":172,"line_end":172,"column_start":5,"column_end":9},"name":"None","qualname":"::data::output::CursorIcon::None","value":"CursorIcon::None","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Show no cursor\n","sig":null,"attributes":[{"value":"/ Show no cursor","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245282,"byte_end":245300,"line_start":171,"line_end":171,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5145},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245421,"byte_end":245432,"line_start":177,"line_end":177,"column_start":5,"column_end":16},"name":"ContextMenu","qualname":"::data::output::CursorIcon::ContextMenu","value":"CursorIcon::ContextMenu","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" A context menu is available\n","sig":null,"attributes":[{"value":"/ A context menu is available","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245385,"byte_end":245416,"line_start":176,"line_end":176,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5147},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245461,"byte_end":245465,"line_start":180,"line_end":180,"column_start":5,"column_end":9},"name":"Help","qualname":"::data::output::CursorIcon::Help","value":"CursorIcon::Help","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Question mark\n","sig":null,"attributes":[{"value":"/ Question mark","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245439,"byte_end":245456,"line_start":179,"line_end":179,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5149},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245519,"byte_end":245531,"line_start":183,"line_end":183,"column_start":5,"column_end":17},"name":"PointingHand","qualname":"::data::output::CursorIcon::PointingHand","value":"CursorIcon::PointingHand","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Pointing hand, used for e.g. web links\n","sig":null,"attributes":[{"value":"/ Pointing hand, used for e.g. web links","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245472,"byte_end":245514,"line_start":182,"line_end":182,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5151},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245626,"byte_end":245634,"line_start":186,"line_end":186,"column_start":5,"column_end":13},"name":"Progress","qualname":"::data::output::CursorIcon::Progress","value":"CursorIcon::Progress","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Shows that processing is being done, but that the program is still interactive.\n","sig":null,"attributes":[{"value":"/ Shows that processing is being done, but that the program is still interactive.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245538,"byte_end":245621,"line_start":185,"line_end":185,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5153},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245675,"byte_end":245679,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"Wait","qualname":"::data::output::CursorIcon::Wait","value":"CursorIcon::Wait","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Not yet ready, try later.\n","sig":null,"attributes":[{"value":"/ Not yet ready, try later.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245641,"byte_end":245670,"line_start":188,"line_end":188,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5155},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245780,"byte_end":245784,"line_start":194,"line_end":194,"column_start":5,"column_end":9},"name":"Cell","qualname":"::data::output::CursorIcon::Cell","value":"CursorIcon::Cell","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Hover a cell in a table\n","sig":null,"attributes":[{"value":"/ Hover a cell in a table","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245748,"byte_end":245775,"line_start":193,"line_end":193,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5157},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245818,"byte_end":245827,"line_start":197,"line_end":197,"column_start":5,"column_end":14},"name":"Crosshair","qualname":"::data::output::CursorIcon::Crosshair","value":"CursorIcon::Crosshair","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" For precision work\n","sig":null,"attributes":[{"value":"/ For precision work","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245791,"byte_end":245813,"line_start":196,"line_end":196,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5159},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245885,"byte_end":245889,"line_start":200,"line_end":200,"column_start":5,"column_end":9},"name":"Text","qualname":"::data::output::CursorIcon::Text","value":"CursorIcon::Text","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Text caret, e.g. \"Click here to edit text\"\n","sig":null,"attributes":[{"value":"/ Text caret, e.g. \"Click here to edit text\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245834,"byte_end":245880,"line_start":199,"line_end":199,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5161},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245965,"byte_end":245977,"line_start":203,"line_end":203,"column_start":5,"column_end":17},"name":"VerticalText","qualname":"::data::output::CursorIcon::VerticalText","value":"CursorIcon::VerticalText","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Vertical text caret, e.g. \"Click here to edit vertical text\"\n","sig":null,"attributes":[{"value":"/ Vertical text caret, e.g. \"Click here to edit vertical text\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245896,"byte_end":245960,"line_start":202,"line_end":202,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5163},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246094,"byte_end":246099,"line_start":208,"line_end":208,"column_start":5,"column_end":10},"name":"Alias","qualname":"::data::output::CursorIcon::Alias","value":"CursorIcon::Alias","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Indicated an alias, e.g. a shortcut\n","sig":null,"attributes":[{"value":"/ Indicated an alias, e.g. a shortcut","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246050,"byte_end":246089,"line_start":207,"line_end":207,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5165},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246148,"byte_end":246152,"line_start":211,"line_end":211,"column_start":5,"column_end":9},"name":"Copy","qualname":"::data::output::CursorIcon::Copy","value":"CursorIcon::Copy","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Indicate that a copy will be made\n","sig":null,"attributes":[{"value":"/ Indicate that a copy will be made","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246106,"byte_end":246143,"line_start":210,"line_end":210,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5167},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246234,"byte_end":246238,"line_start":214,"line_end":214,"column_start":5,"column_end":9},"name":"Move","qualname":"::data::output::CursorIcon::Move","value":"CursorIcon::Move","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Omnidirectional move icon (e.g. arrows in all cardinal directions)\n","sig":null,"attributes":[{"value":"/ Omnidirectional move icon (e.g. arrows in all cardinal directions)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246159,"byte_end":246229,"line_start":213,"line_end":213,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5169},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246269,"byte_end":246275,"line_start":217,"line_end":217,"column_start":5,"column_end":11},"name":"NoDrop","qualname":"::data::output::CursorIcon::NoDrop","value":"CursorIcon::NoDrop","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Can't drop here\n","sig":null,"attributes":[{"value":"/ Can't drop here","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246245,"byte_end":246264,"line_start":216,"line_end":216,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5171},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246300,"byte_end":246310,"line_start":220,"line_end":220,"column_start":5,"column_end":15},"name":"NotAllowed","qualname":"::data::output::CursorIcon::NotAllowed","value":"CursorIcon::NotAllowed","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Forbidden\n","sig":null,"attributes":[{"value":"/ Forbidden","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246282,"byte_end":246295,"line_start":219,"line_end":219,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5173},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246367,"byte_end":246371,"line_start":223,"line_end":223,"column_start":5,"column_end":9},"name":"Grab","qualname":"::data::output::CursorIcon::Grab","value":"CursorIcon::Grab","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" The thing you are hovering can be grabbed\n","sig":null,"attributes":[{"value":"/ The thing you are hovering can be grabbed","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246317,"byte_end":246362,"line_start":222,"line_end":222,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5175},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246430,"byte_end":246438,"line_start":226,"line_end":226,"column_start":5,"column_end":13},"name":"Grabbing","qualname":"::data::output::CursorIcon::Grabbing","value":"CursorIcon::Grabbing","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" You are grabbing the thing you are hovering\n","sig":null,"attributes":[{"value":"/ You are grabbing the thing you are hovering","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246378,"byte_end":246425,"line_start":225,"line_end":225,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5177},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246580,"byte_end":246589,"line_start":231,"line_end":231,"column_start":5,"column_end":14},"name":"AllScroll","qualname":"::data::output::CursorIcon::AllScroll","value":"CursorIcon::AllScroll","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Something can be scrolled in any direction (panned).\n","sig":null,"attributes":[{"value":"/ Something can be scrolled in any direction (panned).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246519,"byte_end":246575,"line_start":230,"line_end":230,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5179},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246686,"byte_end":246702,"line_start":234,"line_end":234,"column_start":5,"column_end":21},"name":"ResizeHorizontal","qualname":"::data::output::CursorIcon::ResizeHorizontal","value":"CursorIcon::ResizeHorizontal","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Horizontal resize `-` to make something wider or more narrow (left to/from right)\n","sig":null,"attributes":[{"value":"/ Horizontal resize `-` to make something wider or more narrow (left to/from right)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246596,"byte_end":246681,"line_start":233,"line_end":233,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5181},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246765,"byte_end":246775,"line_start":236,"line_end":236,"column_start":5,"column_end":15},"name":"ResizeNeSw","qualname":"::data::output::CursorIcon::ResizeNeSw","value":"CursorIcon::ResizeNeSw","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Diagonal resize `/` (right-up to/from left-down)\n","sig":null,"attributes":[{"value":"/ Diagonal resize `/` (right-up to/from left-down)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246708,"byte_end":246760,"line_start":235,"line_end":235,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5183},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246838,"byte_end":246848,"line_start":238,"line_end":238,"column_start":5,"column_end":15},"name":"ResizeNwSe","qualname":"::data::output::CursorIcon::ResizeNwSe","value":"CursorIcon::ResizeNwSe","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Diagonal resize `\\` (left-up to/from right-down)\n","sig":null,"attributes":[{"value":"/ Diagonal resize `\\` (left-up to/from right-down)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246781,"byte_end":246833,"line_start":237,"line_end":237,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5185},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246903,"byte_end":246917,"line_start":240,"line_end":240,"column_start":5,"column_end":19},"name":"ResizeVertical","qualname":"::data::output::CursorIcon::ResizeVertical","value":"CursorIcon::ResizeVertical","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Vertical resize `|` (up-down or down-up)\n","sig":null,"attributes":[{"value":"/ Vertical resize `|` (up-down or down-up)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246854,"byte_end":246898,"line_start":239,"line_end":239,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5187},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246941,"byte_end":246947,"line_start":243,"line_end":243,"column_start":5,"column_end":11},"name":"ZoomIn","qualname":"::data::output::CursorIcon::ZoomIn","value":"CursorIcon::ZoomIn","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Enhance!\n","sig":null,"attributes":[{"value":"/ Enhance!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246924,"byte_end":246936,"line_start":242,"line_end":242,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5189},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246989,"byte_end":246996,"line_start":245,"line_end":245,"column_start":5,"column_end":12},"name":"ZoomOut","qualname":"::data::output::CursorIcon::ZoomOut","value":"CursorIcon::ZoomOut","parent":{"krate":0,"index":5140},"children":[],"decl_id":null,"docs":" Let's get a better overview\n","sig":null,"attributes":[{"value":"/ Let's get a better overview","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":246953,"byte_end":246984,"line_start":244,"line_end":244,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":5140},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":245205,"byte_end":245215,"line_start":167,"line_end":167,"column_start":10,"column_end":20},"name":"CursorIcon","qualname":"::data::output::CursorIcon","value":"pub enum CursorIcon {\n    Default,\n    None,\n    ContextMenu,\n    Help,\n    PointingHand,\n    Progress,\n    Wait,\n    Cell,\n    Crosshair,\n    Text,\n    VerticalText,\n    Alias,\n    Copy,\n    Move,\n    NoDrop,\n    NotAllowed,\n    Grab,\n    Grabbing,\n    AllScroll,\n    ResizeHorizontal,\n    ResizeNeSw,\n    ResizeNwSe,\n    ResizeVertical,\n    ZoomIn,\n    ZoomOut,\n}","parent":null,"children":[{"krate":0,"index":5141},{"krate":0,"index":5143},{"krate":0,"index":5145},{"krate":0,"index":5147},{"krate":0,"index":5149},{"krate":0,"index":5151},{"krate":0,"index":5153},{"krate":0,"index":5155},{"krate":0,"index":5157},{"krate":0,"index":5159},{"krate":0,"index":5161},{"krate":0,"index":5163},{"krate":0,"index":5165},{"krate":0,"index":5167},{"krate":0,"index":5169},{"krate":0,"index":5171},{"krate":0,"index":5173},{"krate":0,"index":5175},{"krate":0,"index":5177},{"krate":0,"index":5179},{"krate":0,"index":5181},{"krate":0,"index":5183},{"krate":0,"index":5185},{"krate":0,"index":5187},{"krate":0,"index":5189}],"decl_id":null,"docs":" A mouse cursor icon.","sig":null,"attributes":[{"value":"/ A mouse cursor icon.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244867,"byte_end":244891,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244892,"byte_end":244895,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ egui emits a [`CursorIcon`] in [`PlatformOutput`] each frame as a request to the integration.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244896,"byte_end":244993,"line_start":162,"line_end":162,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244994,"byte_end":244997,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Loosely based on <https://developer.mozilla.org/en-US/docs/Web/CSS/cursor>.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244998,"byte_end":245077,"line_start":164,"line_end":164,"column_start":1,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":858},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":247033,"byte_end":247036,"line_start":249,"line_end":249,"column_start":15,"column_end":18},"name":"ALL","qualname":"::data::output::CursorIcon::ALL","value":"[CursorIcon; ]","parent":{"krate":0,"index":857},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5200},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":248240,"byte_end":248247,"line_start":291,"line_end":291,"column_start":5,"column_end":12},"name":"Clicked","qualname":"::data::output::OutputEvent::Clicked","value":"OutputEvent::Clicked(WidgetInfo)","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5203},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":248301,"byte_end":248314,"line_start":293,"line_end":293,"column_start":5,"column_end":18},"name":"DoubleClicked","qualname":"::data::output::OutputEvent::DoubleClicked","value":"OutputEvent::DoubleClicked(WidgetInfo)","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5206},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":248385,"byte_end":248396,"line_start":295,"line_end":295,"column_start":5,"column_end":16},"name":"FocusGained","qualname":"::data::output::OutputEvent::FocusGained","value":"OutputEvent::FocusGained(WidgetInfo)","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":" A widget gained keyboard focus (by tab key).\n","sig":null,"attributes":[{"value":"/ A widget gained keyboard focus (by tab key).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":248332,"byte_end":248380,"line_start":294,"line_end":294,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5209},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":248449,"byte_end":248469,"line_start":297,"line_end":297,"column_start":5,"column_end":25},"name":"TextSelectionChanged","qualname":"::data::output::OutputEvent::TextSelectionChanged","value":"OutputEvent::TextSelectionChanged(WidgetInfo)","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5212},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":248520,"byte_end":248532,"line_start":299,"line_end":299,"column_start":5,"column_end":17},"name":"ValueChanged","qualname":"::data::output::OutputEvent::ValueChanged","value":"OutputEvent::ValueChanged(WidgetInfo)","parent":{"krate":0,"index":5199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5199},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":248193,"byte_end":248204,"line_start":289,"line_end":289,"column_start":10,"column_end":21},"name":"OutputEvent","qualname":"::data::output::OutputEvent","value":"pub enum OutputEvent {\n    Clicked(WidgetInfo),\n    DoubleClicked(WidgetInfo),\n    FocusGained(WidgetInfo),\n    TextSelectionChanged(WidgetInfo),\n    ValueChanged(WidgetInfo),\n}","parent":null,"children":[{"krate":0,"index":5200},{"krate":0,"index":5203},{"krate":0,"index":5206},{"krate":0,"index":5209},{"krate":0,"index":5212}],"decl_id":null,"docs":" Things that happened during this frame that the integration may be interested in.","sig":null,"attributes":[{"value":"/ Things that happened during this frame that the integration may be interested in.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":247899,"byte_end":247984,"line_start":284,"line_end":284,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":247985,"byte_end":247988,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ In particular, these events may be useful for accessability, i.e. for screen readers.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":247989,"byte_end":248078,"line_start":286,"line_end":286,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":5221},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249275,"byte_end":249285,"line_start":317,"line_end":317,"column_start":12,"column_end":22},"name":"WidgetInfo","qualname":"::data::output::WidgetInfo","value":"WidgetInfo { typ, enabled, label, current_text_value, prev_text_value, selected, value, text_selection }","parent":null,"children":[{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227},{"krate":0,"index":5228},{"krate":0,"index":5229}],"decl_id":null,"docs":" Describes a widget such as a [`crate::Button`] or a [`crate::TextEdit`].\n","sig":null,"attributes":[{"value":"/ Describes a widget such as a [`crate::Button`] or a [`crate::TextEdit`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249082,"byte_end":249158,"line_start":314,"line_end":314,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":5222},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249332,"byte_end":249335,"line_start":319,"line_end":319,"column_start":9,"column_end":12},"name":"typ","qualname":"::data::output::WidgetInfo::typ","value":"WidgetType","parent":{"krate":0,"index":5221},"children":[],"decl_id":null,"docs":" The type of widget this is.\n","sig":null,"attributes":[{"value":"/ The type of widget this is.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249292,"byte_end":249323,"line_start":318,"line_end":318,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5223},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249395,"byte_end":249402,"line_start":321,"line_end":321,"column_start":9,"column_end":16},"name":"enabled","qualname":"::data::output::WidgetInfo::enabled","value":"bool","parent":{"krate":0,"index":5221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5224},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249471,"byte_end":249476,"line_start":323,"line_end":323,"column_start":9,"column_end":14},"name":"label","qualname":"::data::output::WidgetInfo::label","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5221},"children":[],"decl_id":null,"docs":" The text on labels, buttons, checkboxes etc.\n","sig":null,"attributes":[{"value":"/ The text on labels, buttons, checkboxes etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249414,"byte_end":249462,"line_start":322,"line_end":322,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5225},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249570,"byte_end":249588,"line_start":325,"line_end":325,"column_start":9,"column_end":27},"name":"current_text_value","qualname":"::data::output::WidgetInfo::current_text_value","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5221},"children":[],"decl_id":null,"docs":" The contents of some editable text (for `TextEdit` fields).\n","sig":null,"attributes":[{"value":"/ The contents of some editable text (for `TextEdit` fields).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249498,"byte_end":249561,"line_start":324,"line_end":324,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":5226},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249646,"byte_end":249661,"line_start":327,"line_end":327,"column_start":9,"column_end":24},"name":"prev_text_value","qualname":"::data::output::WidgetInfo::prev_text_value","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":5221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5227},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249746,"byte_end":249754,"line_start":329,"line_end":329,"column_start":9,"column_end":17},"name":"selected","qualname":"::data::output::WidgetInfo::selected","value":"std::option::Option<bool>","parent":{"krate":0,"index":5221},"children":[],"decl_id":null,"docs":" The current value of checkboxes and radio buttons.\n","sig":null,"attributes":[{"value":"/ The current value of checkboxes and radio buttons.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249683,"byte_end":249737,"line_start":328,"line_end":328,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249820,"byte_end":249825,"line_start":331,"line_end":331,"column_start":9,"column_end":14},"name":"value","qualname":"::data::output::WidgetInfo::value","value":"std::option::Option<f64>","parent":{"krate":0,"index":5221},"children":[],"decl_id":null,"docs":" The current value of sliders etc.\n","sig":null,"attributes":[{"value":"/ The current value of sliders etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249774,"byte_end":249811,"line_start":330,"line_end":330,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5229},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":249917,"byte_end":249931,"line_start":333,"line_end":333,"column_start":9,"column_end":23},"name":"text_selection","qualname":"::data::output::WidgetInfo::text_selection","value":"std::option::Option<std::ops::RangeInclusive<usize>>","parent":{"krate":0,"index":5221},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":251113,"byte_end":251116,"line_start":378,"line_end":378,"column_start":12,"column_end":15},"name":"new","qualname":"<WidgetInfo>::new","value":"pub fn new(WidgetType) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":251461,"byte_end":251468,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"labeled","qualname":"<WidgetInfo>::labeled","value":"pub fn labeled<impl ToString: ToString>(WidgetType, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":251409,"byte_end":251449,"line_start":391,"line_end":391,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":251717,"byte_end":251725,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"selected","qualname":"<WidgetInfo>::selected","value":"pub fn selected<impl ToString: ToString>(WidgetType, bool, impl ToString)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" checkboxes, radio-buttons etc\n","sig":null,"attributes":[{"value":"/ checkboxes, radio-buttons etc","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":251627,"byte_end":251660,"line_start":399,"line_end":399,"column_start":5,"column_end":38}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":251665,"byte_end":251705,"line_start":400,"line_end":400,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":251945,"byte_end":251955,"line_start":409,"line_end":409,"column_start":12,"column_end":22},"name":"drag_value","qualname":"<WidgetInfo>::drag_value","value":"pub fn drag_value(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":252145,"byte_end":252151,"line_start":417,"line_end":417,"column_start":12,"column_end":18},"name":"slider","qualname":"<WidgetInfo>::slider","value":"pub fn slider<impl ToString: ToString>(f64, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":252093,"byte_end":252133,"line_start":416,"line_end":416,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":252469,"byte_end":252478,"line_start":427,"line_end":427,"column_start":12,"column_end":21},"name":"text_edit","qualname":"<WidgetInfo>::text_edit","value":"pub fn text_edit<impl ToString: ToString,\n                 impl ToString: ToString>(impl ToString, impl ToString)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":252417,"byte_end":252457,"line_start":426,"line_end":426,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":253013,"byte_end":253035,"line_start":443,"line_end":443,"column_start":12,"column_end":34},"name":"text_selection_changed","qualname":"<WidgetInfo>::text_selection_changed","value":"pub fn text_selection_changed<impl ToString: ToString>(std::ops::RangeInclusive<usize>,\n                                                       impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":252961,"byte_end":253001,"line_start":442,"line_end":442,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":253438,"byte_end":253449,"line_start":455,"line_end":455,"column_start":12,"column_end":23},"name":"description","qualname":"<WidgetInfo>::description","value":"pub fn description(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" This can be used by a text-to-speech system to describe the widget.\n","sig":null,"attributes":[{"value":"/ This can be used by a text-to-speech system to describe the widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":253355,"byte_end":253426,"line_start":454,"line_end":454,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269396,"byte_end":269400,"line_start":259,"line_end":259,"column_start":12,"column_end":16},"name":"Grid","qualname":"::grid::Grid","value":"Grid {  }","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943}],"decl_id":null,"docs":" A simple grid layout.","sig":null,"attributes":[{"value":"/ A simple grid layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268513,"byte_end":268538,"line_start":232,"line_end":232,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268539,"byte_end":268542,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ The cells are always layed out left to right, top-down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268543,"byte_end":268602,"line_start":234,"line_end":234,"column_start":1,"column_end":60}},{"value":"/ The contents of each cell will be aligned to the left and center.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268603,"byte_end":268672,"line_start":235,"line_end":235,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268673,"byte_end":268676,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ If you want to add multiple widgets to a cell you need to group them with","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268677,"byte_end":268754,"line_start":237,"line_end":237,"column_start":1,"column_end":78}},{"value":"/ [`Ui::horizontal`], [`Ui::vertical`] etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268755,"byte_end":268800,"line_start":238,"line_end":238,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268801,"byte_end":268804,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268805,"byte_end":268812,"line_start":240,"line_end":240,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268813,"byte_end":268845,"line_start":241,"line_end":241,"column_start":1,"column_end":33}},{"value":"/ egui::Grid::new(\"some_unique_id\").show(ui, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268846,"byte_end":268899,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/     ui.label(\"First row, first column\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268900,"byte_end":268944,"line_start":243,"line_end":243,"column_start":1,"column_end":45}},{"value":"/     ui.label(\"First row, second column\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268945,"byte_end":268990,"line_start":244,"line_end":244,"column_start":1,"column_end":46}},{"value":"/     ui.end_row();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":268991,"byte_end":269012,"line_start":245,"line_end":245,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269013,"byte_end":269016,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     ui.label(\"Second row, first column\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269017,"byte_end":269062,"line_start":247,"line_end":247,"column_start":1,"column_end":46}},{"value":"/     ui.label(\"Second row, second column\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269063,"byte_end":269109,"line_start":248,"line_end":248,"column_start":1,"column_end":47}},{"value":"/     ui.label(\"Second row, third column\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269110,"byte_end":269155,"line_start":249,"line_end":249,"column_start":1,"column_end":46}},{"value":"/     ui.end_row();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269156,"byte_end":269177,"line_start":250,"line_end":250,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269178,"byte_end":269181,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/     ui.horizontal(|ui| { ui.label(\"Same\"); ui.label(\"cell\"); });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269182,"byte_end":269250,"line_start":252,"line_end":252,"column_start":1,"column_end":69}},{"value":"/     ui.label(\"Third row, second column\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269251,"byte_end":269296,"line_start":253,"line_end":253,"column_start":1,"column_end":46}},{"value":"/     ui.end_row();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269297,"byte_end":269318,"line_start":254,"line_end":254,"column_start":1,"column_end":22}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269319,"byte_end":269326,"line_start":255,"line_end":255,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269327,"byte_end":269336,"line_start":256,"line_end":256,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269337,"byte_end":269344,"line_start":257,"line_end":257,"column_start":1,"column_end":8}},{"value":"must_use = \"You should call .show()\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269345,"byte_end":269384,"line_start":258,"line_end":258,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269702,"byte_end":269705,"line_start":272,"line_end":272,"column_start":12,"column_end":15},"name":"new","qualname":"<Grid>::new","value":"pub fn new<impl std::hash::Hash: std::hash::Hash>(impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Grid`] with a locally unique identifier.\n","sig":null,"attributes":[{"value":"/ Create a new [`Grid`] with a locally unique identifier.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269631,"byte_end":269690,"line_start":271,"line_end":271,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270170,"byte_end":270181,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"num_columns","qualname":"<Grid>::num_columns","value":"pub fn num_columns(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Setting this will allow the last column to expand to take up the rest of the space of the parent [`Ui`].\n","sig":null,"attributes":[{"value":"/ Setting this will allow the last column to expand to take up the rest of the space of the parent [`Ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270050,"byte_end":270158,"line_start":285,"line_end":285,"column_start":5,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270448,"byte_end":270455,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"striped","qualname":"<Grid>::striped","value":"pub fn striped(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If `true`, add a subtle background color to every other row.","sig":null,"attributes":[{"value":"/ If `true`, add a subtle background color to every other row.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270292,"byte_end":270356,"line_start":291,"line_end":291,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270361,"byte_end":270364,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This can make a table easier to read.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270369,"byte_end":270410,"line_start":293,"line_end":293,"column_start":5,"column_end":46}},{"value":"/ Default: `false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270415,"byte_end":270436,"line_start":294,"line_end":294,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270659,"byte_end":270672,"line_start":302,"line_end":302,"column_start":12,"column_end":25},"name":"min_col_width","qualname":"<Grid>::min_col_width","value":"pub fn min_col_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set minimum width of each column.\n Default: [`crate::style::Spacing::interact_size`]`.x`.\n","sig":null,"attributes":[{"value":"/ Set minimum width of each column.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270547,"byte_end":270584,"line_start":300,"line_end":300,"column_start":5,"column_end":42}},{"value":"/ Default: [`crate::style::Spacing::interact_size`]`.x`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270589,"byte_end":270647,"line_start":301,"line_end":301,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270897,"byte_end":270911,"line_start":309,"line_end":309,"column_start":12,"column_end":26},"name":"min_row_height","qualname":"<Grid>::min_row_height","value":"pub fn min_row_height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set minimum height of each row.\n Default: [`crate::style::Spacing::interact_size`]`.y`.\n","sig":null,"attributes":[{"value":"/ Set minimum height of each row.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270787,"byte_end":270822,"line_start":307,"line_end":307,"column_start":5,"column_end":40}},{"value":"/ Default: [`crate::style::Spacing::interact_size`]`.y`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":270827,"byte_end":270885,"line_start":308,"line_end":308,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271100,"byte_end":271113,"line_start":315,"line_end":315,"column_start":12,"column_end":25},"name":"max_col_width","qualname":"<Grid>::max_col_width","value":"pub fn max_col_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set soft maximum width (wrapping width) of each column.\n","sig":null,"attributes":[{"value":"/ Set soft maximum width (wrapping width) of each column.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271029,"byte_end":271088,"line_start":314,"line_end":314,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271331,"byte_end":271338,"line_start":322,"line_end":322,"column_start":12,"column_end":19},"name":"spacing","qualname":"<Grid>::spacing","value":"pub fn spacing<impl Into<Vec2>: Into<Vec2>>(Self, impl Into<Vec2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set spacing between columns/rows.\n Default: [`crate::style::Spacing::item_spacing`].\n","sig":null,"attributes":[{"value":"/ Set spacing between columns/rows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271224,"byte_end":271261,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/ Default: [`crate::style::Spacing::item_spacing`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271266,"byte_end":271319,"line_start":321,"line_end":321,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271606,"byte_end":271615,"line_start":329,"line_end":329,"column_start":12,"column_end":21},"name":"start_row","qualname":"<Grid>::start_row","value":"pub fn start_row(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Change which row number the grid starts on.\n This can be useful when you have a large `Grid` inside of [`ScrollArea::show_rows`].\n","sig":null,"attributes":[{"value":"/ Change which row number the grid starts on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271454,"byte_end":271501,"line_start":327,"line_end":327,"column_start":5,"column_end":52}},{"value":"/ This can be useful when you have a large `Grid` inside of [`ScrollArea::show_rows`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271506,"byte_end":271594,"line_start":328,"line_end":328,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271735,"byte_end":271739,"line_start":336,"line_end":336,"column_start":12,"column_end":16},"name":"show","qualname":"<Grid>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &mut Ui, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5260},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274961,"byte_end":274963,"line_start":30,"line_end":30,"column_start":12,"column_end":14},"name":"Id","qualname":"::id::Id","value":"","parent":null,"children":[],"decl_id":null,"docs":" egui tracks widgets frame-to-frame using `Id`s.","sig":null,"attributes":[{"value":"/ egui tracks widgets frame-to-frame using `Id`s.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273523,"byte_end":273574,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273575,"byte_end":273578,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ For instance, if you start dragging a slider one frame, egui stores","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273579,"byte_end":273650,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ the sliders `Id` as the current active id so that next frame when","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273651,"byte_end":273720,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ you move the mouse the same slider changes, even if the mouse has","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273721,"byte_end":273790,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ moved outside the slider.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273791,"byte_end":273820,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273821,"byte_end":273824,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ For some widgets `Id`s are also used to persist some state about the","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273825,"byte_end":273897,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ widgets, such as Window position or whether not a collapsing header region is open.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273898,"byte_end":273985,"line_start":11,"line_end":11,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273986,"byte_end":273989,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This implies that the `Id`s must be unique.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":273990,"byte_end":274037,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274038,"byte_end":274041,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ For simple things like sliders and buttons that don't have any memory and","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274042,"byte_end":274119,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ doesn't move we can use the location of the widget as a source of identity.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274120,"byte_end":274199,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ For instance, a slider only needs a unique and persistent ID while you are","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274200,"byte_end":274278,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ dragging the slider. As long as it is still while moving, that is fine.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274279,"byte_end":274354,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274355,"byte_end":274358,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ For things that need to persist state even after moving (windows, collapsing headers)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274359,"byte_end":274448,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ the location of the widgets is obviously not good enough. For instance,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274449,"byte_end":274524,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ a collapsing region needs to remember whether or not it is open even","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274525,"byte_end":274597,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ if the layout next frame is different and the collapsing is not lower down","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274598,"byte_end":274676,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ on the screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274677,"byte_end":274695,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274696,"byte_end":274699,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Then there are widgets that need no identifiers at all, like labels,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274700,"byte_end":274772,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ because they have no state nor are interacted with.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274773,"byte_end":274828,"line_start":27,"line_end":27,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":275291,"byte_end":275295,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"null","qualname":"<Id>::null","value":"pub fn null() -> Self","parent":null,"children":[],"decl_id":null,"docs":" A special `Id`, in particular as a key to [`crate::Memory::data`]\n for when there is no particular widget to attach the data.","sig":null,"attributes":[{"value":"/ A special `Id`, in particular as a key to [`crate::Memory::data`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274985,"byte_end":275054,"line_start":33,"line_end":33,"column_start":5,"column_end":74}},{"value":"/ for when there is no particular widget to attach the data.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":275059,"byte_end":275121,"line_start":34,"line_end":34,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":275126,"byte_end":275129,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The null `Id` is still a valid id to use in all circumstances,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":275134,"byte_end":275200,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ though obviously it will lead to a lot of collisions if you do use it!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":275205,"byte_end":275279,"line_start":37,"line_end":37,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":275485,"byte_end":275488,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<Id>::new","value":"pub fn new<impl std::hash::Hash: std::hash::Hash>(impl std::hash::Hash) -> Id","parent":null,"children":[],"decl_id":null,"docs":" Generate a new `Id` by hashing some source (e.g. a string or integer).\n","sig":null,"attributes":[{"value":"/ Generate a new `Id` by hashing some source (e.g. a string or integer).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":275399,"byte_end":275473,"line_start":46,"line_end":46,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":275791,"byte_end":275795,"line_start":55,"line_end":55,"column_start":12,"column_end":16},"name":"with","qualname":"<Id>::with","value":"pub fn with<impl std::hash::Hash: std::hash::Hash>(Self, impl std::hash::Hash)\n-> Id","parent":null,"children":[],"decl_id":null,"docs":" Generate a new `Id` by hashing the parent `Id` and the given argument.\n","sig":null,"attributes":[{"value":"/ Generate a new `Id` by hashing the parent `Id` and the given argument.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":275705,"byte_end":275779,"line_start":54,"line_end":54,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":276092,"byte_end":276110,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"short_debug_format","qualname":"<Id>::short_debug_format","value":"pub fn short_debug_format(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Short and readable summary\n","sig":null,"attributes":[{"value":"/ Short and readable summary","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":276050,"byte_end":276080,"line_start":63,"line_end":63,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":276570,"byte_end":276578,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"IdHasher","qualname":"::id::IdHasher","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5281},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":277859,"byte_end":277871,"line_start":134,"line_end":134,"column_start":12,"column_end":24},"name":"BuilIdHasher","qualname":"::id::BuilIdHasher","value":"BuilIdHasher {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":278178,"byte_end":278183,"line_start":146,"line_end":146,"column_start":10,"column_end":15},"name":"IdMap","qualname":"::id::IdMap","value":"std::collections::HashMap<Id, V, BuilIdHasher>","parent":null,"children":[],"decl_id":null,"docs":" `IdMap<V>` is a `HashMap<Id, V>` optimized by knowing that `Id` has good entropy, and doesn't need more hashing.\n","sig":null,"attributes":[{"value":"/ `IdMap<V>` is a `HashMap<Id, V>` optimized by knowing that `Id` has good entropy, and doesn't need more hashing.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":278052,"byte_end":278168,"line_start":145,"line_end":145,"column_start":1,"column_end":117}}]},{"kind":"Struct","id":{"krate":0,"index":5289},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":305971,"byte_end":305985,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"MultiTouchInfo","qualname":"::input_state::touch_state::MultiTouchInfo","value":"MultiTouchInfo { start_time, start_pos, num_touches, zoom_delta, zoom_delta_2d, rotation_delta, translation_delta, force }","parent":null,"children":[{"krate":0,"index":5290},{"krate":0,"index":5291},{"krate":0,"index":5292},{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5295},{"krate":0,"index":5296},{"krate":0,"index":5297}],"decl_id":null,"docs":" All you probably need to know about a multi-touch gesture.\n","sig":null,"attributes":[{"value":"/ All you probably need to know about a multi-touch gesture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":305856,"byte_end":305918,"line_start":9,"line_end":9,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5290},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306044,"byte_end":306054,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"name":"start_time","qualname":"::input_state::touch_state::MultiTouchInfo::start_time","value":"f64","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Point in time when the gesture started.\n","sig":null,"attributes":[{"value":"/ Point in time when the gesture started.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":305992,"byte_end":306035,"line_start":12,"line_end":12,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":5291},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306135,"byte_end":306144,"line_start":16,"line_end":16,"column_start":9,"column_end":18},"name":"start_pos","qualname":"::input_state::touch_state::MultiTouchInfo::start_pos","value":"epaint::Pos2","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Position of the pointer at the time the gesture started.\n","sig":null,"attributes":[{"value":"/ Position of the pointer at the time the gesture started.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306066,"byte_end":306126,"line_start":15,"line_end":15,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5292},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306293,"byte_end":306304,"line_start":20,"line_end":20,"column_start":9,"column_end":20},"name":"num_touches","qualname":"::input_state::touch_state::MultiTouchInfo::num_touches","value":"usize","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Number of touches (fingers) on the surface. Value is ≥ 2 since for a single touch no\n `MultiTouchInfo` is created.\n","sig":null,"attributes":[{"value":"/ Number of touches (fingers) on the surface. Value is ≥ 2 since for a single touch no","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306157,"byte_end":306247,"line_start":18,"line_end":18,"column_start":5,"column_end":93}},{"value":"/ `MultiTouchInfo` is created.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306252,"byte_end":306284,"line_start":19,"line_end":19,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5293},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306476,"byte_end":306486,"line_start":26,"line_end":26,"column_start":9,"column_end":19},"name":"zoom_delta","qualname":"::input_state::touch_state::MultiTouchInfo::zoom_delta","value":"f32","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Proportional zoom factor (pinch gesture).\n * `zoom = 1`: no change\n * `zoom < 1`: pinch together\n * `zoom > 1`: pinch spread\n","sig":null,"attributes":[{"value":"/ Proportional zoom factor (pinch gesture).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306318,"byte_end":306363,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/ * `zoom = 1`: no change","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306368,"byte_end":306395,"line_start":23,"line_end":23,"column_start":5,"column_end":32}},{"value":"/ * `zoom < 1`: pinch together","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306400,"byte_end":306432,"line_start":24,"line_end":24,"column_start":5,"column_end":37}},{"value":"/ * `zoom > 1`: pinch spread","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306437,"byte_end":306467,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5294},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306873,"byte_end":306886,"line_start":37,"line_end":37,"column_start":9,"column_end":22},"name":"zoom_delta_2d","qualname":"::input_state::touch_state::MultiTouchInfo::zoom_delta_2d","value":"epaint::Vec2","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" 2D non-proportional zoom factor (pinch gesture).","sig":null,"attributes":[{"value":"/ 2D non-proportional zoom factor (pinch gesture).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306498,"byte_end":306550,"line_start":28,"line_end":28,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306555,"byte_end":306558,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ For horizontal pinches, this will return `[z, 1]`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306563,"byte_end":306617,"line_start":30,"line_end":30,"column_start":5,"column_end":59}},{"value":"/ for vertical pinches this will return `[1, z]`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306622,"byte_end":306673,"line_start":31,"line_end":31,"column_start":5,"column_end":56}},{"value":"/ and otherwise this will return `[z, z]`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306678,"byte_end":306722,"line_start":32,"line_end":32,"column_start":5,"column_end":49}},{"value":"/ where `z` is the zoom factor:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306727,"byte_end":306760,"line_start":33,"line_end":33,"column_start":5,"column_end":38}},{"value":"/ * `zoom = 1`: no change","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306765,"byte_end":306792,"line_start":34,"line_end":34,"column_start":5,"column_end":32}},{"value":"/ * `zoom < 1`: pinch together","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306797,"byte_end":306829,"line_start":35,"line_end":35,"column_start":5,"column_end":37}},{"value":"/ * `zoom > 1`: pinch spread","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306834,"byte_end":306864,"line_start":36,"line_end":36,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":5295},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307163,"byte_end":307177,"line_start":42,"line_end":42,"column_start":9,"column_end":23},"name":"rotation_delta","qualname":"::input_state::touch_state::MultiTouchInfo::rotation_delta","value":"f32","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Rotation in radians. Moving fingers around each other will change this value. This is a\n relative value, comparing the orientation of fingers in the current frame with the previous\n frame. If all fingers are resting, this value is `0.0`.\n","sig":null,"attributes":[{"value":"/ Rotation in radians. Moving fingers around each other will change this value. This is a","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306899,"byte_end":306990,"line_start":39,"line_end":39,"column_start":5,"column_end":96}},{"value":"/ relative value, comparing the orientation of fingers in the current frame with the previous","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":306995,"byte_end":307090,"line_start":40,"line_end":40,"column_start":5,"column_end":100}},{"value":"/ frame. If all fingers are resting, this value is `0.0`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307095,"byte_end":307154,"line_start":41,"line_end":41,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":5296},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307820,"byte_end":307837,"line_start":52,"line_end":52,"column_start":9,"column_end":26},"name":"translation_delta","qualname":"::input_state::touch_state::MultiTouchInfo::translation_delta","value":"epaint::Vec2","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Relative movement (comparing previous frame and current frame) of the average position of\n all touch points. Without movement this value is `Vec2::ZERO`.","sig":null,"attributes":[{"value":"/ Relative movement (comparing previous frame and current frame) of the average position of","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307189,"byte_end":307282,"line_start":44,"line_end":44,"column_start":5,"column_end":98}},{"value":"/ all touch points. Without movement this value is `Vec2::ZERO`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307287,"byte_end":307353,"line_start":45,"line_end":45,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307358,"byte_end":307361,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that this may not necessarily be measured in screen points (although it _will_ be for","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307366,"byte_end":307460,"line_start":47,"line_end":47,"column_start":5,"column_end":99}},{"value":"/ most mobile devices). In general (depending on the touch device), touch coordinates cannot","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307465,"byte_end":307559,"line_start":48,"line_end":48,"column_start":5,"column_end":99}},{"value":"/ be directly mapped to the screen. A touch always is considered to start at the position of","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307564,"byte_end":307658,"line_start":49,"line_end":49,"column_start":5,"column_end":99}},{"value":"/ the pointer, but touch movement is always measured in the units delivered by the device,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307663,"byte_end":307755,"line_start":50,"line_end":50,"column_start":5,"column_end":97}},{"value":"/ and may depend on hardware and system settings.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307760,"byte_end":307811,"line_start":51,"line_end":51,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5297},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":308320,"byte_end":308325,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"force","qualname":"::input_state::touch_state::MultiTouchInfo::force","value":"f32","parent":{"krate":0,"index":5289},"children":[],"decl_id":null,"docs":" Current force of the touch (average of the forces of the individual fingers). This is a\n value in the interval `[0.0 .. =1.0]`.","sig":null,"attributes":[{"value":"/ Current force of the touch (average of the forces of the individual fingers). This is a","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307850,"byte_end":307941,"line_start":54,"line_end":54,"column_start":5,"column_end":96}},{"value":"/ value in the interval `[0.0 .. =1.0]`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307946,"byte_end":307988,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":307993,"byte_end":307996,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ Note 1: A value of `0.0` either indicates a very light touch, or it means that the device","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":308001,"byte_end":308094,"line_start":57,"line_end":57,"column_start":5,"column_end":98}},{"value":"/ is not capable of measuring the touch force at all.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":308099,"byte_end":308154,"line_start":58,"line_end":58,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":308159,"byte_end":308162,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note 2: Just increasing the physical pressure without actually moving the finger may not","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":308167,"byte_end":308259,"line_start":60,"line_end":60,"column_start":5,"column_end":97}},{"value":"/ necessarily lead to a change of this value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":308264,"byte_end":308311,"line_start":61,"line_end":61,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":5353},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279165,"byte_end":279175,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"InputState","qualname":"::input_state::InputState","value":"InputState { raw, pointer, scroll_delta, screen_rect, pixels_per_point, max_texture_side, time, unstable_dt, predicted_dt, modifiers, keys_down, events }","parent":null,"children":[{"krate":0,"index":5354},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5358},{"krate":0,"index":5359},{"krate":0,"index":5360},{"krate":0,"index":5361},{"krate":0,"index":5362},{"krate":0,"index":5363},{"krate":0,"index":5364},{"krate":0,"index":5365},{"krate":0,"index":5366},{"krate":0,"index":5367}],"decl_id":null,"docs":" Input state that egui updates each frame.","sig":null,"attributes":[{"value":"/ Input state that egui updates each frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":278936,"byte_end":278981,"line_start":20,"line_end":20,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":278982,"byte_end":278985,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ You can check if `egui` is using the inputs using","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":278986,"byte_end":279039,"line_start":22,"line_end":22,"column_start":1,"column_end":54}},{"value":"/ [`crate::Context::wants_pointer_input`] and [`crate::Context::wants_keyboard_input`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279040,"byte_end":279129,"line_start":23,"line_end":23,"column_start":1,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":5354},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279244,"byte_end":279247,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"raw","qualname":"::input_state::InputState::raw","value":"data::input::RawInput","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" The raw input we got this frame from the backend.\n","sig":null,"attributes":[{"value":"/ The raw input we got this frame from the backend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279182,"byte_end":279235,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5355},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279361,"byte_end":279368,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"pointer","qualname":"::input_state::InputState::pointer","value":"input_state::PointerState","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" State of the mouse or simple touch gestures which can be mapped to mouse operations.\n","sig":null,"attributes":[{"value":"/ State of the mouse or simple touch gestures which can be mapped to mouse operations.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279264,"byte_end":279352,"line_start":29,"line_end":29,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":5357},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279657,"byte_end":279669,"line_start":37,"line_end":37,"column_start":9,"column_end":21},"name":"scroll_delta","qualname":"::input_state::InputState::scroll_delta","value":"epaint::Vec2","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" How many pixels the user scrolled.\n","sig":null,"attributes":[{"value":"/ How many pixels the user scrolled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279610,"byte_end":279648,"line_start":36,"line_end":36,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5359},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279951,"byte_end":279962,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"screen_rect","qualname":"::input_state::InputState::screen_rect","value":"epaint::Rect","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" Position and size of the egui area.\n","sig":null,"attributes":[{"value":"/ Position and size of the egui area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279903,"byte_end":279942,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5360},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280054,"byte_end":280070,"line_start":50,"line_end":50,"column_start":9,"column_end":25},"name":"pixels_per_point","qualname":"::input_state::InputState::pixels_per_point","value":"f32","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" Also known as device pixel ratio, > 1 for high resolution screens.\n","sig":null,"attributes":[{"value":"/ Also known as device pixel ratio, > 1 for high resolution screens.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":279975,"byte_end":280045,"line_start":49,"line_end":49,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":5361},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280178,"byte_end":280194,"line_start":55,"line_end":55,"column_start":9,"column_end":25},"name":"max_texture_side","qualname":"::input_state::InputState::max_texture_side","value":"usize","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" Maximum size of one side of a texture.","sig":null,"attributes":[{"value":"/ Maximum size of one side of a texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280082,"byte_end":280124,"line_start":52,"line_end":52,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280129,"byte_end":280132,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ This depends on the backend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280137,"byte_end":280169,"line_start":54,"line_end":54,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5362},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280279,"byte_end":280283,"line_start":58,"line_end":58,"column_start":9,"column_end":13},"name":"time","qualname":"::input_state::InputState::time","value":"f64","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" Time in seconds. Relative to whatever. Used for animation.\n","sig":null,"attributes":[{"value":"/ Time in seconds. Relative to whatever. Used for animation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280208,"byte_end":280270,"line_start":57,"line_end":57,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":5363},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280504,"byte_end":280515,"line_start":64,"line_end":64,"column_start":9,"column_end":20},"name":"unstable_dt","qualname":"::input_state::InputState::unstable_dt","value":"f32","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" Time since last frame, in seconds.","sig":null,"attributes":[{"value":"/ Time since last frame, in seconds.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280295,"byte_end":280333,"line_start":60,"line_end":60,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280338,"byte_end":280341,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This can be very unstable in reactive mode (when we don't paint each frame)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280346,"byte_end":280425,"line_start":62,"line_end":62,"column_start":5,"column_end":84}},{"value":"/ so it can be smart to use e.g. `unstable_dt.min(1.0 / 30.0)`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280430,"byte_end":280495,"line_start":63,"line_end":63,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":5364},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280693,"byte_end":280705,"line_start":68,"line_end":68,"column_start":9,"column_end":21},"name":"predicted_dt","qualname":"::input_state::InputState::predicted_dt","value":"f32","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" Used for animations to get instant feedback (avoid frame delay).\n Should be set to the expected time between frames when painting at vsync speeds.\n","sig":null,"attributes":[{"value":"/ Used for animations to get instant feedback (avoid frame delay).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280527,"byte_end":280595,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/ Should be set to the expected time between frames when painting at vsync speeds.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280600,"byte_end":280684,"line_start":67,"line_end":67,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":5365},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280785,"byte_end":280794,"line_start":71,"line_end":71,"column_start":9,"column_end":18},"name":"modifiers","qualname":"::input_state::InputState::modifiers","value":"data::input::Modifiers","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" Which modifier keys are down at the start of the frame?\n","sig":null,"attributes":[{"value":"/ Which modifier keys are down at the start of the frame?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280717,"byte_end":280776,"line_start":70,"line_end":70,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":5366},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280868,"byte_end":280877,"line_start":74,"line_end":74,"column_start":9,"column_end":18},"name":"keys_down","qualname":"::input_state::InputState::keys_down","value":"std::collections::HashSet<data::input::Key>","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5367},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280946,"byte_end":280952,"line_start":77,"line_end":77,"column_start":9,"column_end":15},"name":"events","qualname":"::input_state::InputState::events","value":"std::vec::Vec<data::input::Event>","parent":{"krate":0,"index":5353},"children":[],"decl_id":null,"docs":" In-order events received this frame\n","sig":null,"attributes":[{"value":"/ In-order events received this frame","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280898,"byte_end":280937,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":281688,"byte_end":281699,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"begin_frame","qualname":"<InputState>::begin_frame","value":"pub fn begin_frame(Self, RawInput) -> InputState","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":281665,"byte_end":281676,"line_start":102,"line_end":102,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":283588,"byte_end":283599,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"screen_rect","qualname":"<InputState>::screen_rect","value":"pub fn screen_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":283559,"byte_end":283576,"line_start":154,"line_end":154,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":283865,"byte_end":283875,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"zoom_delta","qualname":"<InputState>::zoom_delta","value":"pub fn zoom_delta(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Zoom scale factor this frame (e.g. from ctrl-scroll or pinch gesture).\n * `zoom = 1`: no change\n * `zoom < 1`: pinch together\n * `zoom > 1`: pinch spread\n","sig":null,"attributes":[{"value":"/ Zoom scale factor this frame (e.g. from ctrl-scroll or pinch gesture).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":283653,"byte_end":283727,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ * `zoom = 1`: no change","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":283732,"byte_end":283759,"line_start":160,"line_end":160,"column_start":5,"column_end":32}},{"value":"/ * `zoom < 1`: pinch together","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":283764,"byte_end":283796,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ * `zoom > 1`: pinch spread","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":283801,"byte_end":283831,"line_start":162,"line_end":162,"column_start":5,"column_end":35}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":283836,"byte_end":283853,"line_start":163,"line_end":163,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":285021,"byte_end":285034,"line_start":187,"line_end":187,"column_start":12,"column_end":25},"name":"zoom_delta_2d","qualname":"<InputState>::zoom_delta_2d","value":"pub fn zoom_delta_2d(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" 2D non-proportional zoom scale factor this frame (e.g. from ctrl-scroll or pinch gesture).","sig":null,"attributes":[{"value":"/ 2D non-proportional zoom scale factor this frame (e.g. from ctrl-scroll or pinch gesture).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284340,"byte_end":284434,"line_start":173,"line_end":173,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284439,"byte_end":284442,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ For multitouch devices the user can do a horizontal or vertical pinch gesture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284447,"byte_end":284529,"line_start":175,"line_end":175,"column_start":5,"column_end":87}},{"value":"/ In these cases a non-proportional zoom factor is a available.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284534,"byte_end":284599,"line_start":176,"line_end":176,"column_start":5,"column_end":70}},{"value":"/ In other cases, this reverts to `Vec2::splat(self.zoom_delta())`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284604,"byte_end":284673,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284678,"byte_end":284681,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ For horizontal pinches, this will return `[z, 1]`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284686,"byte_end":284740,"line_start":179,"line_end":179,"column_start":5,"column_end":59}},{"value":"/ for vertical pinches this will return `[1, z]`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284745,"byte_end":284796,"line_start":180,"line_end":180,"column_start":5,"column_end":56}},{"value":"/ and otherwise this will return `[z, z]`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284801,"byte_end":284845,"line_start":181,"line_end":181,"column_start":5,"column_end":49}},{"value":"/ where `z` is the zoom factor:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284850,"byte_end":284883,"line_start":182,"line_end":182,"column_start":5,"column_end":38}},{"value":"/ * `zoom = 1`: no change","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284888,"byte_end":284915,"line_start":183,"line_end":183,"column_start":5,"column_end":32}},{"value":"/ * `zoom < 1`: pinch together","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284920,"byte_end":284952,"line_start":184,"line_end":184,"column_start":5,"column_end":37}},{"value":"/ * `zoom > 1`: pinch spread","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284957,"byte_end":284987,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":284992,"byte_end":285009,"line_start":186,"line_end":186,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":285554,"byte_end":285567,"line_start":198,"line_end":198,"column_start":12,"column_end":25},"name":"wants_repaint","qualname":"<InputState>::wants_repaint","value":"pub fn wants_repaint(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":285838,"byte_end":285849,"line_start":203,"line_end":203,"column_start":12,"column_end":23},"name":"consume_key","qualname":"<InputState>::consume_key","value":"pub fn consume_key(&mut Self, Modifiers, Key) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check for a key press. If found, `true` is returned and the key pressed is consumed, so that this will only return `true` once.\n","sig":null,"attributes":[{"value":"/ Check for a key press. If found, `true` is returned and the key pressed is consumed, so that this will only return `true` once.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":285695,"byte_end":285826,"line_start":202,"line_end":202,"column_start":5,"column_end":136}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":286413,"byte_end":286424,"line_start":225,"line_end":225,"column_start":12,"column_end":23},"name":"key_pressed","qualname":"<InputState>::key_pressed","value":"pub fn key_pressed(&Self, Key) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Was the given key pressed this frame?\n","sig":null,"attributes":[{"value":"/ Was the given key pressed this frame?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":286360,"byte_end":286401,"line_start":224,"line_end":224,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":286582,"byte_end":286593,"line_start":230,"line_end":230,"column_start":12,"column_end":23},"name":"num_presses","qualname":"<InputState>::num_presses","value":"pub fn num_presses(&Self, Key) -> usize","parent":null,"children":[],"decl_id":null,"docs":" How many times were the given key pressed this frame?\n","sig":null,"attributes":[{"value":"/ How many times were the given key pressed this frame?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":286513,"byte_end":286570,"line_start":229,"line_end":229,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287044,"byte_end":287052,"line_start":247,"line_end":247,"column_start":12,"column_end":20},"name":"key_down","qualname":"<InputState>::key_down","value":"pub fn key_down(&Self, Key) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the given key currently held down?\n","sig":null,"attributes":[{"value":"/ Is the given key currently held down?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":286991,"byte_end":287032,"line_start":246,"line_end":246,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287199,"byte_end":287211,"line_start":252,"line_end":252,"column_start":12,"column_end":24},"name":"key_released","qualname":"<InputState>::key_released","value":"pub fn key_released(&Self, Key) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Was the given key released this frame?\n","sig":null,"attributes":[{"value":"/ Was the given key released this frame?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287145,"byte_end":287187,"line_start":251,"line_end":251,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287627,"byte_end":287643,"line_start":267,"line_end":267,"column_start":12,"column_end":28},"name":"pixels_per_point","qualname":"<InputState>::pixels_per_point","value":"pub fn pixels_per_point(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Also known as device pixel ratio, > 1 for high resolution screens.\n","sig":null,"attributes":[{"value":"/ Also known as device pixel ratio, > 1 for high resolution screens.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287523,"byte_end":287593,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287598,"byte_end":287615,"line_start":266,"line_end":266,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287800,"byte_end":287819,"line_start":273,"line_end":273,"column_start":12,"column_end":31},"name":"physical_pixel_size","qualname":"<InputState>::physical_pixel_size","value":"pub fn physical_pixel_size(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Size of a physical pixel in logical gui coordinates (points).\n","sig":null,"attributes":[{"value":"/ Size of a physical pixel in logical gui coordinates (points).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287701,"byte_end":287766,"line_start":271,"line_end":271,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287771,"byte_end":287788,"line_start":272,"line_end":272,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288017,"byte_end":288027,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"aim_radius","qualname":"<InputState>::aim_radius","value":"pub fn aim_radius(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" How imprecise do we expect the mouse/touch input to be?\n Returns imprecision in points.\n","sig":null,"attributes":[{"value":"/ How imprecise do we expect the mouse/touch input to be?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287885,"byte_end":287944,"line_start":277,"line_end":277,"column_start":5,"column_end":64}},{"value":"/ Returns imprecision in points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287949,"byte_end":287983,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":287988,"byte_end":288005,"line_start":279,"line_end":279,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":289511,"byte_end":289522,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"multi_touch","qualname":"<InputState>::multi_touch","value":"pub fn multi_touch(&Self) -> Option<MultiTouchInfo>","parent":null,"children":[],"decl_id":null,"docs":" Returns details about the currently ongoing multi-touch gesture, if any. Note that this\n method returns `None` for single-touch gestures (click, drag, …).","sig":null,"attributes":[{"value":"/ Returns details about the currently ongoing multi-touch gesture, if any. Note that this","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288163,"byte_end":288254,"line_start":285,"line_end":285,"column_start":5,"column_end":96}},{"value":"/ method returns `None` for single-touch gestures (click, drag, …).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288259,"byte_end":288330,"line_start":286,"line_end":286,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288335,"byte_end":288338,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288343,"byte_end":288350,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ # use egui::emath::Rot2;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288355,"byte_end":288383,"line_start":289,"line_end":289,"column_start":5,"column_end":33}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288388,"byte_end":288420,"line_start":290,"line_end":290,"column_start":5,"column_end":37}},{"value":"/ let mut zoom = 1.0; // no zoom","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288425,"byte_end":288459,"line_start":291,"line_end":291,"column_start":5,"column_end":39}},{"value":"/ let mut rotation = 0.0; // no rotation","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288464,"byte_end":288506,"line_start":292,"line_end":292,"column_start":5,"column_end":47}},{"value":"/ let multi_touch = ui.input().multi_touch();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288511,"byte_end":288558,"line_start":293,"line_end":293,"column_start":5,"column_end":52}},{"value":"/ if let Some(multi_touch) = multi_touch {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288563,"byte_end":288607,"line_start":294,"line_end":294,"column_start":5,"column_end":49}},{"value":"/     zoom *= multi_touch.zoom_delta;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288612,"byte_end":288651,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/     rotation += multi_touch.rotation_delta;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288656,"byte_end":288703,"line_start":296,"line_end":296,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288708,"byte_end":288713,"line_start":297,"line_end":297,"column_start":5,"column_end":10}},{"value":"/ let transform = zoom * Rot2::from_angle(rotation);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288718,"byte_end":288772,"line_start":298,"line_end":298,"column_start":5,"column_end":59}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288777,"byte_end":288786,"line_start":299,"line_end":299,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288791,"byte_end":288798,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288803,"byte_end":288806,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ By far not all touch devices are supported, and the details depend on the `egui`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288811,"byte_end":288895,"line_start":302,"line_end":302,"column_start":5,"column_end":89}},{"value":"/ integration backend you are using. `egui_web` supports multi touch for most mobile","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288900,"byte_end":288986,"line_start":303,"line_end":303,"column_start":5,"column_end":91}},{"value":"/ devices, but not for a `Trackpad` on `MacOS`, for example. The backend has to be able to","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":288991,"byte_end":289083,"line_start":304,"line_end":304,"column_start":5,"column_end":97}},{"value":"/ capture native touch events, but many browsers seem to pass such events only for touch","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":289088,"byte_end":289178,"line_start":305,"line_end":305,"column_start":5,"column_end":95}},{"value":"/ _screens_, but not touch _pads._","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":289183,"byte_end":289219,"line_start":306,"line_end":306,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":289224,"byte_end":289227,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Refer to [`MultiTouchInfo`] for details about the touch information available.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":289232,"byte_end":289314,"line_start":308,"line_end":308,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":289319,"byte_end":289322,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ Consider using `zoom_delta()` instead of `MultiTouchInfo::zoom_delta` as the former","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":289327,"byte_end":289414,"line_start":310,"line_end":310,"column_start":5,"column_end":92}},{"value":"/ delivers a synthetic zoom factor based on ctrl-scroll events, as a fallback.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":289419,"byte_end":289499,"line_start":311,"line_end":311,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":289902,"byte_end":289913,"line_start":322,"line_end":322,"column_start":12,"column_end":23},"name":"any_touches","qualname":"<InputState>::any_touches","value":"pub fn any_touches(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if there currently are any fingers touching egui.\n","sig":null,"attributes":[{"value":"/ True if there currently are any fingers touching egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":289832,"byte_end":289890,"line_start":321,"line_end":321,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":5403},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":291411,"byte_end":291423,"line_start":379,"line_end":379,"column_start":12,"column_end":24},"name":"PointerState","qualname":"::input_state::PointerState","value":"PointerState {  }","parent":null,"children":[{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5409},{"krate":0,"index":5410},{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415},{"krate":0,"index":5416}],"decl_id":null,"docs":" Mouse or touch state.\n","sig":null,"attributes":[{"value":"/ Mouse or touch state.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":291350,"byte_end":291375,"line_start":377,"line_end":377,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":297871,"byte_end":297876,"line_start":566,"line_end":566,"column_start":12,"column_end":17},"name":"delta","qualname":"<PointerState>::delta","value":"pub fn delta(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" How much the pointer moved compared to last frame, in points.\n","sig":null,"attributes":[{"value":"/ How much the pointer moved compared to last frame, in points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":297772,"byte_end":297837,"line_start":564,"line_end":564,"column_start":5,"column_end":70}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":297842,"byte_end":297859,"line_start":565,"line_end":565,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":297990,"byte_end":297998,"line_start":572,"line_end":572,"column_start":12,"column_end":20},"name":"velocity","qualname":"<PointerState>::velocity","value":"pub fn velocity(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Current velocity of pointer.\n","sig":null,"attributes":[{"value":"/ Current velocity of pointer.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":297924,"byte_end":297956,"line_start":570,"line_end":570,"column_start":5,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":297961,"byte_end":297978,"line_start":571,"line_end":571,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298173,"byte_end":298185,"line_start":579,"line_end":579,"column_start":12,"column_end":24},"name":"press_origin","qualname":"<PointerState>::press_origin","value":"pub fn press_origin(&Self) -> Option<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" Where did the current click/drag originate?\n `None` if no mouse button is down.\n","sig":null,"attributes":[{"value":"/ Where did the current click/drag originate?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298049,"byte_end":298096,"line_start":576,"line_end":576,"column_start":5,"column_end":52}},{"value":"/ `None` if no mouse button is down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298101,"byte_end":298139,"line_start":577,"line_end":577,"column_start":5,"column_end":43}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298144,"byte_end":298161,"line_start":578,"line_end":578,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298371,"byte_end":298387,"line_start":586,"line_end":586,"column_start":12,"column_end":28},"name":"press_start_time","qualname":"<PointerState>::press_start_time","value":"pub fn press_start_time(&Self) -> Option<f64>","parent":null,"children":[],"decl_id":null,"docs":" When did the current click/drag originate?\n `None` if no mouse button is down.\n","sig":null,"attributes":[{"value":"/ When did the current click/drag originate?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298248,"byte_end":298294,"line_start":583,"line_end":583,"column_start":5,"column_end":51}},{"value":"/ `None` if no mouse button is down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298299,"byte_end":298337,"line_start":584,"line_end":584,"column_start":5,"column_end":43}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298342,"byte_end":298359,"line_start":585,"line_end":585,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298755,"byte_end":298764,"line_start":599,"line_end":599,"column_start":12,"column_end":21},"name":"hover_pos","qualname":"<PointerState>::hover_pos","value":"pub fn hover_pos(&Self) -> Option<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" If it is a good idea to show a tooltip, where is pointer?\n","sig":null,"attributes":[{"value":"/ If it is a good idea to show a tooltip, where is pointer?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298660,"byte_end":298721,"line_start":597,"line_end":597,"column_start":5,"column_end":66}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298726,"byte_end":298743,"line_start":598,"line_end":598,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299149,"byte_end":299161,"line_start":609,"line_end":609,"column_start":12,"column_end":24},"name":"interact_pos","qualname":"<PointerState>::interact_pos","value":"pub fn interact_pos(&Self) -> Option<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" If you detect a click or drag and wants to know where it happened, use this.","sig":null,"attributes":[{"value":"/ If you detect a click or drag and wants to know where it happened, use this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298825,"byte_end":298905,"line_start":603,"line_end":603,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298910,"byte_end":298913,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ Latest position of the mouse, but ignoring any [`Event::PointerGone`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298918,"byte_end":298991,"line_start":605,"line_end":605,"column_start":5,"column_end":78}},{"value":"/ if there were interactions this frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":298996,"byte_end":299038,"line_start":606,"line_end":606,"column_start":5,"column_end":47}},{"value":"/ When tapping a touch screen, this will be the location of the touch.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299043,"byte_end":299115,"line_start":607,"line_end":607,"column_start":5,"column_end":77}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299120,"byte_end":299137,"line_start":608,"line_end":608,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299391,"byte_end":299402,"line_start":617,"line_end":617,"column_start":12,"column_end":23},"name":"has_pointer","qualname":"<PointerState>::has_pointer","value":"pub fn has_pointer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Do we have a pointer?","sig":null,"attributes":[{"value":"/ Do we have a pointer?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299224,"byte_end":299249,"line_start":613,"line_end":613,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299254,"byte_end":299257,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ `false` if the mouse is not over the egui area, or if no touches are down on touch screens.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299262,"byte_end":299357,"line_start":615,"line_end":615,"column_start":5,"column_end":100}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299362,"byte_end":299379,"line_start":616,"line_end":616,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299628,"byte_end":299636,"line_start":624,"line_end":624,"column_start":12,"column_end":20},"name":"is_still","qualname":"<PointerState>::is_still","value":"pub fn is_still(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the pointer currently still?\n This is smoothed so a few frames of stillness is required before this returns `true`.\n","sig":null,"attributes":[{"value":"/ Is the pointer currently still?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299465,"byte_end":299500,"line_start":621,"line_end":621,"column_start":5,"column_end":40}},{"value":"/ This is smoothed so a few frames of stillness is required before this returns `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299505,"byte_end":299594,"line_start":622,"line_end":622,"column_start":5,"column_end":94}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299599,"byte_end":299616,"line_start":623,"line_end":623,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299858,"byte_end":299867,"line_start":631,"line_end":631,"column_start":12,"column_end":21},"name":"is_moving","qualname":"<PointerState>::is_moving","value":"pub fn is_moving(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the pointer currently moving?\n This is smoothed so a few frames of stillness is required before this returns `false`.\n","sig":null,"attributes":[{"value":"/ Is the pointer currently moving?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299701,"byte_end":299737,"line_start":628,"line_end":628,"column_start":5,"column_end":41}},{"value":"/ This is smoothed so a few frames of stillness is required before this returns `false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299742,"byte_end":299832,"line_start":629,"line_end":629,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299837,"byte_end":299846,"line_start":630,"line_end":630,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":300134,"byte_end":300145,"line_start":638,"line_end":638,"column_start":12,"column_end":23},"name":"any_pressed","qualname":"<PointerState>::any_pressed","value":"pub fn any_pressed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Was any pointer button pressed (`!down -> down`) this frame?\n This can sometimes return `true` even if `any_down() == false`\n because a press can be shorted than one frame.\n","sig":null,"attributes":[{"value":"/ Was any pointer button pressed (`!down -> down`) this frame?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":299932,"byte_end":299996,"line_start":635,"line_end":635,"column_start":5,"column_end":69}},{"value":"/ This can sometimes return `true` even if `any_down() == false`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":300001,"byte_end":300067,"line_start":636,"line_end":636,"column_start":5,"column_end":71}},{"value":"/ because a press can be shorted than one frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":300072,"byte_end":300122,"line_start":637,"line_end":637,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":300316,"byte_end":300328,"line_start":643,"line_end":643,"column_start":12,"column_end":24},"name":"any_released","qualname":"<PointerState>::any_released","value":"pub fn any_released(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Was any pointer button released (`down -> !down`) this frame?\n","sig":null,"attributes":[{"value":"/ Was any pointer button released (`down -> !down`) this frame?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":300239,"byte_end":300304,"line_start":642,"line_end":642,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":300477,"byte_end":300485,"line_start":648,"line_end":648,"column_start":12,"column_end":20},"name":"any_down","qualname":"<PointerState>::any_down","value":"pub fn any_down(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is any pointer button currently down?\n","sig":null,"attributes":[{"value":"/ Is any pointer button currently down?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":300424,"byte_end":300465,"line_start":647,"line_end":647,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":300613,"byte_end":300622,"line_start":653,"line_end":653,"column_start":12,"column_end":21},"name":"any_click","qualname":"<PointerState>::any_click","value":"pub fn any_click(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Were there any type of click this frame?\n","sig":null,"attributes":[{"value":"/ Were there any type of click this frame?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":300557,"byte_end":300601,"line_start":652,"line_end":652,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":301344,"byte_end":301355,"line_start":671,"line_end":671,"column_start":12,"column_end":23},"name":"button_down","qualname":"<PointerState>::button_down","value":"pub fn button_down(&Self, PointerButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this button currently down?\n","sig":null,"attributes":[{"value":"/ Is this button currently down?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":301276,"byte_end":301310,"line_start":669,"line_end":669,"column_start":5,"column_end":39}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":301315,"byte_end":301332,"line_start":670,"line_end":670,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302041,"byte_end":302053,"line_start":697,"line_end":697,"column_start":12,"column_end":24},"name":"primary_down","qualname":"<PointerState>::primary_down","value":"pub fn primary_down(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the primary button currently down?\n","sig":null,"attributes":[{"value":"/ Is the primary button currently down?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":301966,"byte_end":302007,"line_start":695,"line_end":695,"column_start":5,"column_end":46}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302012,"byte_end":302029,"line_start":696,"line_end":696,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302208,"byte_end":302222,"line_start":703,"line_end":703,"column_start":12,"column_end":26},"name":"secondary_down","qualname":"<PointerState>::secondary_down","value":"pub fn secondary_down(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the secondary button currently down?\n","sig":null,"attributes":[{"value":"/ Is the secondary button currently down?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302131,"byte_end":302174,"line_start":701,"line_end":701,"column_start":5,"column_end":48}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302179,"byte_end":302196,"line_start":702,"line_end":702,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302376,"byte_end":302387,"line_start":709,"line_end":709,"column_start":12,"column_end":23},"name":"middle_down","qualname":"<PointerState>::middle_down","value":"pub fn middle_down(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the middle button currently down?\n","sig":null,"attributes":[{"value":"/ Is the middle button currently down?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302302,"byte_end":302342,"line_start":707,"line_end":707,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302347,"byte_end":302364,"line_start":708,"line_end":708,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302491,"byte_end":302493,"line_start":715,"line_end":715,"column_start":12,"column_end":14},"name":"ui","qualname":"<InputState>::ui","value":"pub fn ui(&Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":304533,"byte_end":304535,"line_start":781,"line_end":781,"column_start":12,"column_end":14},"name":"ui","qualname":"<PointerState>::ui","value":"pub fn ui(&Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\introspection.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"introspection","qualname":"::introspection","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\introspection.rs","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1153},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1165}],"decl_id":null,"docs":" Showing UI:s for egui/epaint types.\n","sig":null,"attributes":[{"value":"/ Showing UI:s for egui/epaint types.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\introspection.rs","byte_start":318787,"byte_end":318826,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\introspection.rs","byte_start":318849,"byte_end":318863,"line_start":4,"line_end":4,"column_start":8,"column_end":22},"name":"font_family_ui","qualname":"::introspection::font_family_ui","value":"pub fn font_family_ui(&mut Ui, &mut FontFamily)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\introspection.rs","byte_start":319150,"byte_end":319160,"line_start":14,"line_end":14,"column_start":8,"column_end":18},"name":"font_id_ui","qualname":"::introspection::font_id_ui","value":"pub fn font_id_ui(&mut Ui, &mut FontId)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1168},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"layers","qualname":"::layers","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":5421},{"krate":0,"index":5434},{"krate":0,"index":5436},{"krate":0,"index":5437},{"krate":0,"index":5439},{"krate":0,"index":5442},{"krate":0,"index":5443},{"krate":0,"index":5445},{"krate":0,"index":5446},{"krate":0,"index":5448},{"krate":0,"index":5450},{"krate":0,"index":1181},{"krate":0,"index":5452},{"krate":0,"index":5455},{"krate":0,"index":5457},{"krate":0,"index":5458},{"krate":0,"index":5460},{"krate":0,"index":5463},{"krate":0,"index":5464},{"krate":0,"index":5466},{"krate":0,"index":5467},{"krate":0,"index":1187},{"krate":0,"index":5470},{"krate":0,"index":5473},{"krate":0,"index":5475},{"krate":0,"index":5476},{"krate":0,"index":5477},{"krate":0,"index":5480},{"krate":0,"index":5483},{"krate":0,"index":5485},{"krate":0,"index":1193},{"krate":0,"index":5487},{"krate":0,"index":5491},{"krate":0,"index":5493},{"krate":0,"index":1200}],"decl_id":null,"docs":" Handles paint layers, i.e. how things\n are sometimes painted behind or in front of other things.\n","sig":null,"attributes":[{"value":"/ Handles paint layers, i.e. how things","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":325681,"byte_end":325722,"line_start":1,"line_end":1,"column_start":1,"column_end":42}},{"value":"/ are sometimes painted behind or in front of other things.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":325723,"byte_end":325784,"line_start":2,"line_end":2,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5422},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326083,"byte_end":326093,"line_start":12,"line_end":12,"column_start":5,"column_end":15},"name":"Background","qualname":"::layers::Order::Background","value":"Order::Background","parent":{"krate":0,"index":5421},"children":[],"decl_id":null,"docs":" Painted behind all floating windows\n","sig":null,"attributes":[{"value":"/ Painted behind all floating windows","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326039,"byte_end":326078,"line_start":11,"line_end":11,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5424},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326148,"byte_end":326163,"line_start":14,"line_end":14,"column_start":5,"column_end":20},"name":"PanelResizeLine","qualname":"::layers::Order::PanelResizeLine","value":"Order::PanelResizeLine","parent":{"krate":0,"index":5421},"children":[],"decl_id":null,"docs":" Special layer between panels and windows\n","sig":null,"attributes":[{"value":"/ Special layer between panels and windows","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326099,"byte_end":326143,"line_start":13,"line_end":13,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5426},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326227,"byte_end":326233,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Middle","qualname":"::layers::Order::Middle","value":"Order::Middle","parent":{"krate":0,"index":5421},"children":[],"decl_id":null,"docs":" Normal moveable windows that you reorder by click\n","sig":null,"attributes":[{"value":"/ Normal moveable windows that you reorder by click","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326169,"byte_end":326222,"line_start":15,"line_end":15,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5428},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326363,"byte_end":326373,"line_start":19,"line_end":19,"column_start":5,"column_end":15},"name":"Foreground","qualname":"::layers::Order::Foreground","value":"Order::Foreground","parent":{"krate":0,"index":5421},"children":[],"decl_id":null,"docs":" Popups, menus etc that should always be painted on top of windows\n Foreground objects can also have tooltips\n","sig":null,"attributes":[{"value":"/ Popups, menus etc that should always be painted on top of windows","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326239,"byte_end":326308,"line_start":17,"line_end":17,"column_start":5,"column_end":74}},{"value":"/ Foreground objects can also have tooltips","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326313,"byte_end":326358,"line_start":18,"line_end":18,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5430},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326485,"byte_end":326492,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Tooltip","qualname":"::layers::Order::Tooltip","value":"Order::Tooltip","parent":{"krate":0,"index":5421},"children":[],"decl_id":null,"docs":" Things floating on top of everything else, like tooltips.\n You cannot interact with these.\n","sig":null,"attributes":[{"value":"/ Things floating on top of everything else, like tooltips.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326379,"byte_end":326440,"line_start":20,"line_end":20,"column_start":5,"column_end":66}},{"value":"/ You cannot interact with these.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326445,"byte_end":326480,"line_start":21,"line_end":21,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5432},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326548,"byte_end":326553,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Debug","qualname":"::layers::Order::Debug","value":"Order::Debug","parent":{"krate":0,"index":5421},"children":[],"decl_id":null,"docs":" Debug layer, always painted last / on top\n","sig":null,"attributes":[{"value":"/ Debug layer, always painted last / on top","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326498,"byte_end":326543,"line_start":23,"line_end":23,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":5421},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326027,"byte_end":326032,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Order","qualname":"::layers::Order","value":"pub enum Order {\n    Background,\n    PanelResizeLine,\n    Middle,\n    Foreground,\n    Tooltip,\n    Debug,\n}","parent":null,"children":[{"krate":0,"index":5422},{"krate":0,"index":5424},{"krate":0,"index":5426},{"krate":0,"index":5428},{"krate":0,"index":5430},{"krate":0,"index":5432}],"decl_id":null,"docs":" Different layer categories\n","sig":null,"attributes":[{"value":"/ Different layer categories","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":325842,"byte_end":325872,"line_start":7,"line_end":7,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326829,"byte_end":326846,"line_start":39,"line_end":39,"column_start":12,"column_end":29},"name":"allow_interaction","qualname":"<Order>::allow_interaction","value":"pub fn allow_interaction(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326800,"byte_end":326817,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327142,"byte_end":327160,"line_start":51,"line_end":51,"column_start":12,"column_end":30},"name":"short_debug_format","qualname":"<Order>::short_debug_format","value":"pub fn short_debug_format(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Short and readable summary\n","sig":null,"attributes":[{"value":"/ Short and readable summary","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327100,"byte_end":327130,"line_start":50,"line_end":50,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5452},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327688,"byte_end":327695,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"LayerId","qualname":"::layers::LayerId","value":"LayerId { order, id }","parent":null,"children":[{"krate":0,"index":5453},{"krate":0,"index":5454}],"decl_id":null,"docs":" An identifier for a paint layer.\n Also acts as an identifier for [`Area`]:s.\n","sig":null,"attributes":[{"value":"/ An identifier for a paint layer.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327465,"byte_end":327501,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ Also acts as an identifier for [`Area`]:s.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327502,"byte_end":327548,"line_start":64,"line_end":64,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":5453},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327706,"byte_end":327711,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"name":"order","qualname":"::layers::LayerId::order","value":"layers::Order","parent":{"krate":0,"index":5452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5454},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327728,"byte_end":327730,"line_start":69,"line_end":69,"column_start":9,"column_end":11},"name":"id","qualname":"::layers::LayerId::id","value":"id::Id","parent":{"krate":0,"index":5452},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327765,"byte_end":327768,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<LayerId>::new","value":"pub fn new(Order, Id) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327846,"byte_end":327851,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"debug","qualname":"<LayerId>::debug","value":"pub fn debug() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327974,"byte_end":327984,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"background","qualname":"<LayerId>::background","value":"pub fn background() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328134,"byte_end":328151,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"allow_interaction","qualname":"<LayerId>::allow_interaction","value":"pub fn allow_interaction(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328105,"byte_end":328122,"line_start":91,"line_end":91,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328261,"byte_end":328279,"line_start":97,"line_end":97,"column_start":12,"column_end":30},"name":"short_debug_format","qualname":"<LayerId>::short_debug_format","value":"pub fn short_debug_format(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Short and readable summary\n","sig":null,"attributes":[{"value":"/ Short and readable summary","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328219,"byte_end":328249,"line_start":96,"line_end":96,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":5470},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328555,"byte_end":328563,"line_start":108,"line_end":108,"column_start":12,"column_end":20},"name":"ShapeIdx","qualname":"::layers::ShapeIdx","value":"","parent":null,"children":[],"decl_id":null,"docs":" A unique identifier of a specific [`Shape`] in a [`PaintList`].\n","sig":null,"attributes":[{"value":"/ A unique identifier of a specific [`Shape`] in a [`PaintList`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328442,"byte_end":328509,"line_start":106,"line_end":106,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":5480},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328665,"byte_end":328674,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"PaintList","qualname":"::layers::PaintList","value":"","parent":null,"children":[],"decl_id":null,"docs":" A list of [`Shape`]s paired with a clip rectangle.\n","sig":null,"attributes":[{"value":"/ A list of [`Shape`]s paired with a clip rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328573,"byte_end":328627,"line_start":110,"line_end":110,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328746,"byte_end":328754,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<PaintList>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328717,"byte_end":328734,"line_start":115,"line_end":115,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328925,"byte_end":328928,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"add","qualname":"<PaintList>::add","value":"pub fn add(&mut Self, Rect, Shape) -> ShapeIdx","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the new [`Shape`] that can be used with `PaintList::set`.\n","sig":null,"attributes":[{"value":"/ Returns the index of the new [`Shape`] that can be used with `PaintList::set`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328809,"byte_end":328891,"line_start":120,"line_end":120,"column_start":5,"column_end":87}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328896,"byte_end":328913,"line_start":121,"line_end":121,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329110,"byte_end":329116,"line_start":128,"line_end":128,"column_start":12,"column_end":18},"name":"extend","qualname":"<PaintList>::extend","value":"pub fn extend(&mut Self, Rect, Vec<Shape>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329738,"byte_end":329741,"line_start":141,"line_end":141,"column_start":12,"column_end":15},"name":"set","qualname":"<PaintList>::set","value":"pub fn set(&mut Self, ShapeIdx, Rect, Shape)","parent":null,"children":[],"decl_id":null,"docs":" Modify an existing [`Shape`].","sig":null,"attributes":[{"value":"/ Modify an existing [`Shape`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329280,"byte_end":329313,"line_start":133,"line_end":133,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329318,"byte_end":329321,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Sometimes you want to paint a frame behind some contents, but don't know how large the frame needs to be","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329326,"byte_end":329434,"line_start":135,"line_end":135,"column_start":5,"column_end":113}},{"value":"/ until the contents have been added, and therefor also painted to the `PaintList`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329439,"byte_end":329524,"line_start":136,"line_end":136,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329529,"byte_end":329532,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ The solution is to allocate a `Shape` using `let idx = paint_list.add(cr, Shape::Noop);`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329537,"byte_end":329629,"line_start":138,"line_end":138,"column_start":5,"column_end":97}},{"value":"/ and then later setting it using `paint_list.set(idx, cr, frame);`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329634,"byte_end":329704,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329709,"byte_end":329726,"line_start":140,"line_end":140,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329950,"byte_end":329959,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"translate","qualname":"<PaintList>::translate","value":"pub fn translate(&mut Self, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Translate each [`Shape`] and clip rectangle by this much, in-place\n","sig":null,"attributes":[{"value":"/ Translate each [`Shape`] and clip rectangle by this much, in-place","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":329868,"byte_end":329938,"line_start":145,"line_end":145,"column_start":5,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5505},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":334819,"byte_end":334830,"line_start":81,"line_end":81,"column_start":5,"column_end":16},"name":"LeftToRight","qualname":"::layout::Direction::LeftToRight","value":"Direction::LeftToRight","parent":{"krate":0,"index":5504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5507},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":334836,"byte_end":334847,"line_start":82,"line_end":82,"column_start":5,"column_end":16},"name":"RightToLeft","qualname":"::layout::Direction::RightToLeft","value":"Direction::RightToLeft","parent":{"krate":0,"index":5504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5509},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":334853,"byte_end":334860,"line_start":83,"line_end":83,"column_start":5,"column_end":12},"name":"TopDown","qualname":"::layout::Direction::TopDown","value":"Direction::TopDown","parent":{"krate":0,"index":5504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5511},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":334866,"byte_end":334874,"line_start":84,"line_end":84,"column_start":5,"column_end":13},"name":"BottomUp","qualname":"::layout::Direction::BottomUp","value":"Direction::BottomUp","parent":{"krate":0,"index":5504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5504},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":334803,"byte_end":334812,"line_start":80,"line_end":80,"column_start":10,"column_end":19},"name":"Direction","qualname":"::layout::Direction","value":"pub enum Direction { LeftToRight, RightToLeft, TopDown, BottomUp, }","parent":null,"children":[{"krate":0,"index":5505},{"krate":0,"index":5507},{"krate":0,"index":5509},{"krate":0,"index":5511}],"decl_id":null,"docs":" Layout direction, one of `LeftToRight`, `RightToLeft`, `TopDown`, `BottomUp`.\n","sig":null,"attributes":[{"value":"/ Layout direction, one of `LeftToRight`, `RightToLeft`, `TopDown`, `BottomUp`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":334594,"byte_end":334675,"line_start":77,"line_end":77,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":334929,"byte_end":334942,"line_start":89,"line_end":89,"column_start":12,"column_end":25},"name":"is_horizontal","qualname":"<Direction>::is_horizontal","value":"pub fn is_horizontal(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":334900,"byte_end":334917,"line_start":88,"line_end":88,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335162,"byte_end":335173,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"is_vertical","qualname":"<Direction>::is_vertical","value":"pub fn is_vertical(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335133,"byte_end":335150,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5521},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335827,"byte_end":335833,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"Layout","qualname":"::layout::Layout","value":"Layout {  }","parent":null,"children":[{"krate":0,"index":5522},{"krate":0,"index":5523},{"krate":0,"index":5524},{"krate":0,"index":5525},{"krate":0,"index":5526},{"krate":0,"index":5527}],"decl_id":null,"docs":" The layout of a [`Ui`][`crate::Ui`], e.g. \"vertical & centered\".","sig":null,"attributes":[{"value":"/ The layout of a [`Ui`][`crate::Ui`], e.g. \"vertical & centered\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335443,"byte_end":335511,"line_start":107,"line_end":107,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335512,"byte_end":335515,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335516,"byte_end":335523,"line_start":109,"line_end":109,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335524,"byte_end":335556,"line_start":110,"line_end":110,"column_start":1,"column_end":33}},{"value":"/ ui.with_layout(egui::Layout::right_to_left(), |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335557,"byte_end":335613,"line_start":111,"line_end":111,"column_start":1,"column_end":57}},{"value":"/     ui.label(\"world!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335614,"byte_end":335641,"line_start":112,"line_end":112,"column_start":1,"column_end":28}},{"value":"/     ui.label(\"Hello\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335642,"byte_end":335668,"line_start":113,"line_end":113,"column_start":1,"column_end":27}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335669,"byte_end":335676,"line_start":114,"line_end":114,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335677,"byte_end":335686,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":335687,"byte_end":335694,"line_start":116,"line_end":116,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":336923,"byte_end":336936,"line_start":155,"line_end":155,"column_start":12,"column_end":25},"name":"left_to_right","qualname":"<Layout>::left_to_right","value":"pub fn left_to_right() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":336894,"byte_end":336911,"line_start":154,"line_end":154,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":337286,"byte_end":337299,"line_start":167,"line_end":167,"column_start":12,"column_end":25},"name":"right_to_left","qualname":"<Layout>::right_to_left","value":"pub fn right_to_left() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":337257,"byte_end":337274,"line_start":166,"line_end":166,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":337649,"byte_end":337657,"line_start":179,"line_end":179,"column_start":12,"column_end":20},"name":"top_down","qualname":"<Layout>::top_down","value":"pub fn top_down(Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":337620,"byte_end":337637,"line_start":178,"line_end":178,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":338090,"byte_end":338108,"line_start":192,"line_end":192,"column_start":12,"column_end":30},"name":"top_down_justified","qualname":"<Layout>::top_down_justified","value":"pub fn top_down_justified(Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Top-down layout justifed so that buttons etc fill the full available width.\n","sig":null,"attributes":[{"value":"/ Top-down layout justifed so that buttons etc fill the full available width.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":337977,"byte_end":338056,"line_start":190,"line_end":190,"column_start":5,"column_end":84}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":338061,"byte_end":338078,"line_start":191,"line_end":191,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":338240,"byte_end":338249,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"bottom_up","qualname":"<Layout>::bottom_up","value":"pub fn bottom_up(Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":338211,"byte_end":338228,"line_start":196,"line_end":196,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":338599,"byte_end":338628,"line_start":209,"line_end":209,"column_start":12,"column_end":41},"name":"from_main_dir_and_cross_align","qualname":"<Layout>::from_main_dir_and_cross_align","value":"pub fn from_main_dir_and_cross_align(Direction, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":338570,"byte_end":338587,"line_start":208,"line_end":208,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":338978,"byte_end":339000,"line_start":221,"line_end":221,"column_start":12,"column_end":34},"name":"centered_and_justified","qualname":"<Layout>::centered_and_justified","value":"pub fn centered_and_justified(Direction) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":338949,"byte_end":338966,"line_start":220,"line_end":220,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339293,"byte_end":339307,"line_start":233,"line_end":233,"column_start":12,"column_end":26},"name":"with_main_wrap","qualname":"<Layout>::with_main_wrap","value":"pub fn with_main_wrap(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339264,"byte_end":339281,"line_start":232,"line_end":232,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339416,"byte_end":339432,"line_start":238,"line_end":238,"column_start":12,"column_end":28},"name":"with_cross_align","qualname":"<Layout>::with_cross_align","value":"pub fn with_cross_align(Self, Align) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339387,"byte_end":339404,"line_start":237,"line_end":237,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339578,"byte_end":339595,"line_start":246,"line_end":246,"column_start":12,"column_end":29},"name":"with_main_justify","qualname":"<Layout>::with_main_justify","value":"pub fn with_main_justify(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339549,"byte_end":339566,"line_start":245,"line_end":245,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339742,"byte_end":339760,"line_start":254,"line_end":254,"column_start":12,"column_end":30},"name":"with_cross_justify","qualname":"<Layout>::with_cross_justify","value":"pub fn with_cross_justify(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339713,"byte_end":339730,"line_start":253,"line_end":253,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339943,"byte_end":339951,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"main_dir","qualname":"<Layout>::main_dir","value":"pub fn main_dir(&Self) -> Direction","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339914,"byte_end":339931,"line_start":264,"line_end":264,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340036,"byte_end":340045,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"main_wrap","qualname":"<Layout>::main_wrap","value":"pub fn main_wrap(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340007,"byte_end":340024,"line_start":269,"line_end":269,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340126,"byte_end":340137,"line_start":275,"line_end":275,"column_start":12,"column_end":23},"name":"cross_align","qualname":"<Layout>::cross_align","value":"pub fn cross_align(&Self) -> Align","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340097,"byte_end":340114,"line_start":274,"line_end":274,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340221,"byte_end":340234,"line_start":280,"line_end":280,"column_start":12,"column_end":25},"name":"cross_justify","qualname":"<Layout>::cross_justify","value":"pub fn cross_justify(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340192,"byte_end":340209,"line_start":279,"line_end":279,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340319,"byte_end":340332,"line_start":285,"line_end":285,"column_start":12,"column_end":25},"name":"is_horizontal","qualname":"<Layout>::is_horizontal","value":"pub fn is_horizontal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340290,"byte_end":340307,"line_start":284,"line_end":284,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340430,"byte_end":340441,"line_start":290,"line_end":290,"column_start":12,"column_end":23},"name":"is_vertical","qualname":"<Layout>::is_vertical","value":"pub fn is_vertical(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340401,"byte_end":340418,"line_start":289,"line_end":289,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340515,"byte_end":340535,"line_start":294,"line_end":294,"column_start":12,"column_end":32},"name":"prefer_right_to_left","qualname":"<Layout>::prefer_right_to_left","value":"pub fn prefer_right_to_left(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340864,"byte_end":340884,"line_start":302,"line_end":302,"column_start":12,"column_end":32},"name":"horizontal_placement","qualname":"<Layout>::horizontal_placement","value":"pub fn horizontal_placement(&Self) -> Align","parent":null,"children":[],"decl_id":null,"docs":" e.g. for adjusting the placement of something.\n * in horizontal layout: left or right?\n * in vertical layout: same as [`Self::horizontal_align`].\n","sig":null,"attributes":[{"value":"/ e.g. for adjusting the placement of something.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340689,"byte_end":340739,"line_start":299,"line_end":299,"column_start":5,"column_end":55}},{"value":"/ * in horizontal layout: left or right?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340744,"byte_end":340786,"line_start":300,"line_end":300,"column_start":5,"column_end":47}},{"value":"/ * in vertical layout: same as [`Self::horizontal_align`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":340791,"byte_end":340852,"line_start":301,"line_end":301,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":341191,"byte_end":341207,"line_start":311,"line_end":311,"column_start":12,"column_end":28},"name":"horizontal_align","qualname":"<Layout>::horizontal_align","value":"pub fn horizontal_align(&Self) -> Align","parent":null,"children":[],"decl_id":null,"docs":" e.g. for when aligning text within a button.\n","sig":null,"attributes":[{"value":"/ e.g. for when aligning text within a button.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":341131,"byte_end":341179,"line_start":310,"line_end":310,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":341415,"byte_end":341429,"line_start":320,"line_end":320,"column_start":12,"column_end":26},"name":"vertical_align","qualname":"<Layout>::vertical_align","value":"pub fn vertical_align(&Self) -> Align","parent":null,"children":[],"decl_id":null,"docs":" e.g. for when aligning text within a button.\n","sig":null,"attributes":[{"value":"/ e.g. for when aligning text within a button.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":341355,"byte_end":341403,"line_start":319,"line_end":319,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":341740,"byte_end":341758,"line_start":333,"line_end":333,"column_start":12,"column_end":30},"name":"horizontal_justify","qualname":"<Layout>::horizontal_justify","value":"pub fn horizontal_justify(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":341916,"byte_end":341932,"line_start":341,"line_end":341,"column_start":12,"column_end":28},"name":"vertical_justify","qualname":"<Layout>::vertical_justify","value":"pub fn vertical_justify(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":342124,"byte_end":342146,"line_start":352,"line_end":352,"column_start":12,"column_end":34},"name":"align_size_within_rect","qualname":"<Layout>::align_size_within_rect","value":"pub fn align_size_within_rect(&Self, Vec2, Rect) -> Rect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5537},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":360983,"byte_end":360989,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Memory","qualname":"::memory::Memory","value":"Memory { options, data, caches }","parent":null,"children":[{"krate":0,"index":5538},{"krate":0,"index":5539},{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5542},{"krate":0,"index":5543},{"krate":0,"index":5544},{"krate":0,"index":5545},{"krate":0,"index":5546},{"krate":0,"index":5547},{"krate":0,"index":5548}],"decl_id":null,"docs":" The data that egui persists between frames.","sig":null,"attributes":[{"value":"/ The data that egui persists between frames.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":360407,"byte_end":360454,"line_start":7,"line_end":7,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":360455,"byte_end":360458,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This includes window positions and sizes,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":360459,"byte_end":360504,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/ how far the user has scrolled in a `ScrollArea` etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":360505,"byte_end":360561,"line_start":10,"line_end":10,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":360562,"byte_end":360565,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you want this to persist when closing your app you should serialize `Memory` and store it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":360566,"byte_end":360663,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ For this you need to enable the `persistence`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":360664,"byte_end":360714,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":360715,"byte_end":360718,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ If you want to store data for your widgets, you should look at [`Memory::data`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":360719,"byte_end":360802,"line_start":15,"line_end":15,"column_start":1,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":5538},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361000,"byte_end":361007,"line_start":20,"line_end":20,"column_start":9,"column_end":16},"name":"options","qualname":"::memory::Memory::options","value":"memory::Options","parent":{"krate":0,"index":5537},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5539},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361787,"byte_end":361791,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"name":"data","qualname":"::memory::Memory::data","value":"util::id_type_map::IdTypeMap","parent":{"krate":0,"index":5537},"children":[],"decl_id":null,"docs":" This map stores some superficial state for all widgets with custom `Id`s.","sig":null,"attributes":[{"value":"/ This map stores some superficial state for all widgets with custom `Id`s.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361023,"byte_end":361100,"line_start":22,"line_end":22,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361105,"byte_end":361108,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This includes storing if a [`crate::CollapsingHeader`] is open, how far scrolled a","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361113,"byte_end":361199,"line_start":24,"line_end":24,"column_start":5,"column_end":91}},{"value":"/ [`crate::ScrollArea`] is, where the cursor in a [`crate::TextEdit`] is, etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361204,"byte_end":361284,"line_start":25,"line_end":25,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361289,"byte_end":361292,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is NOT meant to store any important data. Store that in your own structures!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361297,"byte_end":361382,"line_start":27,"line_end":27,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361387,"byte_end":361390,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ Each read clones the data, so keep your values cheap to clone.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361395,"byte_end":361461,"line_start":29,"line_end":29,"column_start":5,"column_end":71}},{"value":"/ If you want to store a lot of data you should wrap it in `Arc<Mutex<…>>` so it is cheap to clone.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361466,"byte_end":361569,"line_start":30,"line_end":30,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361574,"byte_end":361577,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This will be saved between different program runs if you use the `persistence` feature.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361582,"byte_end":361673,"line_start":32,"line_end":32,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361678,"byte_end":361681,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ To store a state common for all your widgets (a singleton), use [`Id::null`] as the key.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361686,"byte_end":361778,"line_start":34,"line_end":34,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":5540},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362893,"byte_end":362899,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"name":"caches","qualname":"::memory::Memory::caches","value":"util::cache::CacheStorage","parent":{"krate":0,"index":5537},"children":[],"decl_id":null,"docs":" Can be used to cache computations from one frame to another.","sig":null,"attributes":[{"value":"/ Can be used to cache computations from one frame to another.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361872,"byte_end":361936,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361941,"byte_end":361944,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ This is for saving CPU when you have something that may take 1-100ms to compute.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":361949,"byte_end":362033,"line_start":40,"line_end":40,"column_start":5,"column_end":89}},{"value":"/ Things that are very slow (>100ms) should instead be done async (i.e. in another thread)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362038,"byte_end":362130,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ so as not to lock the UI thread.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362135,"byte_end":362171,"line_start":42,"line_end":42,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362176,"byte_end":362179,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362184,"byte_end":362191,"line_start":44,"line_end":44,"column_start":5,"column_end":12}},{"value":"/ use egui::util::cache::{ComputerMut, FrameCache};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362196,"byte_end":362249,"line_start":45,"line_end":45,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362254,"byte_end":362257,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ #[derive(Default)]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362262,"byte_end":362284,"line_start":47,"line_end":47,"column_start":5,"column_end":27}},{"value":"/ struct CharCounter {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362289,"byte_end":362314,"line_start":48,"line_end":48,"column_start":5,"column_end":30}},{"value":"/ impl ComputerMut<&str, usize> for CharCounter {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362319,"byte_end":362370,"line_start":49,"line_end":49,"column_start":5,"column_end":56}},{"value":"/     fn compute(&mut self, s: &str) -> usize {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362375,"byte_end":362424,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/         s.chars().count() // you probably want to cache something more expensive than this","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362429,"byte_end":362523,"line_start":51,"line_end":51,"column_start":5,"column_end":99}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362528,"byte_end":362537,"line_start":52,"line_end":52,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362542,"byte_end":362547,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/ type CharCountCache<'a> = FrameCache<usize, CharCounter>;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362552,"byte_end":362613,"line_start":54,"line_end":54,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362618,"byte_end":362621,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # let mut ctx = egui::Context::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362626,"byte_end":362671,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/ let mut memory = ctx.memory();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362676,"byte_end":362710,"line_start":57,"line_end":57,"column_start":5,"column_end":39}},{"value":"/ let cache = memory.caches.cache::<CharCountCache<'_>>();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362715,"byte_end":362775,"line_start":58,"line_end":58,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(cache.get(\"hello\"), 5);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362780,"byte_end":362818,"line_start":59,"line_end":59,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":362823,"byte_end":362830,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":5555},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364294,"byte_end":364301,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"Options","qualname":"::memory::Options","value":"Options { tessellation_options, screen_reader, preload_font_glyphs }","parent":null,"children":[{"krate":0,"index":5556},{"krate":0,"index":5557},{"krate":0,"index":5558},{"krate":0,"index":5559}],"decl_id":null,"docs":" Some global options that you can read and write.\n","sig":null,"attributes":[{"value":"/ Some global options that you can read and write.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364082,"byte_end":364134,"line_start":95,"line_end":95,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5557},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364486,"byte_end":364506,"line_start":105,"line_end":105,"column_start":9,"column_end":29},"name":"tessellation_options","qualname":"::memory::Options::tessellation_options","value":"epaint::TessellationOptions","parent":{"krate":0,"index":5555},"children":[],"decl_id":null,"docs":" Controls the tessellator.\n","sig":null,"attributes":[{"value":"/ Controls the tessellator.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364448,"byte_end":364477,"line_start":104,"line_end":104,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":5558},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364804,"byte_end":364817,"line_start":110,"line_end":110,"column_start":9,"column_end":22},"name":"screen_reader","qualname":"::memory::Options::screen_reader","value":"bool","parent":{"krate":0,"index":5555},"children":[],"decl_id":null,"docs":" This does not at all change the behavior of egui,\n but is a signal to any backend that we want the [`crate::PlatformOutput::events`] read out loud.\n Screen readers is an experimental feature of egui, and not supported on all platforms.\n","sig":null,"attributes":[{"value":"/ This does not at all change the behavior of egui,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364542,"byte_end":364595,"line_start":107,"line_end":107,"column_start":5,"column_end":58}},{"value":"/ but is a signal to any backend that we want the [`crate::PlatformOutput::events`] read out loud.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364600,"byte_end":364700,"line_start":108,"line_end":108,"column_start":5,"column_end":105}},{"value":"/ Screen readers is an experimental feature of egui, and not supported on all platforms.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364705,"byte_end":364795,"line_start":109,"line_end":109,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":5559},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":365180,"byte_end":365199,"line_start":118,"line_end":118,"column_start":9,"column_end":28},"name":"preload_font_glyphs","qualname":"::memory::Options::preload_font_glyphs","value":"bool","parent":{"krate":0,"index":5555},"children":[],"decl_id":null,"docs":" If true, the most common glyphs (ASCII) are pre-rendered to the texture atlas.","sig":null,"attributes":[{"value":"/ If true, the most common glyphs (ASCII) are pre-rendered to the texture atlas.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364830,"byte_end":364912,"line_start":112,"line_end":112,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364917,"byte_end":364920,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Only the fonts in [`Style::text_styles`] will be pre-cached.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364925,"byte_end":364989,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":364994,"byte_end":364997,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This can lead to fewer texture operations, but may use up the texture atlas quicker","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":365002,"byte_end":365089,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ if you are changing [`Style::text_styles`], of have a lot of text styles.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":365094,"byte_end":365171,"line_start":117,"line_end":117,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":372033,"byte_end":372044,"line_start":328,"line_end":328,"column_start":12,"column_end":23},"name":"layer_id_at","qualname":"<Memory>::layer_id_at","value":"pub fn layer_id_at(&Self, Pos2, f32) -> Option<LayerId>","parent":null,"children":[],"decl_id":null,"docs":" Top-most layer at the given position.\n","sig":null,"attributes":[{"value":"/ Top-most layer at the given position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":371980,"byte_end":372021,"line_start":327,"line_end":327,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":372327,"byte_end":372341,"line_start":334,"line_end":334,"column_start":12,"column_end":26},"name":"top_most_layer","qualname":"<Memory>::top_most_layer","value":"pub fn top_most_layer(&Self) -> Option<LayerId>","parent":null,"children":[],"decl_id":null,"docs":" The overall top-most layer. When an area is clicked on or interacted\n with, it is moved above all other areas.\n","sig":null,"attributes":[{"value":"/ The overall top-most layer. When an area is clicked on or interacted","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":372194,"byte_end":372266,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ with, it is moved above all other areas.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":372271,"byte_end":372315,"line_start":333,"line_end":333,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":373046,"byte_end":373055,"line_start":354,"line_end":354,"column_start":12,"column_end":21},"name":"has_focus","qualname":"<Memory>::has_focus","value":"pub fn has_focus(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this widget have keyboard focus?\n","sig":null,"attributes":[{"value":"/ Does this widget have keyboard focus?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":372971,"byte_end":373012,"line_start":352,"line_end":352,"column_start":5,"column_end":46}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":373017,"byte_end":373034,"line_start":353,"line_end":353,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":373186,"byte_end":373191,"line_start":359,"line_end":359,"column_start":12,"column_end":17},"name":"focus","qualname":"<Memory>::focus","value":"pub fn focus(&Self) -> Option<Id>","parent":null,"children":[],"decl_id":null,"docs":" Which widget has keyboard focus?\n","sig":null,"attributes":[{"value":"/ Which widget has keyboard focus?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":373138,"byte_end":373174,"line_start":358,"line_end":358,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":373436,"byte_end":373446,"line_start":365,"line_end":365,"column_start":12,"column_end":22},"name":"lock_focus","qualname":"<Memory>::lock_focus","value":"pub fn lock_focus(&mut Self, Id, bool)","parent":null,"children":[],"decl_id":null,"docs":" Prevent keyboard focus from moving away from this widget even if users presses the tab key.\n You must first give focus to the widget before calling this.\n","sig":null,"attributes":[{"value":"/ Prevent keyboard focus from moving away from this widget even if users presses the tab key.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":373260,"byte_end":373355,"line_start":363,"line_end":363,"column_start":5,"column_end":100}},{"value":"/ You must first give focus to the widget before calling this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":373360,"byte_end":373424,"line_start":364,"line_end":364,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":373762,"byte_end":373776,"line_start":372,"line_end":372,"column_start":12,"column_end":26},"name":"has_lock_focus","qualname":"<Memory>::has_lock_focus","value":"pub fn has_lock_focus(&mut Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the keyboard focus locked on this widget? If so the focus won't move even if the user presses the tab key.\n","sig":null,"attributes":[{"value":"/ Is the keyboard focus locked on this widget? If so the focus won't move even if the user presses the tab key.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":373637,"byte_end":373750,"line_start":371,"line_end":371,"column_start":5,"column_end":118}}]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":374110,"byte_end":374123,"line_start":383,"line_end":383,"column_start":12,"column_end":25},"name":"request_focus","qualname":"<Memory>::request_focus","value":"pub fn request_focus(&mut Self, Id)","parent":null,"children":[],"decl_id":null,"docs":" Give keyboard focus to a specific widget.\n See also [`crate::Response::request_focus`].\n","sig":null,"attributes":[{"value":"/ Give keyboard focus to a specific widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":373978,"byte_end":374023,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ See also [`crate::Response::request_focus`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":374028,"byte_end":374076,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":374081,"byte_end":374098,"line_start":382,"line_end":382,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":374398,"byte_end":374413,"line_start":391,"line_end":391,"column_start":12,"column_end":27},"name":"surrender_focus","qualname":"<Memory>::surrender_focus","value":"pub fn surrender_focus(&mut Self, Id)","parent":null,"children":[],"decl_id":null,"docs":" Surrender keyboard focus for a specific widget.\n See also [`crate::Response::surrender_focus`].\n","sig":null,"attributes":[{"value":"/ Surrender keyboard focus for a specific widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":374258,"byte_end":374309,"line_start":388,"line_end":388,"column_start":5,"column_end":56}},{"value":"/ See also [`crate::Response::surrender_focus`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":374314,"byte_end":374364,"line_start":389,"line_end":389,"column_start":5,"column_end":55}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":374369,"byte_end":374386,"line_start":390,"line_end":390,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":374984,"byte_end":374999,"line_start":407,"line_end":407,"column_start":12,"column_end":27},"name":"stop_text_input","qualname":"<Memory>::stop_text_input","value":"pub fn stop_text_input(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stop editing of active `TextEdit` (if any).\n","sig":null,"attributes":[{"value":"/ Stop editing of active `TextEdit` (if any).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":374903,"byte_end":374950,"line_start":405,"line_end":405,"column_start":5,"column_end":52}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":374955,"byte_end":374972,"line_start":406,"line_end":406,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375095,"byte_end":375120,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"is_anything_being_dragged","qualname":"<Memory>::is_anything_being_dragged","value":"pub fn is_anything_being_dragged(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375066,"byte_end":375083,"line_start":411,"line_end":411,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375221,"byte_end":375237,"line_start":417,"line_end":417,"column_start":12,"column_end":28},"name":"is_being_dragged","qualname":"<Memory>::is_being_dragged","value":"pub fn is_being_dragged(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375192,"byte_end":375209,"line_start":416,"line_end":416,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375414,"byte_end":375425,"line_start":423,"line_end":423,"column_start":12,"column_end":23},"name":"reset_areas","qualname":"<Memory>::reset_areas","value":"pub fn reset_areas(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Forget window positions, sizes etc.\n Can be used to auto-layout windows.\n","sig":null,"attributes":[{"value":"/ Forget window positions, sizes etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375319,"byte_end":375358,"line_start":421,"line_end":421,"column_start":5,"column_end":44}},{"value":"/ Can be used to auto-layout windows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375363,"byte_end":375402,"line_start":422,"line_end":422,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375633,"byte_end":375646,"line_start":432,"line_end":432,"column_start":12,"column_end":25},"name":"is_popup_open","qualname":"<Memory>::is_popup_open","value":"pub fn is_popup_open(&Self, Id) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375765,"byte_end":375775,"line_start":436,"line_end":436,"column_start":12,"column_end":22},"name":"open_popup","qualname":"<Memory>::open_popup","value":"pub fn open_popup(&mut Self, Id)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375858,"byte_end":375869,"line_start":440,"line_end":440,"column_start":12,"column_end":23},"name":"close_popup","qualname":"<Memory>::close_popup","value":"pub fn close_popup(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375928,"byte_end":375940,"line_start":444,"line_end":444,"column_start":12,"column_end":24},"name":"toggle_popup","qualname":"<Memory>::toggle_popup","value":"pub fn toggle_popup(&mut Self, Id)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376339,"byte_end":376360,"line_start":458,"line_end":458,"column_start":12,"column_end":33},"name":"everything_is_visible","qualname":"<Memory>::everything_is_visible","value":"pub fn everything_is_visible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If true, all windows, menus, tooltips etc are to be visible at once.","sig":null,"attributes":[{"value":"/ If true, all windows, menus, tooltips etc are to be visible at once.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376119,"byte_end":376191,"line_start":452,"line_end":452,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376196,"byte_end":376199,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This is useful for testing, benchmarking, pre-caching, etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376204,"byte_end":376267,"line_start":454,"line_end":454,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376272,"byte_end":376275,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ Experimental feature!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376280,"byte_end":376305,"line_start":456,"line_end":456,"column_start":5,"column_end":30}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376310,"byte_end":376327,"line_start":457,"line_end":457,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376622,"byte_end":376647,"line_start":467,"line_end":467,"column_start":12,"column_end":37},"name":"set_everything_is_visible","qualname":"<Memory>::set_everything_is_visible","value":"pub fn set_everything_is_visible(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" If true, all windows, menus, tooltips etc are to be visible at once.","sig":null,"attributes":[{"value":"/ If true, all windows, menus, tooltips etc are to be visible at once.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376424,"byte_end":376496,"line_start":462,"line_end":462,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376501,"byte_end":376504,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This is useful for testing, benchmarking, pre-caching, etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376509,"byte_end":376572,"line_start":464,"line_end":464,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376577,"byte_end":376580,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Experimental feature!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":376585,"byte_end":376610,"line_start":466,"line_end":466,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"menu","qualname":"::menu","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","parent":null,"children":[{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":5604},{"krate":0,"index":5606},{"krate":0,"index":5608},{"krate":0,"index":1412},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1423},{"krate":0,"index":1427},{"krate":0,"index":1431},{"krate":0,"index":1435},{"krate":0,"index":1444},{"krate":0,"index":1449},{"krate":0,"index":5610},{"krate":0,"index":5612},{"krate":0,"index":5614},{"krate":0,"index":1451},{"krate":0,"index":1457},{"krate":0,"index":1460},{"krate":0,"index":5616},{"krate":0,"index":5619},{"krate":0,"index":1462},{"krate":0,"index":5621},{"krate":0,"index":5630},{"krate":0,"index":5631},{"krate":0,"index":5633},{"krate":0,"index":5634},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1478},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1497},{"krate":0,"index":1502}],"decl_id":null,"docs":" Menu bar functionality (very basic so far).","sig":null,"attributes":[{"value":"/ Menu bar functionality (very basic so far).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":380743,"byte_end":380790,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":380791,"byte_end":380794,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Usage:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":380795,"byte_end":380805,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":380806,"byte_end":380813,"line_start":4,"line_end":4,"column_start":1,"column_end":8}},{"value":"/ fn show_menu(ui: &mut egui::Ui) {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":380814,"byte_end":380851,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"/     use egui::{menu, Button};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":380852,"byte_end":380885,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":380886,"byte_end":380889,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/     menu::bar(ui, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":380890,"byte_end":380918,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/         ui.menu_button(\"File\", |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":380919,"byte_end":380960,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/             if ui.button(\"Open\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":380961,"byte_end":381009,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/                 // …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":381010,"byte_end":381036,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/             }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":381037,"byte_end":381054,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":381055,"byte_end":381070,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/     });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":381071,"byte_end":381082,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":381083,"byte_end":381088,"line_start":15,"line_end":15,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":381089,"byte_end":381096,"line_start":16,"line_end":16,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":382545,"byte_end":382548,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"bar","qualname":"::menu::bar","value":"pub fn bar<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n           R>(&mut Ui, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" The menu bar goes well in a [`TopBottomPanel::top`],\n but can also be placed in a `Window`.\n In the latter case you may want to wrap it in `Frame`.\n","sig":null,"attributes":[{"value":"/ The menu bar goes well in a [`TopBottomPanel::top`],","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":382380,"byte_end":382436,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ but can also be placed in a `Window`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":382437,"byte_end":382478,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/ In the latter case you may want to wrap it in `Frame`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":382479,"byte_end":382537,"line_start":65,"line_end":65,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":383569,"byte_end":383580,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"menu_button","qualname":"::menu::menu_button","value":"pub fn menu_button<R, impl Into<WidgetText>: Into<WidgetText>,\n                   impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                   R>(&mut Ui, impl Into<WidgetText>,\n                      impl FnOnce(&mut Ui) -> R) -> InnerResponse<Option<R>>","parent":null,"children":[],"decl_id":null,"docs":" Construct a top level menu in a menu bar. This would be e.g. \"File\", \"Edit\" etc.","sig":null,"attributes":[{"value":"/ Construct a top level menu in a menu bar. This would be e.g. \"File\", \"Edit\" etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":383393,"byte_end":383477,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":383478,"byte_end":383481,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Responds to primary clicks.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":383482,"byte_end":383513,"line_start":88,"line_end":88,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":383514,"byte_end":383517,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Returns `None` if the menu is not open.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":383518,"byte_end":383561,"line_start":90,"line_end":90,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":393039,"byte_end":393052,"line_start":372,"line_end":372,"column_start":12,"column_end":25},"name":"SubMenuButton","qualname":"::menu::SubMenuButton","value":"SubMenuButton {  }","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":393763,"byte_end":393767,"line_start":400,"line_end":400,"column_start":12,"column_end":16},"name":"icon","qualname":"<SubMenuButton>::icon","value":"pub fn icon<impl Into<WidgetText>: Into<WidgetText>>(Self,\n                                                     impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":395901,"byte_end":395908,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"SubMenu","qualname":"::menu::SubMenu","value":"SubMenu {  }","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":396275,"byte_end":396279,"line_start":465,"line_end":465,"column_start":12,"column_end":16},"name":"show","qualname":"<SubMenu>::show","value":"pub fn show<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n            R>(Self, &mut Ui, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<Option<R>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5637},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":402034,"byte_end":402041,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"name":"Painter","qualname":"::painter::Painter","value":"Painter {  }","parent":null,"children":[{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5640},{"krate":0,"index":5641}],"decl_id":null,"docs":" Helper to paint shapes and text to a specific region on a specific layer.","sig":null,"attributes":[{"value":"/ Helper to paint shapes and text to a specific region on a specific layer.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":401813,"byte_end":401890,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":401891,"byte_end":401894,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ All coordinates are screen coordinates in the unit points (one point can consist of many physical pixels).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":401895,"byte_end":402005,"line_start":14,"line_end":14,"column_start":1,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":402618,"byte_end":402621,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<Painter>::new","value":"pub fn new(Context, LayerId, Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a painter to a specific layer within a certain clip rectangle.\n","sig":null,"attributes":[{"value":"/ Create a painter to a specific layer within a certain clip rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":402533,"byte_end":402606,"line_start":33,"line_end":33,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1601},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":402877,"byte_end":402890,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_layer_id","qualname":"<Painter>::with_layer_id","value":"pub fn with_layer_id(Self, LayerId) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Redirect where you are painting.\n","sig":null,"attributes":[{"value":"/ Redirect where you are painting.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":402813,"byte_end":402849,"line_start":43,"line_end":43,"column_start":5,"column_end":41}},{"value":"must_use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":402854,"byte_end":402865,"line_start":44,"line_end":44,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":403131,"byte_end":403143,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"set_layer_id","qualname":"<Painter>::set_layer_id","value":"pub fn set_layer_id(&mut Self, LayerId)","parent":null,"children":[],"decl_id":null,"docs":" Redirect where you are painting.\n","sig":null,"attributes":[{"value":"/ Redirect where you are painting.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":403083,"byte_end":403119,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":403916,"byte_end":403926,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"sub_region","qualname":"<Painter>::sub_region","value":"pub fn sub_region(&Self, Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a painter for a sub-region of this `Painter`.","sig":null,"attributes":[{"value":"/ Create a painter for a sub-region of this `Painter`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":403695,"byte_end":403751,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":403756,"byte_end":403759,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The clip-rect of the returned `Painter` will be the intersection","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":403764,"byte_end":403832,"line_start":75,"line_end":75,"column_start":5,"column_end":73}},{"value":"/ of the given rectangle and the `clip_rect()` of this `Painter`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":403837,"byte_end":403904,"line_start":76,"line_end":76,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404284,"byte_end":404287,"line_start":91,"line_end":91,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Painter>::ctx","value":"pub fn ctx(&Self) -> &Context","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the parent [`Context`].\n","sig":null,"attributes":[{"value":"/ Get a reference to the parent [`Context`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404204,"byte_end":404250,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404255,"byte_end":404272,"line_start":90,"line_end":90,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404392,"byte_end":404397,"line_start":97,"line_end":97,"column_start":12,"column_end":17},"name":"fonts","qualname":"<Painter>::fonts","value":"pub fn fonts(&Self) -> RwLockReadGuard<, Fonts>","parent":null,"children":[],"decl_id":null,"docs":" Available fonts.\n","sig":null,"attributes":[{"value":"/ Available fonts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404338,"byte_end":404358,"line_start":95,"line_end":95,"column_start":5,"column_end":25}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404363,"byte_end":404380,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404525,"byte_end":404533,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"layer_id","qualname":"<Painter>::layer_id","value":"pub fn layer_id(&Self) -> LayerId","parent":null,"children":[],"decl_id":null,"docs":" Where we paint\n","sig":null,"attributes":[{"value":"/ Where we paint","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404473,"byte_end":404491,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404496,"byte_end":404513,"line_start":102,"line_end":102,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404771,"byte_end":404780,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"clip_rect","qualname":"<Painter>::clip_rect","value":"pub fn clip_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Everything painted in this `Painter` will be clipped against this.\n This means nothing outside of this rectangle will be visible on screen.\n","sig":null,"attributes":[{"value":"/ Everything painted in this `Painter` will be clipped against this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404587,"byte_end":404657,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ This means nothing outside of this rectangle will be visible on screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404662,"byte_end":404737,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404742,"byte_end":404759,"line_start":109,"line_end":109,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405016,"byte_end":405029,"line_start":117,"line_end":117,"column_start":12,"column_end":25},"name":"set_clip_rect","qualname":"<Painter>::set_clip_rect","value":"pub fn set_clip_rect(&mut Self, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Everything painted in this `Painter` will be clipped against this.\n This means nothing outside of this rectangle will be visible on screen.\n","sig":null,"attributes":[{"value":"/ Everything painted in this `Painter` will be clipped against this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404832,"byte_end":404902,"line_start":114,"line_end":114,"column_start":5,"column_end":75}},{"value":"/ This means nothing outside of this rectangle will be visible on screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404907,"byte_end":404982,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404987,"byte_end":405004,"line_start":116,"line_end":116,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405180,"byte_end":405194,"line_start":123,"line_end":123,"column_start":12,"column_end":26},"name":"round_to_pixel","qualname":"<Painter>::round_to_pixel","value":"pub fn round_to_pixel(&Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Useful for pixel-perfect rendering.\n","sig":null,"attributes":[{"value":"/ Useful for pixel-perfect rendering.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405107,"byte_end":405146,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405151,"byte_end":405168,"line_start":122,"line_end":122,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405348,"byte_end":405367,"line_start":129,"line_end":129,"column_start":12,"column_end":31},"name":"round_vec_to_pixels","qualname":"<Painter>::round_vec_to_pixels","value":"pub fn round_vec_to_pixels(&Self, Vec2) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Useful for pixel-perfect rendering.\n","sig":null,"attributes":[{"value":"/ Useful for pixel-perfect rendering.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405275,"byte_end":405314,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405319,"byte_end":405336,"line_start":128,"line_end":128,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405524,"byte_end":405543,"line_start":135,"line_end":135,"column_start":12,"column_end":31},"name":"round_pos_to_pixels","qualname":"<Painter>::round_pos_to_pixels","value":"pub fn round_pos_to_pixels(&Self, Pos2) -> Pos2","parent":null,"children":[],"decl_id":null,"docs":" Useful for pixel-perfect rendering.\n","sig":null,"attributes":[{"value":"/ Useful for pixel-perfect rendering.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405451,"byte_end":405490,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405495,"byte_end":405512,"line_start":134,"line_end":134,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":406156,"byte_end":406159,"line_start":155,"line_end":155,"column_start":12,"column_end":15},"name":"add","qualname":"<Painter>::add","value":"pub fn add<impl Into<Shape>: Into<Shape>>(&Self, impl Into<Shape>) -> ShapeIdx","parent":null,"children":[],"decl_id":null,"docs":" It is up to the caller to make sure there is room for this.\n Can be used for free painting.\n NOTE: all coordinates are screen coordinates!\n","sig":null,"attributes":[{"value":"/ It is up to the caller to make sure there is room for this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405988,"byte_end":406051,"line_start":152,"line_end":152,"column_start":5,"column_end":68}},{"value":"/ Can be used for free painting.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":406056,"byte_end":406090,"line_start":153,"line_end":153,"column_start":5,"column_end":39}},{"value":"/ NOTE: all coordinates are screen coordinates!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":406095,"byte_end":406144,"line_start":154,"line_end":154,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":406651,"byte_end":406657,"line_start":168,"line_end":168,"column_start":12,"column_end":18},"name":"extend","qualname":"<Painter>::extend","value":"pub fn extend(&Self, Vec<Shape>)","parent":null,"children":[],"decl_id":null,"docs":" Add many shapes at once.","sig":null,"attributes":[{"value":"/ Add many shapes at once.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":406514,"byte_end":406542,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":406547,"byte_end":406550,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Calling this once is generally faster than calling [`Self::add`] multiple times.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":406555,"byte_end":406639,"line_start":167,"line_end":167,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":407114,"byte_end":407117,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"set","qualname":"<Painter>::set","value":"pub fn set<impl Into<Shape>: Into<Shape>>(&Self, ShapeIdx, impl Into<Shape>)","parent":null,"children":[],"decl_id":null,"docs":" Modify an existing [`Shape`].\n","sig":null,"attributes":[{"value":"/ Modify an existing [`Shape`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":407069,"byte_end":407102,"line_start":183,"line_end":183,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":407500,"byte_end":407510,"line_start":197,"line_end":197,"column_start":12,"column_end":22},"name":"debug_rect","qualname":"<Painter>::debug_rect","value":"pub fn debug_rect<impl ToString: ToString>(&mut Self, Rect, Color32,\n                                           impl ToString)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":407448,"byte_end":407488,"line_start":196,"line_end":196,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":407810,"byte_end":407815,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"error","qualname":"<Painter>::error","value":"pub fn error<impl std::fmt::Display: std::fmt::Display>(&Self, Pos2,\n                                                        impl std::fmt::Display)\n-> Rect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":408055,"byte_end":408065,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"debug_text","qualname":"<Painter>::debug_text","value":"pub fn debug_text<impl ToString: ToString>(&Self, Pos2, Align2, Color32,\n                                           impl ToString) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" text with a background\n","sig":null,"attributes":[{"value":"/ text with a background","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":407972,"byte_end":407998,"line_start":212,"line_end":212,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":408003,"byte_end":408043,"line_start":213,"line_end":213,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":408776,"byte_end":408788,"line_start":238,"line_end":238,"column_start":12,"column_end":24},"name":"line_segment","qualname":"<Painter>::line_segment","value":"pub fn line_segment<impl Into<Stroke>: Into<Stroke>>(&Self, [Pos2; ],\n                                                     impl Into<Stroke>)","parent":null,"children":[],"decl_id":null,"docs":" Paints the line from the first point to the second using the `stroke`\n for outlining shape.\n","sig":null,"attributes":[{"value":"/ Paints the line from the first point to the second using the `stroke`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":408662,"byte_end":408735,"line_start":236,"line_end":236,"column_start":5,"column_end":78}},{"value":"/ for outlining shape.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":408740,"byte_end":408764,"line_start":237,"line_end":237,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":408967,"byte_end":408973,"line_start":245,"line_end":245,"column_start":12,"column_end":18},"name":"circle","qualname":"<Painter>::circle","value":"pub fn circle<impl Into<Color32>: Into<Color32>,\n              impl Into<Stroke>: Into<Stroke>>(&Self, Pos2, f32,\n                                               impl Into<Color32>,\n                                               impl Into<Stroke>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":409289,"byte_end":409302,"line_start":260,"line_end":260,"column_start":12,"column_end":25},"name":"circle_filled","qualname":"<Painter>::circle_filled","value":"pub fn circle_filled<impl Into<Color32>: Into<Color32>>(&Self, Pos2, f32,\n                                                        impl Into<Color32>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":409549,"byte_end":409562,"line_start":269,"line_end":269,"column_start":12,"column_end":25},"name":"circle_stroke","qualname":"<Painter>::circle_stroke","value":"pub fn circle_stroke<impl Into<Stroke>: Into<Stroke>>(&Self, Pos2, f32,\n                                                      impl Into<Stroke>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":409800,"byte_end":409804,"line_start":278,"line_end":278,"column_start":12,"column_end":16},"name":"rect","qualname":"<Painter>::rect","value":"pub fn rect<impl Into<Rounding>: Into<Rounding>,\n            impl Into<Color32>: Into<Color32>,\n            impl Into<Stroke>: Into<Stroke>>(&Self, Rect, impl Into<Rounding>,\n                                             impl Into<Color32>,\n                                             impl Into<Stroke>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":410151,"byte_end":410162,"line_start":293,"line_end":293,"column_start":12,"column_end":23},"name":"rect_filled","qualname":"<Painter>::rect_filled","value":"pub fn rect_filled<impl Into<Rounding>: Into<Rounding>,\n                   impl Into<Color32>: Into<Color32>>(&Self, Rect,\n                                                      impl Into<Rounding>,\n                                                      impl Into<Color32>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":410479,"byte_end":410490,"line_start":307,"line_end":307,"column_start":12,"column_end":23},"name":"rect_stroke","qualname":"<Painter>::rect_stroke","value":"pub fn rect_stroke<impl Into<Rounding>: Into<Rounding>,\n                   impl Into<Stroke>: Into<Stroke>>(&Self, Rect,\n                                                    impl Into<Rounding>,\n                                                    impl Into<Stroke>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":410910,"byte_end":410915,"line_start":322,"line_end":322,"column_start":12,"column_end":17},"name":"arrow","qualname":"<Painter>::arrow","value":"pub fn arrow(&Self, Pos2, Vec2, Stroke)","parent":null,"children":[],"decl_id":null,"docs":" Show an arrow starting at `origin` and going in the direction of `vec`, with the length `vec.length()`.\n","sig":null,"attributes":[{"value":"/ Show an arrow starting at `origin` and going in the direction of `vec`, with the length `vec.length()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":410791,"byte_end":410898,"line_start":321,"line_end":321,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411770,"byte_end":411774,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"text","qualname":"<Painter>::text","value":"pub fn text<impl ToString: ToString>(&Self, Pos2, Align2, impl ToString,\n                                     FontId, Color32) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Lay out and paint some text.","sig":null,"attributes":[{"value":"/ Lay out and paint some text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411422,"byte_end":411454,"line_start":336,"line_end":336,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411459,"byte_end":411462,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ To center the text at the given position, use `Align2::CENTER_CENTER`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411467,"byte_end":411541,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411546,"byte_end":411549,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ To find out the size of text before painting it, use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411554,"byte_end":411610,"line_start":340,"line_end":340,"column_start":5,"column_end":61}},{"value":"/ [`Self::layout`] or [`Self::layout_no_wrap`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411615,"byte_end":411664,"line_start":341,"line_end":341,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411669,"byte_end":411672,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Returns where the text ended up.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411677,"byte_end":411713,"line_start":343,"line_end":343,"column_start":5,"column_end":41}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411718,"byte_end":411758,"line_start":344,"line_end":344,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412309,"byte_end":412315,"line_start":363,"line_end":363,"column_start":12,"column_end":18},"name":"layout","qualname":"<Painter>::layout","value":"pub fn layout(&Self, String, FontId, crate::Color32, f32) -> Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":" Will wrap text at the given width and line break at `\\n`.","sig":null,"attributes":[{"value":"/ Will wrap text at the given width and line break at `\\n`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412157,"byte_end":412218,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412223,"byte_end":412226,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Paint the results with [`Self::galley`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412231,"byte_end":412275,"line_start":361,"line_end":361,"column_start":5,"column_end":49}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412280,"byte_end":412297,"line_start":362,"line_end":362,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412650,"byte_end":412664,"line_start":377,"line_end":377,"column_start":12,"column_end":26},"name":"layout_no_wrap","qualname":"<Painter>::layout_no_wrap","value":"pub fn layout_no_wrap(&Self, String, FontId, crate::Color32) -> Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":" Will line break at `\\n`.","sig":null,"attributes":[{"value":"/ Will line break at `\\n`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412531,"byte_end":412559,"line_start":373,"line_end":373,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412564,"byte_end":412567,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Paint the results with [`Self::galley`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412572,"byte_end":412616,"line_start":375,"line_end":375,"column_start":5,"column_end":49}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412621,"byte_end":412638,"line_start":376,"line_end":376,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1660},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":413116,"byte_end":413122,"line_start":392,"line_end":392,"column_start":12,"column_end":18},"name":"galley","qualname":"<Painter>::galley","value":"pub fn galley(&Self, Pos2, Arc<Galley>)","parent":null,"children":[],"decl_id":null,"docs":" Paint text that has already been layed out in a [`Galley`].","sig":null,"attributes":[{"value":"/ Paint text that has already been layed out in a [`Galley`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412858,"byte_end":412921,"line_start":386,"line_end":386,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412926,"byte_end":412929,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ You can create the `Galley` with [`Self::layout`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412934,"byte_end":412988,"line_start":388,"line_end":388,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":412993,"byte_end":412996,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ If you want to change the color of the text, use [`Self::galley_with_color`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":413001,"byte_end":413082,"line_start":390,"line_end":390,"column_start":5,"column_end":86}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":413087,"byte_end":413104,"line_start":391,"line_end":391,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":413519,"byte_end":413536,"line_start":404,"line_end":404,"column_start":12,"column_end":29},"name":"galley_with_color","qualname":"<Painter>::galley_with_color","value":"pub fn galley_with_color(&Self, Pos2, Arc<Galley>, Color32)","parent":null,"children":[],"decl_id":null,"docs":" Paint text that has already been layed out in a [`Galley`].","sig":null,"attributes":[{"value":"/ Paint text that has already been layed out in a [`Galley`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":413267,"byte_end":413330,"line_start":398,"line_end":398,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":413335,"byte_end":413338,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ You can create the `Galley` with [`Self::layout`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":413343,"byte_end":413397,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":413402,"byte_end":413405,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ The text color in the [`Galley`] will be replaced with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":413410,"byte_end":413485,"line_start":402,"line_end":402,"column_start":5,"column_end":80}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":413490,"byte_end":413507,"line_start":403,"line_end":403,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5644},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":423905,"byte_end":423913,"line_start":17,"line_end":17,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::Response","value":"Response { ctx, layer_id, id, rect, sense }","parent":null,"children":[{"krate":0,"index":5645},{"krate":0,"index":5646},{"krate":0,"index":5647},{"krate":0,"index":5648},{"krate":0,"index":5649},{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5654},{"krate":0,"index":5656},{"krate":0,"index":5657},{"krate":0,"index":5658},{"krate":0,"index":5659},{"krate":0,"index":5660}],"decl_id":null,"docs":" The result of adding a widget to a [`Ui`].","sig":null,"attributes":[{"value":"/ The result of adding a widget to a [`Ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":423511,"byte_end":423557,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":423558,"byte_end":423561,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A `Response` lets you know whether or not a widget is being hovered, clicked or dragged.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":423562,"byte_end":423654,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ It also lets you easily show a tooltip on hover.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":423655,"byte_end":423707,"line_start":12,"line_end":12,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":423708,"byte_end":423711,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Whenever something gets added to a `Ui`, a `Response` object is returned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":423712,"byte_end":423789,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ [`ui.add`] returns a `Response`, as does [`ui.button`], and all similar shortcuts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":423790,"byte_end":423876,"line_start":15,"line_end":15,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":5645},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":424022,"byte_end":424025,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"ctx","qualname":"::response::Response::ctx","value":"context::Context","parent":{"krate":0,"index":5644},"children":[],"decl_id":null,"docs":" Used for optionally showing a tooltip and checking for more interactions.\n","sig":null,"attributes":[{"value":"/ Used for optionally showing a tooltip and checking for more interactions.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":423936,"byte_end":424013,"line_start":19,"line_end":19,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":5646},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":424099,"byte_end":424107,"line_start":24,"line_end":24,"column_start":9,"column_end":17},"name":"layer_id","qualname":"::response::Response::layer_id","value":"layers::LayerId","parent":{"krate":0,"index":5644},"children":[],"decl_id":null,"docs":" Which layer the widget is part of.\n","sig":null,"attributes":[{"value":"/ Which layer the widget is part of.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":424052,"byte_end":424090,"line_start":23,"line_end":23,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5647},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":424187,"byte_end":424189,"line_start":27,"line_end":27,"column_start":9,"column_end":11},"name":"id","qualname":"::response::Response::id","value":"id::Id","parent":{"krate":0,"index":5644},"children":[],"decl_id":null,"docs":" The `Id` of the widget/area this response pertains.\n","sig":null,"attributes":[{"value":"/ The `Id` of the widget/area this response pertains.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":424123,"byte_end":424178,"line_start":26,"line_end":26,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":5648},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":424257,"byte_end":424261,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"rect","qualname":"::response::Response::rect","value":"epaint::Rect","parent":{"krate":0,"index":5644},"children":[],"decl_id":null,"docs":" The area of the screen we are talking about.\n","sig":null,"attributes":[{"value":"/ The area of the screen we are talking about.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":424200,"byte_end":424248,"line_start":29,"line_end":29,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5649},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":424361,"byte_end":424366,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"sense","qualname":"::response::Response::sense","value":"sense::Sense","parent":{"krate":0,"index":5644},"children":[],"decl_id":null,"docs":" The senses (click and/or drag) that the widget was interested in (if any).\n","sig":null,"attributes":[{"value":"/ The senses (click and/or drag) that the widget was interested in (if any).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":424274,"byte_end":424352,"line_start":32,"line_end":32,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427350,"byte_end":427357,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"clicked","qualname":"<Response>::clicked","value":"pub fn clicked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this widget was clicked this frame by the primary button.","sig":null,"attributes":[{"value":"/ Returns true if this widget was clicked this frame by the primary button.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":426790,"byte_end":426867,"line_start":107,"line_end":107,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":426872,"byte_end":426875,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ A click is registered when the mouse or touch is released within","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":426880,"byte_end":426948,"line_start":109,"line_end":109,"column_start":5,"column_end":73}},{"value":"/ a certain amount of time and distance from when and where it was pressed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":426953,"byte_end":427030,"line_start":110,"line_end":110,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427035,"byte_end":427038,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Note that the widget must be sensing clicks with [`Sense::click`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427043,"byte_end":427113,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/ [`crate::Button`] senses clicks; [`crate::Label`] does not (unless you call [`crate::Label::sense`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427118,"byte_end":427223,"line_start":113,"line_end":113,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427228,"byte_end":427231,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ You can use [`Self::interact`] to sense more things *after* adding a widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427236,"byte_end":427316,"line_start":115,"line_end":115,"column_start":5,"column_end":85}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427321,"byte_end":427338,"line_start":116,"line_end":116,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427527,"byte_end":427537,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"clicked_by","qualname":"<Response>::clicked_by","value":"pub fn clicked_by(&Self, PointerButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this widget was clicked this frame by the given button.\n","sig":null,"attributes":[{"value":"/ Returns true if this widget was clicked this frame by the given button.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427440,"byte_end":427515,"line_start":121,"line_end":121,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1756},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427754,"byte_end":427771,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"secondary_clicked","qualname":"<Response>::secondary_clicked","value":"pub fn secondary_clicked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this widget was clicked this frame by the secondary mouse button (e.g. the right mouse button).\n","sig":null,"attributes":[{"value":"/ Returns true if this widget was clicked this frame by the secondary mouse button (e.g. the right mouse button).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427627,"byte_end":427742,"line_start":126,"line_end":126,"column_start":5,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427950,"byte_end":427964,"line_start":132,"line_end":132,"column_start":12,"column_end":26},"name":"middle_clicked","qualname":"<Response>::middle_clicked","value":"pub fn middle_clicked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this widget was clicked this frame by the middle mouse button.\n","sig":null,"attributes":[{"value":"/ Returns true if this widget was clicked this frame by the middle mouse button.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":427856,"byte_end":427938,"line_start":131,"line_end":131,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":428142,"byte_end":428156,"line_start":137,"line_end":137,"column_start":12,"column_end":26},"name":"double_clicked","qualname":"<Response>::double_clicked","value":"pub fn double_clicked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this widget was double-clicked this frame by the primary button.\n","sig":null,"attributes":[{"value":"/ Returns true if this widget was double-clicked this frame by the primary button.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":428046,"byte_end":428130,"line_start":136,"line_end":136,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1759},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":428340,"byte_end":428357,"line_start":142,"line_end":142,"column_start":12,"column_end":29},"name":"double_clicked_by","qualname":"<Response>::double_clicked_by","value":"pub fn double_clicked_by(&Self, PointerButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this widget was double-clicked this frame by the given button.\n","sig":null,"attributes":[{"value":"/ Returns true if this widget was double-clicked this frame by the given button.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":428246,"byte_end":428328,"line_start":141,"line_end":141,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1760},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":428531,"byte_end":428548,"line_start":147,"line_end":147,"column_start":12,"column_end":29},"name":"clicked_elsewhere","qualname":"<Response>::clicked_elsewhere","value":"pub fn clicked_elsewhere(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" `true` if there was a click *outside* this widget this frame.\n","sig":null,"attributes":[{"value":"/ `true` if there was a click *outside* this widget this frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":428454,"byte_end":428519,"line_start":146,"line_end":146,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":429676,"byte_end":429683,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Response>::enabled","value":"pub fn enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Was the widget enabled?\n If false, there was no interaction attempted\n and the widget should be drawn in a gray disabled look.\n","sig":null,"attributes":[{"value":"/ Was the widget enabled?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":429498,"byte_end":429525,"line_start":170,"line_end":170,"column_start":5,"column_end":32}},{"value":"/ If false, there was no interaction attempted","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":429530,"byte_end":429578,"line_start":171,"line_end":171,"column_start":5,"column_end":53}},{"value":"/ and the widget should be drawn in a gray disabled look.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":429583,"byte_end":429642,"line_start":172,"line_end":172,"column_start":5,"column_end":64}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":429647,"byte_end":429664,"line_start":173,"line_end":173,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430191,"byte_end":430198,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"hovered","qualname":"<Response>::hovered","value":"pub fn hovered(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The pointer is hovering above this widget or the widget was clicked/tapped this frame.","sig":null,"attributes":[{"value":"/ The pointer is hovering above this widget or the widget was clicked/tapped this frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":429733,"byte_end":429823,"line_start":178,"line_end":178,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":429828,"byte_end":429831,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that this is slightly different from checking `response.rect.contains(pointer_pos)`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":429836,"byte_end":429929,"line_start":180,"line_end":180,"column_start":5,"column_end":98}},{"value":"/ For one, the hover rectangle is slightly larger, by half of the current item spacing","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":429934,"byte_end":430022,"line_start":181,"line_end":181,"column_start":5,"column_end":93}},{"value":"/ (to make it easier to click things). But `hovered` also checks that no other area","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430027,"byte_end":430112,"line_start":182,"line_end":182,"column_start":5,"column_end":90}},{"value":"/ is covering this response rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430117,"byte_end":430157,"line_start":183,"line_end":183,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430162,"byte_end":430179,"line_start":184,"line_end":184,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1763},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430331,"byte_end":430340,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"has_focus","qualname":"<Response>::has_focus","value":"pub fn has_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" This widget has the keyboard focus (i.e. is receiving key presses).\n","sig":null,"attributes":[{"value":"/ This widget has the keyboard focus (i.e. is receiving key presses).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430248,"byte_end":430319,"line_start":189,"line_end":189,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430503,"byte_end":430515,"line_start":195,"line_end":195,"column_start":12,"column_end":24},"name":"gained_focus","qualname":"<Response>::gained_focus","value":"pub fn gained_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if this widget has keyboard focus this frame, but didn't last frame.\n","sig":null,"attributes":[{"value":"/ True if this widget has keyboard focus this frame, but didn't last frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430414,"byte_end":430491,"line_start":194,"line_end":194,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431146,"byte_end":431156,"line_start":213,"line_end":213,"column_start":12,"column_end":22},"name":"lost_focus","qualname":"<Response>::lost_focus","value":"pub fn lost_focus(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The widget had keyboard focus and lost it,\n either because the user pressed tab or clicked somewhere else,\n or (in case of a [`crate::TextEdit`]) because the user pressed enter.","sig":null,"attributes":[{"value":"/ The widget had keyboard focus and lost it,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430592,"byte_end":430638,"line_start":199,"line_end":199,"column_start":5,"column_end":51}},{"value":"/ either because the user pressed tab or clicked somewhere else,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430643,"byte_end":430709,"line_start":200,"line_end":200,"column_start":5,"column_end":71}},{"value":"/ or (in case of a [`crate::TextEdit`]) because the user pressed enter.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430714,"byte_end":430787,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430792,"byte_end":430795,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430800,"byte_end":430807,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430812,"byte_end":430844,"line_start":204,"line_end":204,"column_start":5,"column_end":37}},{"value":"/ # let mut my_text = String::new();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430849,"byte_end":430887,"line_start":205,"line_end":205,"column_start":5,"column_end":43}},{"value":"/ # fn do_request(_: &str) {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430892,"byte_end":430923,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"/ let response = ui.text_edit_singleline(&mut my_text);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430928,"byte_end":430985,"line_start":207,"line_end":207,"column_start":5,"column_end":62}},{"value":"/ if response.lost_focus() && ui.input().key_pressed(egui::Key::Enter) {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":430990,"byte_end":431064,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/     do_request(&my_text);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431069,"byte_end":431098,"line_start":209,"line_end":209,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431103,"byte_end":431108,"line_start":210,"line_end":210,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431113,"byte_end":431122,"line_start":211,"line_end":211,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431127,"byte_end":431134,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431291,"byte_end":431304,"line_start":218,"line_end":218,"column_start":12,"column_end":25},"name":"request_focus","qualname":"<Response>::request_focus","value":"pub fn request_focus(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Request that this widget get keyboard focus.\n","sig":null,"attributes":[{"value":"/ Request that this widget get keyboard focus.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431231,"byte_end":431279,"line_start":217,"line_end":217,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431432,"byte_end":431447,"line_start":223,"line_end":223,"column_start":12,"column_end":27},"name":"surrender_focus","qualname":"<Response>::surrender_focus","value":"pub fn surrender_focus(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Surrender keyboard focus for this widget.\n","sig":null,"attributes":[{"value":"/ Surrender keyboard focus for this widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431375,"byte_end":431420,"line_start":222,"line_end":222,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1768},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432010,"byte_end":432017,"line_start":237,"line_end":237,"column_start":12,"column_end":19},"name":"dragged","qualname":"<Response>::dragged","value":"pub fn dragged(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The widgets is being dragged.","sig":null,"attributes":[{"value":"/ The widgets is being dragged.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431520,"byte_end":431553,"line_start":227,"line_end":227,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431558,"byte_end":431561,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ To find out which button(s), query [`crate::PointerState::button_down`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431566,"byte_end":431641,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ (`ui.input().pointer.button_down(…)`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431646,"byte_end":431690,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431695,"byte_end":431698,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that the widget must be sensing drags with [`Sense::drag`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431703,"byte_end":431771,"line_start":232,"line_end":232,"column_start":5,"column_end":73}},{"value":"/ [`crate::DragValue`] senses drags; [`crate::Label`] does not (unless you call [`crate::Label::sense`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431776,"byte_end":431883,"line_start":233,"line_end":233,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431888,"byte_end":431891,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ You can use [`Self::interact`] to sense more things *after* adding a widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431896,"byte_end":431976,"line_start":235,"line_end":235,"column_start":5,"column_end":85}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":431981,"byte_end":431998,"line_start":236,"line_end":236,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432074,"byte_end":432084,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"dragged_by","qualname":"<Response>::dragged_by","value":"pub fn dragged_by(&Self, PointerButton) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432267,"byte_end":432279,"line_start":246,"line_end":246,"column_start":12,"column_end":24},"name":"drag_started","qualname":"<Response>::drag_started","value":"pub fn drag_started(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Did a drag on this widgets begin this frame?\n","sig":null,"attributes":[{"value":"/ Did a drag on this widgets begin this frame?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432207,"byte_end":432255,"line_start":245,"line_end":245,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432446,"byte_end":432459,"line_start":251,"line_end":251,"column_start":12,"column_end":25},"name":"drag_released","qualname":"<Response>::drag_released","value":"pub fn drag_released(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" The widget was being dragged, but now it has been released.\n","sig":null,"attributes":[{"value":"/ The widget was being dragged, but now it has been released.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432371,"byte_end":432434,"line_start":250,"line_end":250,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432597,"byte_end":432607,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"drag_delta","qualname":"<Response>::drag_delta","value":"pub fn drag_delta(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" If dragged, how many points were we dragged and in what direction?\n","sig":null,"attributes":[{"value":"/ If dragged, how many points were we dragged and in what direction?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432515,"byte_end":432585,"line_start":255,"line_end":255,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432916,"byte_end":432936,"line_start":266,"line_end":266,"column_start":12,"column_end":32},"name":"interact_pointer_pos","qualname":"<Response>::interact_pointer_pos","value":"pub fn interact_pointer_pos(&Self) -> Option<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" Where the pointer (mouse/touch) were when when this widget was clicked or dragged.\n `None` if the widget is not being interacted with.\n","sig":null,"attributes":[{"value":"/ Where the pointer (mouse/touch) were when when this widget was clicked or dragged.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432759,"byte_end":432845,"line_start":264,"line_end":264,"column_start":5,"column_end":91}},{"value":"/ `None` if the widget is not being interacted with.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":432850,"byte_end":432904,"line_start":265,"line_end":265,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433138,"byte_end":433147,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"hover_pos","qualname":"<Response>::hover_pos","value":"pub fn hover_pos(&Self) -> Option<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" If it is a good idea to show a tooltip, where is pointer?\n None if the pointer is outside the response area.\n","sig":null,"attributes":[{"value":"/ If it is a good idea to show a tooltip, where is pointer?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433007,"byte_end":433068,"line_start":270,"line_end":270,"column_start":5,"column_end":66}},{"value":"/ None if the pointer is outside the response area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433073,"byte_end":433126,"line_start":271,"line_end":271,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433469,"byte_end":433494,"line_start":283,"line_end":283,"column_start":12,"column_end":37},"name":"is_pointer_button_down_on","qualname":"<Response>::is_pointer_button_down_on","value":"pub fn is_pointer_button_down_on(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the pointer button currently down on this widget?\n This is true if the pointer is pressing down or dragging a widget\n","sig":null,"attributes":[{"value":"/ Is the pointer button currently down on this widget?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433305,"byte_end":433361,"line_start":280,"line_end":280,"column_start":5,"column_end":61}},{"value":"/ This is true if the pointer is pressing down or dragging a widget","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433366,"byte_end":433435,"line_start":281,"line_end":281,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433440,"byte_end":433457,"line_start":282,"line_end":282,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434079,"byte_end":434086,"line_start":298,"line_end":298,"column_start":12,"column_end":19},"name":"changed","qualname":"<Response>::changed","value":"pub fn changed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" What the underlying data changed?","sig":null,"attributes":[{"value":"/ What the underlying data changed?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433562,"byte_end":433599,"line_start":287,"line_end":287,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433604,"byte_end":433607,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ e.g. the slider was dragged, text was entered in a `TextEdit` etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433612,"byte_end":433682,"line_start":289,"line_end":289,"column_start":5,"column_end":75}},{"value":"/ Always `false` for something like a `Button`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433687,"byte_end":433736,"line_start":290,"line_end":290,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433741,"byte_end":433744,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Can sometimes be `true` even though the data didn't changed","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433749,"byte_end":433812,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/ (e.g. if the user entered a character and erased it the same frame).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433817,"byte_end":433889,"line_start":293,"line_end":293,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433894,"byte_end":433897,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This is not set if the *view* of the data was changed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433902,"byte_end":433960,"line_start":295,"line_end":295,"column_start":5,"column_end":63}},{"value":"/ For instance, moving the cursor in a `TextEdit` does not set this to `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":433965,"byte_end":434045,"line_start":296,"line_end":296,"column_start":5,"column_end":85}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434050,"byte_end":434067,"line_start":297,"line_end":297,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434530,"byte_end":434542,"line_start":310,"line_end":310,"column_start":12,"column_end":24},"name":"mark_changed","qualname":"<Response>::mark_changed","value":"pub fn mark_changed(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Report the data shown by this widget changed.","sig":null,"attributes":[{"value":"/ Report the data shown by this widget changed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434136,"byte_end":434185,"line_start":302,"line_end":302,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434190,"byte_end":434193,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This must be called by widgets that represent some mutable data,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434198,"byte_end":434266,"line_start":304,"line_end":304,"column_start":5,"column_end":73}},{"value":"/ e.g. checkboxes, sliders etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434271,"byte_end":434304,"line_start":305,"line_end":305,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434309,"byte_end":434312,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This should be called when the *content* changes, but not when the view does.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434317,"byte_end":434398,"line_start":307,"line_end":307,"column_start":5,"column_end":86}},{"value":"/ So we call this when the text of a [`crate::TextEdit`], but not when the cursors changes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434403,"byte_end":434496,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434501,"byte_end":434518,"line_start":309,"line_end":309,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434937,"byte_end":434948,"line_start":321,"line_end":321,"column_start":12,"column_end":23},"name":"on_hover_ui","qualname":"<Response>::on_hover_ui","value":"pub fn on_hover_ui<impl FnOnce(&mut Ui): FnOnce(&mut Ui) ->\n                   ()>(Self, impl FnOnce(&mut Ui)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show this UI if the widget was hovered (i.e. a tooltip).","sig":null,"attributes":[{"value":"/ Show this UI if the widget was hovered (i.e. a tooltip).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434596,"byte_end":434656,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434661,"byte_end":434664,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ The text will not be visible if the widget is not enabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434669,"byte_end":434731,"line_start":316,"line_end":316,"column_start":5,"column_end":67}},{"value":"/ For that, use [`Self::on_disabled_hover_ui`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434736,"byte_end":434793,"line_start":317,"line_end":317,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434798,"byte_end":434801,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ If you call this multiple times the tooltips will stack underneath the previous ones.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":434806,"byte_end":434895,"line_start":319,"line_end":319,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":435337,"byte_end":435357,"line_start":334,"line_end":334,"column_start":12,"column_end":32},"name":"on_disabled_hover_ui","qualname":"<Response>::on_disabled_hover_ui","value":"pub fn on_disabled_hover_ui<impl FnOnce(&mut Ui): FnOnce(&mut Ui) ->\n                            ()>(Self, impl FnOnce(&mut Ui)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show this UI when hovering if the widget is disabled.\n","sig":null,"attributes":[{"value":"/ Show this UI when hovering if the widget is disabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":435268,"byte_end":435325,"line_start":333,"line_end":333,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":435790,"byte_end":435812,"line_start":347,"line_end":347,"column_start":12,"column_end":34},"name":"on_hover_ui_at_pointer","qualname":"<Response>::on_hover_ui_at_pointer","value":"pub fn on_hover_ui_at_pointer<impl FnOnce(&mut Ui): FnOnce(&mut Ui) ->\n                              ()>(Self, impl FnOnce(&mut Ui)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Like `on_hover_ui`, but show the ui next to cursor.\n","sig":null,"attributes":[{"value":"/ Like `on_hover_ui`, but show the ui next to cursor.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":435723,"byte_end":435778,"line_start":346,"line_end":346,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":437043,"byte_end":437067,"line_start":388,"line_end":388,"column_start":12,"column_end":36},"name":"on_hover_text_at_pointer","qualname":"<Response>::on_hover_text_at_pointer","value":"pub fn on_hover_text_at_pointer<impl Into<WidgetText>: Into<WidgetText>>(Self,\n                                                                         impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Like `on_hover_text`, but show the text next to cursor.\n","sig":null,"attributes":[{"value":"/ Like `on_hover_text`, but show the text next to cursor.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":436942,"byte_end":437001,"line_start":386,"line_end":386,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":437577,"byte_end":437590,"line_start":401,"line_end":401,"column_start":12,"column_end":25},"name":"on_hover_text","qualname":"<Response>::on_hover_text","value":"pub fn on_hover_text<impl Into<WidgetText>: Into<WidgetText>>(Self,\n                                                              impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Show this text if the widget was hovered (i.e. a tooltip).","sig":null,"attributes":[{"value":"/ Show this text if the widget was hovered (i.e. a tooltip).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":437232,"byte_end":437294,"line_start":394,"line_end":394,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":437299,"byte_end":437302,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ The text will not be visible if the widget is not enabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":437307,"byte_end":437369,"line_start":396,"line_end":396,"column_start":5,"column_end":67}},{"value":"/ For that, use [`Self::on_disabled_hover_text`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":437374,"byte_end":437433,"line_start":397,"line_end":397,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":437438,"byte_end":437441,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ If you call this multiple times the tooltips will stack underneath the previous ones.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":437446,"byte_end":437535,"line_start":399,"line_end":399,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":437815,"byte_end":437837,"line_start":408,"line_end":408,"column_start":12,"column_end":34},"name":"on_disabled_hover_text","qualname":"<Response>::on_disabled_hover_text","value":"pub fn on_disabled_hover_text<impl Into<WidgetText>: Into<WidgetText>>(Self,\n                                                                       impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Show this text when hovering if the widget is disabled.\n","sig":null,"attributes":[{"value":"/ Show this text when hovering if the widget is disabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":437744,"byte_end":437803,"line_start":407,"line_end":407,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438065,"byte_end":438080,"line_start":415,"line_end":415,"column_start":12,"column_end":27},"name":"on_hover_cursor","qualname":"<Response>::on_hover_cursor","value":"pub fn on_hover_cursor(Self, CursorIcon) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When hovered, use this icon for the mouse cursor.\n","sig":null,"attributes":[{"value":"/ When hovered, use this icon for the mouse cursor.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438000,"byte_end":438053,"line_start":414,"line_end":414,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438838,"byte_end":438846,"line_start":435,"line_end":435,"column_start":12,"column_end":20},"name":"interact","qualname":"<Response>::interact","value":"pub fn interact(&Self, Sense) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Check for more interactions (e.g. sense clicks on a `Response` returned from a label).","sig":null,"attributes":[{"value":"/ Check for more interactions (e.g. sense clicks on a `Response` returned from a label).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438231,"byte_end":438321,"line_start":422,"line_end":422,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438326,"byte_end":438329,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Note that this call will not add any hover-effects to the widget, so when possible","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438334,"byte_end":438420,"line_start":424,"line_end":424,"column_start":5,"column_end":91}},{"value":"/ it is better to give the widget a `Sense` instead, e.g. using [`crate::Label::sense`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438425,"byte_end":438515,"line_start":425,"line_end":425,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438520,"byte_end":438523,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438528,"byte_end":438535,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438540,"byte_end":438572,"line_start":428,"line_end":428,"column_start":5,"column_end":37}},{"value":"/ let response = ui.label(\"hello\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438577,"byte_end":438614,"line_start":429,"line_end":429,"column_start":5,"column_end":42}},{"value":"/ assert!(!response.clicked()); // labels don't sense clicks by default","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438619,"byte_end":438692,"line_start":430,"line_end":430,"column_start":5,"column_end":78}},{"value":"/ let response = response.interact(egui::Sense::click());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438697,"byte_end":438756,"line_start":431,"line_end":431,"column_start":5,"column_end":64}},{"value":"/ if response.clicked() { /* … */ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438761,"byte_end":438800,"line_start":432,"line_end":432,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438805,"byte_end":438814,"line_start":433,"line_end":433,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":438819,"byte_end":438826,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439694,"byte_end":439706,"line_start":464,"line_end":464,"column_start":12,"column_end":24},"name":"scroll_to_me","qualname":"<Response>::scroll_to_me","value":"pub fn scroll_to_me(&Self, Option<Align>)","parent":null,"children":[],"decl_id":null,"docs":" Adjust the scroll position until this UI becomes visible.","sig":null,"attributes":[{"value":"/ Adjust the scroll position until this UI becomes visible.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439081,"byte_end":439142,"line_start":446,"line_end":446,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439147,"byte_end":439150,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ If `align` is `None`, it'll scroll enough to bring the UI into view.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439155,"byte_end":439227,"line_start":448,"line_end":448,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439232,"byte_end":439235,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ See also: [`Ui::scroll_to_cursor`], [`Ui::scroll_to_rect`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439240,"byte_end":439303,"line_start":450,"line_end":450,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439308,"byte_end":439311,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439316,"byte_end":439323,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439328,"byte_end":439360,"line_start":453,"line_end":453,"column_start":5,"column_end":37}},{"value":"/ egui::ScrollArea::vertical().show(ui, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439365,"byte_end":439413,"line_start":454,"line_end":454,"column_start":5,"column_end":53}},{"value":"/     for i in 0..1000 {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439418,"byte_end":439444,"line_start":455,"line_end":455,"column_start":5,"column_end":31}},{"value":"/         let response = ui.button(\"Scroll to me\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439449,"byte_end":439502,"line_start":456,"line_end":456,"column_start":5,"column_end":58}},{"value":"/         if response.clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439507,"byte_end":439542,"line_start":457,"line_end":457,"column_start":5,"column_end":40}},{"value":"/             response.scroll_to_me(Some(egui::Align::Center));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439547,"byte_end":439612,"line_start":458,"line_end":458,"column_start":5,"column_end":70}},{"value":"/         }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439617,"byte_end":439630,"line_start":459,"line_end":459,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439635,"byte_end":439644,"line_start":460,"line_end":460,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439649,"byte_end":439656,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439661,"byte_end":439670,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439675,"byte_end":439682,"line_start":463,"line_end":463,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":440041,"byte_end":440052,"line_start":472,"line_end":472,"column_start":12,"column_end":23},"name":"widget_info","qualname":"<Response>::widget_info","value":"pub fn widget_info<impl Fn() -> crate::WidgetInfo: Fn() ->\n                   crate::WidgetInfo>(&Self, impl Fn() -> crate::WidgetInfo)","parent":null,"children":[],"decl_id":null,"docs":" For accessibility.","sig":null,"attributes":[{"value":"/ For accessibility.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439921,"byte_end":439943,"line_start":469,"line_end":469,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439948,"byte_end":439951,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Call after interacting and potential calls to [`Self::mark_changed`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":439956,"byte_end":440029,"line_start":471,"line_end":471,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441118,"byte_end":441130,"line_start":504,"line_end":504,"column_start":12,"column_end":24},"name":"context_menu","qualname":"<Response>::context_menu","value":"pub fn context_menu<impl FnOnce(&mut Ui): FnOnce(&mut Ui) ->\n                    ()>(Self, impl FnOnce(&mut Ui)) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Response to secondary clicks (right-clicks) by showing the given menu.","sig":null,"attributes":[{"value":"/ Response to secondary clicks (right-clicks) by showing the given menu.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":440676,"byte_end":440750,"line_start":490,"line_end":490,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":440755,"byte_end":440758,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":440763,"byte_end":440770,"line_start":492,"line_end":492,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":440775,"byte_end":440807,"line_start":493,"line_end":493,"column_start":5,"column_end":37}},{"value":"/ let response = ui.label(\"Right-click me!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":440812,"byte_end":440859,"line_start":494,"line_end":494,"column_start":5,"column_end":52}},{"value":"/ response.context_menu(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":440864,"byte_end":440896,"line_start":495,"line_end":495,"column_start":5,"column_end":37}},{"value":"/     if ui.button(\"Close the menu\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":440901,"byte_end":440951,"line_start":496,"line_end":496,"column_start":5,"column_end":55}},{"value":"/         ui.close_menu();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":440956,"byte_end":440984,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":440989,"byte_end":440998,"line_start":498,"line_end":498,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441003,"byte_end":441010,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441015,"byte_end":441024,"line_start":500,"line_end":500,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441029,"byte_end":441036,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441041,"byte_end":441044,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ See also: [`Ui::menu_button`] and [`Ui::close_menu`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441049,"byte_end":441106,"line_start":503,"line_end":503,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441480,"byte_end":441485,"line_start":515,"line_end":515,"column_start":12,"column_end":17},"name":"union","qualname":"<Response>::union","value":"pub fn union(&Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A logical \"or\" operation.\n For instance `a.union(b).hovered` means \"was either a or b hovered?\".","sig":null,"attributes":[{"value":"/ A logical \"or\" operation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441274,"byte_end":441303,"line_start":511,"line_end":511,"column_start":5,"column_end":34}},{"value":"/ For instance `a.union(b).hovered` means \"was either a or b hovered?\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441308,"byte_end":441381,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441386,"byte_end":441389,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ The resulting [`Self::id`] will come from the first (`self`) argument.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441394,"byte_end":441468,"line_start":514,"line_end":514,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":5663},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444424,"byte_end":444437,"line_start":599,"line_end":599,"column_start":12,"column_end":25},"name":"InnerResponse","qualname":"::response::InnerResponse","value":"InnerResponse { inner, response }","parent":null,"children":[{"krate":0,"index":5665},{"krate":0,"index":5666}],"decl_id":null,"docs":" Returned when we wrap some ui-code and want to return both\n the results of the inner function and the ui as a whole, e.g.:","sig":null,"attributes":[{"value":"/ Returned when we wrap some ui-code and want to return both","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":443997,"byte_end":444059,"line_start":585,"line_end":585,"column_start":1,"column_end":63}},{"value":"/ the results of the inner function and the ui as a whole, e.g.:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444060,"byte_end":444126,"line_start":586,"line_end":586,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444127,"byte_end":444130,"line_start":587,"line_end":587,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444131,"byte_end":444138,"line_start":588,"line_end":588,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444139,"byte_end":444171,"line_start":589,"line_end":589,"column_start":1,"column_end":33}},{"value":"/ let inner_resp = ui.horizontal(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444172,"byte_end":444213,"line_start":590,"line_end":590,"column_start":1,"column_end":42}},{"value":"/     ui.label(\"Blah blah\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444214,"byte_end":444244,"line_start":591,"line_end":591,"column_start":1,"column_end":31}},{"value":"/     42","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444245,"byte_end":444255,"line_start":592,"line_end":592,"column_start":1,"column_end":11}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444256,"byte_end":444263,"line_start":593,"line_end":593,"column_start":1,"column_end":8}},{"value":"/ inner_resp.response.on_hover_text(\"You hovered the horizontal layout\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444264,"byte_end":444339,"line_start":594,"line_end":594,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(inner_resp.inner, 42);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444340,"byte_end":444377,"line_start":595,"line_end":595,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444378,"byte_end":444387,"line_start":596,"line_end":596,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444388,"byte_end":444395,"line_start":597,"line_end":597,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":5665},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444491,"byte_end":444496,"line_start":601,"line_end":601,"column_start":9,"column_end":14},"name":"inner","qualname":"::response::InnerResponse::inner","value":"R","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":" What the user closure returned.\n","sig":null,"attributes":[{"value":"/ What the user closure returned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444447,"byte_end":444482,"line_start":600,"line_end":600,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5666},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444543,"byte_end":444551,"line_start":603,"line_end":603,"column_start":9,"column_end":17},"name":"response","qualname":"::response::InnerResponse::response","value":"response::Response","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":" The response of the area.\n","sig":null,"attributes":[{"value":"/ The response of the area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444505,"byte_end":444534,"line_start":602,"line_end":602,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444618,"byte_end":444621,"line_start":608,"line_end":608,"column_start":12,"column_end":15},"name":"new","qualname":"<InnerResponse<R>>::new","value":"pub fn new(R, Response) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444597,"byte_end":444606,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":5670},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":444875,"byte_end":444880,"line_start":4,"line_end":4,"column_start":12,"column_end":17},"name":"Sense","qualname":"::sense::Sense","value":"Sense { click, drag, focusable }","parent":null,"children":[{"krate":0,"index":5671},{"krate":0,"index":5672},{"krate":0,"index":5673}],"decl_id":null,"docs":" What sort of interaction is a widget sensitive to?\n","sig":null,"attributes":[{"value":"/ What sort of interaction is a widget sensitive to?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":444704,"byte_end":444758,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":5671},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":444930,"byte_end":444935,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"name":"click","qualname":"::sense::Sense::click","value":"bool","parent":{"krate":0,"index":5670},"children":[],"decl_id":null,"docs":" buttons, sliders, windows, …\n","sig":null,"attributes":[{"value":"/ buttons, sliders, windows, …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":444887,"byte_end":444921,"line_start":5,"line_end":5,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5672},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445009,"byte_end":445013,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"name":"drag","qualname":"::sense::Sense::drag","value":"bool","parent":{"krate":0,"index":5670},"children":[],"decl_id":null,"docs":" sliders, windows, scroll bars, scroll areas, …\n","sig":null,"attributes":[{"value":"/ sliders, windows, scroll bars, scroll areas, …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":444948,"byte_end":445000,"line_start":8,"line_end":8,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":5673},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445164,"byte_end":445173,"line_start":14,"line_end":14,"column_start":9,"column_end":18},"name":"focusable","qualname":"::sense::Sense::focusable","value":"bool","parent":{"krate":0,"index":5670},"children":[],"decl_id":null,"docs":" this widgets want focus.\n Anything interactive + labels that can be focused\n for the benefit of screen readers.\n","sig":null,"attributes":[{"value":"/ this widgets want focus.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445026,"byte_end":445054,"line_start":11,"line_end":11,"column_start":5,"column_end":33}},{"value":"/ Anything interactive + labels that can be focused","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445059,"byte_end":445112,"line_start":12,"line_end":12,"column_start":5,"column_end":58}},{"value":"/ for the benefit of screen readers.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445117,"byte_end":445155,"line_start":13,"line_end":13,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445268,"byte_end":445273,"line_start":19,"line_end":19,"column_start":12,"column_end":17},"name":"hover","qualname":"<Sense>::hover","value":"pub fn hover() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Senses no clicks or drags. Only senses mouse hover.\n","sig":null,"attributes":[{"value":"/ Senses no clicks or drags. Only senses mouse hover.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445201,"byte_end":445256,"line_start":18,"line_end":18,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445562,"byte_end":445586,"line_start":29,"line_end":29,"column_start":12,"column_end":36},"name":"focusable_noninteractive","qualname":"<Sense>::focusable_noninteractive","value":"pub fn focusable_noninteractive() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Senses no clicks or drags, but can be focused with the keyboard.\n Used for labels that can be focused for the benefit of screen readers.\n","sig":null,"attributes":[{"value":"/ Senses no clicks or drags, but can be focused with the keyboard.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445403,"byte_end":445471,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ Used for labels that can be focused for the benefit of screen readers.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445476,"byte_end":445550,"line_start":28,"line_end":28,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445769,"byte_end":445774,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"click","qualname":"<Sense>::click","value":"pub fn click() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sense clicks and hover, but not drags.\n","sig":null,"attributes":[{"value":"/ Sense clicks and hover, but not drags.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445715,"byte_end":445757,"line_start":37,"line_end":37,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445956,"byte_end":445960,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"drag","qualname":"<Sense>::drag","value":"pub fn drag() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sense drags and hover, but not clicks.\n","sig":null,"attributes":[{"value":"/ Sense drags and hover, but not clicks.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445902,"byte_end":445944,"line_start":46,"line_end":46,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":446165,"byte_end":446179,"line_start":56,"line_end":56,"column_start":12,"column_end":26},"name":"click_and_drag","qualname":"<Sense>::click_and_drag","value":"pub fn click_and_drag() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sense both clicks, drags and hover (e.g. a slider or window).\n","sig":null,"attributes":[{"value":"/ Sense both clicks, drags and hover (e.g. a slider or window).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":446088,"byte_end":446153,"line_start":55,"line_end":55,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":446371,"byte_end":446376,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"union","qualname":"<Sense>::union","value":"pub fn union(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The logical \"or\" of two `Sense`s.\n","sig":null,"attributes":[{"value":"/ The logical \"or\" of two `Sense`s.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":446306,"byte_end":446343,"line_start":64,"line_end":64,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":446348,"byte_end":446359,"line_start":65,"line_end":65,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":446650,"byte_end":446661,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"interactive","qualname":"<Sense>::interactive","value":"pub fn interactive(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if we sense either clicks or drags.\n","sig":null,"attributes":[{"value":"/ Returns true if we sense either clicks or drags.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":446586,"byte_end":446638,"line_start":74,"line_end":74,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1823},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"style","qualname":"::style","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","parent":null,"children":[{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1846},{"krate":0,"index":1849},{"krate":0,"index":1852},{"krate":0,"index":1855},{"krate":0,"index":5686},{"krate":0,"index":5700},{"krate":0,"index":5702},{"krate":0,"index":5704},{"krate":0,"index":5705},{"krate":0,"index":5707},{"krate":0,"index":5710},{"krate":0,"index":5712},{"krate":0,"index":5713},{"krate":0,"index":5716},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":5718},{"krate":0,"index":5729},{"krate":0,"index":5731},{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":1880},{"krate":0,"index":5737},{"krate":0,"index":5751},{"krate":0,"index":5753},{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":1885},{"krate":0,"index":5759},{"krate":0,"index":5764},{"krate":0,"index":5766},{"krate":0,"index":5767},{"krate":0,"index":5769},{"krate":0,"index":5771},{"krate":0,"index":5772},{"krate":0,"index":1887},{"krate":0,"index":1891},{"krate":0,"index":5775},{"krate":0,"index":5779},{"krate":0,"index":5781},{"krate":0,"index":5783},{"krate":0,"index":5784},{"krate":0,"index":5787},{"krate":0,"index":5805},{"krate":0,"index":5807},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":1893},{"krate":0,"index":5813},{"krate":0,"index":5816},{"krate":0,"index":5818},{"krate":0,"index":5819},{"krate":0,"index":5821},{"krate":0,"index":5822},{"krate":0,"index":5825},{"krate":0,"index":5831},{"krate":0,"index":5833},{"krate":0,"index":5835},{"krate":0,"index":5836},{"krate":0,"index":1901},{"krate":0,"index":5839},{"krate":0,"index":5845},{"krate":0,"index":5847},{"krate":0,"index":5848},{"krate":0,"index":5850},{"krate":0,"index":5851},{"krate":0,"index":1903},{"krate":0,"index":5854},{"krate":0,"index":5859},{"krate":0,"index":5861},{"krate":0,"index":5862},{"krate":0,"index":5864},{"krate":0,"index":5866},{"krate":0,"index":5867},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1920},{"krate":0,"index":1922},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1932},{"krate":0,"index":1943},{"krate":0,"index":1946},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":1972},{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":1992},{"krate":0,"index":1995}],"decl_id":null,"docs":" egui theme (spacing, colors, etc).\n","sig":null,"attributes":[{"value":"/ egui theme (spacing, colors, etc).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":446720,"byte_end":446758,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"allow(clippy :: if_same_then_else)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":446760,"byte_end":446796,"line_start":3,"line_end":3,"column_start":1,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5687},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447429,"byte_end":447434,"line_start":19,"line_end":19,"column_start":5,"column_end":10},"name":"Small","qualname":"::style::TextStyle::Small","value":"TextStyle::Small","parent":{"krate":0,"index":5686},"children":[],"decl_id":null,"docs":" Used when small text is needed.\n","sig":null,"attributes":[{"value":"/ Used when small text is needed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447389,"byte_end":447424,"line_start":18,"line_end":18,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5689},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447513,"byte_end":447517,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Body","qualname":"::style::TextStyle::Body","value":"TextStyle::Body","parent":{"krate":0,"index":5686},"children":[],"decl_id":null,"docs":" Normal labels. Easily readable, doesn't take up too much space.\n","sig":null,"attributes":[{"value":"/ Normal labels. Easily readable, doesn't take up too much space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447441,"byte_end":447508,"line_start":21,"line_end":21,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5691},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447641,"byte_end":447650,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Monospace","qualname":"::style::TextStyle::Monospace","value":"TextStyle::Monospace","parent":{"krate":0,"index":5686},"children":[],"decl_id":null,"docs":" Same size as [`Self::Body]`, but used when monospace is important (for aligning number, code snippets, etc).\n","sig":null,"attributes":[{"value":"/ Same size as [`Self::Body]`, but used when monospace is important (for aligning number, code snippets, etc).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447524,"byte_end":447636,"line_start":24,"line_end":24,"column_start":5,"column_end":117}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5693},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447764,"byte_end":447770,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Button","qualname":"::style::TextStyle::Button","value":"TextStyle::Button","parent":{"krate":0,"index":5686},"children":[],"decl_id":null,"docs":" Buttons. Maybe slightly bigger than [`Self::Body]`.\n Signifies that he item is interactive.\n","sig":null,"attributes":[{"value":"/ Buttons. Maybe slightly bigger than [`Self::Body]`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447657,"byte_end":447712,"line_start":27,"line_end":27,"column_start":5,"column_end":60}},{"value":"/ Signifies that he item is interactive.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447717,"byte_end":447759,"line_start":28,"line_end":28,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5695},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447831,"byte_end":447838,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"Heading","qualname":"::style::TextStyle::Heading","value":"TextStyle::Heading","parent":{"krate":0,"index":5686},"children":[],"decl_id":null,"docs":" Heading. Probably larger than [`Self::Body]`.\n","sig":null,"attributes":[{"value":"/ Heading. Probably larger than [`Self::Body]`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447777,"byte_end":447826,"line_start":31,"line_end":31,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5697},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447981,"byte_end":447985,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Name","qualname":"::style::TextStyle::Name","value":"TextStyle::Name(Arc<str>)","parent":{"krate":0,"index":5686},"children":[],"decl_id":null,"docs":" A user-chosen style, found in [`Style::text_styles`].\n ```\n egui::TextStyle::Name(\"footing\".into());\n ````\n","sig":null,"attributes":[{"value":"/ A user-chosen style, found in [`Style::text_styles`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447845,"byte_end":447902,"line_start":34,"line_end":34,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447907,"byte_end":447914,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ egui::TextStyle::Name(\"footing\".into());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447919,"byte_end":447963,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/ ````","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447968,"byte_end":447976,"line_start":37,"line_end":37,"column_start":5,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447373,"byte_end":447382,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"TextStyle","qualname":"::style::TextStyle","value":"pub enum TextStyle {\n    Small,\n    Body,\n    Monospace,\n    Button,\n    Heading,\n    Name(Arc<str>),\n}","parent":null,"children":[{"krate":0,"index":5687},{"krate":0,"index":5689},{"krate":0,"index":5691},{"krate":0,"index":5693},{"krate":0,"index":5695},{"krate":0,"index":5697}],"decl_id":null,"docs":" Alias for a [`FontId`] (font of a certain size).","sig":null,"attributes":[{"value":"/ Alias for a [`FontId`] (font of a certain size).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447049,"byte_end":447101,"line_start":11,"line_end":11,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447102,"byte_end":447105,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The font is found via look-up in [`Style::text_styles`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447106,"byte_end":447166,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/ You can use [`TextStyle::resolve`] to do this lookup.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":447167,"byte_end":447224,"line_start":14,"line_end":14,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":448517,"byte_end":448524,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"resolve","qualname":"<TextStyle>::resolve","value":"pub fn resolve(&Self, &Style) -> FontId","parent":null,"children":[],"decl_id":null,"docs":" Look up this [`TextStyle`] in [`Style::text_styles`].\n","sig":null,"attributes":[{"value":"/ Look up this [`TextStyle`] in [`Style::text_styles`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":448448,"byte_end":448505,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1864},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449169,"byte_end":449176,"line_start":73,"line_end":73,"column_start":5,"column_end":12},"name":"Default","qualname":"::style::FontSelection::Default","value":"FontSelection::Default","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Default text style - will use [`TextStyle::Body`], unless\n [`Style::override_font_id`] or [`Style::override_text_style`] is set.\n","sig":null,"attributes":[{"value":"/ Default text style - will use [`TextStyle::Body`], unless","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449025,"byte_end":449086,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/ [`Style::override_font_id`] or [`Style::override_text_style`] is set.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449091,"byte_end":449164,"line_start":72,"line_end":72,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1866},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449228,"byte_end":449234,"line_start":76,"line_end":76,"column_start":5,"column_end":11},"name":"FontId","qualname":"::style::FontSelection::FontId","value":"FontSelection::FontId(FontId)","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Directly select size and font family\n","sig":null,"attributes":[{"value":"/ Directly select size and font family","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449183,"byte_end":449223,"line_start":75,"line_end":75,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1869},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449330,"byte_end":449335,"line_start":79,"line_end":79,"column_start":5,"column_end":10},"name":"Style","qualname":"::style::FontSelection::Style","value":"FontSelection::Style(TextStyle)","parent":{"krate":0,"index":1863},"children":[],"decl_id":null,"docs":" Use a [`TextStyle`] to look up the [`FontId`] in [`Style::text_styles`].\n","sig":null,"attributes":[{"value":"/ Use a [`TextStyle`] to look up the [`FontId`] in [`Style::text_styles`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449249,"byte_end":449325,"line_start":78,"line_end":78,"column_start":5,"column_end":81}}]},{"kind":"Enum","id":{"krate":0,"index":1863},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449005,"byte_end":449018,"line_start":70,"line_end":70,"column_start":10,"column_end":23},"name":"FontSelection","qualname":"::style::FontSelection","value":"pub enum FontSelection { Default, FontId(FontId), Style(TextStyle), }","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1869}],"decl_id":null,"docs":" A way to select [`FontId`], either by picking one directly or by using a [`TextStyle`].\n","sig":null,"attributes":[{"value":"/ A way to select [`FontId`], either by picking one directly or by using a [`TextStyle`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":448904,"byte_end":448995,"line_start":69,"line_end":69,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449488,"byte_end":449495,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"resolve","qualname":"<FontSelection>::resolve","value":"pub fn resolve(Self, &Style) -> FontId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5718},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450850,"byte_end":450855,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"Style","qualname":"::style::Style","value":"Style { override_text_style, override_font_id, text_styles, wrap, spacing, interaction, visuals, animation_time, debug, explanation_tooltips }","parent":null,"children":[{"krate":0,"index":5719},{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5722},{"krate":0,"index":5723},{"krate":0,"index":5724},{"krate":0,"index":5725},{"krate":0,"index":5726},{"krate":0,"index":5727},{"krate":0,"index":5728}],"decl_id":null,"docs":" Specifies the look and feel of egui.","sig":null,"attributes":[{"value":"/ Specifies the look and feel of egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450431,"byte_end":450471,"line_start":123,"line_end":123,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450472,"byte_end":450475,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ You can change the visuals of a [`Ui`] with [`Ui::style_mut`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450476,"byte_end":450541,"line_start":125,"line_end":125,"column_start":1,"column_end":66}},{"value":"/ and of everything with [`crate::Context::set_style`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450542,"byte_end":450599,"line_start":126,"line_end":126,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450600,"byte_end":450603,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ If you want to change fonts, use [`crate::Context::set_fonts`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450604,"byte_end":450679,"line_start":128,"line_end":128,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":5719},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451060,"byte_end":451079,"line_start":137,"line_end":137,"column_start":9,"column_end":28},"name":"override_text_style","qualname":"::style::Style::override_text_style","value":"std::option::Option<style::TextStyle>","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" If set this will change the default [`TextStyle`] for all widgets.","sig":null,"attributes":[{"value":"/ If set this will change the default [`TextStyle`] for all widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450862,"byte_end":450932,"line_start":133,"line_end":133,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450937,"byte_end":450940,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ On most widgets you can also set an explicit text style,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450945,"byte_end":451005,"line_start":135,"line_end":135,"column_start":5,"column_end":65}},{"value":"/ which will take precedence over this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451010,"byte_end":451051,"line_start":136,"line_end":136,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5720},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451302,"byte_end":451318,"line_start":143,"line_end":143,"column_start":9,"column_end":25},"name":"override_font_id","qualname":"::style::Style::override_font_id","value":"std::option::Option<epaint::FontId>","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" If set this will change the font family and size for all widgets.","sig":null,"attributes":[{"value":"/ If set this will change the font family and size for all widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451105,"byte_end":451174,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451179,"byte_end":451182,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ On most widgets you can also set an explicit text style,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451187,"byte_end":451247,"line_start":141,"line_end":141,"column_start":5,"column_end":65}},{"value":"/ which will take precedence over this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451252,"byte_end":451293,"line_start":142,"line_end":142,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":5721},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451530,"byte_end":451541,"line_start":148,"line_end":148,"column_start":9,"column_end":20},"name":"text_styles","qualname":"::style::Style::text_styles","value":"std::collections::BTreeMap<style::TextStyle, epaint::FontId>","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" The [`FontFamily`] and size you want to use for a specific [`TextStyle`].","sig":null,"attributes":[{"value":"/ The [`FontFamily`] and size you want to use for a specific [`TextStyle`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451341,"byte_end":451418,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451423,"byte_end":451426,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ The most convenient way to look something up in this is to use [`TextStyle::resolve`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451431,"byte_end":451521,"line_start":147,"line_end":147,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":5722},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451873,"byte_end":451877,"line_start":157,"line_end":157,"column_start":9,"column_end":13},"name":"wrap","qualname":"::style::Style::wrap","value":"std::option::Option<bool>","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" If set, labels buttons wtc will use this to determine whether or not\n to wrap the text at the right edge of the `Ui` they are in.\n By default this is `None`.","sig":null,"attributes":[{"value":"/ If set, labels buttons wtc will use this to determine whether or not","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451577,"byte_end":451649,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ to wrap the text at the right edge of the `Ui` they are in.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451654,"byte_end":451717,"line_start":151,"line_end":151,"column_start":5,"column_end":68}},{"value":"/ By default this is `None`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451722,"byte_end":451752,"line_start":152,"line_end":152,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451757,"byte_end":451760,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ * `None`: follow layout","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451765,"byte_end":451792,"line_start":154,"line_end":154,"column_start":5,"column_end":32}},{"value":"/ * `Some(true)`: default on","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451797,"byte_end":451827,"line_start":155,"line_end":155,"column_start":5,"column_end":35}},{"value":"/ * `Some(false)`: default off","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451832,"byte_end":451864,"line_start":156,"line_end":156,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":5723},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451946,"byte_end":451953,"line_start":160,"line_end":160,"column_start":9,"column_end":16},"name":"spacing","qualname":"::style::Style::spacing","value":"style::Spacing","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" Sizes and distances between widgets\n","sig":null,"attributes":[{"value":"/ Sizes and distances between widgets","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451898,"byte_end":451937,"line_start":159,"line_end":159,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":5724},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452015,"byte_end":452026,"line_start":163,"line_end":163,"column_start":9,"column_end":20},"name":"interaction","qualname":"::style::Style::interaction","value":"style::Interaction","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" How and when interaction happens.\n","sig":null,"attributes":[{"value":"/ How and when interaction happens.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":451969,"byte_end":452006,"line_start":162,"line_end":162,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5725},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452070,"byte_end":452077,"line_start":166,"line_end":166,"column_start":9,"column_end":16},"name":"visuals","qualname":"::style::Style::visuals","value":"style::Visuals","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" Colors etc.\n","sig":null,"attributes":[{"value":"/ Colors etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452046,"byte_end":452061,"line_start":165,"line_end":165,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":5726},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452155,"byte_end":452169,"line_start":169,"line_end":169,"column_start":9,"column_end":23},"name":"animation_time","qualname":"::style::Style::animation_time","value":"f32","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" How many seconds a typical animation should last.\n","sig":null,"attributes":[{"value":"/ How many seconds a typical animation should last.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452093,"byte_end":452146,"line_start":168,"line_end":168,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5727},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452243,"byte_end":452248,"line_start":172,"line_end":172,"column_start":9,"column_end":14},"name":"debug","qualname":"::style::Style::debug","value":"style::DebugOptions","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" Options to help debug why egui behaves strangely.\n","sig":null,"attributes":[{"value":"/ Options to help debug why egui behaves strangely.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452181,"byte_end":452234,"line_start":171,"line_end":171,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5728},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452392,"byte_end":452412,"line_start":177,"line_end":177,"column_start":9,"column_end":29},"name":"explanation_tooltips","qualname":"::style::Style::explanation_tooltips","value":"bool","parent":{"krate":0,"index":5718},"children":[],"decl_id":null,"docs":" Show tooltips explaining `DragValue`:s etc when hovered.","sig":null,"attributes":[{"value":"/ Show tooltips explaining `DragValue`:s etc when hovered.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452269,"byte_end":452329,"line_start":174,"line_end":174,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452334,"byte_end":452337,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This only affects a few egui widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452342,"byte_end":452383,"line_start":176,"line_end":176,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452695,"byte_end":452703,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"interact","qualname":"<Style>::interact","value":"pub fn interact(&Self, &Response) -> &WidgetVisuals","parent":null,"children":[],"decl_id":null,"docs":" Use this style for interactive things.\n Note that you must already have a response,\n i.e. you must allocate space and interact BEFORE painting the widget!\n","sig":null,"attributes":[{"value":"/ Use this style for interactive things.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452511,"byte_end":452553,"line_start":182,"line_end":182,"column_start":5,"column_end":47}},{"value":"/ Note that you must already have a response,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452558,"byte_end":452605,"line_start":183,"line_end":183,"column_start":5,"column_end":52}},{"value":"/ i.e. you must allocate space and interact BEFORE painting the widget!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452610,"byte_end":452683,"line_start":184,"line_end":184,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1882},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452815,"byte_end":452834,"line_start":189,"line_end":189,"column_start":12,"column_end":31},"name":"interact_selectable","qualname":"<Style>::interact_selectable","value":"pub fn interact_selectable(&Self, &Response, bool) -> WidgetVisuals","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453270,"byte_end":453284,"line_start":200,"line_end":200,"column_start":12,"column_end":26},"name":"noninteractive","qualname":"<Style>::noninteractive","value":"pub fn noninteractive(&Self) -> &WidgetVisuals","parent":null,"children":[],"decl_id":null,"docs":" Style to use for non-interactive widgets.\n","sig":null,"attributes":[{"value":"/ Style to use for non-interactive widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453213,"byte_end":453258,"line_start":199,"line_end":199,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453406,"byte_end":453417,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"text_styles","qualname":"<Style>::text_styles","value":"pub fn text_styles(&Self) -> Vec<TextStyle>","parent":null,"children":[],"decl_id":null,"docs":" All known text styles.\n","sig":null,"attributes":[{"value":"/ All known text styles.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453368,"byte_end":453394,"line_start":204,"line_end":204,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":5737},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453729,"byte_end":453736,"line_start":214,"line_end":214,"column_start":12,"column_end":19},"name":"Spacing","qualname":"::style::Spacing","value":"Spacing { item_spacing, window_margin, button_padding, indent, interact_size, slider_width, text_edit_width, icon_width, icon_spacing, tooltip_width, indent_ends_with_horizontal_line, combo_height, scroll_bar_width }","parent":null,"children":[{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743},{"krate":0,"index":5744},{"krate":0,"index":5745},{"krate":0,"index":5746},{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750}],"decl_id":null,"docs":" Controls the sizes and distances between widgets.\n","sig":null,"attributes":[{"value":"/ Controls the sizes and distances between widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453505,"byte_end":453558,"line_start":210,"line_end":210,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5738},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454063,"byte_end":454075,"line_start":221,"line_end":221,"column_start":9,"column_end":21},"name":"item_spacing","qualname":"::style::Spacing::item_spacing","value":"epaint::Vec2","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Horizontal and vertical spacing between widgets.","sig":null,"attributes":[{"value":"/ Horizontal and vertical spacing between widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453743,"byte_end":453795,"line_start":215,"line_end":215,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453800,"byte_end":453803,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ To add extra space between widgets, use [`Ui::add_space`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453808,"byte_end":453870,"line_start":217,"line_end":217,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453875,"byte_end":453878,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ `item_spacing` is inserted _after_ adding a widget, so to increase the spacing between","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453883,"byte_end":453973,"line_start":219,"line_end":219,"column_start":5,"column_end":95}},{"value":"/ widgets `A` and `B` you need to change `item_spacing` before adding `A`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":453978,"byte_end":454054,"line_start":220,"line_end":220,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":5739},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454155,"byte_end":454168,"line_start":224,"line_end":224,"column_start":9,"column_end":22},"name":"window_margin","qualname":"::style::Spacing::window_margin","value":"style::Margin","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Horizontal and vertical margins within a window frame.\n","sig":null,"attributes":[{"value":"/ Horizontal and vertical margins within a window frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454088,"byte_end":454146,"line_start":223,"line_end":223,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5740},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454243,"byte_end":454257,"line_start":227,"line_end":227,"column_start":9,"column_end":23},"name":"button_padding","qualname":"::style::Spacing::button_padding","value":"epaint::Vec2","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Button size is text size plus this on each side\n","sig":null,"attributes":[{"value":"/ Button size is text size plus this on each side","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454183,"byte_end":454234,"line_start":226,"line_end":226,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":5741},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454326,"byte_end":454332,"line_start":230,"line_end":230,"column_start":9,"column_end":15},"name":"indent","qualname":"::style::Spacing::indent","value":"f32","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Indent collapsing regions etc by this much.\n","sig":null,"attributes":[{"value":"/ Indent collapsing regions etc by this much.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454270,"byte_end":454317,"line_start":229,"line_end":229,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5742},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454564,"byte_end":454577,"line_start":235,"line_end":235,"column_start":9,"column_end":22},"name":"interact_size","qualname":"::style::Spacing::interact_size","value":"epaint::Vec2","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Minimum size of a `DragValue`, color picker button, and other small widgets.\n `interact_size.y` is the default height of button, slider, etc.\n Anything clickable should be (at least) this size.\n","sig":null,"attributes":[{"value":"/ Minimum size of a `DragValue`, color picker button, and other small widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454344,"byte_end":454424,"line_start":232,"line_end":232,"column_start":5,"column_end":85}},{"value":"/ `interact_size.y` is the default height of button, slider, etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454429,"byte_end":454496,"line_start":233,"line_end":233,"column_start":5,"column_end":72}},{"value":"/ Anything clickable should be (at least) this size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454501,"byte_end":454555,"line_start":234,"line_end":234,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":5743},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454682,"byte_end":454694,"line_start":238,"line_end":238,"column_start":9,"column_end":21},"name":"slider_width","qualname":"::style::Spacing::slider_width","value":"f32","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Default width of a `Slider` and `ComboBox`.\n","sig":null,"attributes":[{"value":"/ Default width of a `Slider` and `ComboBox`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454626,"byte_end":454673,"line_start":237,"line_end":237,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5744},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454785,"byte_end":454800,"line_start":241,"line_end":241,"column_start":9,"column_end":24},"name":"text_edit_width","qualname":"::style::Spacing::text_edit_width","value":"f32","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Default width of a `TextEdit`.\n","sig":null,"attributes":[{"value":"/ Default width of a `TextEdit`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454742,"byte_end":454776,"line_start":240,"line_end":240,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":5745},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454946,"byte_end":454956,"line_start":245,"line_end":245,"column_start":9,"column_end":19},"name":"icon_width","qualname":"::style::Spacing::icon_width","value":"f32","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Checkboxes, radio button and collapsing headers have an icon at the start.\n This is the width/height of this icon.\n","sig":null,"attributes":[{"value":"/ Checkboxes, radio button and collapsing headers have an icon at the start.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454812,"byte_end":454890,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/ This is the width/height of this icon.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454895,"byte_end":454937,"line_start":244,"line_end":244,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":5746},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455113,"byte_end":455125,"line_start":249,"line_end":249,"column_start":9,"column_end":21},"name":"icon_spacing","qualname":"::style::Spacing::icon_spacing","value":"f32","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Checkboxes, radio button and collapsing headers have an icon at the start.\n This is the spacing between the icon and the text\n","sig":null,"attributes":[{"value":"/ Checkboxes, radio button and collapsing headers have an icon at the start.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":454968,"byte_end":455046,"line_start":247,"line_end":247,"column_start":5,"column_end":83}},{"value":"/ This is the spacing between the icon and the text","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455051,"byte_end":455104,"line_start":248,"line_end":248,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5747},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455206,"byte_end":455219,"line_start":252,"line_end":252,"column_start":9,"column_end":22},"name":"tooltip_width","qualname":"::style::Spacing::tooltip_width","value":"f32","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Width of a tooltip (`on_hover_ui`, `on_hover_text` etc).\n","sig":null,"attributes":[{"value":"/ Width of a tooltip (`on_hover_ui`, `on_hover_text` etc).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455137,"byte_end":455197,"line_start":251,"line_end":251,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":5748},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455287,"byte_end":455319,"line_start":255,"line_end":255,"column_start":9,"column_end":41},"name":"indent_ends_with_horizontal_line","qualname":"::style::Spacing::indent_ends_with_horizontal_line","value":"bool","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" End indented regions with a horizontal line\n","sig":null,"attributes":[{"value":"/ End indented regions with a horizontal line","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455231,"byte_end":455278,"line_start":254,"line_end":254,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5749},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455394,"byte_end":455406,"line_start":258,"line_end":258,"column_start":9,"column_end":21},"name":"combo_height","qualname":"::style::Spacing::combo_height","value":"f32","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":" Height of a combo-box before showing scroll bars.\n","sig":null,"attributes":[{"value":"/ Height of a combo-box before showing scroll bars.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455332,"byte_end":455385,"line_start":257,"line_end":257,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5750},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455422,"byte_end":455438,"line_start":260,"line_end":260,"column_start":9,"column_end":25},"name":"scroll_bar_width","qualname":"::style::Spacing::scroll_bar_width","value":"f32","parent":{"krate":0,"index":5737},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455534,"byte_end":455549,"line_start":265,"line_end":265,"column_start":12,"column_end":27},"name":"icon_rectangles","qualname":"<Spacing>::icon_rectangles","value":"pub fn icon_rectangles(&Self, Rect) -> (Rect, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Returns small icon rectangle and big icon rectangle\n","sig":null,"attributes":[{"value":"/ Returns small icon rectangle and big icon rectangle","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455467,"byte_end":455522,"line_start":264,"line_end":264,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":5759},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456164,"byte_end":456170,"line_start":282,"line_end":282,"column_start":12,"column_end":18},"name":"Margin","qualname":"::style::Margin","value":"Margin { left, right, top, bottom }","parent":null,"children":[{"krate":0,"index":5760},{"krate":0,"index":5761},{"krate":0,"index":5762},{"krate":0,"index":5763}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5760},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456181,"byte_end":456185,"line_start":283,"line_end":283,"column_start":9,"column_end":13},"name":"left","qualname":"::style::Margin::left","value":"f32","parent":{"krate":0,"index":5759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5761},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456200,"byte_end":456205,"line_start":284,"line_end":284,"column_start":9,"column_end":14},"name":"right","qualname":"::style::Margin::right","value":"f32","parent":{"krate":0,"index":5759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5762},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456220,"byte_end":456223,"line_start":285,"line_end":285,"column_start":9,"column_end":12},"name":"top","qualname":"::style::Margin::top","value":"f32","parent":{"krate":0,"index":5759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5763},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456238,"byte_end":456244,"line_start":286,"line_end":286,"column_start":9,"column_end":15},"name":"bottom","qualname":"::style::Margin::bottom","value":"f32","parent":{"krate":0,"index":5759},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456293,"byte_end":456297,"line_start":291,"line_end":291,"column_start":12,"column_end":16},"name":"same","qualname":"<Margin>::same","value":"pub fn same(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456272,"byte_end":456281,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1889},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456537,"byte_end":456546,"line_start":302,"line_end":302,"column_start":12,"column_end":21},"name":"symmetric","qualname":"<Margin>::symmetric","value":"pub fn symmetric(f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Margins with the same size on opposing sides\n","sig":null,"attributes":[{"value":"/ Margins with the same size on opposing sides","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456463,"byte_end":456511,"line_start":300,"line_end":300,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456516,"byte_end":456525,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456738,"byte_end":456741,"line_start":312,"line_end":312,"column_start":12,"column_end":15},"name":"sum","qualname":"<Margin>::sum","value":"pub fn sum(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Total margins on both sides\n","sig":null,"attributes":[{"value":"/ Total margins on both sides","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456695,"byte_end":456726,"line_start":311,"line_end":311,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5775},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457145,"byte_end":457156,"line_start":327,"line_end":327,"column_start":12,"column_end":23},"name":"Interaction","qualname":"::style::Interaction","value":"Interaction { resize_grab_radius_side, resize_grab_radius_corner, show_tooltips_only_when_still }","parent":null,"children":[{"krate":0,"index":5776},{"krate":0,"index":5777},{"krate":0,"index":5778}],"decl_id":null,"docs":" How and when interaction happens.\n","sig":null,"attributes":[{"value":"/ How and when interaction happens.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456937,"byte_end":456974,"line_start":323,"line_end":323,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5776},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457234,"byte_end":457257,"line_start":329,"line_end":329,"column_start":9,"column_end":32},"name":"resize_grab_radius_side","qualname":"::style::Interaction::resize_grab_radius_side","value":"f32","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" Mouse must be this close to the side of a window to resize\n","sig":null,"attributes":[{"value":"/ Mouse must be this close to the side of a window to resize","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457163,"byte_end":457225,"line_start":328,"line_end":328,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":5777},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457342,"byte_end":457367,"line_start":332,"line_end":332,"column_start":9,"column_end":34},"name":"resize_grab_radius_corner","qualname":"::style::Interaction::resize_grab_radius_corner","value":"f32","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" Mouse must be this close to the corner of a window to resize\n","sig":null,"attributes":[{"value":"/ Mouse must be this close to the corner of a window to resize","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457269,"byte_end":457333,"line_start":331,"line_end":331,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":5778},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457483,"byte_end":457512,"line_start":335,"line_end":335,"column_start":9,"column_end":38},"name":"show_tooltips_only_when_still","qualname":"::style::Interaction::show_tooltips_only_when_still","value":"bool","parent":{"krate":0,"index":5775},"children":[],"decl_id":null,"docs":" If `false`, tooltips will show up anytime you hover anything, even is mouse is still moving\n","sig":null,"attributes":[{"value":"/ If `false`, tooltips will show up anytime you hover anything, even is mouse is still moving","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457379,"byte_end":457474,"line_start":334,"line_end":334,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":5787},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457957,"byte_end":457964,"line_start":347,"line_end":347,"column_start":12,"column_end":19},"name":"Visuals","qualname":"::style::Visuals","value":"Visuals { dark_mode, override_text_color, widgets, selection, hyperlink_color, faint_bg_color, extreme_bg_color, code_bg_color, window_rounding, window_shadow, popup_shadow, resize_corner_size, text_cursor_width, text_cursor_preview, clip_rect_margin, button_frame, collapsing_header_frame }","parent":null,"children":[{"krate":0,"index":5788},{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5791},{"krate":0,"index":5792},{"krate":0,"index":5793},{"krate":0,"index":5794},{"krate":0,"index":5795},{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5798},{"krate":0,"index":5799},{"krate":0,"index":5800},{"krate":0,"index":5801},{"krate":0,"index":5802},{"krate":0,"index":5803},{"krate":0,"index":5804}],"decl_id":null,"docs":" Controls the visual style (colors etc) of egui.","sig":null,"attributes":[{"value":"/ Controls the visual style (colors etc) of egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457523,"byte_end":457574,"line_start":338,"line_end":338,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457575,"byte_end":457578,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ You can change the visuals of a [`Ui`] with [`Ui::visuals_mut`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457579,"byte_end":457646,"line_start":340,"line_end":340,"column_start":1,"column_end":68}},{"value":"/ and of everything with [`crate::Context::set_visuals`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457647,"byte_end":457706,"line_start":341,"line_end":341,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457707,"byte_end":457710,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ If you want to change fonts, use [`crate::Context::set_fonts`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457711,"byte_end":457786,"line_start":343,"line_end":343,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":5788},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458247,"byte_end":458256,"line_start":353,"line_end":353,"column_start":9,"column_end":18},"name":"dark_mode","qualname":"::style::Visuals::dark_mode","value":"bool","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" If true, the visuals are overall dark with light text.\n If false, the visuals are overall light with dark text.","sig":null,"attributes":[{"value":"/ If true, the visuals are overall dark with light text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":457971,"byte_end":458029,"line_start":348,"line_end":348,"column_start":5,"column_end":63}},{"value":"/ If false, the visuals are overall light with dark text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458034,"byte_end":458093,"line_start":349,"line_end":349,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458098,"byte_end":458101,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ NOTE: setting this does very little by itself,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458106,"byte_end":458156,"line_start":351,"line_end":351,"column_start":5,"column_end":55}},{"value":"/ this is more to provide a convenient summary of the rest of the settings.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458161,"byte_end":458238,"line_start":352,"line_end":352,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":5789},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458931,"byte_end":458950,"line_start":368,"line_end":368,"column_start":9,"column_end":28},"name":"override_text_color","qualname":"::style::Visuals::override_text_color","value":"std::option::Option<epaint::Color32>","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" Override default text color for all text.","sig":null,"attributes":[{"value":"/ Override default text color for all text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458269,"byte_end":458314,"line_start":355,"line_end":355,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458319,"byte_end":458322,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ This is great for setting the color of text for any widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458327,"byte_end":458390,"line_start":357,"line_end":357,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458395,"byte_end":458398,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If `text_color` is `None` (default), then the text color will be the same as the","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458403,"byte_end":458487,"line_start":359,"line_end":359,"column_start":5,"column_end":89}},{"value":"/ foreground stroke color (`WidgetVisuals::fg_stroke`)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458492,"byte_end":458548,"line_start":360,"line_end":360,"column_start":5,"column_end":61}},{"value":"/ and will depend on whether or not the widget is being interacted with.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458553,"byte_end":458627,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458632,"byte_end":458635,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ In the future we may instead modulate","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458640,"byte_end":458681,"line_start":363,"line_end":363,"column_start":5,"column_end":46}},{"value":"/ the `text_color` based on whether or not it is interacted with","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458686,"byte_end":458752,"line_start":364,"line_end":364,"column_start":5,"column_end":71}},{"value":"/ so that `visuals.text_color` is always used,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458757,"byte_end":458805,"line_start":365,"line_end":365,"column_start":5,"column_end":53}},{"value":"/ but its alpha may be different based on whether or not","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458810,"byte_end":458868,"line_start":366,"line_end":366,"column_start":5,"column_end":63}},{"value":"/ it is disabled, non-interactive, hovered etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458873,"byte_end":458922,"line_start":367,"line_end":367,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":5790},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459011,"byte_end":459018,"line_start":371,"line_end":371,"column_start":9,"column_end":16},"name":"widgets","qualname":"::style::Visuals::widgets","value":"style::Widgets","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" Visual styles of widgets\n","sig":null,"attributes":[{"value":"/ Visual styles of widgets","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":458974,"byte_end":459002,"line_start":370,"line_end":370,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":5791},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459038,"byte_end":459047,"line_start":373,"line_end":373,"column_start":9,"column_end":18},"name":"selection","qualname":"::style::Visuals::selection","value":"style::Selection","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5792},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459109,"byte_end":459124,"line_start":376,"line_end":376,"column_start":9,"column_end":24},"name":"hyperlink_color","qualname":"::style::Visuals::hyperlink_color","value":"epaint::Color32","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" The color used for `Hyperlink`,\n","sig":null,"attributes":[{"value":"/ The color used for `Hyperlink`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459065,"byte_end":459100,"line_start":375,"line_end":375,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":5793},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459254,"byte_end":459268,"line_start":380,"line_end":380,"column_start":9,"column_end":23},"name":"faint_bg_color","qualname":"::style::Visuals::faint_bg_color","value":"epaint::Color32","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" Something just barely different from the background color.\n Used for [`crate::Grid::striped`].\n","sig":null,"attributes":[{"value":"/ Something just barely different from the background color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459140,"byte_end":459202,"line_start":378,"line_end":378,"column_start":5,"column_end":67}},{"value":"/ Used for [`crate::Grid::striped`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459207,"byte_end":459245,"line_start":379,"line_end":379,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":5794},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459491,"byte_end":459507,"line_start":385,"line_end":385,"column_start":9,"column_end":25},"name":"extreme_bg_color","qualname":"::style::Visuals::extreme_bg_color","value":"epaint::Color32","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" Very dark or light color (for corresponding theme).\n Used as the background of text edits, scroll bars and others things\n that needs to look different from other interactive stuff.\n","sig":null,"attributes":[{"value":"/ Very dark or light color (for corresponding theme).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459284,"byte_end":459339,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"/ Used as the background of text edits, scroll bars and others things","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459344,"byte_end":459415,"line_start":383,"line_end":383,"column_start":5,"column_end":76}},{"value":"/ that needs to look different from other interactive stuff.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459420,"byte_end":459482,"line_start":384,"line_end":384,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":5795},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459590,"byte_end":459603,"line_start":388,"line_end":388,"column_start":9,"column_end":22},"name":"code_bg_color","qualname":"::style::Visuals::code_bg_color","value":"epaint::Color32","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" Background color behind code-styled monospaced labels.\n","sig":null,"attributes":[{"value":"/ Background color behind code-styled monospaced labels.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459523,"byte_end":459581,"line_start":387,"line_end":387,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5796},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459623,"byte_end":459638,"line_start":390,"line_end":390,"column_start":9,"column_end":24},"name":"window_rounding","qualname":"::style::Visuals::window_rounding","value":"epaint::Rounding","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5797},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459658,"byte_end":459671,"line_start":391,"line_end":391,"column_start":9,"column_end":22},"name":"window_shadow","qualname":"::style::Visuals::window_shadow","value":"epaint::Shadow","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5798},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459690,"byte_end":459702,"line_start":393,"line_end":393,"column_start":9,"column_end":21},"name":"popup_shadow","qualname":"::style::Visuals::popup_shadow","value":"epaint::Shadow","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5799},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459721,"byte_end":459739,"line_start":395,"line_end":395,"column_start":9,"column_end":27},"name":"resize_corner_size","qualname":"::style::Visuals::resize_corner_size","value":"f32","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5800},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459755,"byte_end":459772,"line_start":397,"line_end":397,"column_start":9,"column_end":26},"name":"text_cursor_width","qualname":"::style::Visuals::text_cursor_width","value":"f32","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5801},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459846,"byte_end":459865,"line_start":399,"line_end":399,"column_start":9,"column_end":28},"name":"text_cursor_preview","qualname":"::style::Visuals::text_cursor_preview","value":"bool","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" show where the text cursor would be if you clicked\n","sig":null,"attributes":[{"value":"/ show where the text cursor would be if you clicked","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459783,"byte_end":459837,"line_start":398,"line_end":398,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":5802},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459979,"byte_end":459995,"line_start":402,"line_end":402,"column_start":9,"column_end":25},"name":"clip_rect_margin","qualname":"::style::Visuals::clip_rect_margin","value":"f32","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" Allow child widgets to be just on the border and still have a stroke with some thickness\n","sig":null,"attributes":[{"value":"/ Allow child widgets to be just on the border and still have a stroke with some thickness","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":459878,"byte_end":459970,"line_start":401,"line_end":401,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":5803},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460053,"byte_end":460065,"line_start":405,"line_end":405,"column_start":9,"column_end":21},"name":"button_frame","qualname":"::style::Visuals::button_frame","value":"bool","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" Show a background behind buttons.\n","sig":null,"attributes":[{"value":"/ Show a background behind buttons.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460007,"byte_end":460044,"line_start":404,"line_end":404,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5804},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460135,"byte_end":460158,"line_start":408,"line_end":408,"column_start":9,"column_end":32},"name":"collapsing_header_frame","qualname":"::style::Visuals::collapsing_header_frame","value":"bool","parent":{"krate":0,"index":5787},"children":[],"decl_id":null,"docs":" Show a background behind collapsing headers.\n","sig":null,"attributes":[{"value":"/ Show a background behind collapsing headers.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460078,"byte_end":460126,"line_start":407,"line_end":407,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460217,"byte_end":460231,"line_start":413,"line_end":413,"column_start":12,"column_end":26},"name":"noninteractive","qualname":"<Visuals>::noninteractive","value":"pub fn noninteractive(&Self) -> &WidgetVisuals","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460188,"byte_end":460205,"line_start":412,"line_end":412,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460314,"byte_end":460324,"line_start":417,"line_end":417,"column_start":12,"column_end":22},"name":"text_color","qualname":"<Visuals>::text_color","value":"pub fn text_color(&Self) -> Color32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460469,"byte_end":460484,"line_start":422,"line_end":422,"column_start":12,"column_end":27},"name":"weak_text_color","qualname":"<Visuals>::weak_text_color","value":"pub fn weak_text_color(&Self) -> Color32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460625,"byte_end":460642,"line_start":427,"line_end":427,"column_start":12,"column_end":29},"name":"strong_text_color","qualname":"<Visuals>::strong_text_color","value":"pub fn strong_text_color(&Self) -> Color32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460596,"byte_end":460613,"line_start":426,"line_end":426,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460777,"byte_end":460788,"line_start":433,"line_end":433,"column_start":12,"column_end":23},"name":"window_fill","qualname":"<Visuals>::window_fill","value":"pub fn window_fill(&Self) -> Color32","parent":null,"children":[],"decl_id":null,"docs":" Window background color.\n","sig":null,"attributes":[{"value":"/ Window background color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460715,"byte_end":460743,"line_start":431,"line_end":431,"column_start":5,"column_end":33}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460748,"byte_end":460765,"line_start":432,"line_end":432,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460893,"byte_end":460906,"line_start":438,"line_end":438,"column_start":12,"column_end":25},"name":"window_stroke","qualname":"<Visuals>::window_stroke","value":"pub fn window_stroke(&Self) -> Stroke","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460864,"byte_end":460881,"line_start":437,"line_end":437,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5813},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461198,"byte_end":461207,"line_start":447,"line_end":447,"column_start":12,"column_end":21},"name":"Selection","qualname":"::style::Selection","value":"Selection { bg_fill, stroke }","parent":null,"children":[{"krate":0,"index":5814},{"krate":0,"index":5815}],"decl_id":null,"docs":" Selected text, selected elements etc\n","sig":null,"attributes":[{"value":"/ Selected text, selected elements etc","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460981,"byte_end":461021,"line_start":443,"line_end":443,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":5814},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461218,"byte_end":461225,"line_start":448,"line_end":448,"column_start":9,"column_end":16},"name":"bg_fill","qualname":"::style::Selection::bg_fill","value":"epaint::Color32","parent":{"krate":0,"index":5813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5815},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461244,"byte_end":461250,"line_start":449,"line_end":449,"column_start":9,"column_end":15},"name":"stroke","qualname":"::style::Selection::stroke","value":"epaint::Stroke","parent":{"krate":0,"index":5813},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5825},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461497,"byte_end":461504,"line_start":456,"line_end":456,"column_start":12,"column_end":19},"name":"Widgets","qualname":"::style::Widgets","value":"Widgets { noninteractive, inactive, hovered, active, open }","parent":null,"children":[{"krate":0,"index":5826},{"krate":0,"index":5827},{"krate":0,"index":5828},{"krate":0,"index":5829},{"krate":0,"index":5830}],"decl_id":null,"docs":" The visuals of widgets for different states of interaction.\n","sig":null,"attributes":[{"value":"/ The visuals of widgets for different states of interaction.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461263,"byte_end":461326,"line_start":452,"line_end":452,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":5826},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461774,"byte_end":461788,"line_start":461,"line_end":461,"column_start":9,"column_end":23},"name":"noninteractive","qualname":"::style::Widgets::noninteractive","value":"style::WidgetVisuals","parent":{"krate":0,"index":5825},"children":[],"decl_id":null,"docs":" The style of a widget that you cannot interact with.\n * `noninteractive.bg_stroke` is the outline of windows.\n * `noninteractive.bg_fill` is the background color of windows.\n * `noninteractive.fg_stroke` is the normal text color.\n","sig":null,"attributes":[{"value":"/ The style of a widget that you cannot interact with.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461511,"byte_end":461567,"line_start":457,"line_end":457,"column_start":5,"column_end":61}},{"value":"/ * `noninteractive.bg_stroke` is the outline of windows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461572,"byte_end":461631,"line_start":458,"line_end":458,"column_start":5,"column_end":64}},{"value":"/ * `noninteractive.bg_fill` is the background color of windows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461636,"byte_end":461702,"line_start":459,"line_end":459,"column_start":5,"column_end":71}},{"value":"/ * `noninteractive.fg_stroke` is the normal text color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461707,"byte_end":461765,"line_start":460,"line_end":460,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5827},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461884,"byte_end":461892,"line_start":463,"line_end":463,"column_start":9,"column_end":17},"name":"inactive","qualname":"::style::Widgets::inactive","value":"style::WidgetVisuals","parent":{"krate":0,"index":5825},"children":[],"decl_id":null,"docs":" The style of an interactive widget, such as a button, at rest.\n","sig":null,"attributes":[{"value":"/ The style of an interactive widget, such as a button, at rest.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461809,"byte_end":461875,"line_start":462,"line_end":462,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":5828},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461980,"byte_end":461987,"line_start":465,"line_end":465,"column_start":9,"column_end":16},"name":"hovered","qualname":"::style::Widgets::hovered","value":"style::WidgetVisuals","parent":{"krate":0,"index":5825},"children":[],"decl_id":null,"docs":" The style of an interactive widget while you hover it.\n","sig":null,"attributes":[{"value":"/ The style of an interactive widget while you hover it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":461913,"byte_end":461971,"line_start":464,"line_end":464,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":5829},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462091,"byte_end":462097,"line_start":467,"line_end":467,"column_start":9,"column_end":15},"name":"active","qualname":"::style::Widgets::active","value":"style::WidgetVisuals","parent":{"krate":0,"index":5825},"children":[],"decl_id":null,"docs":" The style of an interactive widget as you are clicking or dragging it.\n","sig":null,"attributes":[{"value":"/ The style of an interactive widget as you are clicking or dragging it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462008,"byte_end":462082,"line_start":466,"line_end":466,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":5830},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462204,"byte_end":462208,"line_start":469,"line_end":469,"column_start":9,"column_end":13},"name":"open","qualname":"::style::Widgets::open","value":"style::WidgetVisuals","parent":{"krate":0,"index":5825},"children":[],"decl_id":null,"docs":" The style of a button that has an open menu beneath it (e.g. a combo-box)\n","sig":null,"attributes":[{"value":"/ The style of a button that has an open menu beneath it (e.g. a combo-box)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462118,"byte_end":462195,"line_start":468,"line_end":468,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462254,"byte_end":462259,"line_start":473,"line_end":473,"column_start":12,"column_end":17},"name":"style","qualname":"<Widgets>::style","value":"pub fn style(&Self, &Response) -> &WidgetVisuals","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5839},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462785,"byte_end":462798,"line_start":489,"line_end":489,"column_start":12,"column_end":25},"name":"WidgetVisuals","qualname":"::style::WidgetVisuals","value":"WidgetVisuals { bg_fill, bg_stroke, rounding, fg_stroke, expansion }","parent":null,"children":[{"krate":0,"index":5840},{"krate":0,"index":5841},{"krate":0,"index":5842},{"krate":0,"index":5843},{"krate":0,"index":5844}],"decl_id":null,"docs":" bg = background, fg = foreground.\n","sig":null,"attributes":[{"value":"/ bg = background, fg = foreground.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462618,"byte_end":462655,"line_start":486,"line_end":486,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5840},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462845,"byte_end":462852,"line_start":491,"line_end":491,"column_start":9,"column_end":16},"name":"bg_fill","qualname":"::style::WidgetVisuals::bg_fill","value":"epaint::Color32","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Background color of widget.\n","sig":null,"attributes":[{"value":"/ Background color of widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462805,"byte_end":462836,"line_start":490,"line_end":490,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5841},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463029,"byte_end":463038,"line_start":496,"line_end":496,"column_start":9,"column_end":18},"name":"bg_stroke","qualname":"::style::WidgetVisuals::bg_stroke","value":"epaint::Stroke","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" For surrounding rectangle of things that need it,\n like buttons, the box of the checkbox, etc.\n Should maybe be called `frame_stroke`.\n","sig":null,"attributes":[{"value":"/ For surrounding rectangle of things that need it,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462868,"byte_end":462921,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"/ like buttons, the box of the checkbox, etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462926,"byte_end":462973,"line_start":494,"line_end":494,"column_start":5,"column_end":52}},{"value":"/ Should maybe be called `frame_stroke`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462978,"byte_end":463020,"line_start":495,"line_end":495,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":5842},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463084,"byte_end":463092,"line_start":499,"line_end":499,"column_start":9,"column_end":17},"name":"rounding","qualname":"::style::WidgetVisuals::rounding","value":"epaint::Rounding","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Button frames etc.\n","sig":null,"attributes":[{"value":"/ Button frames etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463053,"byte_end":463075,"line_start":498,"line_end":498,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":5843},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463227,"byte_end":463236,"line_start":502,"line_end":502,"column_start":9,"column_end":18},"name":"fg_stroke","qualname":"::style::WidgetVisuals::fg_stroke","value":"epaint::Stroke","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Stroke and text color of the interactive part of a component (button text, slider grab, check-mark, …).\n","sig":null,"attributes":[{"value":"/ Stroke and text color of the interactive part of a component (button text, slider grab, check-mark, …).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463109,"byte_end":463218,"line_start":501,"line_end":501,"column_start":5,"column_end":112}}]},{"kind":"Field","id":{"krate":0,"index":5844},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463296,"byte_end":463305,"line_start":505,"line_end":505,"column_start":9,"column_end":18},"name":"expansion","qualname":"::style::WidgetVisuals::expansion","value":"f32","parent":{"krate":0,"index":5839},"children":[],"decl_id":null,"docs":" Make the frame this much larger.\n","sig":null,"attributes":[{"value":"/ Make the frame this much larger.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463251,"byte_end":463287,"line_start":504,"line_end":504,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1904},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463369,"byte_end":463379,"line_start":510,"line_end":510,"column_start":12,"column_end":22},"name":"text_color","qualname":"<WidgetVisuals>::text_color","value":"pub fn text_color(&Self) -> Color32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463340,"byte_end":463357,"line_start":509,"line_end":509,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":5854},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463638,"byte_end":463650,"line_start":518,"line_end":518,"column_start":12,"column_end":24},"name":"DebugOptions","qualname":"::style::DebugOptions","value":"DebugOptions { debug_on_hover, show_expand_width, show_expand_height, show_resize }","parent":null,"children":[{"krate":0,"index":5855},{"krate":0,"index":5856},{"krate":0,"index":5857},{"krate":0,"index":5858}],"decl_id":null,"docs":" Options for help debug egui by adding extra visualization\n","sig":null,"attributes":[{"value":"/ Options for help debug egui by adding extra visualization","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463438,"byte_end":463499,"line_start":515,"line_end":515,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":5855},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463714,"byte_end":463728,"line_start":520,"line_end":520,"column_start":9,"column_end":23},"name":"debug_on_hover","qualname":"::style::DebugOptions::debug_on_hover","value":"bool","parent":{"krate":0,"index":5854},"children":[],"decl_id":null,"docs":" However over widgets to see their rectangles\n","sig":null,"attributes":[{"value":"/ However over widgets to see their rectangles","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463657,"byte_end":463705,"line_start":519,"line_end":519,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":5856},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463795,"byte_end":463812,"line_start":522,"line_end":522,"column_start":9,"column_end":26},"name":"show_expand_width","qualname":"::style::DebugOptions::show_expand_width","value":"bool","parent":{"krate":0,"index":5854},"children":[],"decl_id":null,"docs":" Show which widgets make their parent wider\n","sig":null,"attributes":[{"value":"/ Show which widgets make their parent wider","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463740,"byte_end":463786,"line_start":521,"line_end":521,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":5857},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463880,"byte_end":463898,"line_start":524,"line_end":524,"column_start":9,"column_end":27},"name":"show_expand_height","qualname":"::style::DebugOptions::show_expand_height","value":"bool","parent":{"krate":0,"index":5854},"children":[],"decl_id":null,"docs":" Show which widgets make their parent higher\n","sig":null,"attributes":[{"value":"/ Show which widgets make their parent higher","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463824,"byte_end":463871,"line_start":523,"line_end":523,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":5858},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463914,"byte_end":463925,"line_start":525,"line_end":525,"column_start":9,"column_end":20},"name":"show_resize","qualname":"::style::DebugOptions::show_resize","value":"bool","parent":{"krate":0,"index":5854},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1905},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":464079,"byte_end":464098,"line_start":531,"line_end":531,"column_start":8,"column_end":27},"name":"default_text_styles","qualname":"::style::default_text_styles","value":"pub fn default_text_styles() -> BTreeMap<TextStyle, FontId>","parent":null,"children":[],"decl_id":null,"docs":" The default text styles of the default egui theme.\n","sig":null,"attributes":[{"value":"/ The default text styles of the default egui theme.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":464017,"byte_end":464071,"line_start":530,"line_end":530,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":466152,"byte_end":466156,"line_start":602,"line_end":602,"column_start":12,"column_end":16},"name":"dark","qualname":"<Visuals>::dark","value":"pub fn dark() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Default dark theme.\n","sig":null,"attributes":[{"value":"/ Default dark theme.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":466117,"byte_end":466140,"line_start":601,"line_end":601,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1914},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":467106,"byte_end":467111,"line_start":625,"line_end":625,"column_start":12,"column_end":17},"name":"light","qualname":"<Visuals>::light","value":"pub fn light() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Default light theme.\n","sig":null,"attributes":[{"value":"/ Default light theme.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":467070,"byte_end":467094,"line_start":624,"line_end":624,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":468218,"byte_end":468222,"line_start":669,"line_end":669,"column_start":12,"column_end":16},"name":"dark","qualname":"<Widgets>::dark","value":"pub fn dark() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":470009,"byte_end":470014,"line_start":709,"line_end":709,"column_start":12,"column_end":17},"name":"light","qualname":"<Widgets>::light","value":"pub fn light() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":472045,"byte_end":472047,"line_start":761,"line_end":761,"column_start":12,"column_end":14},"name":"ui","qualname":"<Style>::ui","value":"pub fn ui(&mut Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":475229,"byte_end":475231,"line_start":846,"line_end":846,"column_start":12,"column_end":14},"name":"ui","qualname":"<Spacing>::ui","value":"pub fn ui(&mut Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":478506,"byte_end":478508,"line_start":949,"line_end":949,"column_start":12,"column_end":14},"name":"ui","qualname":"<Interaction>::ui","value":"pub fn ui(&mut Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":479143,"byte_end":479145,"line_start":969,"line_end":969,"column_start":12,"column_end":14},"name":"ui","qualname":"<Widgets>::ui","value":"pub fn ui(&mut Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":480359,"byte_end":480361,"line_start":1006,"line_end":1006,"column_start":12,"column_end":14},"name":"ui","qualname":"<Selection>::ui","value":"pub fn ui(&mut Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":480611,"byte_end":480613,"line_start":1015,"line_end":1015,"column_start":12,"column_end":14},"name":"ui","qualname":"<WidgetVisuals>::ui","value":"pub fn ui(&mut Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":481230,"byte_end":481254,"line_start":1036,"line_end":1036,"column_start":12,"column_end":36},"name":"light_dark_radio_buttons","qualname":"<Visuals>::light_dark_radio_buttons","value":"pub fn light_dark_radio_buttons(&mut Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":" Show radio-buttons to switch between light and dark mode.\n","sig":null,"attributes":[{"value":"/ Show radio-buttons to switch between light and dark mode.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":481157,"byte_end":481218,"line_start":1035,"line_end":1035,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":481554,"byte_end":481584,"line_start":1045,"line_end":1045,"column_start":12,"column_end":42},"name":"light_dark_small_toggle_button","qualname":"<Visuals>::light_dark_small_toggle_button","value":"pub fn light_dark_small_toggle_button(&Self, &mut crate::Ui) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Show small toggle-button for light and dark mode.\n","sig":null,"attributes":[{"value":"/ Show small toggle-button for light and dark mode.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":481473,"byte_end":481526,"line_start":1043,"line_end":1043,"column_start":5,"column_end":58}},{"value":"must_use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":481531,"byte_end":481542,"line_start":1044,"line_end":1044,"column_start":5,"column_end":16}},{"value":"allow(clippy :: collapsible_else_if)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":481638,"byte_end":481676,"line_start":1046,"line_end":1046,"column_start":9,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":482214,"byte_end":482216,"line_start":1067,"line_end":1067,"column_start":12,"column_end":14},"name":"ui","qualname":"<Visuals>::ui","value":"pub fn ui(&mut Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":484901,"byte_end":484903,"line_start":1140,"line_end":1140,"column_start":12,"column_end":14},"name":"ui","qualname":"<DebugOptions>::ui","value":"pub fn ui(&mut Self, &mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":488151,"byte_end":488153,"line_start":29,"line_end":29,"column_start":12,"column_end":14},"name":"Ui","qualname":"::ui::Ui","value":"Ui {  }","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038}],"decl_id":null,"docs":" This is what you use to place widgets.","sig":null,"attributes":[{"value":"/ This is what you use to place widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":487680,"byte_end":487722,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":487723,"byte_end":487726,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Represents a region of the screen with a type of layout (horizontal or vertical).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":487727,"byte_end":487812,"line_start":15,"line_end":15,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":487813,"byte_end":487816,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":487817,"byte_end":487824,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":487825,"byte_end":487857,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ ui.add(egui::Label::new(\"Hello World!\"));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":487858,"byte_end":487903,"line_start":19,"line_end":19,"column_start":1,"column_end":46}},{"value":"/ ui.label(\"A shorter and more convenient way to add a label.\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":487904,"byte_end":487970,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/ ui.horizontal(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":487971,"byte_end":487995,"line_start":21,"line_end":21,"column_start":1,"column_end":25}},{"value":"/     ui.label(\"Add widgets\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":487996,"byte_end":488028,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/     if ui.button(\"on the same row!\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":488029,"byte_end":488081,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/         /* … */","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":488082,"byte_end":488103,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":488104,"byte_end":488113,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":488114,"byte_end":488121,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":488122,"byte_end":488131,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":488132,"byte_end":488139,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":489837,"byte_end":489840,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Ui>::new","value":"pub fn new(Context, LayerId, Id, Rect, Rect) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ui`.","sig":null,"attributes":[{"value":"/ Create a new `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":489644,"byte_end":489666,"line_start":68,"line_end":68,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":489671,"byte_end":489674,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Normally you would not use this directly, but instead use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":489679,"byte_end":489740,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/ [`SidePanel`], [`TopBottomPanel`], [`CentralPanel`], [`Window`] or [`Area`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":489745,"byte_end":489825,"line_start":71,"line_end":71,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2041},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":490320,"byte_end":490328,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"child_ui","qualname":"<Ui>::child_ui","value":"pub fn child_ui(&mut Self, Rect, Layout) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ui` at a specific region.\n","sig":null,"attributes":[{"value":"/ Create a new `Ui` at a specific region.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":490265,"byte_end":490308,"line_start":85,"line_end":85,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":490531,"byte_end":490554,"line_start":91,"line_end":91,"column_start":12,"column_end":35},"name":"child_ui_with_id_source","qualname":"<Ui>::child_ui_with_id_source","value":"pub fn child_ui_with_id_source<impl Hash: Hash>(&mut Self, Rect, Layout,\n                                                impl Hash) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Ui` at a specific region with a specific id.\n","sig":null,"attributes":[{"value":"/ Create a new `Ui` at a specific region with a specific id.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":490457,"byte_end":490519,"line_start":90,"line_end":90,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491354,"byte_end":491356,"line_start":116,"line_end":116,"column_start":12,"column_end":14},"name":"id","qualname":"<Ui>::id","value":"pub fn id(&Self) -> Id","parent":null,"children":[],"decl_id":null,"docs":" A unique identity of this `Ui`.\n","sig":null,"attributes":[{"value":"/ A unique identity of this `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491293,"byte_end":491328,"line_start":114,"line_end":114,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491333,"byte_end":491342,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491567,"byte_end":491572,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"name":"style","qualname":"<Ui>::style","value":"pub fn style(&Self) -> &Arc<Style>","parent":null,"children":[],"decl_id":null,"docs":" Style options for this `Ui` and its children.","sig":null,"attributes":[{"value":"/ Style options for this `Ui` and its children.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491399,"byte_end":491448,"line_start":120,"line_end":120,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491453,"byte_end":491456,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Note that this may be a different [`Style`] than that of [`Context::style`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491461,"byte_end":491541,"line_start":122,"line_end":122,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491546,"byte_end":491555,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491993,"byte_end":492002,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"style_mut","qualname":"<Ui>::style_mut","value":"pub fn style_mut(&mut Self) -> &mut Style","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrow internal `Style`.\n Changes apply to this `Ui` and its subsequent children.","sig":null,"attributes":[{"value":"/ Mutably borrow internal `Style`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491628,"byte_end":491664,"line_start":128,"line_end":128,"column_start":5,"column_end":41}},{"value":"/ Changes apply to this `Ui` and its subsequent children.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491669,"byte_end":491728,"line_start":129,"line_end":129,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491733,"byte_end":491736,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ To set the style of all `Ui`:s, use [`Context::set_style`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491741,"byte_end":491804,"line_start":131,"line_end":131,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491809,"byte_end":491812,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491817,"byte_end":491829,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491834,"byte_end":491841,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491846,"byte_end":491878,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/ ui.style_mut().override_text_style = Some(egui::TextStyle::Heading);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491883,"byte_end":491955,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491960,"byte_end":491969,"line_start":137,"line_end":137,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":491974,"byte_end":491981,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492249,"byte_end":492258,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"set_style","qualname":"<Ui>::set_style","value":"pub fn set_style<impl Into<Arc<Style>>: Into<Arc<Style>>>(&mut Self,\n                                                          impl Into<Arc<Style>>)","parent":null,"children":[],"decl_id":null,"docs":" Changes apply to this `Ui` and its subsequent children.","sig":null,"attributes":[{"value":"/ Changes apply to this `Ui` and its subsequent children.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492098,"byte_end":492157,"line_start":143,"line_end":143,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492162,"byte_end":492165,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ To set the visuals of all `Ui`:s, use [`Context::set_visuals`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492170,"byte_end":492237,"line_start":145,"line_end":145,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492410,"byte_end":492421,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"reset_style","qualname":"<Ui>::reset_style","value":"pub fn reset_style(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset to the default style set in [`Context`].\n","sig":null,"attributes":[{"value":"/ Reset to the default style set in [`Context`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492348,"byte_end":492398,"line_start":150,"line_end":150,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2050},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492599,"byte_end":492606,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"spacing","qualname":"<Ui>::spacing","value":"pub fn spacing(&Self) -> &crate::style::Spacing","parent":null,"children":[],"decl_id":null,"docs":" The current spacing options for this `Ui`.\n Short for `ui.style().spacing`.\n","sig":null,"attributes":[{"value":"/ The current spacing options for this `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492487,"byte_end":492533,"line_start":155,"line_end":155,"column_start":5,"column_end":51}},{"value":"/ Short for `ui.style().spacing`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492538,"byte_end":492573,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492578,"byte_end":492587,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492958,"byte_end":492969,"line_start":171,"line_end":171,"column_start":12,"column_end":23},"name":"spacing_mut","qualname":"<Ui>::spacing_mut","value":"pub fn spacing_mut(&mut Self) -> &mut crate::style::Spacing","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrow internal `Spacing`.\n Changes apply to this `Ui` and its subsequent children.","sig":null,"attributes":[{"value":"/ Mutably borrow internal `Spacing`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492681,"byte_end":492719,"line_start":162,"line_end":162,"column_start":5,"column_end":43}},{"value":"/ Changes apply to this `Ui` and its subsequent children.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492724,"byte_end":492783,"line_start":163,"line_end":163,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492788,"byte_end":492791,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492796,"byte_end":492808,"line_start":165,"line_end":165,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492813,"byte_end":492820,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492825,"byte_end":492857,"line_start":167,"line_end":167,"column_start":5,"column_end":37}},{"value":"/ ui.spacing_mut().item_spacing = egui::vec2(10.0, 2.0);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492862,"byte_end":492920,"line_start":168,"line_end":168,"column_start":5,"column_end":63}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492925,"byte_end":492934,"line_start":169,"line_end":169,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":492939,"byte_end":492946,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493174,"byte_end":493181,"line_start":178,"line_end":178,"column_start":12,"column_end":19},"name":"visuals","qualname":"<Ui>::visuals","value":"pub fn visuals(&Self) -> &crate::Visuals","parent":null,"children":[],"decl_id":null,"docs":" The current visuals settings of this `Ui`.\n Short for `ui.style().visuals`.\n","sig":null,"attributes":[{"value":"/ The current visuals settings of this `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493062,"byte_end":493108,"line_start":175,"line_end":175,"column_start":5,"column_end":51}},{"value":"/ Short for `ui.style().visuals`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493113,"byte_end":493148,"line_start":176,"line_end":176,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493153,"byte_end":493162,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493616,"byte_end":493627,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"visuals_mut","qualname":"<Ui>::visuals_mut","value":"pub fn visuals_mut(&mut Self) -> &mut crate::Visuals","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrow internal `visuals`.\n Changes apply to this `Ui` and its subsequent children.","sig":null,"attributes":[{"value":"/ Mutably borrow internal `visuals`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493249,"byte_end":493287,"line_start":182,"line_end":182,"column_start":5,"column_end":43}},{"value":"/ Changes apply to this `Ui` and its subsequent children.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493292,"byte_end":493351,"line_start":183,"line_end":183,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493356,"byte_end":493359,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ To set the visuals of all `Ui`:s, use [`Context::set_visuals`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493364,"byte_end":493431,"line_start":185,"line_end":185,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493436,"byte_end":493439,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493444,"byte_end":493456,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493461,"byte_end":493468,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493473,"byte_end":493505,"line_start":189,"line_end":189,"column_start":5,"column_end":37}},{"value":"/ ui.visuals_mut().override_text_color = Some(egui::Color32::RED);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493510,"byte_end":493578,"line_start":190,"line_end":190,"column_start":5,"column_end":73}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493583,"byte_end":493592,"line_start":191,"line_end":191,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493597,"byte_end":493604,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493785,"byte_end":493788,"line_start":199,"line_end":199,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Ui>::ctx","value":"pub fn ctx(&Self) -> &Context","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the parent [`Context`].\n","sig":null,"attributes":[{"value":"/ Get a reference to the parent [`Context`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493713,"byte_end":493759,"line_start":197,"line_end":197,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493764,"byte_end":493773,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493919,"byte_end":493926,"line_start":205,"line_end":205,"column_start":12,"column_end":19},"name":"painter","qualname":"<Ui>::painter","value":"pub fn painter(&Self) -> &Painter","parent":null,"children":[],"decl_id":null,"docs":" Use this to paint stuff within this `Ui`.\n","sig":null,"attributes":[{"value":"/ Use this to paint stuff within this `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493848,"byte_end":493893,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493898,"byte_end":493907,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494120,"byte_end":494130,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"is_enabled","qualname":"<Ui>::is_enabled","value":"pub fn is_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `false`, the `Ui` does not allow any interaction and\n the widgets in it will draw with a gray look.\n","sig":null,"attributes":[{"value":"/ If `false`, the `Ui` does not allow any interaction and","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":493981,"byte_end":494040,"line_start":209,"line_end":209,"column_start":5,"column_end":64}},{"value":"/ the widgets in it will draw with a gray look.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494045,"byte_end":494094,"line_start":210,"line_end":210,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494099,"byte_end":494108,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494927,"byte_end":494938,"line_start":236,"line_end":236,"column_start":12,"column_end":23},"name":"set_enabled","qualname":"<Ui>::set_enabled","value":"pub fn set_enabled(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Calling `set_enabled(false)` will cause the `Ui` to deny all future interaction\n and all the widgets will draw with a gray look.","sig":null,"attributes":[{"value":"/ Calling `set_enabled(false)` will cause the `Ui` to deny all future interaction","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494180,"byte_end":494263,"line_start":216,"line_end":216,"column_start":5,"column_end":88}},{"value":"/ and all the widgets will draw with a gray look.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494268,"byte_end":494319,"line_start":217,"line_end":217,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494324,"byte_end":494327,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Usually it is more convenient to use [`Self::add_enabled_ui`] or [`Self::add_enabled`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494332,"byte_end":494423,"line_start":219,"line_end":219,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494428,"byte_end":494431,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Calling `set_enabled(true)` has no effect - it will NOT re-enable the `Ui` once disabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494436,"byte_end":494529,"line_start":221,"line_end":221,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494534,"byte_end":494537,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494542,"byte_end":494557,"line_start":223,"line_end":223,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494562,"byte_end":494569,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494574,"byte_end":494606,"line_start":225,"line_end":225,"column_start":5,"column_end":37}},{"value":"/ # let mut enabled = true;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494611,"byte_end":494640,"line_start":226,"line_end":226,"column_start":5,"column_end":34}},{"value":"/ ui.group(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494645,"byte_end":494664,"line_start":227,"line_end":227,"column_start":5,"column_end":24}},{"value":"/     ui.checkbox(&mut enabled, \"Enable subsection\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494669,"byte_end":494724,"line_start":228,"line_end":228,"column_start":5,"column_end":60}},{"value":"/     ui.set_enabled(enabled);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494729,"byte_end":494761,"line_start":229,"line_end":229,"column_start":5,"column_end":37}},{"value":"/     if ui.button(\"Button that is not always clickable\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494766,"byte_end":494837,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/         /* … */","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494842,"byte_end":494863,"line_start":231,"line_end":231,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494868,"byte_end":494877,"line_start":232,"line_end":232,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494882,"byte_end":494889,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494894,"byte_end":494903,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":494908,"byte_end":494915,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495276,"byte_end":495286,"line_start":246,"line_end":246,"column_start":12,"column_end":22},"name":"is_visible","qualname":"<Ui>::is_visible","value":"pub fn is_visible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If `false`, any widgets added to the `Ui` will be invisible and non-interactive.\n","sig":null,"attributes":[{"value":"/ If `false`, any widgets added to the `Ui` will be invisible and non-interactive.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495166,"byte_end":495250,"line_start":244,"line_end":244,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495255,"byte_end":495264,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495397,"byte_end":495404,"line_start":251,"line_end":251,"column_start":12,"column_end":19},"name":"visible","qualname":"<Ui>::visible","value":"pub fn visible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Renamed is_visible\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495349,"byte_end":495385,"line_start":250,"line_end":250,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496137,"byte_end":496148,"line_start":275,"line_end":275,"column_start":12,"column_end":23},"name":"set_visible","qualname":"<Ui>::set_visible","value":"pub fn set_visible(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Calling `set_visible(false)` will cause all further widgets to be invisible,\n yet still allocate space.","sig":null,"attributes":[{"value":"/ Calling `set_visible(false)` will cause all further widgets to be invisible,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495467,"byte_end":495547,"line_start":255,"line_end":255,"column_start":5,"column_end":85}},{"value":"/ yet still allocate space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495552,"byte_end":495581,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495586,"byte_end":495589,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The widgets will not be interactive (`set_visible(false)` implies `set_enabled(false)`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495594,"byte_end":495686,"line_start":258,"line_end":258,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495691,"byte_end":495694,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Calling `set_visible(true)` has no effect.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495699,"byte_end":495745,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495750,"byte_end":495753,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495758,"byte_end":495773,"line_start":262,"line_end":262,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495778,"byte_end":495785,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495790,"byte_end":495822,"line_start":264,"line_end":264,"column_start":5,"column_end":37}},{"value":"/ # let mut visible = true;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495827,"byte_end":495856,"line_start":265,"line_end":265,"column_start":5,"column_end":34}},{"value":"/ ui.group(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495861,"byte_end":495880,"line_start":266,"line_end":266,"column_start":5,"column_end":24}},{"value":"/     ui.checkbox(&mut visible, \"Show subsection\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495885,"byte_end":495938,"line_start":267,"line_end":267,"column_start":5,"column_end":58}},{"value":"/     ui.set_visible(visible);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495943,"byte_end":495975,"line_start":268,"line_end":268,"column_start":5,"column_end":37}},{"value":"/     if ui.button(\"Button that is not always shown\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":495980,"byte_end":496047,"line_start":269,"line_end":269,"column_start":5,"column_end":72}},{"value":"/         /* … */","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496052,"byte_end":496073,"line_start":270,"line_end":270,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496078,"byte_end":496087,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496092,"byte_end":496099,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496104,"byte_end":496113,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496118,"byte_end":496125,"line_start":274,"line_end":274,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496318,"byte_end":496324,"line_start":283,"line_end":283,"column_start":12,"column_end":18},"name":"layout","qualname":"<Ui>::layout","value":"pub fn layout(&Self) -> &Layout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496297,"byte_end":496306,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496529,"byte_end":496538,"line_start":290,"line_end":290,"column_start":12,"column_end":21},"name":"wrap_text","qualname":"<Ui>::wrap_text","value":"pub fn wrap_text(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Should text wrap in this `Ui`?","sig":null,"attributes":[{"value":"/ Should text wrap in this `Ui`?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496385,"byte_end":496419,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496424,"byte_end":496427,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This is determined first by [`Style::wrap`], and then by the layout of this `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496432,"byte_end":496517,"line_start":289,"line_end":289,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497072,"byte_end":497082,"line_start":305,"line_end":305,"column_start":12,"column_end":22},"name":"painter_at","qualname":"<Ui>::painter_at","value":"pub fn painter_at(&Self, Rect) -> Painter","parent":null,"children":[],"decl_id":null,"docs":" Create a painter for a sub-region of this Ui.","sig":null,"attributes":[{"value":"/ Create a painter for a sub-region of this Ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496863,"byte_end":496912,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496917,"byte_end":496920,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ The clip-rect of the returned `Painter` will be the intersection","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496925,"byte_end":496993,"line_start":303,"line_end":303,"column_start":5,"column_end":73}},{"value":"/ of the given rectangle and the `clip_rect()` of this `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":496998,"byte_end":497060,"line_start":304,"line_end":304,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497237,"byte_end":497245,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"layer_id","qualname":"<Ui>::layer_id","value":"pub fn layer_id(&Self) -> LayerId","parent":null,"children":[],"decl_id":null,"docs":" Use this to paint stuff within this `Ui`.\n","sig":null,"attributes":[{"value":"/ Use this to paint stuff within this `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497166,"byte_end":497211,"line_start":309,"line_end":309,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497216,"byte_end":497225,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498006,"byte_end":498011,"line_start":337,"line_end":337,"column_start":12,"column_end":17},"name":"input","qualname":"<Ui>::input","value":"pub fn input(&Self) -> RwLockReadGuard<, InputState>","parent":null,"children":[],"decl_id":null,"docs":" The [`InputState`] of the [`Context`] associated with this [`Ui`].\n Equivalent to `.ctx().input()`.","sig":null,"attributes":[{"value":"/ The [`InputState`] of the [`Context`] associated with this [`Ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497311,"byte_end":497381,"line_start":315,"line_end":315,"column_start":5,"column_end":75}},{"value":"/ Equivalent to `.ctx().input()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497386,"byte_end":497421,"line_start":316,"line_end":316,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497426,"byte_end":497429,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Note that this locks the [`Context`], so be careful with if-let bindings:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497434,"byte_end":497511,"line_start":318,"line_end":318,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497516,"byte_end":497519,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497524,"byte_end":497531,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497536,"byte_end":497568,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/ if let Some(pos) = { ui.input().pointer.hover_pos() } {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497573,"byte_end":497632,"line_start":322,"line_end":322,"column_start":5,"column_end":64}},{"value":"/     // This is fine!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497637,"byte_end":497661,"line_start":323,"line_end":323,"column_start":5,"column_end":29}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497666,"byte_end":497671,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497676,"byte_end":497679,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ let pos = ui.input().pointer.hover_pos();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497684,"byte_end":497729,"line_start":326,"line_end":326,"column_start":5,"column_end":50}},{"value":"/ if let Some(pos) = pos {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497734,"byte_end":497762,"line_start":327,"line_end":327,"column_start":5,"column_end":33}},{"value":"/     // This is also fine!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497767,"byte_end":497796,"line_start":328,"line_end":328,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497801,"byte_end":497806,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497811,"byte_end":497814,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ if let Some(pos) = ui.input().pointer.hover_pos() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497819,"byte_end":497874,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/     // ⚠️ Using `ui` again here will lead to a dead-lock!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497879,"byte_end":497944,"line_start":332,"line_end":332,"column_start":5,"column_end":66}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497949,"byte_end":497954,"line_start":333,"line_end":333,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497959,"byte_end":497968,"line_start":334,"line_end":334,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497973,"byte_end":497980,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":497985,"byte_end":497994,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498516,"byte_end":498525,"line_start":352,"line_end":352,"column_start":12,"column_end":21},"name":"input_mut","qualname":"<Ui>::input_mut","value":"pub fn input_mut(&Self) -> RwLockWriteGuard<, InputState>","parent":null,"children":[],"decl_id":null,"docs":" The [`InputState`] of the [`Context`] associated with this [`Ui`].\n Equivalent to `.ctx().input_mut()`.","sig":null,"attributes":[{"value":"/ The [`InputState`] of the [`Context`] associated with this [`Ui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498094,"byte_end":498164,"line_start":341,"line_end":341,"column_start":5,"column_end":75}},{"value":"/ Equivalent to `.ctx().input_mut()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498169,"byte_end":498208,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498213,"byte_end":498216,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Note that this locks the [`Context`], so be careful with if-let bindings","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498221,"byte_end":498297,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ like for [`Self::input()`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498302,"byte_end":498333,"line_start":345,"line_end":345,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498338,"byte_end":498345,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498350,"byte_end":498382,"line_start":347,"line_end":347,"column_start":5,"column_end":37}},{"value":"/ ui.input_mut().consume_key(egui::Modifiers::default(), egui::Key::Enter);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498387,"byte_end":498464,"line_start":348,"line_end":348,"column_start":5,"column_end":82}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498469,"byte_end":498478,"line_start":349,"line_end":349,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498483,"byte_end":498490,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498495,"byte_end":498504,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498742,"byte_end":498748,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"memory","qualname":"<Ui>::memory","value":"pub fn memory(&Self) -> RwLockWriteGuard<, Memory>","parent":null,"children":[],"decl_id":null,"docs":" The [`Memory`] of the [`Context`] associated with this ui.\n Equivalent to `.ctx().memory()`.\n","sig":null,"attributes":[{"value":"/ The [`Memory`] of the [`Context`] associated with this ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498613,"byte_end":498675,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ Equivalent to `.ctx().memory()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498680,"byte_end":498716,"line_start":357,"line_end":357,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498721,"byte_end":498730,"line_start":358,"line_end":358,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498891,"byte_end":498895,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"data","qualname":"<Ui>::data","value":"pub fn data(&Self) -> RwLockWriteGuard<, crate::util::IdTypeMap>","parent":null,"children":[],"decl_id":null,"docs":" Stores superficial widget state.\n","sig":null,"attributes":[{"value":"/ Stores superficial widget state.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498829,"byte_end":498865,"line_start":363,"line_end":363,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498870,"byte_end":498879,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499127,"byte_end":499133,"line_start":372,"line_end":372,"column_start":12,"column_end":18},"name":"output","qualname":"<Ui>::output","value":"pub fn output(&Self) -> RwLockWriteGuard<, PlatformOutput>","parent":null,"children":[],"decl_id":null,"docs":" The [`PlatformOutput`] of the [`Context`] associated with this ui.\n Equivalent to `.ctx().output()`.\n","sig":null,"attributes":[{"value":"/ The [`PlatformOutput`] of the [`Context`] associated with this ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":498990,"byte_end":499060,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/ Equivalent to `.ctx().output()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499065,"byte_end":499101,"line_start":370,"line_end":370,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499106,"byte_end":499115,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499349,"byte_end":499354,"line_start":379,"line_end":379,"column_start":12,"column_end":17},"name":"fonts","qualname":"<Ui>::fonts","value":"pub fn fonts(&Self) -> RwLockReadGuard<, Fonts>","parent":null,"children":[],"decl_id":null,"docs":" The [`Fonts`] of the [`Context`] associated with this ui.\n Equivalent to `.ctx().fonts()`.\n","sig":null,"attributes":[{"value":"/ The [`Fonts`] of the [`Context`] associated with this ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499222,"byte_end":499283,"line_start":376,"line_end":376,"column_start":5,"column_end":66}},{"value":"/ Equivalent to `.ctx().fonts()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499288,"byte_end":499323,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499328,"byte_end":499337,"line_start":378,"line_end":378,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499485,"byte_end":499502,"line_start":384,"line_end":384,"column_start":12,"column_end":29},"name":"text_style_height","qualname":"<Ui>::text_style_height","value":"pub fn text_style_height(&Self, &TextStyle) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The height of text of this text style\n","sig":null,"attributes":[{"value":"/ The height of text of this text style","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499432,"byte_end":499473,"line_start":383,"line_end":383,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499808,"byte_end":499817,"line_start":391,"line_end":391,"column_start":12,"column_end":21},"name":"clip_rect","qualname":"<Ui>::clip_rect","value":"pub fn clip_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Screen-space rectangle for clipping what we paint in this ui.\n This is used, for instance, to avoid painting outside a window that is smaller than its contents.\n","sig":null,"attributes":[{"value":"/ Screen-space rectangle for clipping what we paint in this ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499611,"byte_end":499676,"line_start":388,"line_end":388,"column_start":5,"column_end":70}},{"value":"/ This is used, for instance, to avoid painting outside a window that is smaller than its contents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499681,"byte_end":499782,"line_start":389,"line_end":389,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499787,"byte_end":499796,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500062,"byte_end":500075,"line_start":397,"line_end":397,"column_start":12,"column_end":25},"name":"set_clip_rect","qualname":"<Ui>::set_clip_rect","value":"pub fn set_clip_rect(&mut Self, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Screen-space rectangle for clipping what we paint in this ui.\n This is used, for instance, to avoid painting outside a window that is smaller than its contents.\n","sig":null,"attributes":[{"value":"/ Screen-space rectangle for clipping what we paint in this ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499879,"byte_end":499944,"line_start":395,"line_end":395,"column_start":5,"column_end":70}},{"value":"/ This is used, for instance, to avoid painting outside a window that is smaller than its contents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":499949,"byte_end":500050,"line_start":396,"line_end":396,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500266,"byte_end":500281,"line_start":402,"line_end":402,"column_start":12,"column_end":27},"name":"is_rect_visible","qualname":"<Ui>::is_rect_visible","value":"pub fn is_rect_visible(&Self, Rect) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Can be used for culling: if `false`, then no part of `rect` will be visible on screen.\n","sig":null,"attributes":[{"value":"/ Can be used for culling: if `false`, then no part of `rect` will be visible on screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500164,"byte_end":500254,"line_start":401,"line_end":401,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500777,"byte_end":500785,"line_start":417,"line_end":417,"column_start":12,"column_end":20},"name":"min_rect","qualname":"<Ui>::min_rect","value":"pub fn min_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Where and how large the `Ui` is already.\n All widgets that have been added ot this `Ui` fits within this rectangle.","sig":null,"attributes":[{"value":"/ Where and how large the `Ui` is already.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500490,"byte_end":500534,"line_start":411,"line_end":411,"column_start":5,"column_end":49}},{"value":"/ All widgets that have been added ot this `Ui` fits within this rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500539,"byte_end":500616,"line_start":412,"line_end":412,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500621,"byte_end":500624,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ No matter what, the final Ui will be at least this large.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500629,"byte_end":500690,"line_start":414,"line_end":414,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500695,"byte_end":500698,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ This will grow as new widgets are added, but never shrink.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500703,"byte_end":500765,"line_start":416,"line_end":416,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500905,"byte_end":500913,"line_start":422,"line_end":422,"column_start":12,"column_end":20},"name":"min_size","qualname":"<Ui>::min_size","value":"pub fn min_size(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" Size of content; same as `min_rect().size()`\n","sig":null,"attributes":[{"value":"/ Size of content; same as `min_rect().size()`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500845,"byte_end":500893,"line_start":421,"line_end":421,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501310,"byte_end":501318,"line_start":433,"line_end":433,"column_start":12,"column_end":20},"name":"max_rect","qualname":"<Ui>::max_rect","value":"pub fn max_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" New widgets will *try* to fit within this rectangle.","sig":null,"attributes":[{"value":"/ New widgets will *try* to fit within this rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500973,"byte_end":501029,"line_start":426,"line_end":426,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501034,"byte_end":501037,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Text labels will wrap to fit within `max_rect`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501042,"byte_end":501093,"line_start":428,"line_end":428,"column_start":5,"column_end":56}},{"value":"/ Separator lines will span the `max_rect`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501098,"byte_end":501143,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501148,"byte_end":501151,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ If a new widget doesn't fit within the `max_rect` then the","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501156,"byte_end":501218,"line_start":431,"line_end":431,"column_start":5,"column_end":67}},{"value":"/ `Ui` will make room for it by expanding both `min_rect` and `max_rect`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501223,"byte_end":501298,"line_start":432,"line_end":432,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501742,"byte_end":501754,"line_start":446,"line_end":446,"column_start":12,"column_end":24},"name":"set_max_size","qualname":"<Ui>::set_max_size","value":"pub fn set_max_size(&mut Self, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum size of the ui.\n You won't be able to shrink it below the current minimum size.\n","sig":null,"attributes":[{"value":"/ Set the maximum size of the ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501624,"byte_end":501659,"line_start":444,"line_end":444,"column_start":5,"column_end":40}},{"value":"/ You won't be able to shrink it below the current minimum size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501664,"byte_end":501730,"line_start":445,"line_end":445,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501983,"byte_end":501996,"line_start":453,"line_end":453,"column_start":12,"column_end":25},"name":"set_max_width","qualname":"<Ui>::set_max_width","value":"pub fn set_max_width(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum width of the ui.\n You won't be able to shrink it below the current minimum size.\n","sig":null,"attributes":[{"value":"/ Set the maximum width of the ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501864,"byte_end":501900,"line_start":451,"line_end":451,"column_start":5,"column_end":41}},{"value":"/ You won't be able to shrink it below the current minimum size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":501905,"byte_end":501971,"line_start":452,"line_end":452,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502195,"byte_end":502209,"line_start":459,"line_end":459,"column_start":12,"column_end":26},"name":"set_max_height","qualname":"<Ui>::set_max_height","value":"pub fn set_max_height(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum height of the ui.\n You won't be able to shrink it below the current minimum size.\n","sig":null,"attributes":[{"value":"/ Set the maximum height of the ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502075,"byte_end":502112,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/ You won't be able to shrink it below the current minimum size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502117,"byte_end":502183,"line_start":458,"line_end":458,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502474,"byte_end":502486,"line_start":467,"line_end":467,"column_start":12,"column_end":24},"name":"set_min_size","qualname":"<Ui>::set_min_size","value":"pub fn set_min_size(&mut Self, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum size of the ui.\n This can't shrink the ui, only make it larger.\n","sig":null,"attributes":[{"value":"/ Set the minimum size of the ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502372,"byte_end":502407,"line_start":465,"line_end":465,"column_start":5,"column_end":40}},{"value":"/ This can't shrink the ui, only make it larger.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502412,"byte_end":502462,"line_start":466,"line_end":466,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502699,"byte_end":502712,"line_start":474,"line_end":474,"column_start":12,"column_end":25},"name":"set_min_width","qualname":"<Ui>::set_min_width","value":"pub fn set_min_width(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum width of the ui.\n This can't shrink the ui, only make it larger.\n","sig":null,"attributes":[{"value":"/ Set the minimum width of the ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502596,"byte_end":502632,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ This can't shrink the ui, only make it larger.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502637,"byte_end":502687,"line_start":473,"line_end":473,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502895,"byte_end":502909,"line_start":480,"line_end":480,"column_start":12,"column_end":26},"name":"set_min_height","qualname":"<Ui>::set_min_height","value":"pub fn set_min_height(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum height of the ui.\n This can't shrink the ui, only make it larger.\n","sig":null,"attributes":[{"value":"/ Set the minimum height of the ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502791,"byte_end":502828,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/ This can't shrink the ui, only make it larger.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":502833,"byte_end":502883,"line_start":479,"line_end":479,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503258,"byte_end":503281,"line_start":489,"line_end":489,"column_start":12,"column_end":35},"name":"shrink_width_to_current","qualname":"<Ui>::shrink_width_to_current","value":"pub fn shrink_width_to_current(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Helper: shrinks the max width to the current width,\n so further widgets will try not to be wider than previous widgets.\n Useful for normal vertical layouts.\n","sig":null,"attributes":[{"value":"/ Helper: shrinks the max width to the current width,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503072,"byte_end":503127,"line_start":486,"line_end":486,"column_start":5,"column_end":60}},{"value":"/ so further widgets will try not to be wider than previous widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503132,"byte_end":503202,"line_start":487,"line_end":487,"column_start":5,"column_end":75}},{"value":"/ Useful for normal vertical layouts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503207,"byte_end":503246,"line_start":488,"line_end":488,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503503,"byte_end":503527,"line_start":495,"line_end":495,"column_start":12,"column_end":36},"name":"shrink_height_to_current","qualname":"<Ui>::shrink_height_to_current","value":"pub fn shrink_height_to_current(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Helper: shrinks the max height to the current height,\n so further widgets will try not to be wider than previous widgets.\n","sig":null,"attributes":[{"value":"/ Helper: shrinks the max height to the current height,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503359,"byte_end":503416,"line_start":493,"line_end":493,"column_start":5,"column_end":62}},{"value":"/ so further widgets will try not to be wider than previous widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503421,"byte_end":503491,"line_start":494,"line_end":494,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503708,"byte_end":503730,"line_start":500,"line_end":500,"column_start":12,"column_end":34},"name":"expand_to_include_rect","qualname":"<Ui>::expand_to_include_rect","value":"pub fn expand_to_include_rect(&mut Self, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Expand the `min_rect` and `max_rect` of this ui to include a child at the given rect.\n","sig":null,"attributes":[{"value":"/ Expand the `min_rect` and `max_rect` of this ui to include a child at the given rect.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503607,"byte_end":503696,"line_start":499,"line_end":499,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503931,"byte_end":503946,"line_start":505,"line_end":505,"column_start":12,"column_end":27},"name":"set_width_range","qualname":"<Ui>::set_width_range","value":"pub fn set_width_range(&mut Self, std::ops::RangeInclusive<f32>)","parent":null,"children":[],"decl_id":null,"docs":" `ui.set_width_range(min..=max);` is equivalent to `ui.set_min_width(min); ui.set_max_width(max);`.\n","sig":null,"attributes":[{"value":"/ `ui.set_width_range(min..=max);` is equivalent to `ui.set_min_width(min); ui.set_max_width(max);`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":503817,"byte_end":503919,"line_start":504,"line_end":504,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":504212,"byte_end":504228,"line_start":511,"line_end":511,"column_start":12,"column_end":28},"name":"set_height_range","qualname":"<Ui>::set_height_range","value":"pub fn set_height_range(&mut Self, std::ops::RangeInclusive<f32>)","parent":null,"children":[],"decl_id":null,"docs":" `ui.set_height_range(min..=max);` is equivalent to `ui.set_min_height(min); ui.set_max_height(max);`.\n","sig":null,"attributes":[{"value":"/ `ui.set_height_range(min..=max);` is equivalent to `ui.set_min_height(min); ui.set_max_height(max);`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":504095,"byte_end":504200,"line_start":510,"line_end":510,"column_start":5,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":504437,"byte_end":504446,"line_start":517,"line_end":517,"column_start":12,"column_end":21},"name":"set_width","qualname":"<Ui>::set_width","value":"pub fn set_width(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set both the minimum and maximum width.\n","sig":null,"attributes":[{"value":"/ Set both the minimum and maximum width.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":504382,"byte_end":504425,"line_start":516,"line_end":516,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":504609,"byte_end":504619,"line_start":523,"line_end":523,"column_start":12,"column_end":22},"name":"set_height","qualname":"<Ui>::set_height","value":"pub fn set_height(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set both the minimum and maximum height.\n","sig":null,"attributes":[{"value":"/ Set both the minimum and maximum height.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":504553,"byte_end":504597,"line_start":522,"line_end":522,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":504886,"byte_end":504905,"line_start":530,"line_end":530,"column_start":12,"column_end":31},"name":"expand_to_include_x","qualname":"<Ui>::expand_to_include_x","value":"pub fn expand_to_include_x(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Ensure we are big enough to contain the given x-coordinate.\n This is sometimes useful to expand an ui to stretch to a certain place.\n","sig":null,"attributes":[{"value":"/ Ensure we are big enough to contain the given x-coordinate.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":504731,"byte_end":504794,"line_start":528,"line_end":528,"column_start":5,"column_end":68}},{"value":"/ This is sometimes useful to expand an ui to stretch to a certain place.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":504799,"byte_end":504874,"line_start":529,"line_end":529,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505137,"byte_end":505156,"line_start":536,"line_end":536,"column_start":12,"column_end":31},"name":"expand_to_include_y","qualname":"<Ui>::expand_to_include_y","value":"pub fn expand_to_include_y(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Ensure we are big enough to contain the given y-coordinate.\n This is sometimes useful to expand an ui to stretch to a certain place.\n","sig":null,"attributes":[{"value":"/ Ensure we are big enough to contain the given y-coordinate.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":504982,"byte_end":505045,"line_start":534,"line_end":534,"column_start":5,"column_end":68}},{"value":"/ This is sometimes useful to expand an ui to stretch to a certain place.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505050,"byte_end":505125,"line_start":535,"line_end":535,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2095},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505710,"byte_end":505724,"line_start":548,"line_end":548,"column_start":12,"column_end":26},"name":"available_size","qualname":"<Ui>::available_size","value":"pub fn available_size(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" The available space at the moment, given the current cursor.\n This how much more space we can take up without overflowing our parent.\n Shrinks as widgets allocate space and the cursor moves.\n A small size should be interpreted as \"as little as possible\".\n An infinite size should be interpreted as \"as much as you want\".\n","sig":null,"attributes":[{"value":"/ The available space at the moment, given the current cursor.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505346,"byte_end":505410,"line_start":543,"line_end":543,"column_start":5,"column_end":69}},{"value":"/ This how much more space we can take up without overflowing our parent.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505415,"byte_end":505490,"line_start":544,"line_end":544,"column_start":5,"column_end":80}},{"value":"/ Shrinks as widgets allocate space and the cursor moves.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505495,"byte_end":505554,"line_start":545,"line_end":545,"column_start":5,"column_end":64}},{"value":"/ A small size should be interpreted as \"as little as possible\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505559,"byte_end":505625,"line_start":546,"line_end":546,"column_start":5,"column_end":71}},{"value":"/ An infinite size should be interpreted as \"as much as you want\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505630,"byte_end":505698,"line_start":547,"line_end":547,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2096},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505797,"byte_end":505812,"line_start":552,"line_end":552,"column_start":12,"column_end":27},"name":"available_width","qualname":"<Ui>::available_width","value":"pub fn available_width(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505879,"byte_end":505895,"line_start":556,"line_end":556,"column_start":12,"column_end":28},"name":"available_height","qualname":"<Ui>::available_height","value":"pub fn available_height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2098},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":506043,"byte_end":506069,"line_start":561,"line_end":561,"column_start":12,"column_end":38},"name":"available_size_before_wrap","qualname":"<Ui>::available_size_before_wrap","value":"pub fn available_size_before_wrap(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" In case of a wrapping layout, how much space is left on this row/column?\n","sig":null,"attributes":[{"value":"/ In case of a wrapping layout, how much space is left on this row/column?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":505955,"byte_end":506031,"line_start":560,"line_end":560,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":506161,"byte_end":506187,"line_start":565,"line_end":565,"column_start":12,"column_end":38},"name":"available_rect_before_wrap","qualname":"<Ui>::available_rect_before_wrap","value":"pub fn available_rect_before_wrap(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2101},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":506396,"byte_end":506414,"line_start":573,"line_end":573,"column_start":12,"column_end":30},"name":"make_persistent_id","qualname":"<Ui>::make_persistent_id","value":"pub fn make_persistent_id<IdSource>(&Self, IdSource) -> Id where\nIdSource: Hash + std::fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Use this to generate widget ids for widgets that have persistent state in `Memory`.\n","sig":null,"attributes":[{"value":"/ Use this to generate widget ids for widgets that have persistent state in `Memory`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":506297,"byte_end":506384,"line_start":572,"line_end":572,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":506861,"byte_end":506880,"line_start":591,"line_end":591,"column_start":12,"column_end":31},"name":"skip_ahead_auto_ids","qualname":"<Ui>::skip_ahead_auto_ids","value":"pub fn skip_ahead_auto_ids(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507124,"byte_end":507132,"line_start":599,"line_end":599,"column_start":12,"column_end":20},"name":"interact","qualname":"<Ui>::interact","value":"pub fn interact(&Self, Rect, Id, Sense) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Check for clicks, drags and/or hover on a specific region of this `Ui`.\n","sig":null,"attributes":[{"value":"/ Check for clicks, drags and/or hover on a specific region of this `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507037,"byte_end":507112,"line_start":598,"line_end":598,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507671,"byte_end":507692,"line_start":615,"line_end":615,"column_start":12,"column_end":33},"name":"rect_contains_pointer","qualname":"<Ui>::rect_contains_pointer","value":"pub fn rect_contains_pointer(&Self, Rect) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the pointer (mouse/touch) above this rectangle in this `Ui`?","sig":null,"attributes":[{"value":"/ Is the pointer (mouse/touch) above this rectangle in this `Ui`?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507417,"byte_end":507484,"line_start":611,"line_end":611,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507489,"byte_end":507492,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ The `clip_rect` and layer of this `Ui` will be respected, so, for instance,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507497,"byte_end":507576,"line_start":613,"line_end":613,"column_start":5,"column_end":84}},{"value":"/ if this `Ui` is behind some other window, this will always return `false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507581,"byte_end":507659,"line_start":614,"line_end":614,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507963,"byte_end":507982,"line_start":622,"line_end":622,"column_start":12,"column_end":31},"name":"ui_contains_pointer","qualname":"<Ui>::ui_contains_pointer","value":"pub fn ui_contains_pointer(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the pointer (mouse/touch) above this `Ui`?\n Equivalent to `ui.rect_contains_pointer(ui.min_rect())`\n","sig":null,"attributes":[{"value":"/ Is the pointer (mouse/touch) above this `Ui`?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507838,"byte_end":507887,"line_start":620,"line_end":620,"column_start":5,"column_end":54}},{"value":"/ Equivalent to `ui.rect_contains_pointer(ui.min_rect())`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507892,"byte_end":507951,"line_start":621,"line_end":621,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509125,"byte_end":509142,"line_start":649,"line_end":649,"column_start":12,"column_end":29},"name":"allocate_response","qualname":"<Ui>::allocate_response","value":"pub fn allocate_response(&mut Self, Vec2, Sense) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Allocate space for a widget and check for interaction in the space.\n Returns a `Response` which contains a rectangle, id, and interaction info.","sig":null,"attributes":[{"value":"/ Allocate space for a widget and check for interaction in the space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508126,"byte_end":508197,"line_start":629,"line_end":629,"column_start":5,"column_end":76}},{"value":"/ Returns a `Response` which contains a rectangle, id, and interaction info.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508202,"byte_end":508280,"line_start":630,"line_end":630,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508285,"byte_end":508288,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ## How sizes are negotiated","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508293,"byte_end":508324,"line_start":632,"line_end":632,"column_start":5,"column_end":36}},{"value":"/ Each widget should have a *minimum desired size* and a *desired size*.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508329,"byte_end":508403,"line_start":633,"line_end":633,"column_start":5,"column_end":79}},{"value":"/ When asking for space, ask AT LEAST for your minimum, and don't ask for more than you need.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508408,"byte_end":508503,"line_start":634,"line_end":634,"column_start":5,"column_end":100}},{"value":"/ If you want to fill the space, ask about [`Ui::available_size`] and use that.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508508,"byte_end":508589,"line_start":635,"line_end":635,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508594,"byte_end":508597,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ You may get MORE space than you asked for, for instance","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508602,"byte_end":508661,"line_start":637,"line_end":637,"column_start":5,"column_end":64}},{"value":"/ for justified layouts, like in menus.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508666,"byte_end":508707,"line_start":638,"line_end":638,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508712,"byte_end":508715,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ You will never get a rectangle that is smaller than the amount of space you asked for.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508720,"byte_end":508810,"line_start":640,"line_end":640,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508815,"byte_end":508818,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508823,"byte_end":508830,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508835,"byte_end":508867,"line_start":643,"line_end":643,"column_start":5,"column_end":37}},{"value":"/ let response = ui.allocate_response(egui::vec2(100.0, 200.0), egui::Sense::click());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508872,"byte_end":508960,"line_start":644,"line_end":644,"column_start":5,"column_end":93}},{"value":"/ if response.clicked() { /* … */ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508965,"byte_end":509004,"line_start":645,"line_end":645,"column_start":5,"column_end":42}},{"value":"/ ui.painter().rect_stroke(response.rect, 0.0, (1.0, egui::Color32::WHITE));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509009,"byte_end":509087,"line_start":646,"line_end":646,"column_start":5,"column_end":83}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509092,"byte_end":509101,"line_start":647,"line_end":647,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509106,"byte_end":509113,"line_start":648,"line_end":648,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509635,"byte_end":509654,"line_start":659,"line_end":659,"column_start":12,"column_end":31},"name":"allocate_exact_size","qualname":"<Ui>::allocate_exact_size","value":"pub fn allocate_exact_size(&mut Self, Vec2, Sense) -> (Rect, Response)","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Rect` with exactly what you asked for.","sig":null,"attributes":[{"value":"/ Returns a `Rect` with exactly what you asked for.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509312,"byte_end":509365,"line_start":654,"line_end":654,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509370,"byte_end":509373,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ The response rect will be larger if this is part of a justified layout or similar.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509378,"byte_end":509464,"line_start":656,"line_end":656,"column_start":5,"column_end":91}},{"value":"/ This means that if this is a narrow widget in a wide justified layout, then","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509469,"byte_end":509548,"line_start":657,"line_end":657,"column_start":5,"column_end":84}},{"value":"/ the widget will react to interactions outside the returned `Rect`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509553,"byte_end":509623,"line_start":658,"line_end":658,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510102,"byte_end":510119,"line_start":670,"line_end":670,"column_start":12,"column_end":29},"name":"allocate_at_least","qualname":"<Ui>::allocate_at_least","value":"pub fn allocate_at_least(&mut Self, Vec2, Sense) -> (Rect, Response)","parent":null,"children":[],"decl_id":null,"docs":" Allocate at least as much space as needed, and interact with that rect.","sig":null,"attributes":[{"value":"/ Allocate at least as much space as needed, and interact with that rect.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":509936,"byte_end":510011,"line_start":667,"line_end":667,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510016,"byte_end":510019,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The returned `Rect` will be the same size as `Response::rect`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510024,"byte_end":510090,"line_start":669,"line_end":669,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":511274,"byte_end":511288,"line_start":696,"line_end":696,"column_start":12,"column_end":26},"name":"allocate_space","qualname":"<Ui>::allocate_space","value":"pub fn allocate_space(&mut Self, Vec2) -> (Id, Rect)","parent":null,"children":[],"decl_id":null,"docs":" Reserve this much space and move the cursor.\n Returns where to put the widget.","sig":null,"attributes":[{"value":"/ Reserve this much space and move the cursor.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510300,"byte_end":510348,"line_start":675,"line_end":675,"column_start":5,"column_end":53}},{"value":"/ Returns where to put the widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510353,"byte_end":510389,"line_start":676,"line_end":676,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510394,"byte_end":510397,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ## How sizes are negotiated","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510402,"byte_end":510433,"line_start":678,"line_end":678,"column_start":5,"column_end":36}},{"value":"/ Each widget should have a *minimum desired size* and a *desired size*.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510438,"byte_end":510512,"line_start":679,"line_end":679,"column_start":5,"column_end":79}},{"value":"/ When asking for space, ask AT LEAST for your minimum, and don't ask for more than you need.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510517,"byte_end":510612,"line_start":680,"line_end":680,"column_start":5,"column_end":100}},{"value":"/ If you want to fill the space, ask about [`Ui::available_size`] and use that.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510617,"byte_end":510698,"line_start":681,"line_end":681,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510703,"byte_end":510706,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ You may get MORE space than you asked for, for instance","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510711,"byte_end":510770,"line_start":683,"line_end":683,"column_start":5,"column_end":64}},{"value":"/ for justified layouts, like in menus.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510775,"byte_end":510816,"line_start":684,"line_end":684,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510821,"byte_end":510824,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ You will never get a rectangle that is smaller than the amount of space you asked for.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510829,"byte_end":510919,"line_start":686,"line_end":686,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510924,"byte_end":510927,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ Returns an automatic `Id` (which you can use for interaction) and the `Rect` of where to put your widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":510932,"byte_end":511041,"line_start":688,"line_end":688,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":511046,"byte_end":511049,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":511054,"byte_end":511061,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":511066,"byte_end":511098,"line_start":691,"line_end":691,"column_start":5,"column_end":37}},{"value":"/ let (id, rect) = ui.allocate_space(egui::vec2(100.0, 200.0));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":511103,"byte_end":511168,"line_start":692,"line_end":692,"column_start":5,"column_end":70}},{"value":"/ let response = ui.interact(rect, id, egui::Sense::click());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":511173,"byte_end":511236,"line_start":693,"line_end":693,"column_start":5,"column_end":68}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":511241,"byte_end":511250,"line_start":694,"line_end":694,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":511255,"byte_end":511262,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":514039,"byte_end":514052,"line_start":761,"line_end":761,"column_start":12,"column_end":25},"name":"allocate_rect","qualname":"<Ui>::allocate_rect","value":"pub fn allocate_rect(&mut Self, Rect, Sense) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Allocate a specific part of the `Ui`.","sig":null,"attributes":[{"value":"/ Allocate a specific part of the `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":513854,"byte_end":513895,"line_start":757,"line_end":757,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":513900,"byte_end":513903,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ Ignore the layout of the `Ui`: just put my widget here!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":513908,"byte_end":513967,"line_start":759,"line_end":759,"column_start":5,"column_end":64}},{"value":"/ The layout cursor will advance to past this `rect`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":513972,"byte_end":514027,"line_start":760,"line_end":760,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2124},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":515603,"byte_end":515614,"line_start":804,"line_end":804,"column_start":12,"column_end":23},"name":"allocate_ui","qualname":"<Ui>::allocate_ui","value":"pub fn allocate_ui<R, impl FnOnce(&mut Self) -> R: FnOnce(&mut Self) ->\n                   R>(&mut Self, Vec2, impl FnOnce(&mut Self) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Allocated the given space and then adds content to that space.\n If the contents overflow, more space will be allocated.\n When finished, the amount of space actually used (`min_rect`) will be allocated.\n So you can request a lot of space and then use less.\n","sig":null,"attributes":[{"value":"/ Allocated the given space and then adds content to that space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":515297,"byte_end":515363,"line_start":799,"line_end":799,"column_start":5,"column_end":71}},{"value":"/ If the contents overflow, more space will be allocated.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":515368,"byte_end":515427,"line_start":800,"line_end":800,"column_start":5,"column_end":64}},{"value":"/ When finished, the amount of space actually used (`min_rect`) will be allocated.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":515432,"byte_end":515516,"line_start":801,"line_end":801,"column_start":5,"column_end":89}},{"value":"/ So you can request a lot of space and then use less.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":515521,"byte_end":515577,"line_start":802,"line_end":802,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":515582,"byte_end":515591,"line_start":803,"line_end":803,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2127},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":516143,"byte_end":516166,"line_start":817,"line_end":817,"column_start":12,"column_end":35},"name":"allocate_ui_with_layout","qualname":"<Ui>::allocate_ui_with_layout","value":"pub fn allocate_ui_with_layout<R,\n                               impl FnOnce(&mut Self) -> R: FnOnce(&mut Self)\n                               ->\n                               R>(&mut Self, Vec2, Layout,\n                                  impl FnOnce(&mut Self) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Allocated the given space and then adds content to that space.\n If the contents overflow, more space will be allocated.\n When finished, the amount of space actually used (`min_rect`) will be allocated.\n So you can request a lot of space and then use less.\n","sig":null,"attributes":[{"value":"/ Allocated the given space and then adds content to that space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":515837,"byte_end":515903,"line_start":812,"line_end":812,"column_start":5,"column_end":71}},{"value":"/ If the contents overflow, more space will be allocated.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":515908,"byte_end":515967,"line_start":813,"line_end":813,"column_start":5,"column_end":64}},{"value":"/ When finished, the amount of space actually used (`min_rect`) will be allocated.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":515972,"byte_end":516056,"line_start":814,"line_end":814,"column_start":5,"column_end":89}},{"value":"/ So you can request a lot of space and then use less.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":516061,"byte_end":516117,"line_start":815,"line_end":815,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":516122,"byte_end":516131,"line_start":816,"line_end":816,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":517999,"byte_end":518018,"line_start":859,"line_end":859,"column_start":12,"column_end":31},"name":"allocate_ui_at_rect","qualname":"<Ui>::allocate_ui_at_rect","value":"pub fn allocate_ui_at_rect<R, impl FnOnce(&mut Self) -> R: FnOnce(&mut Self)\n                           -> R>(&mut Self, Rect, impl FnOnce(&mut Self) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Allocated the given rectangle and then adds content to that rectangle.\n If the contents overflow, more space will be allocated.\n When finished, the amount of space actually used (`min_rect`) will be allocated.\n So you can request a lot of space and then use less.\n","sig":null,"attributes":[{"value":"/ Allocated the given rectangle and then adds content to that rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":517699,"byte_end":517773,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ If the contents overflow, more space will be allocated.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":517778,"byte_end":517837,"line_start":856,"line_end":856,"column_start":5,"column_end":64}},{"value":"/ When finished, the amount of space actually used (`min_rect`) will be allocated.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":517842,"byte_end":517926,"line_start":857,"line_end":857,"column_start":5,"column_end":89}},{"value":"/ So you can request a lot of space and then use less.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":517931,"byte_end":517987,"line_start":858,"line_end":858,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519526,"byte_end":519542,"line_start":900,"line_end":900,"column_start":12,"column_end":28},"name":"allocate_painter","qualname":"<Ui>::allocate_painter","value":"pub fn allocate_painter(&mut Self, Vec2, Sense) -> (Response, Painter)","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to get a region to paint on.","sig":null,"attributes":[{"value":"/ Convenience function to get a region to paint on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":518649,"byte_end":518702,"line_start":879,"line_end":879,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":518707,"byte_end":518710,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ Note that egui uses screen coordinates for everything.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":518715,"byte_end":518773,"line_start":881,"line_end":881,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":518778,"byte_end":518781,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":518786,"byte_end":518793,"line_start":883,"line_end":883,"column_start":5,"column_end":12}},{"value":"/ # use egui::*;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":518798,"byte_end":518816,"line_start":884,"line_end":884,"column_start":5,"column_end":23}},{"value":"/ # use std::f32::consts::TAU;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":518821,"byte_end":518853,"line_start":885,"line_end":885,"column_start":5,"column_end":37}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":518858,"byte_end":518890,"line_start":886,"line_end":886,"column_start":5,"column_end":37}},{"value":"/ let size = Vec2::splat(16.0);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":518895,"byte_end":518928,"line_start":887,"line_end":887,"column_start":5,"column_end":38}},{"value":"/ let (response, painter) = ui.allocate_painter(size, Sense::hover());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":518933,"byte_end":519005,"line_start":888,"line_end":888,"column_start":5,"column_end":77}},{"value":"/ let rect = response.rect;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519010,"byte_end":519039,"line_start":889,"line_end":889,"column_start":5,"column_end":34}},{"value":"/ let c = rect.center();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519044,"byte_end":519070,"line_start":890,"line_end":890,"column_start":5,"column_end":31}},{"value":"/ let r = rect.width() / 2.0 - 1.0;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519075,"byte_end":519112,"line_start":891,"line_end":891,"column_start":5,"column_end":42}},{"value":"/ let color = Color32::from_gray(128);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519117,"byte_end":519157,"line_start":892,"line_end":892,"column_start":5,"column_end":45}},{"value":"/ let stroke = Stroke::new(1.0, color);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519162,"byte_end":519203,"line_start":893,"line_end":893,"column_start":5,"column_end":46}},{"value":"/ painter.circle_stroke(c, r, stroke);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519208,"byte_end":519248,"line_start":894,"line_end":894,"column_start":5,"column_end":45}},{"value":"/ painter.line_segment([c - vec2(0.0, r), c + vec2(0.0, r)], stroke);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519253,"byte_end":519324,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ painter.line_segment([c, c + r * Vec2::angled(TAU * 1.0 / 8.0)], stroke);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519329,"byte_end":519406,"line_start":896,"line_end":896,"column_start":5,"column_end":82}},{"value":"/ painter.line_segment([c, c + r * Vec2::angled(TAU * 3.0 / 8.0)], stroke);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519411,"byte_end":519488,"line_start":897,"line_end":897,"column_start":5,"column_end":82}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519493,"byte_end":519502,"line_start":898,"line_end":898,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519507,"byte_end":519514,"line_start":899,"line_end":899,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520563,"byte_end":520577,"line_start":925,"line_end":925,"column_start":12,"column_end":26},"name":"scroll_to_rect","qualname":"<Ui>::scroll_to_rect","value":"pub fn scroll_to_rect(&Self, Rect, Option<Align>)","parent":null,"children":[],"decl_id":null,"docs":" Adjust the scroll position of any parent [`ScrollArea`] so that the given `Rect` becomes visible.","sig":null,"attributes":[{"value":"/ Adjust the scroll position of any parent [`ScrollArea`] so that the given `Rect` becomes visible.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":519913,"byte_end":520014,"line_start":907,"line_end":907,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520019,"byte_end":520022,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ If `align` is `None`, it'll scroll enough to bring the cursor into view.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520027,"byte_end":520103,"line_start":909,"line_end":909,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520108,"byte_end":520111,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ See also: [`Response::scroll_to_me`], [`Ui::scroll_to_rect`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520116,"byte_end":520181,"line_start":911,"line_end":911,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520186,"byte_end":520189,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520194,"byte_end":520201,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ # use egui::Align;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520206,"byte_end":520228,"line_start":914,"line_end":914,"column_start":5,"column_end":27}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520233,"byte_end":520265,"line_start":915,"line_end":915,"column_start":5,"column_end":37}},{"value":"/ egui::ScrollArea::vertical().show(ui, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520270,"byte_end":520318,"line_start":916,"line_end":916,"column_start":5,"column_end":53}},{"value":"/     // …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520323,"byte_end":520337,"line_start":917,"line_end":917,"column_start":5,"column_end":17}},{"value":"/     let response = ui.button(\"Center on me.\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520342,"byte_end":520392,"line_start":918,"line_end":918,"column_start":5,"column_end":55}},{"value":"/     if response.clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520397,"byte_end":520428,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/         ui.scroll_to_rect(response.rect, Some(Align::Center));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520433,"byte_end":520499,"line_start":920,"line_end":920,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520504,"byte_end":520513,"line_start":921,"line_end":921,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520518,"byte_end":520525,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520530,"byte_end":520539,"line_start":923,"line_end":923,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520544,"byte_end":520551,"line_start":924,"line_end":924,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521558,"byte_end":521574,"line_start":953,"line_end":953,"column_start":12,"column_end":28},"name":"scroll_to_cursor","qualname":"<Ui>::scroll_to_cursor","value":"pub fn scroll_to_cursor(&Self, Option<Align>)","parent":null,"children":[],"decl_id":null,"docs":" Adjust the scroll position of any parent [`ScrollArea`] so that the cursor (where the next widget goes) becomes visible.","sig":null,"attributes":[{"value":"/ Adjust the scroll position of any parent [`ScrollArea`] so that the cursor (where the next widget goes) becomes visible.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520795,"byte_end":520919,"line_start":932,"line_end":932,"column_start":5,"column_end":129}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520924,"byte_end":520927,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ If `align` is not provided, it'll scroll enough to bring the cursor into view.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":520932,"byte_end":521014,"line_start":934,"line_end":934,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521019,"byte_end":521022,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ See also: [`Response::scroll_to_me`], [`Ui::scroll_to_rect`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521027,"byte_end":521092,"line_start":936,"line_end":936,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521097,"byte_end":521100,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521105,"byte_end":521112,"line_start":938,"line_end":938,"column_start":5,"column_end":12}},{"value":"/ # use egui::Align;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521117,"byte_end":521139,"line_start":939,"line_end":939,"column_start":5,"column_end":27}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521144,"byte_end":521176,"line_start":940,"line_end":940,"column_start":5,"column_end":37}},{"value":"/ egui::ScrollArea::vertical().show(ui, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521181,"byte_end":521229,"line_start":941,"line_end":941,"column_start":5,"column_end":53}},{"value":"/     let scroll_bottom = ui.button(\"Scroll to bottom.\").clicked();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521234,"byte_end":521303,"line_start":942,"line_end":942,"column_start":5,"column_end":74}},{"value":"/     for i in 0..1000 {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521308,"byte_end":521334,"line_start":943,"line_end":943,"column_start":5,"column_end":31}},{"value":"/         ui.label(format!(\"Item {}\", i));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521339,"byte_end":521383,"line_start":944,"line_end":944,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521388,"byte_end":521397,"line_start":945,"line_end":945,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521402,"byte_end":521405,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/     if scroll_bottom {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521410,"byte_end":521436,"line_start":947,"line_end":947,"column_start":5,"column_end":31}},{"value":"/         ui.scroll_to_cursor(Some(Align::BOTTOM));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521441,"byte_end":521494,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521499,"byte_end":521508,"line_start":949,"line_end":949,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521513,"byte_end":521520,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521525,"byte_end":521534,"line_start":951,"line_end":951,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521539,"byte_end":521546,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522417,"byte_end":522420,"line_start":979,"line_end":979,"column_start":12,"column_end":15},"name":"add","qualname":"<Ui>::add","value":"pub fn add<impl Widget: Widget>(&mut Self, impl Widget) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Add a [`Widget`] to this `Ui` at a location dependent on the current [`Layout`].","sig":null,"attributes":[{"value":"/ Add a [`Widget`] to this `Ui` at a location dependent on the current [`Layout`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521858,"byte_end":521942,"line_start":964,"line_end":964,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521947,"byte_end":521950,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ The returned [`Response`] can be used to check for interactions,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521955,"byte_end":522023,"line_start":966,"line_end":966,"column_start":5,"column_end":73}},{"value":"/ as well as adding tooltips using [`Response::on_hover_text`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522028,"byte_end":522093,"line_start":967,"line_end":967,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522098,"byte_end":522101,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::add_sized`] and [`Self::put`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522106,"byte_end":522157,"line_start":969,"line_end":969,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522162,"byte_end":522165,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522170,"byte_end":522177,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522182,"byte_end":522214,"line_start":972,"line_end":972,"column_start":5,"column_end":37}},{"value":"/ # let mut my_value = 42;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522219,"byte_end":522247,"line_start":973,"line_end":973,"column_start":5,"column_end":33}},{"value":"/ let response = ui.add(egui::Slider::new(&mut my_value, 0..=100));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522252,"byte_end":522321,"line_start":974,"line_end":974,"column_start":5,"column_end":74}},{"value":"/ response.on_hover_text(\"Drag me!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522326,"byte_end":522365,"line_start":975,"line_end":975,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522370,"byte_end":522379,"line_start":976,"line_end":976,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522384,"byte_end":522391,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522396,"byte_end":522405,"line_start":978,"line_end":978,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522999,"byte_end":523008,"line_start":996,"line_end":996,"column_start":12,"column_end":21},"name":"add_sized","qualname":"<Ui>::add_sized","value":"pub fn add_sized<impl Into<Vec2>: Into<Vec2>,\n                 impl Widget: Widget>(&mut Self, impl Into<Vec2>, impl Widget)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Add a [`Widget`] to this `Ui` with a given size.\n The widget will attempt to fit within the given size, but some widgets may overflow.","sig":null,"attributes":[{"value":"/ Add a [`Widget`] to this `Ui` with a given size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522502,"byte_end":522554,"line_start":983,"line_end":983,"column_start":5,"column_end":57}},{"value":"/ The widget will attempt to fit within the given size, but some widgets may overflow.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522559,"byte_end":522647,"line_start":984,"line_end":984,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522652,"byte_end":522655,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ To fill all remaining area, use `ui.add_sized(ui.available_size(), widget);`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522660,"byte_end":522740,"line_start":986,"line_end":986,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522745,"byte_end":522748,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::add`] and [`Self::put`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522753,"byte_end":522798,"line_start":988,"line_end":988,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522803,"byte_end":522806,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522811,"byte_end":522818,"line_start":990,"line_end":990,"column_start":5,"column_end":12}},{"value":"/ # let mut my_value = 42;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522823,"byte_end":522851,"line_start":991,"line_end":991,"column_start":5,"column_end":33}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522856,"byte_end":522888,"line_start":992,"line_end":992,"column_start":5,"column_end":37}},{"value":"/ ui.add_sized([40.0, 20.0], egui::DragValue::new(&mut my_value));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522893,"byte_end":522961,"line_start":993,"line_end":993,"column_start":5,"column_end":73}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522966,"byte_end":522975,"line_start":994,"line_end":994,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":522980,"byte_end":522987,"line_start":995,"line_end":995,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":523825,"byte_end":523828,"line_start":1010,"line_end":1010,"column_start":12,"column_end":15},"name":"put","qualname":"<Ui>::put","value":"pub fn put<impl Widget: Widget>(&mut Self, Rect, impl Widget) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Add a [`Widget`] to this `Ui` at a specific location (manual layout).","sig":null,"attributes":[{"value":"/ Add a [`Widget`] to this `Ui` at a specific location (manual layout).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":523676,"byte_end":523749,"line_start":1007,"line_end":1007,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":523754,"byte_end":523757,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::add`] and [`Self::add_sized`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":523762,"byte_end":523813,"line_start":1009,"line_end":1009,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524539,"byte_end":524550,"line_start":1029,"line_end":1029,"column_start":12,"column_end":23},"name":"add_enabled","qualname":"<Ui>::add_enabled","value":"pub fn add_enabled<impl Widget: Widget>(&mut Self, bool, impl Widget)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Add a single [`Widget`] that is possibly disabled, i.e. greyed out and non-interactive.","sig":null,"attributes":[{"value":"/ Add a single [`Widget`] that is possibly disabled, i.e. greyed out and non-interactive.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524043,"byte_end":524134,"line_start":1017,"line_end":1017,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524139,"byte_end":524142,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ If you call `add_enabled` from within an already disabled `Ui`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524147,"byte_end":524214,"line_start":1019,"line_end":1019,"column_start":5,"column_end":72}},{"value":"/ the widget will always be disabled, even if the `enabled` argument is true.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524219,"byte_end":524298,"line_start":1020,"line_end":1020,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524303,"byte_end":524306,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::add_enabled_ui`] and [`Self::is_enabled`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524311,"byte_end":524374,"line_start":1022,"line_end":1022,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524379,"byte_end":524382,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524387,"byte_end":524394,"line_start":1024,"line_end":1024,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524399,"byte_end":524431,"line_start":1025,"line_end":1025,"column_start":5,"column_end":37}},{"value":"/ ui.add_enabled(false, egui::Button::new(\"Can't click this\"));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524436,"byte_end":524501,"line_start":1026,"line_end":1026,"column_start":5,"column_end":70}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524506,"byte_end":524515,"line_start":1027,"line_end":1027,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524520,"byte_end":524527,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525646,"byte_end":525660,"line_start":1061,"line_end":1061,"column_start":12,"column_end":26},"name":"add_enabled_ui","qualname":"<Ui>::add_enabled_ui","value":"pub fn add_enabled_ui<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                      R>(&mut Self, bool, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Add a section that is possibly disabled, i.e. greyed out and non-interactive.","sig":null,"attributes":[{"value":"/ Add a section that is possibly disabled, i.e. greyed out and non-interactive.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":524950,"byte_end":525031,"line_start":1042,"line_end":1042,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525036,"byte_end":525039,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ If you call `add_enabled_ui` from within an already disabled `Ui`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525044,"byte_end":525114,"line_start":1044,"line_end":1044,"column_start":5,"column_end":75}},{"value":"/ the result will always be disabled, even if the `enabled` argument is true.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525119,"byte_end":525198,"line_start":1045,"line_end":1045,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525203,"byte_end":525206,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::add_enabled`] and [`Self::is_enabled`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525211,"byte_end":525271,"line_start":1047,"line_end":1047,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525276,"byte_end":525279,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525284,"byte_end":525299,"line_start":1049,"line_end":1049,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525304,"byte_end":525311,"line_start":1050,"line_end":1050,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525316,"byte_end":525348,"line_start":1051,"line_end":1051,"column_start":5,"column_end":37}},{"value":"/ # let mut enabled = true;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525353,"byte_end":525382,"line_start":1052,"line_end":1052,"column_start":5,"column_end":34}},{"value":"/ ui.checkbox(&mut enabled, \"Enable subsection\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525387,"byte_end":525438,"line_start":1053,"line_end":1053,"column_start":5,"column_end":56}},{"value":"/ ui.add_enabled_ui(enabled, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525443,"byte_end":525480,"line_start":1054,"line_end":1054,"column_start":5,"column_end":42}},{"value":"/     if ui.button(\"Button that is not always clickable\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525485,"byte_end":525556,"line_start":1055,"line_end":1055,"column_start":5,"column_end":76}},{"value":"/         /* … */","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525561,"byte_end":525582,"line_start":1056,"line_end":1056,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525587,"byte_end":525596,"line_start":1057,"line_end":1057,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525601,"byte_end":525608,"line_start":1058,"line_end":1058,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525613,"byte_end":525622,"line_start":1059,"line_end":1059,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525627,"byte_end":525634,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526472,"byte_end":526483,"line_start":1086,"line_end":1086,"column_start":12,"column_end":23},"name":"add_visible","qualname":"<Ui>::add_visible","value":"pub fn add_visible<impl Widget: Widget>(&mut Self, bool, impl Widget)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Add a single [`Widget`] that is possibly invisible.","sig":null,"attributes":[{"value":"/ Add a single [`Widget`] that is possibly invisible.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525898,"byte_end":525953,"line_start":1072,"line_end":1072,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525958,"byte_end":525961,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ An invisible widget still takes up the same space as if it were visible.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":525966,"byte_end":526042,"line_start":1074,"line_end":1074,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526047,"byte_end":526050,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ If you call `add_visible` from within an already invisible `Ui`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526055,"byte_end":526123,"line_start":1076,"line_end":1076,"column_start":5,"column_end":73}},{"value":"/ the widget will always be invisible, even if the `visible` argument is true.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526128,"byte_end":526208,"line_start":1077,"line_end":1077,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526213,"byte_end":526216,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::add_visible_ui`], [`Self::set_visible`] and [`Self::is_visible`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526221,"byte_end":526307,"line_start":1079,"line_end":1079,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526312,"byte_end":526315,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526320,"byte_end":526327,"line_start":1081,"line_end":1081,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526332,"byte_end":526364,"line_start":1082,"line_end":1082,"column_start":5,"column_end":37}},{"value":"/ ui.add_visible(false, egui::Label::new(\"You won't see me!\"));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526369,"byte_end":526434,"line_start":1083,"line_end":1083,"column_start":5,"column_end":70}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526439,"byte_end":526448,"line_start":1084,"line_end":1084,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526453,"byte_end":526460,"line_start":1085,"line_end":1085,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527645,"byte_end":527659,"line_start":1118,"line_end":1118,"column_start":12,"column_end":26},"name":"add_visible_ui","qualname":"<Ui>::add_visible_ui","value":"pub fn add_visible_ui<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                      R>(&mut Self, bool, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Add a section that is possibly invisible, i.e. greyed out and non-interactive.","sig":null,"attributes":[{"value":"/ Add a section that is possibly invisible, i.e. greyed out and non-interactive.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526894,"byte_end":526976,"line_start":1099,"line_end":1099,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526981,"byte_end":526984,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ An invisible ui still takes up the same space as if it were visible.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":526989,"byte_end":527061,"line_start":1101,"line_end":1101,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527066,"byte_end":527069,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ If you call `add_visible_ui` from within an already invisible `Ui`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527074,"byte_end":527145,"line_start":1103,"line_end":1103,"column_start":5,"column_end":76}},{"value":"/ the result will always be invisible, even if the `visible` argument is true.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527150,"byte_end":527230,"line_start":1104,"line_end":1104,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527235,"byte_end":527238,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::add_visible`], [`Self::set_visible`] and [`Self::is_visible`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527243,"byte_end":527326,"line_start":1106,"line_end":1106,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527331,"byte_end":527334,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527339,"byte_end":527354,"line_start":1108,"line_end":1108,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527359,"byte_end":527366,"line_start":1109,"line_end":1109,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527371,"byte_end":527403,"line_start":1110,"line_end":1110,"column_start":5,"column_end":37}},{"value":"/ # let mut visible = true;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527408,"byte_end":527437,"line_start":1111,"line_end":1111,"column_start":5,"column_end":34}},{"value":"/ ui.checkbox(&mut visible, \"Show subsection\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527442,"byte_end":527491,"line_start":1112,"line_end":1112,"column_start":5,"column_end":54}},{"value":"/ ui.add_visible_ui(visible, |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527496,"byte_end":527533,"line_start":1113,"line_end":1113,"column_start":5,"column_end":42}},{"value":"/     ui.label(\"Maybe you see this, maybe you don't!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527538,"byte_end":527595,"line_start":1114,"line_end":1114,"column_start":5,"column_end":62}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527600,"byte_end":527607,"line_start":1115,"line_end":1115,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527612,"byte_end":527621,"line_start":1116,"line_end":1116,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527626,"byte_end":527633,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528174,"byte_end":528183,"line_start":1136,"line_end":1136,"column_start":12,"column_end":21},"name":"add_space","qualname":"<Ui>::add_space","value":"pub fn add_space(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Add extra space before the next widget.","sig":null,"attributes":[{"value":"/ Add extra space before the next widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527897,"byte_end":527940,"line_start":1129,"line_end":1129,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527945,"byte_end":527948,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ The direction is dependent on the layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":527953,"byte_end":527998,"line_start":1131,"line_end":1131,"column_start":5,"column_end":50}},{"value":"/ This will be in addition to the [`crate::style::Spacing::item_spacing`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528003,"byte_end":528079,"line_start":1132,"line_end":1132,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528084,"byte_end":528087,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ [`Self::min_rect`] will expand to contain the space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528092,"byte_end":528148,"line_start":1134,"line_end":1134,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528153,"byte_end":528162,"line_start":1135,"line_end":1135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528727,"byte_end":528732,"line_start":1156,"line_end":1156,"column_start":12,"column_end":17},"name":"label","qualname":"<Ui>::label","value":"pub fn label<impl Into<WidgetText>: Into<WidgetText>>(&mut Self,\n                                                      impl Into<WidgetText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show some text.","sig":null,"attributes":[{"value":"/ Show some text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528265,"byte_end":528284,"line_start":1140,"line_end":1140,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528289,"byte_end":528292,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `add(Label::new(text))`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528297,"byte_end":528337,"line_start":1142,"line_end":1142,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528342,"byte_end":528345,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ See also [`Label`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528350,"byte_end":528373,"line_start":1144,"line_end":1144,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528378,"byte_end":528381,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528386,"byte_end":528401,"line_start":1146,"line_end":1146,"column_start":5,"column_end":20}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528406,"byte_end":528413,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528418,"byte_end":528450,"line_start":1148,"line_end":1148,"column_start":5,"column_end":37}},{"value":"/ use egui::{RichText, FontId, Color32};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528455,"byte_end":528497,"line_start":1149,"line_end":1149,"column_start":5,"column_end":47}},{"value":"/ ui.label(\"Normal text\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528502,"byte_end":528530,"line_start":1150,"line_end":1150,"column_start":5,"column_end":33}},{"value":"/ ui.label(RichText::new(\"Large text\").font(FontId::proportional(40.0)));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528535,"byte_end":528610,"line_start":1151,"line_end":1151,"column_start":5,"column_end":80}},{"value":"/ ui.label(RichText::new(\"Red text\").color(Color32::RED));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528615,"byte_end":528675,"line_start":1152,"line_end":1152,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528680,"byte_end":528689,"line_start":1153,"line_end":1153,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528694,"byte_end":528701,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528706,"byte_end":528715,"line_start":1155,"line_end":1155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528940,"byte_end":528953,"line_start":1163,"line_end":1163,"column_start":12,"column_end":25},"name":"colored_label","qualname":"<Ui>::colored_label","value":"pub fn colored_label<impl Into<Color32>: Into<Color32>,\n                     impl Into<RichText>: Into<RichText>>(&mut Self,\n                                                          impl Into<Color32>,\n                                                          impl Into<RichText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show colored text.","sig":null,"attributes":[{"value":"/ Show colored text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528832,"byte_end":528854,"line_start":1160,"line_end":1160,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528859,"byte_end":528862,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `ui.label(RichText::new(text).color(color))`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":528867,"byte_end":528928,"line_start":1162,"line_end":1162,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529232,"byte_end":529239,"line_start":1174,"line_end":1174,"column_start":12,"column_end":19},"name":"heading","qualname":"<Ui>::heading","value":"pub fn heading<impl Into<RichText>: Into<RichText>>(&mut Self,\n                                                    impl Into<RichText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show large text.","sig":null,"attributes":[{"value":"/ Show large text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529129,"byte_end":529149,"line_start":1171,"line_end":1171,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529154,"byte_end":529157,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `ui.label(RichText::new(text).heading())`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529162,"byte_end":529220,"line_start":1173,"line_end":1173,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529477,"byte_end":529486,"line_start":1181,"line_end":1181,"column_start":12,"column_end":21},"name":"monospace","qualname":"<Ui>::monospace","value":"pub fn monospace<impl Into<RichText>: Into<RichText>>(&mut Self,\n                                                      impl Into<RichText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show monospace (fixed width) text.","sig":null,"attributes":[{"value":"/ Show monospace (fixed width) text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529354,"byte_end":529392,"line_start":1178,"line_end":1178,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529397,"byte_end":529400,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `ui.label(RichText::new(text).monospace())`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529405,"byte_end":529465,"line_start":1180,"line_end":1180,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529733,"byte_end":529737,"line_start":1188,"line_end":1188,"column_start":12,"column_end":16},"name":"code","qualname":"<Ui>::code","value":"pub fn code<impl Into<RichText>: Into<RichText>>(&mut Self,\n                                                 impl Into<RichText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show text as monospace with a gray background.","sig":null,"attributes":[{"value":"/ Show text as monospace with a gray background.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529603,"byte_end":529653,"line_start":1185,"line_end":1185,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529658,"byte_end":529661,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `ui.label(RichText::new(text).code())`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529666,"byte_end":529721,"line_start":1187,"line_end":1187,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529950,"byte_end":529955,"line_start":1195,"line_end":1195,"column_start":12,"column_end":17},"name":"small","qualname":"<Ui>::small","value":"pub fn small<impl Into<RichText>: Into<RichText>>(&mut Self,\n                                                  impl Into<RichText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show small text.","sig":null,"attributes":[{"value":"/ Show small text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529849,"byte_end":529869,"line_start":1192,"line_end":1192,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529874,"byte_end":529877,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `ui.label(RichText::new(text).small())`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":529882,"byte_end":529938,"line_start":1194,"line_end":1194,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530210,"byte_end":530216,"line_start":1202,"line_end":1202,"column_start":12,"column_end":18},"name":"strong","qualname":"<Ui>::strong","value":"pub fn strong<impl Into<RichText>: Into<RichText>>(&mut Self,\n                                                   impl Into<RichText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show text that stand out a bit (e.g. slightly brighter).","sig":null,"attributes":[{"value":"/ Show text that stand out a bit (e.g. slightly brighter).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530068,"byte_end":530128,"line_start":1199,"line_end":1199,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530133,"byte_end":530136,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `ui.label(RichText::new(text).strong())`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530141,"byte_end":530198,"line_start":1201,"line_end":1201,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530454,"byte_end":530458,"line_start":1209,"line_end":1209,"column_start":12,"column_end":16},"name":"weak","qualname":"<Ui>::weak","value":"pub fn weak<impl Into<RichText>: Into<RichText>>(&mut Self,\n                                                 impl Into<RichText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show text that is waker (fainter color).","sig":null,"attributes":[{"value":"/ Show text that is waker (fainter color).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530330,"byte_end":530374,"line_start":1206,"line_end":1206,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530379,"byte_end":530382,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `ui.label(RichText::new(text).weak())`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530387,"byte_end":530442,"line_start":1208,"line_end":1208,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530665,"byte_end":530674,"line_start":1216,"line_end":1216,"column_start":12,"column_end":21},"name":"hyperlink","qualname":"<Ui>::hyperlink","value":"pub fn hyperlink<impl ToString: ToString>(&mut Self, impl ToString)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Shortcut for `add(Hyperlink::new(url))`","sig":null,"attributes":[{"value":"/ Shortcut for `add(Hyperlink::new(url))`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530570,"byte_end":530613,"line_start":1213,"line_end":1213,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530618,"byte_end":530621,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ See also [`Hyperlink`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530626,"byte_end":530653,"line_start":1215,"line_end":1215,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531039,"byte_end":531051,"line_start":1229,"line_end":1229,"column_start":12,"column_end":24},"name":"hyperlink_to","qualname":"<Ui>::hyperlink_to","value":"pub fn hyperlink_to<impl Into<WidgetText>: Into<WidgetText>,\n                    impl ToString: ToString>(&mut Self, impl Into<WidgetText>,\n                                             impl ToString) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shortcut for `add(Hyperlink::new(url).text(label))`","sig":null,"attributes":[{"value":"/ Shortcut for `add(Hyperlink::new(url).text(label))`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530768,"byte_end":530823,"line_start":1220,"line_end":1220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530828,"byte_end":530831,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530836,"byte_end":530843,"line_start":1222,"line_end":1222,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530848,"byte_end":530880,"line_start":1223,"line_end":1223,"column_start":5,"column_end":37}},{"value":"/ ui.hyperlink_to(\"egui on GitHub\", \"https://www.github.com/emilk/egui/\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530885,"byte_end":530961,"line_start":1224,"line_end":1224,"column_start":5,"column_end":81}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530966,"byte_end":530975,"line_start":1225,"line_end":1225,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530980,"byte_end":530987,"line_start":1226,"line_end":1226,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":530992,"byte_end":530995,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ See also [`Hyperlink`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531000,"byte_end":531027,"line_start":1228,"line_end":1228,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531366,"byte_end":531386,"line_start":1236,"line_end":1236,"column_start":12,"column_end":32},"name":"text_edit_singleline","qualname":"<Ui>::text_edit_singleline","value":"pub fn text_edit_singleline<S: widgets::text_edit::TextBuffer>(&mut Self,\n                                                               &mut S)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" No newlines (`\\n`) allowed. Pressing enter key will result in the `TextEdit` losing focus (`response.lost_focus`).","sig":null,"attributes":[{"value":"/ No newlines (`\\n`) allowed. Pressing enter key will result in the `TextEdit` losing focus (`response.lost_focus`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531197,"byte_end":531315,"line_start":1233,"line_end":1233,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531320,"byte_end":531323,"line_start":1234,"line_end":1234,"column_start":5,"column_end":8}},{"value":"/ See also [`TextEdit`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531328,"byte_end":531354,"line_start":1235,"line_end":1235,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531669,"byte_end":531688,"line_start":1246,"line_end":1246,"column_start":12,"column_end":31},"name":"text_edit_multiline","qualname":"<Ui>::text_edit_multiline","value":"pub fn text_edit_multiline<S: widgets::text_edit::TextBuffer>(&mut Self,\n                                                              &mut S)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" A `TextEdit` for multiple lines. Pressing enter key will create a new line.","sig":null,"attributes":[{"value":"/ A `TextEdit` for multiple lines. Pressing enter key will create a new line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531539,"byte_end":531618,"line_start":1243,"line_end":1243,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531623,"byte_end":531626,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ See also [`TextEdit`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531631,"byte_end":531657,"line_start":1245,"line_end":1245,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532035,"byte_end":532046,"line_start":1258,"line_end":1258,"column_start":12,"column_end":23},"name":"code_editor","qualname":"<Ui>::code_editor","value":"pub fn code_editor<S: widgets::text_edit::TextBuffer>(&mut Self, &mut S)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" A `TextEdit` for code editing.","sig":null,"attributes":[{"value":"/ A `TextEdit` for code editing.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531840,"byte_end":531874,"line_start":1253,"line_end":1253,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531879,"byte_end":531882,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ This will be multiline, monospace, and will insert tabs instead of moving focus.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531887,"byte_end":531971,"line_start":1255,"line_end":1255,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531976,"byte_end":531979,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ See also [`TextEdit::code_editor`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":531984,"byte_end":532023,"line_start":1257,"line_end":1257,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532781,"byte_end":532787,"line_start":1282,"line_end":1282,"column_start":12,"column_end":18},"name":"button","qualname":"<Ui>::button","value":"pub fn button<impl Into<WidgetText>: Into<WidgetText>>(&mut Self,\n                                                       impl Into<WidgetText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Usage: `if ui.button(\"Click me\").clicked() { … }`","sig":null,"attributes":[{"value":"/ Usage: `if ui.button(\"Click me\").clicked() { … }`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532190,"byte_end":532245,"line_start":1262,"line_end":1262,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532250,"byte_end":532253,"line_start":1263,"line_end":1263,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `add(Button::new(text))`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532258,"byte_end":532299,"line_start":1264,"line_end":1264,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532304,"byte_end":532307,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ See also [`Button`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532312,"byte_end":532336,"line_start":1266,"line_end":1266,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532341,"byte_end":532344,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532349,"byte_end":532356,"line_start":1268,"line_end":1268,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532361,"byte_end":532393,"line_start":1269,"line_end":1269,"column_start":5,"column_end":37}},{"value":"/ if ui.button(\"Click me!\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532398,"byte_end":532439,"line_start":1270,"line_end":1270,"column_start":5,"column_end":46}},{"value":"/     // …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532444,"byte_end":532458,"line_start":1271,"line_end":1271,"column_start":5,"column_end":17}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532463,"byte_end":532468,"line_start":1272,"line_end":1272,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532473,"byte_end":532476,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ # use egui::{RichText, Color32};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532481,"byte_end":532517,"line_start":1274,"line_end":1274,"column_start":5,"column_end":41}},{"value":"/ if ui.button(RichText::new(\"delete\").color(Color32::RED)).clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532522,"byte_end":532595,"line_start":1275,"line_end":1275,"column_start":5,"column_end":78}},{"value":"/     // …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532600,"byte_end":532614,"line_start":1276,"line_end":1276,"column_start":5,"column_end":17}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532619,"byte_end":532624,"line_start":1277,"line_end":1277,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532629,"byte_end":532638,"line_start":1278,"line_end":1278,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532643,"byte_end":532650,"line_start":1279,"line_end":1279,"column_start":5,"column_end":12}},{"value":"must_use =\n  \"You should check if the user clicked this with `if ui.button(…).clicked() { … } \"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532655,"byte_end":532755,"line_start":1280,"line_end":1280,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532760,"byte_end":532769,"line_start":1281,"line_end":1281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533189,"byte_end":533201,"line_start":1292,"line_end":1292,"column_start":12,"column_end":24},"name":"small_button","qualname":"<Ui>::small_button","value":"pub fn small_button<impl Into<WidgetText>: Into<WidgetText>>(&mut Self,\n                                                             impl Into<WidgetText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" A button as small as normal body text.","sig":null,"attributes":[{"value":"/ A button as small as normal body text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532888,"byte_end":532930,"line_start":1286,"line_end":1286,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532935,"byte_end":532938,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ Usage: `if ui.small_button(\"Click me\").clicked() { … }`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":532943,"byte_end":533004,"line_start":1288,"line_end":1288,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533009,"byte_end":533012,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `add(Button::new(text).small())`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533017,"byte_end":533066,"line_start":1290,"line_end":1290,"column_start":5,"column_end":54}},{"value":"must_use =\n  \"You should check if the user clicked this with `if ui.small_button(…).clicked() { … } \"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533071,"byte_end":533177,"line_start":1291,"line_end":1291,"column_start":5,"column_end":107}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533356,"byte_end":533364,"line_start":1298,"line_end":1298,"column_start":12,"column_end":20},"name":"checkbox","qualname":"<Ui>::checkbox","value":"pub fn checkbox<impl Into<WidgetText>: Into<WidgetText>>(&mut Self, &mut bool,\n                                                         impl Into<WidgetText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show a checkbox.\n","sig":null,"attributes":[{"value":"/ Show a checkbox.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533310,"byte_end":533330,"line_start":1296,"line_end":1296,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533335,"byte_end":533344,"line_start":1297,"line_end":1297,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2197},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533714,"byte_end":533719,"line_start":1306,"line_end":1306,"column_start":12,"column_end":17},"name":"radio","qualname":"<Ui>::radio","value":"pub fn radio<impl Into<WidgetText>: Into<WidgetText>>(&mut Self, bool,\n                                                      impl Into<WidgetText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show a [`RadioButton`].\n Often you want to use [`Self::radio_value`] instead.\n","sig":null,"attributes":[{"value":"/ Show a [`RadioButton`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533496,"byte_end":533523,"line_start":1302,"line_end":1302,"column_start":5,"column_end":32}},{"value":"/ Often you want to use [`Self::radio_value`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533528,"byte_end":533584,"line_start":1303,"line_end":1303,"column_start":5,"column_end":61}},{"value":"must_use =\n  \"You should check if the user clicked this with `if ui.radio(…).clicked() { … } \"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533589,"byte_end":533688,"line_start":1304,"line_end":1304,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533693,"byte_end":533702,"line_start":1305,"line_end":1305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534460,"byte_end":534471,"line_start":1329,"line_end":1329,"column_start":12,"column_end":23},"name":"radio_value","qualname":"<Ui>::radio_value","value":"pub fn radio_value<Value: PartialEq,\n                   impl Into<WidgetText>: Into<WidgetText>>(&mut Self,\n                                                            &mut Value, Value,\n                                                            impl Into<WidgetText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show a [`RadioButton`]. It is selected if `*current_value == selected_value`.\n If clicked, `selected_value` is assigned to `*current_value`.","sig":null,"attributes":[{"value":"/ Show a [`RadioButton`]. It is selected if `*current_value == selected_value`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533851,"byte_end":533932,"line_start":1310,"line_end":1310,"column_start":5,"column_end":86}},{"value":"/ If clicked, `selected_value` is assigned to `*current_value`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":533937,"byte_end":534002,"line_start":1311,"line_end":1311,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534007,"byte_end":534010,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534015,"byte_end":534022,"line_start":1313,"line_end":1313,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534027,"byte_end":534059,"line_start":1314,"line_end":1314,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534064,"byte_end":534067,"line_start":1315,"line_end":1315,"column_start":5,"column_end":8}},{"value":"/ #[derive(PartialEq)]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534072,"byte_end":534096,"line_start":1316,"line_end":1316,"column_start":5,"column_end":29}},{"value":"/ enum Enum { First, Second, Third }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534101,"byte_end":534139,"line_start":1317,"line_end":1317,"column_start":5,"column_end":43}},{"value":"/ let mut my_enum = Enum::First;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534144,"byte_end":534178,"line_start":1318,"line_end":1318,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534183,"byte_end":534186,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ ui.radio_value(&mut my_enum, Enum::First, \"First\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534191,"byte_end":534246,"line_start":1320,"line_end":1320,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534251,"byte_end":534254,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ // is equivalent to:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534259,"byte_end":534283,"line_start":1322,"line_end":1322,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534288,"byte_end":534291,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ if ui.add(egui::RadioButton::new(my_enum == Enum::First, \"First\")).clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534296,"byte_end":534378,"line_start":1324,"line_end":1324,"column_start":5,"column_end":87}},{"value":"/     my_enum = Enum::First","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534383,"byte_end":534412,"line_start":1325,"line_end":1325,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534417,"byte_end":534422,"line_start":1326,"line_end":1326,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534427,"byte_end":534436,"line_start":1327,"line_end":1327,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534441,"byte_end":534448,"line_start":1328,"line_end":1328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":535074,"byte_end":535090,"line_start":1347,"line_end":1347,"column_start":12,"column_end":28},"name":"selectable_label","qualname":"<Ui>::selectable_label","value":"pub fn selectable_label<impl Into<WidgetText>: Into<WidgetText>>(&mut Self,\n                                                                 bool,\n                                                                 impl Into<WidgetText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show a label which can be selected or not.","sig":null,"attributes":[{"value":"/ Show a label which can be selected or not.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534855,"byte_end":534901,"line_start":1343,"line_end":1343,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534906,"byte_end":534909,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ See also [`SelectableLabel`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534914,"byte_end":534947,"line_start":1345,"line_end":1345,"column_start":5,"column_end":38}},{"value":"must_use =\n  \"You should check if the user clicked this with `if ui.selectable_label(…).clicked() { … } \"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":534952,"byte_end":535062,"line_start":1346,"line_end":1346,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":535527,"byte_end":535543,"line_start":1357,"line_end":1357,"column_start":12,"column_end":28},"name":"selectable_value","qualname":"<Ui>::selectable_value","value":"pub fn selectable_value<Value: PartialEq,\n                        impl Into<WidgetText>: Into<WidgetText>>(&mut Self,\n                                                                 &mut Value,\n                                                                 Value,\n                                                                 impl Into<WidgetText>)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show selectable text. It is selected if `*current_value == selected_value`.\n If clicked, `selected_value` is assigned to `*current_value`.","sig":null,"attributes":[{"value":"/ Show selectable text. It is selected if `*current_value == selected_value`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":535224,"byte_end":535303,"line_start":1351,"line_end":1351,"column_start":5,"column_end":84}},{"value":"/ If clicked, `selected_value` is assigned to `*current_value`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":535308,"byte_end":535373,"line_start":1352,"line_end":1352,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":535378,"byte_end":535381,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ Example: `ui.selectable_value(&mut my_enum, Enum::Alternative, \"Alternative\")`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":535386,"byte_end":535469,"line_start":1354,"line_end":1354,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":535474,"byte_end":535477,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ See also [`SelectableLabel`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":535482,"byte_end":535515,"line_start":1356,"line_end":1356,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":536038,"byte_end":536047,"line_start":1373,"line_end":1373,"column_start":12,"column_end":21},"name":"separator","qualname":"<Ui>::separator","value":"pub fn separator(&mut Self) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shortcut for `add(Separator::default())` (see [`Separator`]).\n","sig":null,"attributes":[{"value":"/ Shortcut for `add(Separator::default())` (see [`Separator`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":535947,"byte_end":536012,"line_start":1371,"line_end":1371,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":536017,"byte_end":536026,"line_start":1372,"line_end":1372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":536320,"byte_end":536330,"line_start":1379,"line_end":1379,"column_start":12,"column_end":22},"name":"drag_angle","qualname":"<Ui>::drag_angle","value":"pub fn drag_angle(&mut Self, &mut f32) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Modify an angle. The given angle should be in radians, but is shown to the user in degrees.\n The angle is NOT wrapped, so the user may select, for instance 720° = 2𝞃 = 4π\n","sig":null,"attributes":[{"value":"/ Modify an angle. The given angle should be in radians, but is shown to the user in degrees.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":536122,"byte_end":536217,"line_start":1377,"line_end":1377,"column_start":5,"column_end":100}},{"value":"/ The angle is NOT wrapped, so the user may select, for instance 720° = 2𝞃 = 4π","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":536222,"byte_end":536308,"line_start":1378,"line_end":1378,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":536996,"byte_end":537010,"line_start":1395,"line_end":1395,"column_start":12,"column_end":26},"name":"drag_angle_tau","qualname":"<Ui>::drag_angle_tau","value":"pub fn drag_angle_tau(&mut Self, &mut f32) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Modify an angle. The given angle should be in radians,\n but is shown to the user in fractions of one Tau (i.e. fractions of one turn).\n The angle is NOT wrapped, so the user may select, for instance 2𝞃 (720°)\n","sig":null,"attributes":[{"value":"/ Modify an angle. The given angle should be in radians,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":536754,"byte_end":536812,"line_start":1392,"line_end":1392,"column_start":5,"column_end":63}},{"value":"/ but is shown to the user in fractions of one Tau (i.e. fractions of one turn).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":536817,"byte_end":536899,"line_start":1393,"line_end":1393,"column_start":5,"column_end":87}},{"value":"/ The angle is NOT wrapped, so the user may select, for instance 2𝞃 (720°)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":536904,"byte_end":536984,"line_start":1394,"line_end":1394,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538444,"byte_end":538449,"line_start":1440,"line_end":1440,"column_start":12,"column_end":17},"name":"image","qualname":"<Ui>::image","value":"pub fn image<impl Into<TextureId>: Into<TextureId>,\n             impl Into<Vec2>: Into<Vec2>>(&mut Self, impl Into<TextureId>,\n                                          impl Into<Vec2>) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Show an image here with the given size.","sig":null,"attributes":[{"value":"/ Show an image here with the given size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537613,"byte_end":537656,"line_start":1415,"line_end":1415,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537661,"byte_end":537664,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ In order to display an image you must first acquire a [`TextureHandle`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537669,"byte_end":537744,"line_start":1417,"line_end":1417,"column_start":5,"column_end":80}},{"value":"/ using [`Context::load_texture`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537749,"byte_end":537785,"line_start":1418,"line_end":1418,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537790,"byte_end":537793,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537798,"byte_end":537805,"line_start":1420,"line_end":1420,"column_start":5,"column_end":12}},{"value":"/ struct MyImage {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537810,"byte_end":537830,"line_start":1421,"line_end":1421,"column_start":5,"column_end":25}},{"value":"/     texture: Option<egui::TextureHandle>,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537835,"byte_end":537880,"line_start":1422,"line_end":1422,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537885,"byte_end":537890,"line_start":1423,"line_end":1423,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537895,"byte_end":537898,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ impl MyImage {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537903,"byte_end":537921,"line_start":1425,"line_end":1425,"column_start":5,"column_end":23}},{"value":"/     fn ui(&mut self, ui: &mut egui::Ui) {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537926,"byte_end":537971,"line_start":1426,"line_end":1426,"column_start":5,"column_end":50}},{"value":"/         let texture: &egui::TextureHandle = self.texture.get_or_insert_with(|| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":537976,"byte_end":538060,"line_start":1427,"line_end":1427,"column_start":5,"column_end":89}},{"value":"/             // Load the texture only once.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538065,"byte_end":538111,"line_start":1428,"line_end":1428,"column_start":5,"column_end":51}},{"value":"/             ui.ctx().load_texture(\"my-image\", egui::ColorImage::example())","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538116,"byte_end":538194,"line_start":1429,"line_end":1429,"column_start":5,"column_end":83}},{"value":"/         });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538199,"byte_end":538214,"line_start":1430,"line_end":1430,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538219,"byte_end":538222,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/         // Show the image:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538227,"byte_end":538257,"line_start":1432,"line_end":1432,"column_start":5,"column_end":35}},{"value":"/         ui.image(texture, texture.size_vec2());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538262,"byte_end":538313,"line_start":1433,"line_end":1433,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538318,"byte_end":538327,"line_start":1434,"line_end":1434,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538332,"byte_end":538337,"line_start":1435,"line_end":1435,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538342,"byte_end":538349,"line_start":1436,"line_end":1436,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538354,"byte_end":538357,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ Se also [`crate::Image`] and [`crate::ImageButton`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538362,"byte_end":538418,"line_start":1438,"line_end":1438,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538423,"byte_end":538432,"line_start":1439,"line_end":1439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538735,"byte_end":538758,"line_start":1449,"line_end":1449,"column_start":12,"column_end":35},"name":"color_edit_button_srgba","qualname":"<Ui>::color_edit_button_srgba","value":"pub fn color_edit_button_srgba(&mut Self, &mut Color32) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538614,"byte_end":538654,"line_start":1447,"line_end":1447,"column_start":5,"column_end":45}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538659,"byte_end":538723,"line_start":1448,"line_end":1448,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539034,"byte_end":539056,"line_start":1455,"line_end":1455,"column_start":12,"column_end":34},"name":"color_edit_button_hsva","qualname":"<Ui>::color_edit_button_hsva","value":"pub fn color_edit_button_hsva(&mut Self, &mut Hsva) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538913,"byte_end":538953,"line_start":1453,"line_end":1453,"column_start":5,"column_end":45}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538958,"byte_end":539022,"line_start":1454,"line_end":1454,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539370,"byte_end":539392,"line_start":1462,"line_end":1462,"column_start":12,"column_end":34},"name":"color_edit_button_srgb","qualname":"<Ui>::color_edit_button_srgb","value":"pub fn color_edit_button_srgb(&mut Self, &mut [u8; ]) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n The given color is in `sRGB` space.\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539205,"byte_end":539245,"line_start":1459,"line_end":1459,"column_start":5,"column_end":45}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539250,"byte_end":539314,"line_start":1460,"line_end":1460,"column_start":5,"column_end":69}},{"value":"/ The given color is in `sRGB` space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539319,"byte_end":539358,"line_start":1461,"line_end":1461,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539675,"byte_end":539696,"line_start":1469,"line_end":1469,"column_start":12,"column_end":33},"name":"color_edit_button_rgb","qualname":"<Ui>::color_edit_button_rgb","value":"pub fn color_edit_button_rgb(&mut Self, &mut [f32; ]) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n The given color is in linear RGB space.\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539506,"byte_end":539546,"line_start":1466,"line_end":1466,"column_start":5,"column_end":45}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539551,"byte_end":539615,"line_start":1467,"line_end":1467,"column_start":5,"column_end":69}},{"value":"/ The given color is in linear RGB space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539620,"byte_end":539663,"line_start":1468,"line_end":1468,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539998,"byte_end":540035,"line_start":1476,"line_end":1476,"column_start":12,"column_end":49},"name":"color_edit_button_srgba_premultiplied","qualname":"<Ui>::color_edit_button_srgba_premultiplied","value":"pub fn color_edit_button_srgba_premultiplied(&mut Self, &mut [u8; ])\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n The given color is in `sRGBA` space with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539808,"byte_end":539848,"line_start":1473,"line_end":1473,"column_start":5,"column_end":45}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539853,"byte_end":539917,"line_start":1474,"line_end":1474,"column_start":5,"column_end":69}},{"value":"/ The given color is in `sRGBA` space with premultiplied alpha","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":539922,"byte_end":539986,"line_start":1475,"line_end":1475,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":540604,"byte_end":540640,"line_start":1487,"line_end":1487,"column_start":12,"column_end":48},"name":"color_edit_button_srgba_unmultiplied","qualname":"<Ui>::color_edit_button_srgba_unmultiplied","value":"pub fn color_edit_button_srgba_unmultiplied(&mut Self, &mut [u8; ])\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n The given color is in `sRGBA` space without premultiplied alpha.\n If unsure, what \"premultiplied alpha\" is, then this is probably the function you want to use.\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":540308,"byte_end":540348,"line_start":1483,"line_end":1483,"column_start":5,"column_end":45}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":540353,"byte_end":540417,"line_start":1484,"line_end":1484,"column_start":5,"column_end":69}},{"value":"/ The given color is in `sRGBA` space without premultiplied alpha.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":540422,"byte_end":540490,"line_start":1485,"line_end":1485,"column_start":5,"column_end":73}},{"value":"/ If unsure, what \"premultiplied alpha\" is, then this is probably the function you want to use.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":540495,"byte_end":540592,"line_start":1486,"line_end":1486,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":541172,"byte_end":541208,"line_start":1498,"line_end":1498,"column_start":12,"column_end":48},"name":"color_edit_button_rgba_premultiplied","qualname":"<Ui>::color_edit_button_rgba_premultiplied","value":"pub fn color_edit_button_rgba_premultiplied(&mut Self, &mut [f32; ])\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n The given color is in linear RGBA space with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":540978,"byte_end":541018,"line_start":1495,"line_end":1495,"column_start":5,"column_end":45}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":541023,"byte_end":541087,"line_start":1496,"line_end":1496,"column_start":5,"column_end":69}},{"value":"/ The given color is in linear RGBA space with premultiplied alpha","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":541092,"byte_end":541160,"line_start":1497,"line_end":1497,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":541970,"byte_end":542005,"line_start":1518,"line_end":1518,"column_start":12,"column_end":47},"name":"color_edit_button_rgba_unmultiplied","qualname":"<Ui>::color_edit_button_rgba_unmultiplied","value":"pub fn color_edit_button_rgba_unmultiplied(&mut Self, &mut [f32; ])\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n The given color is in linear RGBA space without premultiplied alpha.\n If unsure, what \"premultiplied alpha\" is, then this is probably the function you want to use.\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":541670,"byte_end":541710,"line_start":1514,"line_end":1514,"column_start":5,"column_end":45}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":541715,"byte_end":541779,"line_start":1515,"line_end":1515,"column_start":5,"column_end":69}},{"value":"/ The given color is in linear RGBA space without premultiplied alpha.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":541784,"byte_end":541856,"line_start":1516,"line_end":1516,"column_start":5,"column_end":77}},{"value":"/ If unsure, what \"premultiplied alpha\" is, then this is probably the function you want to use.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":541861,"byte_end":541958,"line_start":1517,"line_end":1517,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":2232},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542762,"byte_end":542767,"line_start":1545,"line_end":1545,"column_start":12,"column_end":17},"name":"group","qualname":"<Ui>::group","value":"pub fn group<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n             R>(&mut Self, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Put into a [`Frame::group`], visually grouping the contents together","sig":null,"attributes":[{"value":"/ Put into a [`Frame::group`], visually grouping the contents together","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542478,"byte_end":542550,"line_start":1534,"line_end":1534,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542555,"byte_end":542558,"line_start":1535,"line_end":1535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542563,"byte_end":542570,"line_start":1536,"line_end":1536,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542575,"byte_end":542607,"line_start":1537,"line_end":1537,"column_start":5,"column_end":37}},{"value":"/ ui.group(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542612,"byte_end":542631,"line_start":1538,"line_end":1538,"column_start":5,"column_end":24}},{"value":"/     ui.label(\"Within a frame\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542636,"byte_end":542671,"line_start":1539,"line_end":1539,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542676,"byte_end":542683,"line_start":1540,"line_end":1540,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542688,"byte_end":542697,"line_start":1541,"line_end":1541,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542702,"byte_end":542709,"line_start":1542,"line_end":1542,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542714,"byte_end":542717,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ Se also [`Self::scope`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542722,"byte_end":542750,"line_start":1544,"line_end":1544,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":543273,"byte_end":543278,"line_start":1561,"line_end":1561,"column_start":12,"column_end":17},"name":"scope","qualname":"<Ui>::scope","value":"pub fn scope<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n             R>(&mut Self, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a scoped child ui.","sig":null,"attributes":[{"value":"/ Create a scoped child ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542923,"byte_end":542952,"line_start":1549,"line_end":1549,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542957,"byte_end":542960,"line_start":1550,"line_end":1550,"column_start":5,"column_end":8}},{"value":"/ You can use this to temporarily change the [`Style`] of a sub-region, for instance:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542965,"byte_end":543052,"line_start":1551,"line_end":1551,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":543057,"byte_end":543060,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":543065,"byte_end":543072,"line_start":1553,"line_end":1553,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":543077,"byte_end":543109,"line_start":1554,"line_end":1554,"column_start":5,"column_end":37}},{"value":"/ ui.scope(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":543114,"byte_end":543133,"line_start":1555,"line_end":1555,"column_start":5,"column_end":24}},{"value":"/     ui.spacing_mut().slider_width = 200.0; // Temporary change","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":543138,"byte_end":543204,"line_start":1556,"line_end":1556,"column_start":5,"column_end":71}},{"value":"/     // …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":543209,"byte_end":543223,"line_start":1557,"line_end":1557,"column_start":5,"column_end":17}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":543228,"byte_end":543235,"line_start":1558,"line_end":1558,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":543240,"byte_end":543249,"line_start":1559,"line_end":1559,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":543254,"byte_end":543261,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":544132,"byte_end":544145,"line_start":1579,"line_end":1579,"column_start":12,"column_end":25},"name":"with_layer_id","qualname":"<Ui>::with_layer_id","value":"pub fn with_layer_id<R, impl FnOnce(&mut Self) -> R: FnOnce(&mut Self) ->\n                     R>(&mut Self, LayerId, impl FnOnce(&mut Self) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Redirect shapes to another paint layer.\n","sig":null,"attributes":[{"value":"/ Redirect shapes to another paint layer.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":544077,"byte_end":544120,"line_start":1578,"line_end":1578,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":544464,"byte_end":544474,"line_start":1591,"line_end":1591,"column_start":12,"column_end":22},"name":"collapsing","qualname":"<Ui>::collapsing","value":"pub fn collapsing<R, impl Into<WidgetText>: Into<WidgetText>,\n                  impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                  R>(&mut Self, impl Into<WidgetText>,\n                     impl FnOnce(&mut Ui) -> R) -> CollapsingResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" A [`CollapsingHeader`] that starts out collapsed.\n","sig":null,"attributes":[{"value":"/ A [`CollapsingHeader`] that starts out collapsed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":544399,"byte_end":544452,"line_start":1590,"line_end":1590,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":544873,"byte_end":544879,"line_start":1604,"line_end":1604,"column_start":12,"column_end":18},"name":"indent","qualname":"<Ui>::indent","value":"pub fn indent<R, impl Hash: Hash, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui)\n              -> R>(&mut Self, impl Hash, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a child ui which is indented to the right.","sig":null,"attributes":[{"value":"/ Create a child ui which is indented to the right.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":544695,"byte_end":544748,"line_start":1599,"line_end":1599,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":544753,"byte_end":544756,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ The `id_source` here be anything at all.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":544761,"byte_end":544805,"line_start":1601,"line_end":1601,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":544852,"byte_end":544861,"line_start":1603,"line_end":1603,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547897,"byte_end":547907,"line_start":1683,"line_end":1683,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<Ui>::horizontal","value":"pub fn horizontal<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                  R>(&mut Self, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Start a ui with horizontal layout.\n After you have called this, the function registers the contents as any other widget.","sig":null,"attributes":[{"value":"/ Start a ui with horizontal layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":546861,"byte_end":546899,"line_start":1657,"line_end":1657,"column_start":5,"column_end":43}},{"value":"/ After you have called this, the function registers the contents as any other widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":546904,"byte_end":546992,"line_start":1658,"line_end":1658,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":546997,"byte_end":547000,"line_start":1659,"line_end":1659,"column_start":5,"column_end":8}},{"value":"/ Elements will be centered on the Y axis, i.e.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547005,"byte_end":547054,"line_start":1660,"line_end":1660,"column_start":5,"column_end":54}},{"value":"/ adjusted up and down to lie in the center of the horizontal layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547059,"byte_end":547130,"line_start":1661,"line_end":1661,"column_start":5,"column_end":76}},{"value":"/ The initial height is `style.spacing.interact_size.y`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547135,"byte_end":547193,"line_start":1662,"line_end":1662,"column_start":5,"column_end":63}},{"value":"/ Centering is almost always what you want if you are","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547198,"byte_end":547253,"line_start":1663,"line_end":1663,"column_start":5,"column_end":60}},{"value":"/ planning to to mix widgets or use different types of text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547258,"byte_end":547320,"line_start":1664,"line_end":1664,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547325,"byte_end":547328,"line_start":1665,"line_end":1665,"column_start":5,"column_end":8}},{"value":"/ If you don't want the contents to be centered, use [`Self::horizontal_top`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547333,"byte_end":547421,"line_start":1666,"line_end":1666,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547426,"byte_end":547429,"line_start":1667,"line_end":1667,"column_start":5,"column_end":8}},{"value":"/ The returned `Response` will only have checked for mouse hover","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547434,"byte_end":547500,"line_start":1668,"line_end":1668,"column_start":5,"column_end":71}},{"value":"/ but can be used for tooltips (`on_hover_text`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547505,"byte_end":547556,"line_start":1669,"line_end":1669,"column_start":5,"column_end":56}},{"value":"/ It also contains the `Rect` used by the horizontal layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547561,"byte_end":547623,"line_start":1670,"line_end":1670,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547628,"byte_end":547631,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547636,"byte_end":547643,"line_start":1672,"line_end":1672,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547648,"byte_end":547680,"line_start":1673,"line_end":1673,"column_start":5,"column_end":37}},{"value":"/ ui.horizontal(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547685,"byte_end":547709,"line_start":1674,"line_end":1674,"column_start":5,"column_end":29}},{"value":"/     ui.label(\"Same\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547714,"byte_end":547739,"line_start":1675,"line_end":1675,"column_start":5,"column_end":30}},{"value":"/     ui.label(\"row\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547744,"byte_end":547768,"line_start":1676,"line_end":1676,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547773,"byte_end":547780,"line_start":1677,"line_end":1677,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547785,"byte_end":547794,"line_start":1678,"line_end":1678,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547799,"byte_end":547806,"line_start":1679,"line_end":1679,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547811,"byte_end":547814,"line_start":1680,"line_end":1680,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::with_layout`] for more options.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547819,"byte_end":547871,"line_start":1681,"line_end":1681,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":547876,"byte_end":547885,"line_start":1682,"line_end":1682,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":548141,"byte_end":548155,"line_start":1688,"line_end":1688,"column_start":12,"column_end":26},"name":"horizontal_top","qualname":"<Ui>::horizontal_top","value":"pub fn horizontal_top<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                      R>(&mut Self, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Like [`Self::horizontal`], but aligns content with top.\n","sig":null,"attributes":[{"value":"/ Like [`Self::horizontal`], but aligns content with top.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":548070,"byte_end":548129,"line_start":1687,"line_end":1687,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":549434,"byte_end":549452,"line_start":1717,"line_end":1717,"column_start":12,"column_end":30},"name":"horizontal_wrapped","qualname":"<Ui>::horizontal_wrapped","value":"pub fn horizontal_wrapped<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                          R>(&mut Self, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Start a ui with horizontal layout that wraps to a new row\n when it reaches the right edge of the `max_size`.\n After you have called this, the function registers the contents as any other widget.","sig":null,"attributes":[{"value":"/ Start a ui with horizontal layout that wraps to a new row","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":548615,"byte_end":548676,"line_start":1702,"line_end":1702,"column_start":5,"column_end":66}},{"value":"/ when it reaches the right edge of the `max_size`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":548681,"byte_end":548734,"line_start":1703,"line_end":1703,"column_start":5,"column_end":58}},{"value":"/ After you have called this, the function registers the contents as any other widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":548739,"byte_end":548827,"line_start":1704,"line_end":1704,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":548832,"byte_end":548835,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ Elements will be centered on the Y axis, i.e.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":548840,"byte_end":548889,"line_start":1706,"line_end":1706,"column_start":5,"column_end":54}},{"value":"/ adjusted up and down to lie in the center of the horizontal layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":548894,"byte_end":548965,"line_start":1707,"line_end":1707,"column_start":5,"column_end":76}},{"value":"/ The initial height is `style.spacing.interact_size.y`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":548970,"byte_end":549028,"line_start":1708,"line_end":1708,"column_start":5,"column_end":63}},{"value":"/ Centering is almost always what you want if you are","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":549033,"byte_end":549088,"line_start":1709,"line_end":1709,"column_start":5,"column_end":60}},{"value":"/ planning to to mix widgets or use different types of text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":549093,"byte_end":549155,"line_start":1710,"line_end":1710,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":549160,"byte_end":549163,"line_start":1711,"line_end":1711,"column_start":5,"column_end":8}},{"value":"/ The returned `Response` will only have checked for mouse hover","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":549168,"byte_end":549234,"line_start":1712,"line_end":1712,"column_start":5,"column_end":71}},{"value":"/ but can be used for tooltips (`on_hover_text`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":549239,"byte_end":549290,"line_start":1713,"line_end":1713,"column_start":5,"column_end":56}},{"value":"/ It also contains the `Rect` used by the horizontal layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":549295,"byte_end":549357,"line_start":1714,"line_end":1714,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":549362,"byte_end":549365,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::with_layout`] for more options.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":549370,"byte_end":549422,"line_start":1716,"line_end":1716,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550652,"byte_end":550660,"line_start":1758,"line_end":1758,"column_start":12,"column_end":20},"name":"vertical","qualname":"<Ui>::vertical","value":"pub fn vertical<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                R>(&mut Self, impl FnOnce(&mut Ui) -> R) -> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Start a ui with vertical layout.\n Widgets will be left-justified.","sig":null,"attributes":[{"value":"/ Start a ui with vertical layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550302,"byte_end":550338,"line_start":1744,"line_end":1744,"column_start":5,"column_end":41}},{"value":"/ Widgets will be left-justified.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550343,"byte_end":550378,"line_start":1745,"line_end":1745,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550383,"byte_end":550386,"line_start":1746,"line_end":1746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550391,"byte_end":550398,"line_start":1747,"line_end":1747,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550403,"byte_end":550435,"line_start":1748,"line_end":1748,"column_start":5,"column_end":37}},{"value":"/ ui.vertical(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550440,"byte_end":550462,"line_start":1749,"line_end":1749,"column_start":5,"column_end":27}},{"value":"/     ui.label(\"over\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550467,"byte_end":550492,"line_start":1750,"line_end":1750,"column_start":5,"column_end":30}},{"value":"/     ui.label(\"under\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550497,"byte_end":550523,"line_start":1751,"line_end":1751,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550528,"byte_end":550535,"line_start":1752,"line_end":1752,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550540,"byte_end":550549,"line_start":1753,"line_end":1753,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550554,"byte_end":550561,"line_start":1754,"line_end":1754,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550566,"byte_end":550569,"line_start":1755,"line_end":1755,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::with_layout`] for more options.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550574,"byte_end":550626,"line_start":1756,"line_end":1756,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550631,"byte_end":550640,"line_start":1757,"line_end":1757,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551133,"byte_end":551150,"line_start":1774,"line_end":1774,"column_start":12,"column_end":29},"name":"vertical_centered","qualname":"<Ui>::vertical_centered","value":"pub fn vertical_centered<R, impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                         R>(&mut Self, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Start a ui with vertical layout.\n Widgets will be horizontally centered.","sig":null,"attributes":[{"value":"/ Start a ui with vertical layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550832,"byte_end":550868,"line_start":1762,"line_end":1762,"column_start":5,"column_end":41}},{"value":"/ Widgets will be horizontally centered.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550873,"byte_end":550915,"line_start":1763,"line_end":1763,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550920,"byte_end":550923,"line_start":1764,"line_end":1764,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550928,"byte_end":550935,"line_start":1765,"line_end":1765,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550940,"byte_end":550972,"line_start":1766,"line_end":1766,"column_start":5,"column_end":37}},{"value":"/ ui.vertical_centered(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":550977,"byte_end":551008,"line_start":1767,"line_end":1767,"column_start":5,"column_end":36}},{"value":"/     ui.label(\"over\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551013,"byte_end":551038,"line_start":1768,"line_end":1768,"column_start":5,"column_end":30}},{"value":"/     ui.label(\"under\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551043,"byte_end":551069,"line_start":1769,"line_end":1769,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551074,"byte_end":551081,"line_start":1770,"line_end":1770,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551086,"byte_end":551095,"line_start":1771,"line_end":1771,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551100,"byte_end":551107,"line_start":1772,"line_end":1772,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551112,"byte_end":551121,"line_start":1773,"line_end":1773,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551677,"byte_end":551704,"line_start":1792,"line_end":1792,"column_start":12,"column_end":39},"name":"vertical_centered_justified","qualname":"<Ui>::vertical_centered_justified","value":"pub fn vertical_centered_justified<R,\n                                   impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui)\n                                   -> R>(&mut Self, impl FnOnce(&mut Ui) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Start a ui with vertical layout.\n Widgets will be horizontally centered and justified (fill full width).","sig":null,"attributes":[{"value":"/ Start a ui with vertical layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551348,"byte_end":551384,"line_start":1781,"line_end":1781,"column_start":5,"column_end":41}},{"value":"/ Widgets will be horizontally centered and justified (fill full width).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551389,"byte_end":551463,"line_start":1782,"line_end":1782,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551468,"byte_end":551471,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551476,"byte_end":551483,"line_start":1784,"line_end":1784,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551488,"byte_end":551520,"line_start":1785,"line_end":1785,"column_start":5,"column_end":37}},{"value":"/ ui.vertical_centered_justified(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551525,"byte_end":551566,"line_start":1786,"line_end":1786,"column_start":5,"column_end":46}},{"value":"/     ui.label(\"over\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551571,"byte_end":551596,"line_start":1787,"line_end":1787,"column_start":5,"column_end":30}},{"value":"/     ui.label(\"under\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551601,"byte_end":551627,"line_start":1788,"line_end":1788,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551632,"byte_end":551639,"line_start":1789,"line_end":1789,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551644,"byte_end":551653,"line_start":1790,"line_end":1790,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551658,"byte_end":551665,"line_start":1791,"line_end":1791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552390,"byte_end":552401,"line_start":1816,"line_end":1816,"column_start":12,"column_end":23},"name":"with_layout","qualname":"<Ui>::with_layout","value":"pub fn with_layout<R, impl FnOnce(&mut Self) -> R: FnOnce(&mut Self) ->\n                   R>(&mut Self, Layout, impl FnOnce(&mut Self) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" The new layout will take up all available space.","sig":null,"attributes":[{"value":"/ The new layout will take up all available space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":551962,"byte_end":552014,"line_start":1802,"line_end":1802,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552019,"byte_end":552022,"line_start":1803,"line_end":1803,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552027,"byte_end":552034,"line_start":1804,"line_end":1804,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552039,"byte_end":552071,"line_start":1805,"line_end":1805,"column_start":5,"column_end":37}},{"value":"/ ui.with_layout(egui::Layout::right_to_left(), |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552076,"byte_end":552132,"line_start":1806,"line_end":1806,"column_start":5,"column_end":61}},{"value":"/     ui.label(\"world!\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552137,"byte_end":552164,"line_start":1807,"line_end":1807,"column_start":5,"column_end":32}},{"value":"/     ui.label(\"Hello\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552169,"byte_end":552195,"line_start":1808,"line_end":1808,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552200,"byte_end":552207,"line_start":1809,"line_end":1809,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552212,"byte_end":552221,"line_start":1810,"line_end":1810,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552226,"byte_end":552233,"line_start":1811,"line_end":1811,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552238,"byte_end":552241,"line_start":1812,"line_end":1812,"column_start":5,"column_end":8}},{"value":"/ See also [`Self::allocate_ui_with_layout`],","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552246,"byte_end":552293,"line_start":1813,"line_end":1813,"column_start":5,"column_end":52}},{"value":"/ and the helpers [`Self::horizontal]`, [`Self::vertical`], etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552298,"byte_end":552364,"line_start":1814,"line_end":1814,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":552369,"byte_end":552378,"line_start":1815,"line_end":1815,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":553532,"byte_end":553554,"line_start":1845,"line_end":1845,"column_start":12,"column_end":34},"name":"centered_and_justified","qualname":"<Ui>::centered_and_justified","value":"pub fn centered_and_justified<R,\n                              impl FnOnce(&mut Self) -> R: FnOnce(&mut Self)\n                              -> R>(&mut Self, impl FnOnce(&mut Self) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" This will make the next added widget centered and justified in the available space.\n","sig":null,"attributes":[{"value":"/ This will make the next added widget centered and justified in the available space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":553433,"byte_end":553520,"line_start":1844,"line_end":1844,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554181,"byte_end":554188,"line_start":1869,"line_end":1869,"column_start":12,"column_end":19},"name":"end_row","qualname":"<Ui>::end_row","value":"pub fn end_row(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Move to the next row in a grid layout or wrapping layout.\n Otherwise does nothing.\n","sig":null,"attributes":[{"value":"/ Move to the next row in a grid layout or wrapping layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554076,"byte_end":554137,"line_start":1867,"line_end":1867,"column_start":5,"column_end":66}},{"value":"/ Otherwise does nothing.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554142,"byte_end":554169,"line_start":1868,"line_end":1868,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554370,"byte_end":554384,"line_start":1875,"line_end":1875,"column_start":12,"column_end":26},"name":"set_row_height","qualname":"<Ui>::set_row_height","value":"pub fn set_row_height(&mut Self, f32)","parent":null,"children":[],"decl_id":null,"docs":" Set row height in horizontal wrapping layout.\n","sig":null,"attributes":[{"value":"/ Set row height in horizontal wrapping layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554309,"byte_end":554358,"line_start":1874,"line_end":1874,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554769,"byte_end":554776,"line_start":1890,"line_end":1890,"column_start":12,"column_end":19},"name":"columns","qualname":"<Ui>::columns","value":"pub fn columns<R, impl FnOnce(&mut [Self]) -> R: FnOnce(&mut [Self]) ->\n               R>(&mut Self, usize, impl FnOnce(&mut [Self]) -> R) -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily split split an Ui into several columns.","sig":null,"attributes":[{"value":"/ Temporarily split split an Ui into several columns.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554466,"byte_end":554521,"line_start":1879,"line_end":1879,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554526,"byte_end":554529,"line_start":1880,"line_end":1880,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554534,"byte_end":554541,"line_start":1881,"line_end":1881,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554546,"byte_end":554578,"line_start":1882,"line_end":1882,"column_start":5,"column_end":37}},{"value":"/ ui.columns(2, |columns| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554583,"byte_end":554612,"line_start":1883,"line_end":1883,"column_start":5,"column_end":34}},{"value":"/     columns[0].label(\"First column\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554617,"byte_end":554658,"line_start":1884,"line_end":1884,"column_start":5,"column_end":46}},{"value":"/     columns[1].label(\"Second column\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554663,"byte_end":554705,"line_start":1885,"line_end":1885,"column_start":5,"column_end":47}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554710,"byte_end":554717,"line_start":1886,"line_end":1886,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554722,"byte_end":554731,"line_start":1887,"line_end":1887,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554736,"byte_end":554743,"line_start":1888,"line_end":1888,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":554748,"byte_end":554757,"line_start":1889,"line_end":1889,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":556808,"byte_end":556818,"line_start":1943,"line_end":1943,"column_start":12,"column_end":22},"name":"close_menu","qualname":"<Ui>::close_menu","value":"pub fn close_menu(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close the menu we are in (including submenus), if any.","sig":null,"attributes":[{"value":"/ Close the menu we are in (including submenus), if any.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":556658,"byte_end":556716,"line_start":1940,"line_end":1940,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":556721,"byte_end":556724,"line_start":1941,"line_end":1941,"column_start":5,"column_end":8}},{"value":"/ See also: [`Self::menu_button`] and [`Response::context_menu`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":556729,"byte_end":556796,"line_start":1942,"line_end":1942,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557815,"byte_end":557826,"line_start":1976,"line_end":1976,"column_start":12,"column_end":23},"name":"menu_button","qualname":"<Ui>::menu_button","value":"pub fn menu_button<R, impl Into<WidgetText>: Into<WidgetText>,\n                   impl FnOnce(&mut Ui) -> R: FnOnce(&mut Ui) ->\n                   R>(&mut Self, impl Into<WidgetText>,\n                      impl FnOnce(&mut Ui) -> R) -> InnerResponse<Option<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a menu button that when clicked will show the given menu.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557232,"byte_end":557241,"line_start":1958,"line_end":1958,"column_start":5,"column_end":14}},{"value":"/ Create a menu button that when clicked will show the given menu.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557246,"byte_end":557314,"line_start":1959,"line_end":1959,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557319,"byte_end":557322,"line_start":1960,"line_end":1960,"column_start":5,"column_end":8}},{"value":"/ If called from within a menu this will instead create a button for a sub-menu.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557327,"byte_end":557409,"line_start":1961,"line_end":1961,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557414,"byte_end":557417,"line_start":1962,"line_end":1962,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557422,"byte_end":557429,"line_start":1963,"line_end":1963,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557434,"byte_end":557466,"line_start":1964,"line_end":1964,"column_start":5,"column_end":37}},{"value":"/ ui.menu_button(\"My menu\", |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557471,"byte_end":557507,"line_start":1965,"line_end":1965,"column_start":5,"column_end":41}},{"value":"/     ui.menu_button(\"My sub-menu\", |ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557512,"byte_end":557556,"line_start":1966,"line_end":1966,"column_start":5,"column_end":49}},{"value":"/         if ui.button(\"Close the menu\").clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557561,"byte_end":557615,"line_start":1967,"line_end":1967,"column_start":5,"column_end":59}},{"value":"/             ui.close_menu();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557620,"byte_end":557652,"line_start":1968,"line_end":1968,"column_start":5,"column_end":37}},{"value":"/         }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557657,"byte_end":557670,"line_start":1969,"line_end":1969,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557675,"byte_end":557686,"line_start":1970,"line_end":1970,"column_start":5,"column_end":16}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557691,"byte_end":557698,"line_start":1971,"line_end":1971,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557703,"byte_end":557712,"line_start":1972,"line_end":1972,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557717,"byte_end":557724,"line_start":1973,"line_end":1973,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557729,"byte_end":557732,"line_start":1974,"line_end":1974,"column_start":5,"column_end":8}},{"value":"/ See also: [`Self::close_menu`] and [`Response::context_menu`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":557737,"byte_end":557803,"line_start":1975,"line_end":1975,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2307},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":558376,"byte_end":558394,"line_start":1994,"line_end":1994,"column_start":12,"column_end":30},"name":"debug_paint_cursor","qualname":"<Ui>::debug_paint_cursor","value":"pub fn debug_paint_cursor(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Shows where the next widget is going to be placed\n","sig":null,"attributes":[{"value":"/ Shows where the next widget is going to be placed","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":558311,"byte_end":558364,"line_start":1993,"line_end":1993,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":558653,"byte_end":558667,"line_start":2000,"line_end":2000,"column_start":12,"column_end":26},"name":"trace_location","qualname":"<Ui>::trace_location","value":"pub fn trace_location<impl ToString: ToString>(&Self, impl ToString)","parent":null,"children":[],"decl_id":null,"docs":" Shows the given text where the next widget is to be placed\n if when [`Context::set_debug_on_hover`] has been turned on and the mouse is hovering the Ui.\n","sig":null,"attributes":[{"value":"/ Shows the given text where the next widget is to be placed","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":558478,"byte_end":558540,"line_start":1998,"line_end":1998,"column_start":5,"column_end":67}},{"value":"/ if when [`Context::set_debug_on_hover`] has been turned on and the mouse is hovering the Ui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":558545,"byte_end":558641,"line_start":1999,"line_end":1999,"column_start":5,"column_end":101}}]},{"kind":"Mod","id":{"krate":0,"index":2310},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\mod.rs","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2358},{"krate":0,"index":2377},{"krate":0,"index":2417},{"krate":0,"index":2514},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2540}],"decl_id":null,"docs":" Miscellaneous tools used by the rest of egui.\n","sig":null,"attributes":[{"value":"/ Miscellaneous tools used by the rest of egui.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\mod.rs","byte_start":558932,"byte_end":558981,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":2311},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cache","qualname":"::util::cache","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","parent":null,"children":[{"krate":0,"index":2312},{"krate":0,"index":2316},{"krate":0,"index":2322},{"krate":0,"index":2326},{"krate":0,"index":2332},{"krate":0,"index":2337},{"krate":0,"index":2341},{"krate":0,"index":5870},{"krate":0,"index":5872},{"krate":0,"index":2347},{"krate":0,"index":2354},{"krate":0,"index":2356}],"decl_id":null,"docs":" Computing the same thing each frame can be expensive,\n so often you want to save the result from the previous frame and reuse it.","sig":null,"attributes":[{"value":"/ Computing the same thing each frame can be expensive,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559178,"byte_end":559235,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/ so often you want to save the result from the previous frame and reuse it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559236,"byte_end":559314,"line_start":2,"line_end":2,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559315,"byte_end":559318,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Enter [`FrameCache`]: it caches the results of a computation for one frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559319,"byte_end":559398,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ If it is still used next frame, it is not recomputed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559399,"byte_end":559456,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ If it is not used next frame, it is evicted from the cache to save memory.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559457,"byte_end":559535,"line_start":6,"line_end":6,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":2312},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559665,"byte_end":559676,"line_start":10,"line_end":10,"column_start":11,"column_end":22},"name":"ComputerMut","qualname":"::util::cache::ComputerMut","value":"ComputerMut<Key, Value>: 'static + Send + Sync","parent":null,"children":[{"krate":0,"index":2315}],"decl_id":null,"docs":" Something that does an expensive computation that we want to cache\n to save us from recomputing it each frame.\n","sig":null,"attributes":[{"value":"/ Something that does an expensive computation that we want to cache","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559537,"byte_end":559607,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ to save us from recomputing it each frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559608,"byte_end":559654,"line_start":9,"line_end":9,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2315},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559721,"byte_end":559728,"line_start":11,"line_end":11,"column_start":8,"column_end":15},"name":"compute","qualname":"::util::cache::ComputerMut::compute","value":"pub fn compute(&mut Self, Key) -> Value","parent":{"krate":0,"index":2312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559966,"byte_end":559976,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"FrameCache","qualname":"::util::cache::FrameCache","value":"FrameCache {  }","parent":null,"children":[{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321}],"decl_id":null,"docs":" Caches the results of a computation for one frame.\n If it is still used next frame, it is not recomputed.\n If it is not used next frame, it is evicted from the cache to save memory.\n","sig":null,"attributes":[{"value":"/ Caches the results of a computation for one frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559763,"byte_end":559817,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/ If it is still used next frame, it is not recomputed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559818,"byte_end":559875,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/ If it is not used next frame, it is evicted from the cache to save memory.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559876,"byte_end":559954,"line_start":16,"line_end":16,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560328,"byte_end":560331,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameCache<Value, Computer>>::new","value":"pub fn new(Computer) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560551,"byte_end":560562,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"name":"evice_cache","qualname":"<FrameCache<Value, Computer>>::evice_cache","value":"pub fn evice_cache(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Must be called once per frame to clear the cache.\n","sig":null,"attributes":[{"value":"/ Must be called once per frame to clear the cache.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560486,"byte_end":560539,"line_start":41,"line_end":41,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":561006,"byte_end":561009,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"get","qualname":"<FrameCache<Value, Computer>>::get","value":"pub fn get<Key>(&mut Self, Key) -> Value where Key: Copy + std::hash::Hash,\nValue: Clone, Computer: ComputerMut<Key, Value>","parent":null,"children":[],"decl_id":null,"docs":" Get from cache (if the same key was used last frame)\n or recompute and store in the cache.\n","sig":null,"attributes":[{"value":"/ Get from cache (if the same key was used last frame)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560893,"byte_end":560949,"line_start":52,"line_end":52,"column_start":5,"column_end":61}},{"value":"/ or recompute and store in the cache.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560954,"byte_end":560994,"line_start":53,"line_end":53,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":561742,"byte_end":561752,"line_start":78,"line_end":78,"column_start":11,"column_end":21},"name":"CacheTrait","qualname":"::util::cache::CacheTrait","value":"CacheTrait: 'static + Send + Sync","parent":null,"children":[{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":561693,"byte_end":561731,"line_start":77,"line_end":77,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":561829,"byte_end":561835,"line_start":80,"line_end":80,"column_start":8,"column_end":14},"name":"update","qualname":"::util::cache::CacheTrait::update","value":"pub fn update(&mut Self)","parent":{"krate":0,"index":2337},"children":[],"decl_id":null,"docs":" Call once per frame to evict cache.\n","sig":null,"attributes":[{"value":"/ Call once per frame to evict cache.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":561782,"byte_end":561821,"line_start":79,"line_end":79,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":561905,"byte_end":561908,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"len","qualname":"::util::cache::CacheTrait::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":2337},"children":[],"decl_id":null,"docs":" Number of values currently in the cache.\n","sig":null,"attributes":[{"value":"/ Number of values currently in the cache.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":561853,"byte_end":561897,"line_start":82,"line_end":82,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":561934,"byte_end":561944,"line_start":85,"line_end":85,"column_start":8,"column_end":18},"name":"as_any_mut","qualname":"::util::cache::CacheTrait::as_any_mut","value":"pub fn as_any_mut(&mut Self) -> &mut dyn std::any::Any","parent":{"krate":0,"index":2337},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5870},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562845,"byte_end":562857,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"CacheStorage","qualname":"::util::cache::CacheStorage","value":"CacheStorage {  }","parent":null,"children":[{"krate":0,"index":5871}],"decl_id":null,"docs":" ```\n use egui::util::cache::{CacheStorage, ComputerMut, FrameCache};","sig":null,"attributes":[{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562305,"byte_end":562312,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/ use egui::util::cache::{CacheStorage, ComputerMut, FrameCache};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562313,"byte_end":562380,"line_start":105,"line_end":105,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562381,"byte_end":562384,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[derive(Default)]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562385,"byte_end":562407,"line_start":107,"line_end":107,"column_start":1,"column_end":23}},{"value":"/ struct CharCounter {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562408,"byte_end":562433,"line_start":108,"line_end":108,"column_start":1,"column_end":26}},{"value":"/ impl ComputerMut<&str, usize> for CharCounter {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562434,"byte_end":562485,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/     fn compute(&mut self, s: &str) -> usize {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562486,"byte_end":562535,"line_start":110,"line_end":110,"column_start":1,"column_end":50}},{"value":"/         s.chars().count()","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562536,"byte_end":562565,"line_start":111,"line_end":111,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562566,"byte_end":562575,"line_start":112,"line_end":112,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562576,"byte_end":562581,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ type CharCountCache<'a> = FrameCache<usize, CharCounter>;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562582,"byte_end":562643,"line_start":114,"line_end":114,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562644,"byte_end":562647,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # let mut cache_storage = CacheStorage::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562648,"byte_end":562702,"line_start":116,"line_end":116,"column_start":1,"column_end":55}},{"value":"/ let mut cache = cache_storage.cache::<CharCountCache<'_>>();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562703,"byte_end":562767,"line_start":117,"line_end":117,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(cache.get(\"hello\"), 5);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562768,"byte_end":562806,"line_start":118,"line_end":118,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562807,"byte_end":562814,"line_start":119,"line_end":119,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562962,"byte_end":562967,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"cache","qualname":"<CacheStorage>::cache","value":"pub fn cache<FrameCache: CacheTrait + Default>(&mut Self) -> &mut FrameCache","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":563468,"byte_end":563474,"line_start":141,"line_end":141,"column_start":12,"column_end":18},"name":"update","qualname":"<CacheStorage>::update","value":"pub fn update(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Call once per frame to evict cache.\n","sig":null,"attributes":[{"value":"/ Call once per frame to evict cache.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":563417,"byte_end":563456,"line_start":140,"line_end":140,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":5884},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565869,"byte_end":565876,"line_start":19,"line_end":19,"column_start":12,"column_end":19},"name":"History","qualname":"::util::history::History","value":"History {  }","parent":null,"children":[{"krate":0,"index":5886},{"krate":0,"index":5887},{"krate":0,"index":5888},{"krate":0,"index":5889},{"krate":0,"index":5890}],"decl_id":null,"docs":" This struct tracks recent values of some time series.","sig":null,"attributes":[{"value":"/ This struct tracks recent values of some time series.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565115,"byte_end":565172,"line_start":3,"line_end":3,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565173,"byte_end":565176,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It can be used as a smoothing filter for e.g. latency, fps etc,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565177,"byte_end":565244,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ or to show a log or graph of recent events.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565245,"byte_end":565292,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565293,"byte_end":565296,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ It has a minimum and maximum length, as well as a maximum storage time.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565297,"byte_end":565372,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ * The minimum length is to ensure you have enough data for an estimate.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565373,"byte_end":565448,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ * The maximum length is to make sure the history doesn't take up too much space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565449,"byte_end":565533,"line_start":10,"line_end":10,"column_start":1,"column_end":85}},{"value":"/ * The maximum age is to make sure the estimate isn't outdated.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565534,"byte_end":565600,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565601,"byte_end":565604,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Time difference between values can be zero, but never negative.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565605,"byte_end":565672,"line_start":13,"line_end":13,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565673,"byte_end":565676,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This can be used for things like smoothed averages (for e.g. FPS)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565677,"byte_end":565746,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ or for smoothed velocity (e.g. mouse pointer speed).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565747,"byte_end":565803,"line_start":16,"line_end":16,"column_start":1,"column_end":57}},{"value":"/ All times are in seconds.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":565804,"byte_end":565833,"line_start":17,"line_end":17,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2383},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566898,"byte_end":566901,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<History<T>>::new","value":"pub fn new(std::ops::Range<usize>, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Example:\n ```\n # use egui::util::History;\n # fn now() -> f64 { 0.0 }\n // Drop events that are older than one second,\n // as long we keep at least two events. Never keep more than a hundred events.\n let mut history = History::new(2..100, 1.0);\n assert_eq!(history.average(), None);\n history.add(now(), 40.0_f32);\n history.add(now(), 44.0_f32);\n assert_eq!(history.average(), Some(42.0));\n ```\n","sig":null,"attributes":[{"value":"/ Example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566414,"byte_end":566426,"line_start":42,"line_end":42,"column_start":5,"column_end":17}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566431,"byte_end":566438,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ # use egui::util::History;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566443,"byte_end":566473,"line_start":44,"line_end":44,"column_start":5,"column_end":35}},{"value":"/ # fn now() -> f64 { 0.0 }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566478,"byte_end":566507,"line_start":45,"line_end":45,"column_start":5,"column_end":34}},{"value":"/ // Drop events that are older than one second,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566512,"byte_end":566562,"line_start":46,"line_end":46,"column_start":5,"column_end":55}},{"value":"/ // as long we keep at least two events. Never keep more than a hundred events.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566567,"byte_end":566649,"line_start":47,"line_end":47,"column_start":5,"column_end":87}},{"value":"/ let mut history = History::new(2..100, 1.0);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566654,"byte_end":566702,"line_start":48,"line_end":48,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(history.average(), None);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566707,"byte_end":566747,"line_start":49,"line_end":49,"column_start":5,"column_end":45}},{"value":"/ history.add(now(), 40.0_f32);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566752,"byte_end":566785,"line_start":50,"line_end":50,"column_start":5,"column_end":38}},{"value":"/ history.add(now(), 44.0_f32);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566790,"byte_end":566823,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(history.average(), Some(42.0));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566828,"byte_end":566874,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566879,"byte_end":566886,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567190,"byte_end":567197,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"max_len","qualname":"<History<T>>::max_len","value":"pub fn max_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567169,"byte_end":567178,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2385},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567269,"byte_end":567276,"line_start":70,"line_end":70,"column_start":12,"column_end":19},"name":"max_age","qualname":"<History<T>>::max_age","value":"pub fn max_age(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567248,"byte_end":567257,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567346,"byte_end":567354,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<History<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567325,"byte_end":567334,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2387},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567484,"byte_end":567487,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"len","qualname":"<History<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Current number of values kept in history\n","sig":null,"attributes":[{"value":"/ Current number of values kept in history","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567414,"byte_end":567458,"line_start":79,"line_end":79,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567463,"byte_end":567472,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567680,"byte_end":567691,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"total_count","qualname":"<History<T>>::total_count","value":"pub fn total_count(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Total number of values seen.\n Includes those that have been discarded due to `max_len` or `max_age`.\n","sig":null,"attributes":[{"value":"/ Total number of values seen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567543,"byte_end":567575,"line_start":85,"line_end":85,"column_start":5,"column_end":37}},{"value":"/ Includes those that have been discarded due to `max_len` or `max_age`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567580,"byte_end":567654,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567659,"byte_end":567668,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2389},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567751,"byte_end":567757,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"latest","qualname":"<History<T>>::latest","value":"pub fn latest(&Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2391},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567850,"byte_end":567860,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"latest_mut","qualname":"<History<T>>::latest_mut","value":"pub fn latest_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":568035,"byte_end":568043,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"duration","qualname":"<History<T>>::duration","value":"pub fn duration(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Amount of time contained from start to end in this `History`.\n","sig":null,"attributes":[{"value":"/ Amount of time contained from start to end in this `History`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":567958,"byte_end":568023,"line_start":100,"line_end":100,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":568375,"byte_end":568379,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"iter","qualname":"<History<T>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" `(time, value)` pairs\n Time difference between values can be zero, but never negative.\n","sig":null,"attributes":[{"value":"/ `(time, value)` pairs","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":568239,"byte_end":568264,"line_start":109,"line_end":109,"column_start":5,"column_end":30}},{"value":"/ Time difference between values can be zero, but never negative.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":568269,"byte_end":568336,"line_start":110,"line_end":110,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":568522,"byte_end":568528,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"name":"values","qualname":"<History<T>>::values","value":"pub fn values(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":568670,"byte_end":568675,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"clear","qualname":"<History<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":568649,"byte_end":568658,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":568831,"byte_end":568834,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"add","qualname":"<History<T>>::add","value":"pub fn add(&mut Self, f64, T)","parent":null,"children":[],"decl_id":null,"docs":" Values must be added with a monotonically increasing time, or at least not decreasing.\n","sig":null,"attributes":[{"value":"/ Values must be added with a monotonically increasing time, or at least not decreasing.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":568729,"byte_end":568819,"line_start":125,"line_end":125,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":569204,"byte_end":569222,"line_start":136,"line_end":136,"column_start":12,"column_end":30},"name":"mean_time_interval","qualname":"<History<T>>::mean_time_interval","value":"pub fn mean_time_interval(&Self) -> Option<f32>","parent":null,"children":[],"decl_id":null,"docs":" Mean time difference between values in this `History`.\n","sig":null,"attributes":[{"value":"/ Mean time difference between values in this `History`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":569134,"byte_end":569192,"line_start":135,"line_end":135,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":569616,"byte_end":569620,"line_start":150,"line_end":150,"column_start":12,"column_end":16},"name":"rate","qualname":"<History<T>>::rate","value":"pub fn rate(&Self) -> Option<f32>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":569761,"byte_end":569766,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"name":"flush","qualname":"<History<T>>::flush","value":"pub fn flush(&mut Self, f64)","parent":null,"children":[],"decl_id":null,"docs":" Remove samples that are too old.\n","sig":null,"attributes":[{"value":"/ Remove samples that are too old.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":569713,"byte_end":569749,"line_start":154,"line_end":154,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570382,"byte_end":570385,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"sum","qualname":"<History<T>>::sum","value":"pub fn sum(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570361,"byte_end":570370,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570446,"byte_end":570453,"line_start":184,"line_end":184,"column_start":12,"column_end":19},"name":"average","qualname":"<History<T>>::average","value":"pub fn average(&Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570942,"byte_end":570951,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"bandwidth","qualname":"<History<T>>::bandwidth","value":"pub fn bandwidth(&Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Average times rate.\n If you are keeping track of individual sizes of things (e.g. bytes),\n this will estimate the bandwidth (bytes per second).\n","sig":null,"attributes":[{"value":"/ Average times rate.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570769,"byte_end":570792,"line_start":201,"line_end":201,"column_start":5,"column_end":28}},{"value":"/ If you are keeping track of individual sizes of things (e.g. bytes),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570797,"byte_end":570869,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ this will estimate the bandwidth (bytes per second).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570874,"byte_end":570930,"line_start":203,"line_end":203,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":571334,"byte_end":571342,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"velocity","qualname":"<History<T>>::velocity","value":"pub fn velocity(&Self) -> Option<Vel>","parent":null,"children":[],"decl_id":null,"docs":" Calculate a smooth velocity (per second) over the entire time span.\n Calculated as the last value minus the first value over the elapsed time between them.\n","sig":null,"attributes":[{"value":"/ Calculate a smooth velocity (per second) over the entire time span.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":571156,"byte_end":571227,"line_start":215,"line_end":215,"column_start":5,"column_end":76}},{"value":"/ Calculated as the last value minus the first value over the elapsed time between them.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":571232,"byte_end":571322,"line_start":216,"line_end":216,"column_start":5,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"id_type_map","qualname":"::util::id_type_map","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","parent":null,"children":[{"krate":0,"index":2418},{"krate":0,"index":2421},{"krate":0,"index":5897},{"krate":0,"index":5900},{"krate":0,"index":5902},{"krate":0,"index":5903},{"krate":0,"index":5905},{"krate":0,"index":5906},{"krate":0,"index":5908},{"krate":0,"index":5909},{"krate":0,"index":5912},{"krate":0,"index":2424},{"krate":0,"index":2428},{"krate":0,"index":2430},{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2446},{"krate":0,"index":2464},{"krate":0,"index":5915},{"krate":0,"index":5918},{"krate":0,"index":5920},{"krate":0,"index":5922},{"krate":0,"index":2467},{"krate":0,"index":2513}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5897},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":572351,"byte_end":572357,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"TypeId","qualname":"::util::id_type_map::TypeId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Like [`std::any::TypeId`], but can be serialized and deserialized.\n","sig":null,"attributes":[{"value":"/ Like [`std::any::TypeId`], but can be serialized and deserialized.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":572135,"byte_end":572205,"line_start":11,"line_end":11,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":572404,"byte_end":572406,"line_start":18,"line_end":18,"column_start":12,"column_end":14},"name":"of","qualname":"<TypeId>::of","value":"pub fn of<T: Any + 'static>() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":572383,"byte_end":572392,"line_start":17,"line_end":17,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":573189,"byte_end":573204,"line_start":50,"line_end":50,"column_start":11,"column_end":26},"name":"SerializableAny","qualname":"::util::id_type_map::SerializableAny","value":"SerializableAny: 'static + Any + Clone + for<'a> Send + Sync","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"persistence\"))","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":573142,"byte_end":573178,"line_start":49,"line_end":49,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5915},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582935,"byte_end":582944,"line_start":335,"line_end":335,"column_start":12,"column_end":21},"name":"IdTypeMap","qualname":"::util::id_type_map::IdTypeMap","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stores values identified by an [`Id`] AND a the [`std::any::TypeId`] of the value.","sig":null,"attributes":[{"value":"/ Stores values identified by an [`Id`] AND a the [`std::any::TypeId`] of the value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581320,"byte_end":581406,"line_start":296,"line_end":296,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581407,"byte_end":581410,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ In other words, it maps `(Id, TypeId)` to any value you want.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581411,"byte_end":581476,"line_start":298,"line_end":298,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581477,"byte_end":581480,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ Values are cloned when read, so keep them small and light.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581481,"byte_end":581543,"line_start":300,"line_end":300,"column_start":1,"column_end":63}},{"value":"/ If you want to store something bigger, wrap them in `Arc<Mutex<…>>`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581544,"byte_end":581618,"line_start":301,"line_end":301,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581619,"byte_end":581622,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ Values can either be \"persisted\" (serializable) or \"temporary\" (cleared when egui is shut down).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581623,"byte_end":581723,"line_start":303,"line_end":303,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581724,"byte_end":581727,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ You can store state using the key [`Id::null`]. The state will then only be identified by its type.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581728,"byte_end":581831,"line_start":305,"line_end":305,"column_start":1,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581832,"byte_end":581835,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581836,"byte_end":581843,"line_start":307,"line_end":307,"column_start":1,"column_end":8}},{"value":"/ # use egui::{Id, util::IdTypeMap};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581844,"byte_end":581882,"line_start":308,"line_end":308,"column_start":1,"column_end":39}},{"value":"/ let a = Id::new(\"a\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581883,"byte_end":581908,"line_start":309,"line_end":309,"column_start":1,"column_end":26}},{"value":"/ let b = Id::new(\"b\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581909,"byte_end":581934,"line_start":310,"line_end":310,"column_start":1,"column_end":26}},{"value":"/ let mut map: IdTypeMap = Default::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581935,"byte_end":581983,"line_start":311,"line_end":311,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581984,"byte_end":581987,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ // `a` associated with an f64 and an i32","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":581988,"byte_end":582032,"line_start":313,"line_end":313,"column_start":1,"column_end":45}},{"value":"/ map.insert_persisted(a, 3.14);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582033,"byte_end":582067,"line_start":314,"line_end":314,"column_start":1,"column_end":35}},{"value":"/ map.insert_temp(a, 42);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582068,"byte_end":582095,"line_start":315,"line_end":315,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582096,"byte_end":582099,"line_start":316,"line_end":316,"column_start":1,"column_end":4}},{"value":"/ // `b` associated with an f64 and a `&'static str`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582100,"byte_end":582154,"line_start":317,"line_end":317,"column_start":1,"column_end":55}},{"value":"/ map.insert_persisted(b, 13.37);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582155,"byte_end":582190,"line_start":318,"line_end":318,"column_start":1,"column_end":36}},{"value":"/ map.insert_temp(b, \"Hello World\".to_string());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582191,"byte_end":582241,"line_start":319,"line_end":319,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582242,"byte_end":582245,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ // we can retrieve all four values:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582246,"byte_end":582285,"line_start":321,"line_end":321,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(map.get_temp::<f64>(a), Some(3.14));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582286,"byte_end":582337,"line_start":322,"line_end":322,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(map.get_temp::<i32>(a), Some(42));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582338,"byte_end":582387,"line_start":323,"line_end":323,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(map.get_temp::<f64>(b), Some(13.37));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582388,"byte_end":582440,"line_start":324,"line_end":324,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(map.get_temp::<String>(b), Some(\"Hello World\".to_string()));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582441,"byte_end":582516,"line_start":325,"line_end":325,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582517,"byte_end":582520,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ // we can retrieve them like so also:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582521,"byte_end":582562,"line_start":327,"line_end":327,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(map.get_persisted::<f64>(a), Some(3.14));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582563,"byte_end":582619,"line_start":328,"line_end":328,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(map.get_persisted::<i32>(a), Some(42));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582620,"byte_end":582674,"line_start":329,"line_end":329,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(map.get_persisted::<f64>(b), Some(13.37));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582675,"byte_end":582732,"line_start":330,"line_end":330,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(map.get_temp::<String>(b), Some(\"Hello World\".to_string()));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582733,"byte_end":582808,"line_start":331,"line_end":331,"column_start":1,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582809,"byte_end":582816,"line_start":332,"line_end":332,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583077,"byte_end":583088,"line_start":340,"line_end":340,"column_start":12,"column_end":23},"name":"insert_temp","qualname":"<IdTypeMap>::insert_temp","value":"pub fn insert_temp<T: 'static + Any + Clone + Send + Sync>(&mut Self, Id, T)","parent":null,"children":[],"decl_id":null,"docs":" Insert a value that will not be persisted.\n","sig":null,"attributes":[{"value":"/ Insert a value that will not be persisted.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583005,"byte_end":583051,"line_start":338,"line_end":338,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583056,"byte_end":583065,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583370,"byte_end":583386,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"insert_persisted","qualname":"<IdTypeMap>::insert_persisted","value":"pub fn insert_persisted<T: SerializableAny>(&mut Self, Id, T)","parent":null,"children":[],"decl_id":null,"docs":" Insert a value that will be persisted next time you start the app.\n","sig":null,"attributes":[{"value":"/ Insert a value that will be persisted next time you start the app.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583274,"byte_end":583344,"line_start":345,"line_end":345,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583349,"byte_end":583358,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583737,"byte_end":583745,"line_start":356,"line_end":356,"column_start":12,"column_end":20},"name":"get_temp","qualname":"<IdTypeMap>::get_temp","value":"pub fn get_temp<T: 'static + Clone>(&mut Self, Id) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Read a value without trying to deserialize a persisted value.","sig":null,"attributes":[{"value":"/ Read a value without trying to deserialize a persisted value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583557,"byte_end":583622,"line_start":352,"line_end":352,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583627,"byte_end":583630,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ The call clones the value (if found), so make sure it is cheap to clone!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583635,"byte_end":583711,"line_start":354,"line_end":354,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583716,"byte_end":583725,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":584142,"byte_end":584155,"line_start":368,"line_end":368,"column_start":12,"column_end":25},"name":"get_persisted","qualname":"<IdTypeMap>::get_persisted","value":"pub fn get_persisted<T: SerializableAny>(&mut Self, Id) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Read a value, optionally deserializing it if available.","sig":null,"attributes":[{"value":"/ Read a value, optionally deserializing it if available.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":583968,"byte_end":584027,"line_start":364,"line_end":364,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":584032,"byte_end":584035,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ The call clones the value (if found), so make sure it is cheap to clone!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":584040,"byte_end":584116,"line_start":366,"line_end":366,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":584121,"byte_end":584130,"line_start":367,"line_end":367,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":584404,"byte_end":584419,"line_start":377,"line_end":377,"column_start":12,"column_end":27},"name":"get_temp_mut_or","qualname":"<IdTypeMap>::get_temp_mut_or","value":"pub fn get_temp_mut_or<T: 'static + Any + Clone + Send +\n                       Sync>(&mut Self, Id, T) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":584383,"byte_end":584392,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":584627,"byte_end":584647,"line_start":386,"line_end":386,"column_start":12,"column_end":32},"name":"get_persisted_mut_or","qualname":"<IdTypeMap>::get_persisted_mut_or","value":"pub fn get_persisted_mut_or<T: SerializableAny>(&mut Self, Id, T) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":584606,"byte_end":584615,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":584809,"byte_end":584832,"line_start":391,"line_end":391,"column_start":12,"column_end":35},"name":"get_temp_mut_or_default","qualname":"<IdTypeMap>::get_temp_mut_or_default","value":"pub fn get_temp_mut_or_default<T: 'static + Any + Clone + Send + Sync +\n                               Default>(&mut Self, Id) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":584788,"byte_end":584797,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":585032,"byte_end":585060,"line_start":399,"line_end":399,"column_start":12,"column_end":40},"name":"get_persisted_mut_or_default","qualname":"<IdTypeMap>::get_persisted_mut_or_default","value":"pub fn get_persisted_mut_or_default<T: SerializableAny +\n                                    Default>(&mut Self, Id) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":585011,"byte_end":585020,"line_start":398,"line_end":398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":585208,"byte_end":585235,"line_start":403,"line_end":403,"column_start":12,"column_end":39},"name":"get_temp_mut_or_insert_with","qualname":"<IdTypeMap>::get_temp_mut_or_insert_with","value":"pub fn get_temp_mut_or_insert_with<T: 'static + Any + Clone + Send + Sync,\n                                   impl FnOnce() -> T: FnOnce() ->\n                                   T>(&mut Self, Id, impl FnOnce() -> T)\n-> &mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":585898,"byte_end":585930,"line_start":421,"line_end":421,"column_start":12,"column_end":44},"name":"get_persisted_mut_or_insert_with","qualname":"<IdTypeMap>::get_persisted_mut_or_insert_with","value":"pub fn get_persisted_mut_or_insert_with<T: SerializableAny,\n                                        impl FnOnce() -> T: FnOnce() ->\n                                        T>(&mut Self, Id, impl FnOnce() -> T)\n-> &mut T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":586650,"byte_end":586656,"line_start":441,"line_end":441,"column_start":12,"column_end":18},"name":"remove","qualname":"<IdTypeMap>::remove","value":"pub fn remove<T: 'static>(&mut Self, Id)","parent":null,"children":[],"decl_id":null,"docs":" Remove the state of this type an id.\n","sig":null,"attributes":[{"value":"/ Remove the state of this type an id.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":586584,"byte_end":586624,"line_start":439,"line_end":439,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":586629,"byte_end":586638,"line_start":440,"line_end":440,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":586828,"byte_end":586842,"line_start":447,"line_end":447,"column_start":12,"column_end":26},"name":"remove_by_type","qualname":"<IdTypeMap>::remove_by_type","value":"pub fn remove_by_type<T: 'static>(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Note all state of the given type.\n","sig":null,"attributes":[{"value":"/ Note all state of the given type.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":586779,"byte_end":586816,"line_start":446,"line_end":446,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587044,"byte_end":587049,"line_start":456,"line_end":456,"column_start":12,"column_end":17},"name":"clear","qualname":"<IdTypeMap>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587023,"byte_end":587032,"line_start":455,"line_end":455,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587119,"byte_end":587127,"line_start":461,"line_end":461,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IdTypeMap>::is_empty","value":"pub fn is_empty(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587098,"byte_end":587107,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587207,"byte_end":587210,"line_start":466,"line_end":466,"column_start":12,"column_end":15},"name":"len","qualname":"<IdTypeMap>::len","value":"pub fn len(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587186,"byte_end":587195,"line_start":465,"line_end":465,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587353,"byte_end":587369,"line_start":472,"line_end":472,"column_start":12,"column_end":28},"name":"count_serialized","qualname":"<IdTypeMap>::count_serialized","value":"pub fn count_serialized(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count how many values are stored but not yet deserialized.\n","sig":null,"attributes":[{"value":"/ Count how many values are stored but not yet deserialized.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587265,"byte_end":587327,"line_start":470,"line_end":470,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587332,"byte_end":587341,"line_start":471,"line_end":471,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587600,"byte_end":587605,"line_start":480,"line_end":480,"column_start":12,"column_end":17},"name":"count","qualname":"<IdTypeMap>::count","value":"pub fn count<T: 'static>(&mut Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Count the number of values are stored with the given type.\n","sig":null,"attributes":[{"value":"/ Count the number of values are stored with the given type.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":587526,"byte_end":587588,"line_start":479,"line_end":479,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":2514},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"undoer","qualname":"::util::undoer","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","parent":null,"children":[{"krate":0,"index":2515},{"krate":0,"index":5924},{"krate":0,"index":5928},{"krate":0,"index":5930},{"krate":0,"index":5932},{"krate":0,"index":5933},{"krate":0,"index":2518},{"krate":0,"index":5936},{"krate":0,"index":5941},{"krate":0,"index":5944},{"krate":0,"index":2520},{"krate":0,"index":5947},{"krate":0,"index":5952},{"krate":0,"index":2523}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5924},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":594737,"byte_end":594745,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"Settings","qualname":"::util::undoer::Settings","value":"Settings { max_undos, stable_time, auto_save_interval }","parent":null,"children":[{"krate":0,"index":5925},{"krate":0,"index":5926},{"krate":0,"index":5927}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5925},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":594891,"byte_end":594900,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"name":"max_undos","qualname":"::util::undoer::Settings::max_undos","value":"usize","parent":{"krate":0,"index":5924},"children":[],"decl_id":null,"docs":" Maximum number of undos.\n If your state is resource intensive, you should keep this low.","sig":null,"attributes":[{"value":"/ Maximum number of undos.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":594752,"byte_end":594780,"line_start":6,"line_end":6,"column_start":5,"column_end":33}},{"value":"/ If your state is resource intensive, you should keep this low.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":594785,"byte_end":594851,"line_start":7,"line_end":7,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":594856,"byte_end":594859,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ Default: `100`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":594864,"byte_end":594882,"line_start":9,"line_end":9,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":5926},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595078,"byte_end":595089,"line_start":16,"line_end":16,"column_start":9,"column_end":20},"name":"stable_time","qualname":"::util::undoer::Settings::stable_time","value":"f32","parent":{"krate":0,"index":5924},"children":[],"decl_id":null,"docs":" When that state hasn't changed for this many seconds,\n create a new undo point (if one is needed).","sig":null,"attributes":[{"value":"/ When that state hasn't changed for this many seconds,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":594914,"byte_end":594971,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"/ create a new undo point (if one is needed).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":594976,"byte_end":595023,"line_start":13,"line_end":13,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595028,"byte_end":595031,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ Default value: `1.0` seconds.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595036,"byte_end":595069,"line_start":15,"line_end":15,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":5927},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595344,"byte_end":595362,"line_start":23,"line_end":23,"column_start":9,"column_end":27},"name":"auto_save_interval","qualname":"::util::undoer::Settings::auto_save_interval","value":"f32","parent":{"krate":0,"index":5924},"children":[],"decl_id":null,"docs":" If the state is changing so often that we never get to `stable_time`,\n then still create a save point every `auto_save_interval` seconds,\n so we have something to undo to.","sig":null,"attributes":[{"value":"/ If the state is changing so often that we never get to `stable_time`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595101,"byte_end":595174,"line_start":18,"line_end":18,"column_start":5,"column_end":78}},{"value":"/ then still create a save point every `auto_save_interval` seconds,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595179,"byte_end":595249,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ so we have something to undo to.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595254,"byte_end":595290,"line_start":20,"line_end":20,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595295,"byte_end":595298,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Default value: `30` seconds.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595303,"byte_end":595335,"line_start":22,"line_end":22,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5936},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":596376,"byte_end":596382,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"Undoer","qualname":"::util::undoer::Undoer","value":"Undoer {  }","parent":null,"children":[{"krate":0,"index":5938},{"krate":0,"index":5939},{"krate":0,"index":5940}],"decl_id":null,"docs":" Automatic undo system.","sig":null,"attributes":[{"value":"/ Automatic undo system.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595557,"byte_end":595583,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595584,"byte_end":595587,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Every frame you feed it the most recent state.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595588,"byte_end":595638,"line_start":38,"line_end":38,"column_start":1,"column_end":51}},{"value":"/ The `Undoer` compares it with the latest undo point","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595639,"byte_end":595694,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ and if there is a change it may create a new undo point.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595695,"byte_end":595755,"line_start":40,"line_end":40,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595756,"byte_end":595759,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ `Undoer` follows two simple rules:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595760,"byte_end":595798,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595799,"byte_end":595802,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ 1) If the state has changed since the latest undo point, but has","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595803,"byte_end":595871,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/    remained stable for `stable_time` seconds, an new undo point is created.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595872,"byte_end":595951,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ 2) If the state does not stabilize within `auto_save_interval` seconds, an undo point is created.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595952,"byte_end":596053,"line_start":46,"line_end":46,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":596054,"byte_end":596057,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Rule 1) will make sure an undo point is not created until you _stop_ dragging that slider.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":596058,"byte_end":596152,"line_start":48,"line_end":48,"column_start":1,"column_end":95}},{"value":"/ Rule 2) will make sure that you will get some undo points even if you are constantly changing the state.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":596153,"byte_end":596261,"line_start":49,"line_end":49,"column_start":1,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":597260,"byte_end":597268,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"has_undo","qualname":"<Undoer<State>>::has_undo","value":"pub fn has_undo(&Self, &State) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Do we have an undo point different from the given state?\n","sig":null,"attributes":[{"value":"/ Do we have an undo point different from the given state?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":597188,"byte_end":597248,"line_start":85,"line_end":85,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":597531,"byte_end":597541,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_in_flux","qualname":"<Undoer<State>>::is_in_flux","value":"pub fn is_in_flux(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if the state is currently changing\n","sig":null,"attributes":[{"value":"/ Return true if the state is currently changing","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":597469,"byte_end":597519,"line_start":94,"line_end":94,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":597605,"byte_end":597609,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"undo","qualname":"<Undoer<State>>::undo","value":"pub fn undo(&mut Self, &State) -> Option<&State>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":598140,"byte_end":598148,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"name":"add_undo","qualname":"<Undoer<State>>::add_undo","value":"pub fn add_undo(&mut Self, &State)","parent":null,"children":[],"decl_id":null,"docs":" Add an undo point if, and only if, there has been a change since the latest undo point.","sig":null,"attributes":[{"value":"/ Add an undo point if, and only if, there has been a change since the latest undo point.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":597986,"byte_end":598077,"line_start":114,"line_end":114,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":598082,"byte_end":598085,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ * `time`: current time in seconds.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":598090,"byte_end":598128,"line_start":116,"line_end":116,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":598647,"byte_end":598657,"line_start":131,"line_end":131,"column_start":12,"column_end":22},"name":"feed_state","qualname":"<Undoer<State>>::feed_state","value":"pub fn feed_state(&mut Self, f64, &State)","parent":null,"children":[],"decl_id":null,"docs":" Call this as often as you want (e.g. every frame)\n and `Undoer` will determine if a new undo point should be created.","sig":null,"attributes":[{"value":"/ Call this as often as you want (e.g. every frame)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":598448,"byte_end":598501,"line_start":127,"line_end":127,"column_start":5,"column_end":58}},{"value":"/ and `Undoer` will determine if a new undo point should be created.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":598506,"byte_end":598576,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":598581,"byte_end":598584,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ * `current_time`: current time in seconds.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":598589,"byte_end":598635,"line_start":130,"line_end":130,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5955},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601308,"byte_end":601316,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"RichText","qualname":"::widget_text::RichText","value":"RichText {  }","parent":null,"children":[{"krate":0,"index":5956},{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":5966},{"krate":0,"index":5967},{"krate":0,"index":5968}],"decl_id":null,"docs":" Text and optional style choices for it.","sig":null,"attributes":[{"value":"/ Text and optional style choices for it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":600744,"byte_end":600787,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":600788,"byte_end":600791,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The style choices (font, color) are applied to the entire text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":600792,"byte_end":600859,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ For more detailed control, use [`crate::text::LayoutJob`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":600860,"byte_end":600930,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":600931,"byte_end":600934,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A `RichText` can be used in most widgets and helper functions, e.g. [`Ui::label`] and [`Ui::button`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":600935,"byte_end":601040,"line_start":13,"line_end":13,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601041,"byte_end":601044,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ### Example","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601045,"byte_end":601060,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601061,"byte_end":601068,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use egui::{RichText, Color32};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601069,"byte_end":601103,"line_start":17,"line_end":17,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601104,"byte_end":601107,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ RichText::new(\"Plain\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601108,"byte_end":601135,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"/ RichText::new(\"colored\").color(Color32::RED);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601136,"byte_end":601185,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ RichText::new(\"Large and underlined\").size(20.0).underline();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601186,"byte_end":601251,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601252,"byte_end":601259,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602164,"byte_end":602167,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<RichText>::new","value":"pub fn new<impl Into<String>: Into<String>>(impl Into<String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602143,"byte_end":602152,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602324,"byte_end":602332,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RichText>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602303,"byte_end":602312,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602411,"byte_end":602415,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"text","qualname":"<RichText>::text","value":"pub fn text(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602390,"byte_end":602399,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602586,"byte_end":602590,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"size","qualname":"<RichText>::size","value":"pub fn size(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Select the font size (in points).\n This overrides the value from [`Self::text_style`].\n","sig":null,"attributes":[{"value":"/ Select the font size (in points).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602463,"byte_end":602500,"line_start":87,"line_end":87,"column_start":5,"column_end":42}},{"value":"/ This overrides the value from [`Self::text_style`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602505,"byte_end":602560,"line_start":88,"line_end":88,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602565,"byte_end":602574,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602896,"byte_end":602902,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"family","qualname":"<RichText>::family","value":"pub fn family(Self, FontFamily) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Select the font family.","sig":null,"attributes":[{"value":"/ Select the font family.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602678,"byte_end":602705,"line_start":95,"line_end":95,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602710,"byte_end":602713,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This overrides the value from [`Self::text_style`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602718,"byte_end":602773,"line_start":97,"line_end":97,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602778,"byte_end":602781,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Only the families available in [`crate::FontDefinitions::families`] may be used.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602786,"byte_end":602870,"line_start":99,"line_end":99,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602875,"byte_end":602884,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603118,"byte_end":603122,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"font","qualname":"<RichText>::font","value":"pub fn font(Self, crate::FontId) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Select the font and size.\n This overrides the value from [`Self::text_style`].\n","sig":null,"attributes":[{"value":"/ Select the font and size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603003,"byte_end":603032,"line_start":106,"line_end":106,"column_start":5,"column_end":34}},{"value":"/ This overrides the value from [`Self::text_style`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603037,"byte_end":603092,"line_start":107,"line_end":107,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603097,"byte_end":603106,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603370,"byte_end":603380,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"text_style","qualname":"<RichText>::text_style","value":"pub fn text_style(Self, TextStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Override the [`TextStyle`].\n","sig":null,"attributes":[{"value":"/ Override the [`TextStyle`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603313,"byte_end":603344,"line_start":116,"line_end":116,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603349,"byte_end":603358,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603574,"byte_end":603593,"line_start":125,"line_end":125,"column_start":12,"column_end":31},"name":"fallback_text_style","qualname":"<RichText>::fallback_text_style","value":"pub fn fallback_text_style(Self, TextStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the [`TextStyle`] unless it has already been set\n","sig":null,"attributes":[{"value":"/ Set the [`TextStyle`] unless it has already been set","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603492,"byte_end":603548,"line_start":123,"line_end":123,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603553,"byte_end":603562,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603769,"byte_end":603776,"line_start":132,"line_end":132,"column_start":12,"column_end":19},"name":"heading","qualname":"<RichText>::heading","value":"pub fn heading(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use [`TextStyle::Heading`].\n","sig":null,"attributes":[{"value":"/ Use [`TextStyle::Heading`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603712,"byte_end":603743,"line_start":130,"line_end":130,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603748,"byte_end":603757,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603907,"byte_end":603916,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"monospace","qualname":"<RichText>::monospace","value":"pub fn monospace(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use [`TextStyle::Monospace`].\n","sig":null,"attributes":[{"value":"/ Use [`TextStyle::Monospace`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603848,"byte_end":603881,"line_start":136,"line_end":136,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603886,"byte_end":603895,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2604},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604068,"byte_end":604072,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"code","qualname":"<RichText>::code","value":"pub fn code(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Monospace label with different background color.\n","sig":null,"attributes":[{"value":"/ Monospace label with different background color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":603990,"byte_end":604042,"line_start":142,"line_end":142,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604047,"byte_end":604056,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604241,"byte_end":604247,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"strong","qualname":"<RichText>::strong","value":"pub fn strong(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Extra strong text (stronger color).\n","sig":null,"attributes":[{"value":"/ Extra strong text (stronger color).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604176,"byte_end":604215,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604220,"byte_end":604229,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604382,"byte_end":604386,"line_start":158,"line_end":158,"column_start":12,"column_end":16},"name":"weak","qualname":"<RichText>::weak","value":"pub fn weak(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Extra weak text (fainter color).\n","sig":null,"attributes":[{"value":"/ Extra weak text (fainter color).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604320,"byte_end":604356,"line_start":156,"line_end":156,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604361,"byte_end":604370,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604596,"byte_end":604605,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"underline","qualname":"<RichText>::underline","value":"pub fn underline(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Draw a line under the text.","sig":null,"attributes":[{"value":"/ Draw a line under the text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604457,"byte_end":604488,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604493,"byte_end":604496,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ If you want to control the line color, use [`LayoutJob`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604501,"byte_end":604570,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604575,"byte_end":604584,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604853,"byte_end":604866,"line_start":176,"line_end":176,"column_start":12,"column_end":25},"name":"strikethrough","qualname":"<RichText>::strikethrough","value":"pub fn strikethrough(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Draw a line through the text, crossing it out.","sig":null,"attributes":[{"value":"/ Draw a line through the text, crossing it out.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604681,"byte_end":604731,"line_start":172,"line_end":172,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604736,"byte_end":604739,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ If you want to control the strikethrough line color, use [`LayoutJob`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604744,"byte_end":604827,"line_start":174,"line_end":174,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604832,"byte_end":604841,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605009,"byte_end":605016,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"italics","qualname":"<RichText>::italics","value":"pub fn italics(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tilt the characters to the right.\n","sig":null,"attributes":[{"value":"/ Tilt the characters to the right.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604946,"byte_end":604983,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":604988,"byte_end":604997,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605133,"byte_end":605138,"line_start":190,"line_end":190,"column_start":12,"column_end":17},"name":"small","qualname":"<RichText>::small","value":"pub fn small(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Smaller text.\n","sig":null,"attributes":[{"value":"/ Smaller text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605090,"byte_end":605107,"line_start":188,"line_end":188,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605112,"byte_end":605121,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605257,"byte_end":605269,"line_start":196,"line_end":196,"column_start":12,"column_end":24},"name":"small_raised","qualname":"<RichText>::small_raised","value":"pub fn small_raised(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" For e.g. exponents.\n","sig":null,"attributes":[{"value":"/ For e.g. exponents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605208,"byte_end":605231,"line_start":194,"line_end":194,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605236,"byte_end":605245,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605445,"byte_end":605451,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"raised","qualname":"<RichText>::raised","value":"pub fn raised(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Align text to top. Only applicable together with [`Self::small()`].\n","sig":null,"attributes":[{"value":"/ Align text to top. Only applicable together with [`Self::small()`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605348,"byte_end":605419,"line_start":200,"line_end":200,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605424,"byte_end":605433,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605581,"byte_end":605597,"line_start":209,"line_end":209,"column_start":12,"column_end":28},"name":"background_color","qualname":"<RichText>::background_color","value":"pub fn background_color<impl Into<Color32>: Into<Color32>>(Self,\n                                                           impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Fill-color behind the text.\n","sig":null,"attributes":[{"value":"/ Fill-color behind the text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605524,"byte_end":605555,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605560,"byte_end":605569,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605787,"byte_end":605792,"line_start":216,"line_end":216,"column_start":12,"column_end":17},"name":"color","qualname":"<RichText>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Override text color.\n","sig":null,"attributes":[{"value":"/ Override text color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605737,"byte_end":605761,"line_start":214,"line_end":214,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605766,"byte_end":605775,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605974,"byte_end":605985,"line_start":222,"line_end":222,"column_start":12,"column_end":23},"name":"font_height","qualname":"<RichText>::font_height","value":"pub fn font_height(&Self, &epaint::Fonts, &Style) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Read the font height of the selected text style.\n","sig":null,"attributes":[{"value":"/ Read the font height of the selected text style.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":605910,"byte_end":605962,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5978},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609714,"byte_end":609722,"line_start":342,"line_end":342,"column_start":5,"column_end":13},"name":"RichText","qualname":"::widget_text::WidgetText::RichText","value":"WidgetText::RichText(RichText)","parent":{"krate":0,"index":5977},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5981},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610266,"byte_end":610275,"line_start":353,"line_end":353,"column_start":5,"column_end":14},"name":"LayoutJob","qualname":"::widget_text::WidgetText::LayoutJob","value":"WidgetText::LayoutJob(LayoutJob)","parent":{"krate":0,"index":5977},"children":[],"decl_id":null,"docs":" Use this [`LayoutJob`] when laying out the text.","sig":null,"attributes":[{"value":"/ Use this [`LayoutJob`] when laying out the text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609739,"byte_end":609791,"line_start":344,"line_end":344,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609796,"byte_end":609799,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Only [`LayoutJob::text`] and [`LayoutJob::sections`] are guaranteed to be respected.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609804,"byte_end":609892,"line_start":346,"line_end":346,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609897,"byte_end":609900,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ [`LayoutJob::wrap_width`], [`LayoutJob::halign`], [`LayoutJob::justify`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609905,"byte_end":609981,"line_start":348,"line_end":348,"column_start":5,"column_end":81}},{"value":"/ and [`LayoutJob::first_row_min_height`] will likely be determined by the [`crate::Layout`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609986,"byte_end":610080,"line_start":349,"line_end":349,"column_start":5,"column_end":99}},{"value":"/ of the [`Ui`] the widget is placed in.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610085,"byte_end":610127,"line_start":350,"line_end":350,"column_start":5,"column_end":47}},{"value":"/ If you want all parts of the `LayoutJob` respected, then convert it to a","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610132,"byte_end":610208,"line_start":351,"line_end":351,"column_start":5,"column_end":81}},{"value":"/ [`Galley`] and use [`Self::Galley`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610213,"byte_end":610261,"line_start":352,"line_end":352,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5984},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610349,"byte_end":610355,"line_start":356,"line_end":356,"column_start":5,"column_end":11},"name":"Galley","qualname":"::widget_text::WidgetText::Galley","value":"WidgetText::Galley(Arc<Galley>)","parent":{"krate":0,"index":5977},"children":[],"decl_id":null,"docs":" Use exactly this galley when painting the text.\n","sig":null,"attributes":[{"value":"/ Use exactly this galley when painting the text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610293,"byte_end":610344,"line_start":355,"line_end":355,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":5977},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609697,"byte_end":609707,"line_start":341,"line_end":341,"column_start":10,"column_end":20},"name":"WidgetText","qualname":"::widget_text::WidgetText","value":"pub enum WidgetText {\n    RichText(RichText),\n    LayoutJob(LayoutJob),\n    Galley(Arc<Galley>),\n}","parent":null,"children":[{"krate":0,"index":5978},{"krate":0,"index":5981},{"krate":0,"index":5984}],"decl_id":null,"docs":" This is how you specify text for a widget.","sig":null,"attributes":[{"value":"/ This is how you specify text for a widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609216,"byte_end":609262,"line_start":331,"line_end":331,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609263,"byte_end":609266,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A lot of widgets use `impl Into<WidgetText>` as an argument,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609267,"byte_end":609331,"line_start":333,"line_end":333,"column_start":1,"column_end":65}},{"value":"/ allowing you to pass in [`String`], [`RichText`], [`LayoutJob`], and more.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609332,"byte_end":609410,"line_start":334,"line_end":334,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609411,"byte_end":609414,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ Often a [`WidgetText`] is just a simple [`String`],","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609415,"byte_end":609470,"line_start":336,"line_end":336,"column_start":1,"column_end":56}},{"value":"/ but it can be a [`RichText`] (text with color, style, etc),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609471,"byte_end":609534,"line_start":337,"line_end":337,"column_start":1,"column_end":64}},{"value":"/ a [`LayoutJob`] (for when you want full control of how the text looks)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609535,"byte_end":609609,"line_start":338,"line_end":338,"column_start":1,"column_end":75}},{"value":"/ or text that has already been layed out in a [`Galley`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":609610,"byte_end":609670,"line_start":339,"line_end":339,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610526,"byte_end":610534,"line_start":367,"line_end":367,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<WidgetText>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610505,"byte_end":610514,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610775,"byte_end":610779,"line_start":376,"line_end":376,"column_start":12,"column_end":16},"name":"text","qualname":"<WidgetText>::text","value":"pub fn text(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610754,"byte_end":610763,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611135,"byte_end":611145,"line_start":388,"line_end":388,"column_start":12,"column_end":22},"name":"text_style","qualname":"<WidgetText>::text_style","value":"pub fn text_style(Self, TextStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Override the [`TextStyle`] if, and only if, this is a [`RichText`].","sig":null,"attributes":[{"value":"/ Override the [`TextStyle`] if, and only if, this is a [`RichText`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610986,"byte_end":611057,"line_start":384,"line_end":384,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611062,"byte_end":611065,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611070,"byte_end":611109,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611114,"byte_end":611123,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611500,"byte_end":611519,"line_start":399,"line_end":399,"column_start":12,"column_end":31},"name":"fallback_text_style","qualname":"<WidgetText>::fallback_text_style","value":"pub fn fallback_text_style(Self, TextStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the [`TextStyle`] unless it has already been set","sig":null,"attributes":[{"value":"/ Set the [`TextStyle`] unless it has already been set","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611366,"byte_end":611422,"line_start":395,"line_end":395,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611427,"byte_end":611430,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611435,"byte_end":611474,"line_start":397,"line_end":397,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611479,"byte_end":611488,"line_start":398,"line_end":398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2633},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611891,"byte_end":611896,"line_start":410,"line_end":410,"column_start":12,"column_end":17},"name":"color","qualname":"<WidgetText>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Override text color if, and only if, this is a [`RichText`].","sig":null,"attributes":[{"value":"/ Override text color if, and only if, this is a [`RichText`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611749,"byte_end":611813,"line_start":406,"line_end":406,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611818,"byte_end":611821,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611826,"byte_end":611865,"line_start":408,"line_end":408,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":611870,"byte_end":611879,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":612162,"byte_end":612169,"line_start":418,"line_end":418,"column_start":12,"column_end":19},"name":"heading","qualname":"<WidgetText>::heading","value":"pub fn heading(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":612111,"byte_end":612150,"line_start":417,"line_end":417,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":612405,"byte_end":612414,"line_start":426,"line_end":426,"column_start":12,"column_end":21},"name":"monospace","qualname":"<WidgetText>::monospace","value":"pub fn monospace(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":612354,"byte_end":612393,"line_start":425,"line_end":425,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":612652,"byte_end":612656,"line_start":434,"line_end":434,"column_start":12,"column_end":16},"name":"code","qualname":"<WidgetText>::code","value":"pub fn code(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":612601,"byte_end":612640,"line_start":433,"line_end":433,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":612889,"byte_end":612895,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"strong","qualname":"<WidgetText>::strong","value":"pub fn strong(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":612838,"byte_end":612877,"line_start":441,"line_end":441,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":613130,"byte_end":613134,"line_start":450,"line_end":450,"column_start":12,"column_end":16},"name":"weak","qualname":"<WidgetText>::weak","value":"pub fn weak(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":613079,"byte_end":613118,"line_start":449,"line_end":449,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":613367,"byte_end":613376,"line_start":458,"line_end":458,"column_start":12,"column_end":21},"name":"underline","qualname":"<WidgetText>::underline","value":"pub fn underline(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":613316,"byte_end":613355,"line_start":457,"line_end":457,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":613614,"byte_end":613627,"line_start":466,"line_end":466,"column_start":12,"column_end":25},"name":"strikethrough","qualname":"<WidgetText>::strikethrough","value":"pub fn strikethrough(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":613563,"byte_end":613602,"line_start":465,"line_end":465,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":613869,"byte_end":613876,"line_start":474,"line_end":474,"column_start":12,"column_end":19},"name":"italics","qualname":"<WidgetText>::italics","value":"pub fn italics(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":613818,"byte_end":613857,"line_start":473,"line_end":473,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":614112,"byte_end":614117,"line_start":482,"line_end":482,"column_start":12,"column_end":17},"name":"small","qualname":"<WidgetText>::small","value":"pub fn small(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":614061,"byte_end":614100,"line_start":481,"line_end":481,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":614351,"byte_end":614363,"line_start":490,"line_end":490,"column_start":12,"column_end":24},"name":"small_raised","qualname":"<WidgetText>::small_raised","value":"pub fn small_raised(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":614300,"byte_end":614339,"line_start":489,"line_end":489,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":614604,"byte_end":614610,"line_start":498,"line_end":498,"column_start":12,"column_end":18},"name":"raised","qualname":"<WidgetText>::raised","value":"pub fn raised(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":614553,"byte_end":614592,"line_start":497,"line_end":497,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":614845,"byte_end":614861,"line_start":506,"line_end":506,"column_start":12,"column_end":28},"name":"background_color","qualname":"<WidgetText>::background_color","value":"pub fn background_color<impl Into<Color32>: Into<Color32>>(Self,\n                                                           impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Prefer using [`RichText`] directly!\n","sig":null,"attributes":[{"value":"/ Prefer using [`RichText`] directly!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":614794,"byte_end":614833,"line_start":505,"line_end":505,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":615587,"byte_end":615600,"line_start":527,"line_end":527,"column_start":12,"column_end":25},"name":"into_text_job","qualname":"<WidgetText>::into_text_job","value":"pub fn into_text_job(Self, &Style, FontSelection, Align) -> WidgetTextJob","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":616343,"byte_end":616354,"line_start":552,"line_end":552,"column_start":12,"column_end":23},"name":"into_galley","qualname":"<WidgetText>::into_galley","value":"pub fn into_galley<impl Into<FontSelection>: Into<FontSelection>>(Self, &Ui,\n                                                                  Option<bool>,\n                                                                  f32,\n                                                                  impl Into<FontSelection>)\n-> WidgetTextGalley","parent":null,"children":[],"decl_id":null,"docs":" Layout with wrap mode based on the containing `Ui`.","sig":null,"attributes":[{"value":"/ Layout with wrap mode based on the containing `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":616222,"byte_end":616277,"line_start":549,"line_end":549,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":616282,"byte_end":616285,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ wrap: override for [`Ui::wrap_text`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":616290,"byte_end":616331,"line_start":551,"line_end":551,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":5989},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618475,"byte_end":618488,"line_start":632,"line_end":632,"column_start":12,"column_end":25},"name":"WidgetTextJob","qualname":"::widget_text::WidgetTextJob","value":"WidgetTextJob { job, job_has_color }","parent":null,"children":[{"krate":0,"index":5990},{"krate":0,"index":5991}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5990},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618499,"byte_end":618502,"line_start":633,"line_end":633,"column_start":9,"column_end":12},"name":"job","qualname":"::widget_text::WidgetTextJob::job","value":"epaint::text::LayoutJob","parent":{"krate":0,"index":5989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5991},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618523,"byte_end":618536,"line_start":634,"line_end":634,"column_start":9,"column_end":22},"name":"job_has_color","qualname":"::widget_text::WidgetTextJob::job_has_color","value":"bool","parent":{"krate":0,"index":5989},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618579,"byte_end":618590,"line_start":638,"line_end":638,"column_start":12,"column_end":23},"name":"into_galley","qualname":"<WidgetTextJob>::into_galley","value":"pub fn into_galley(Self, &crate::text::Fonts) -> WidgetTextGalley","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5998},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619028,"byte_end":619044,"line_start":652,"line_end":652,"column_start":12,"column_end":28},"name":"WidgetTextGalley","qualname":"::widget_text::WidgetTextGalley","value":"WidgetTextGalley { galley, galley_has_color }","parent":null,"children":[{"krate":0,"index":5999},{"krate":0,"index":6000}],"decl_id":null,"docs":" Text that has been layed out and ready to be painted.\n","sig":null,"attributes":[{"value":"/ Text that has been layed out and ready to be painted.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618931,"byte_end":618988,"line_start":650,"line_end":650,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":5999},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619055,"byte_end":619061,"line_start":653,"line_end":653,"column_start":9,"column_end":15},"name":"galley","qualname":"::widget_text::WidgetTextGalley::galley","value":"std::sync::Arc<epaint::Galley>","parent":{"krate":0,"index":5998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6000},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619084,"byte_end":619100,"line_start":654,"line_end":654,"column_start":9,"column_end":25},"name":"galley_has_color","qualname":"::widget_text::WidgetTextGalley::galley_has_color","value":"bool","parent":{"krate":0,"index":5998},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619196,"byte_end":619200,"line_start":660,"line_end":660,"column_start":12,"column_end":16},"name":"size","qualname":"<WidgetTextGalley>::size","value":"pub fn size(&Self) -> crate::Vec2","parent":null,"children":[],"decl_id":null,"docs":" Size of the layed out text.\n","sig":null,"attributes":[{"value":"/ Size of the layed out text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619139,"byte_end":619170,"line_start":658,"line_end":658,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619175,"byte_end":619184,"line_start":659,"line_end":659,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619320,"byte_end":619324,"line_start":666,"line_end":666,"column_start":12,"column_end":16},"name":"text","qualname":"<WidgetTextGalley>::text","value":"pub fn text(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Size of the layed out text.\n","sig":null,"attributes":[{"value":"/ Size of the layed out text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619263,"byte_end":619294,"line_start":664,"line_end":664,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619299,"byte_end":619308,"line_start":665,"line_end":665,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619401,"byte_end":619407,"line_start":671,"line_end":671,"column_start":12,"column_end":18},"name":"galley","qualname":"<WidgetTextGalley>::galley","value":"pub fn galley(&Self) -> &Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619380,"byte_end":619389,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619604,"byte_end":619622,"line_start":677,"line_end":677,"column_start":12,"column_end":30},"name":"paint_with_visuals","qualname":"<WidgetTextGalley>::paint_with_visuals","value":"pub fn paint_with_visuals(Self, &crate::Painter, Pos2, &WidgetVisuals)","parent":null,"children":[],"decl_id":null,"docs":" Use the colors in the original [`WidgetText`] if any,\n else fall back to the one specified by the [`WidgetVisuals`].\n","sig":null,"attributes":[{"value":"/ Use the colors in the original [`WidgetText`] if any,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619465,"byte_end":619522,"line_start":675,"line_end":675,"column_start":5,"column_end":62}},{"value":"/ else fall back to the one specified by the [`WidgetVisuals`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619527,"byte_end":619592,"line_start":676,"line_end":676,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2672},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619941,"byte_end":619966,"line_start":688,"line_end":688,"column_start":12,"column_end":37},"name":"paint_with_fallback_color","qualname":"<WidgetTextGalley>::paint_with_fallback_color","value":"pub fn paint_with_fallback_color(Self, &crate::Painter, Pos2, Color32)","parent":null,"children":[],"decl_id":null,"docs":" Use the colors in the original [`WidgetText`] if any,\n else fall back to the given color.\n","sig":null,"attributes":[{"value":"/ Use the colors in the original [`WidgetText`] if any,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619829,"byte_end":619886,"line_start":686,"line_end":686,"column_start":5,"column_end":62}},{"value":"/ else fall back to the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619891,"byte_end":619929,"line_start":687,"line_end":687,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":620322,"byte_end":620347,"line_start":702,"line_end":702,"column_start":12,"column_end":37},"name":"paint_with_color_override","qualname":"<WidgetTextGalley>::paint_with_color_override","value":"pub fn paint_with_color_override(Self, &crate::Painter, Pos2, Color32)","parent":null,"children":[],"decl_id":null,"docs":" Paint with this specific color.\n","sig":null,"attributes":[{"value":"/ Paint with this specific color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":620275,"byte_end":620310,"line_start":701,"line_end":701,"column_start":5,"column_end":40}}]},{"kind":"Mod","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"widgets","qualname":"::widgets","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676},{"krate":0,"index":2742},{"krate":0,"index":2796},{"krate":0,"index":2841},{"krate":0,"index":2855},{"krate":0,"index":2874},{"krate":0,"index":2896},{"krate":0,"index":3876},{"krate":0,"index":3900},{"krate":0,"index":3911},{"krate":0,"index":3925},{"krate":0,"index":4018},{"krate":0,"index":4055},{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4282},{"krate":0,"index":4283},{"krate":0,"index":4286},{"krate":0,"index":4287},{"krate":0,"index":4290},{"krate":0,"index":4293},{"krate":0,"index":4296},{"krate":0,"index":4297},{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4302},{"krate":0,"index":4305},{"krate":0,"index":4307},{"krate":0,"index":4310},{"krate":0,"index":4312},{"krate":0,"index":4314},{"krate":0,"index":4316},{"krate":0,"index":4318},{"krate":0,"index":4320},{"krate":0,"index":4321}],"decl_id":null,"docs":" Widgets are pieces of GUI such as [`Label`], [`Button`], [`Slider`] etc.","sig":null,"attributes":[{"value":"/ Widgets are pieces of GUI such as [`Label`], [`Button`], [`Slider`] etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":620537,"byte_end":620613,"line_start":1,"line_end":1,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":620614,"byte_end":620617,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Example widget uses:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":620618,"byte_end":620642,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/ * `ui.add(Label::new(\"Text\").text_color(color::red));`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":620643,"byte_end":620701,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ * `if ui.add(Button::new(\"Click me\")).clicked() { … }`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":620702,"byte_end":620762,"line_start":5,"line_end":5,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":626026,"byte_end":626032,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Button","qualname":"::widgets::button::Button","value":"Button {  }","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2685},{"krate":0,"index":2686},{"krate":0,"index":2687}],"decl_id":null,"docs":" Clickable button with text.","sig":null,"attributes":[{"value":"/ Clickable button with text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625540,"byte_end":625571,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625572,"byte_end":625575,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See also [`Ui::button`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625576,"byte_end":625604,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625605,"byte_end":625608,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625609,"byte_end":625616,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625617,"byte_end":625649,"line_start":8,"line_end":8,"column_start":1,"column_end":33}},{"value":"/ # fn do_stuff() {}","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625650,"byte_end":625672,"line_start":9,"line_end":9,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625673,"byte_end":625676,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ if ui.add(egui::Button::new(\"Click me\")).clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625677,"byte_end":625733,"line_start":11,"line_end":11,"column_start":1,"column_end":57}},{"value":"/     do_stuff();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625734,"byte_end":625753,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625754,"byte_end":625759,"line_start":13,"line_end":13,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625760,"byte_end":625763,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ // A greyed-out and non-interactive button:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625764,"byte_end":625811,"line_start":15,"line_end":15,"column_start":1,"column_end":48}},{"value":"/ if ui.add_enabled(false, egui::Button::new(\"Can't click this\")).clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625812,"byte_end":625891,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/     unreachable!();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625892,"byte_end":625915,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625916,"byte_end":625921,"line_start":18,"line_end":18,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625922,"byte_end":625931,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625932,"byte_end":625939,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":625940,"byte_end":626014,"line_start":21,"line_end":21,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":626319,"byte_end":626322,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Button>::new","value":"pub fn new<impl Into<WidgetText>: Into<WidgetText>>(impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2691},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":626837,"byte_end":626851,"line_start":52,"line_end":52,"column_start":12,"column_end":26},"name":"image_and_text","qualname":"<Button>::image_and_text","value":"pub fn image_and_text<impl Into<Vec2>: Into<Vec2>,\n                      impl Into<WidgetText>: Into<WidgetText>>(TextureId,\n                                                               impl Into<Vec2>,\n                                                               impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a button with an image to the left of the text. The size of the image as displayed is defined by the size Vec2 provided.\n","sig":null,"attributes":[{"value":"/ Creates a button with an image to the left of the text. The size of the image as displayed is defined by the size Vec2 provided.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":626648,"byte_end":626780,"line_start":50,"line_end":50,"column_start":5,"column_end":137}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":626785,"byte_end":626825,"line_start":51,"line_end":51,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2694},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627648,"byte_end":627652,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"wrap","qualname":"<Button>::wrap","value":"pub fn wrap(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If `true`, the text will wrap to stay within the max width of the `Ui`.","sig":null,"attributes":[{"value":"/ If `true`, the text will wrap to stay within the max width of the `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627293,"byte_end":627368,"line_start":70,"line_end":70,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627373,"byte_end":627376,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ By default [`Self::wrap`] will be true in vertical layouts","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627381,"byte_end":627443,"line_start":72,"line_end":72,"column_start":5,"column_end":67}},{"value":"/ and horizontal layouts with wrapping,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627448,"byte_end":627489,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/ and false on non-wrapping horizontal layouts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627494,"byte_end":627543,"line_start":74,"line_end":74,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627548,"byte_end":627551,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ Note that any `\\n` in the text will always produce a new line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627556,"byte_end":627622,"line_start":76,"line_end":76,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627627,"byte_end":627636,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627889,"byte_end":627893,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"fill","qualname":"<Button>::fill","value":"pub fn fill<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Override background fill color. Note that this will override any on-hover effects.\n Calling this will also turn on the frame.\n","sig":null,"attributes":[{"value":"/ Override background fill color. Note that this will override any on-hover effects.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627741,"byte_end":627827,"line_start":83,"line_end":83,"column_start":5,"column_end":91}},{"value":"/ Calling this will also turn on the frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":627832,"byte_end":627877,"line_start":84,"line_end":84,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":628176,"byte_end":628182,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Button>::stroke","value":"pub fn stroke<impl Into<Stroke>: Into<Stroke>>(Self, impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Override button stroke. Note that this will override any on-hover effects.\n Calling this will also turn on the frame.\n","sig":null,"attributes":[{"value":"/ Override button stroke. Note that this will override any on-hover effects.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":628036,"byte_end":628114,"line_start":91,"line_end":91,"column_start":5,"column_end":83}},{"value":"/ Calling this will also turn on the frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":628119,"byte_end":628164,"line_start":92,"line_end":92,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2699},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":628405,"byte_end":628410,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"small","qualname":"<Button>::small","value":"pub fn small(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make this a small button, suitable for embedding into text.\n","sig":null,"attributes":[{"value":"/ Make this a small button, suitable for embedding into text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":628330,"byte_end":628393,"line_start":99,"line_end":99,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2700},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":628575,"byte_end":628580,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"name":"frame","qualname":"<Button>::frame","value":"pub fn frame(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turn off the frame\n","sig":null,"attributes":[{"value":"/ Turn off the frame","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":628541,"byte_end":628563,"line_start":106,"line_end":106,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2701},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":628781,"byte_end":628786,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"sense","qualname":"<Button>::sense","value":"pub fn sense(Self, Sense) -> Self","parent":null,"children":[],"decl_id":null,"docs":" By default, buttons senses clicks.\n Change this to a drag-button with `Sense::drag()`.\n","sig":null,"attributes":[{"value":"/ By default, buttons senses clicks.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":628672,"byte_end":628710,"line_start":112,"line_end":112,"column_start":5,"column_end":43}},{"value":"/ Change this to a drag-button with `Sense::drag()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":628715,"byte_end":628769,"line_start":113,"line_end":113,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":2707},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":632123,"byte_end":632131,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"Checkbox","qualname":"::widgets::button::Checkbox","value":"Checkbox {  }","parent":null,"children":[{"krate":0,"index":2709},{"krate":0,"index":2710}],"decl_id":null,"docs":" Boolean on/off control with text label.","sig":null,"attributes":[{"value":"/ Boolean on/off control with text label.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":631719,"byte_end":631762,"line_start":207,"line_end":207,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":631763,"byte_end":631766,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ Usually you'd use [`Ui::checkbox`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":631767,"byte_end":631814,"line_start":209,"line_end":209,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":631815,"byte_end":631818,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":631819,"byte_end":631826,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":631827,"byte_end":631859,"line_start":212,"line_end":212,"column_start":1,"column_end":33}},{"value":"/ # let mut my_bool = true;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":631860,"byte_end":631889,"line_start":213,"line_end":213,"column_start":1,"column_end":30}},{"value":"/ // These are equivalent:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":631890,"byte_end":631918,"line_start":214,"line_end":214,"column_start":1,"column_end":29}},{"value":"/ ui.checkbox(&mut my_bool, \"Checked\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":631919,"byte_end":631960,"line_start":215,"line_end":215,"column_start":1,"column_end":42}},{"value":"/ ui.add(egui::Checkbox::new(&mut my_bool, \"Checked\"));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":631961,"byte_end":632018,"line_start":216,"line_end":216,"column_start":1,"column_end":58}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":632019,"byte_end":632028,"line_start":217,"line_end":217,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":632029,"byte_end":632036,"line_start":218,"line_end":218,"column_start":1,"column_end":8}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":632037,"byte_end":632111,"line_start":219,"line_end":219,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":632225,"byte_end":632228,"line_start":226,"line_end":226,"column_start":12,"column_end":15},"name":"new","qualname":"<Checkbox>::new","value":"pub fn new<impl Into<WidgetText>: Into<WidgetText>>(&'a mut bool,\n                                                    impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2719},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635390,"byte_end":635401,"line_start":314,"line_end":314,"column_start":12,"column_end":23},"name":"RadioButton","qualname":"::widgets::button::RadioButton","value":"RadioButton {  }","parent":null,"children":[{"krate":0,"index":2720},{"krate":0,"index":2721}],"decl_id":null,"docs":" One out of several alternatives, either selected or not.","sig":null,"attributes":[{"value":"/ One out of several alternatives, either selected or not.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":634797,"byte_end":634857,"line_start":294,"line_end":294,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":634858,"byte_end":634861,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ Usually you'd use [`Ui::radio_value`] or [`Ui::radio`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":634862,"byte_end":634929,"line_start":296,"line_end":296,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":634930,"byte_end":634933,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":634934,"byte_end":634941,"line_start":298,"line_end":298,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":634942,"byte_end":634974,"line_start":299,"line_end":299,"column_start":1,"column_end":33}},{"value":"/ #[derive(PartialEq)]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":634975,"byte_end":634999,"line_start":300,"line_end":300,"column_start":1,"column_end":25}},{"value":"/ enum Enum { First, Second, Third }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635000,"byte_end":635038,"line_start":301,"line_end":301,"column_start":1,"column_end":39}},{"value":"/ let mut my_enum = Enum::First;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635039,"byte_end":635073,"line_start":302,"line_end":302,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635074,"byte_end":635077,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ ui.radio_value(&mut my_enum, Enum::First, \"First\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635078,"byte_end":635133,"line_start":304,"line_end":304,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635134,"byte_end":635137,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ // is equivalent to:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635138,"byte_end":635162,"line_start":306,"line_end":306,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635163,"byte_end":635166,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ if ui.add(egui::RadioButton::new(my_enum == Enum::First, \"First\")).clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635167,"byte_end":635249,"line_start":308,"line_end":308,"column_start":1,"column_end":83}},{"value":"/     my_enum = Enum::First","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635250,"byte_end":635279,"line_start":309,"line_end":309,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635280,"byte_end":635285,"line_start":310,"line_end":310,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635286,"byte_end":635295,"line_start":311,"line_end":311,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635296,"byte_end":635303,"line_start":312,"line_end":312,"column_start":1,"column_end":8}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635304,"byte_end":635378,"line_start":313,"line_end":313,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635478,"byte_end":635481,"line_start":320,"line_end":320,"column_start":12,"column_end":15},"name":"new","qualname":"<RadioButton>::new","value":"pub fn new<impl Into<WidgetText>: Into<WidgetText>>(bool,\n                                                    impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6007},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":638091,"byte_end":638102,"line_start":389,"line_end":389,"column_start":12,"column_end":23},"name":"ImageButton","qualname":"::widgets::button::ImageButton","value":"ImageButton {  }","parent":null,"children":[{"krate":0,"index":6008},{"krate":0,"index":6009},{"krate":0,"index":6010},{"krate":0,"index":6011}],"decl_id":null,"docs":" A clickable image within a frame.\n","sig":null,"attributes":[{"value":"/ A clickable image within a frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":637943,"byte_end":637980,"line_start":386,"line_end":386,"column_start":1,"column_end":38}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":637981,"byte_end":638055,"line_start":387,"line_end":387,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":638220,"byte_end":638223,"line_start":397,"line_end":397,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageButton>::new","value":"pub fn new<impl Into<TextureId>: Into<TextureId>,\n           impl Into<Vec2>: Into<Vec2>>(impl Into<TextureId>, impl Into<Vec2>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":638556,"byte_end":638558,"line_start":407,"line_end":407,"column_start":12,"column_end":14},"name":"uv","qualname":"<ImageButton>::uv","value":"pub fn uv<impl Into<Rect>: Into<Rect>>(Self, impl Into<Rect>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Select UV range. Default is (0,0) in top-left, (1,1) bottom right.\n","sig":null,"attributes":[{"value":"/ Select UV range. Default is (0,0) in top-left, (1,1) bottom right.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":638474,"byte_end":638544,"line_start":406,"line_end":406,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":638739,"byte_end":638743,"line_start":413,"line_end":413,"column_start":12,"column_end":16},"name":"tint","qualname":"<ImageButton>::tint","value":"pub fn tint<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiply image color with this. Default is WHITE (no tint).\n","sig":null,"attributes":[{"value":"/ Multiply image color with this. Default is WHITE (no tint).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":638664,"byte_end":638727,"line_start":412,"line_end":412,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":638916,"byte_end":638924,"line_start":419,"line_end":419,"column_start":12,"column_end":20},"name":"selected","qualname":"<ImageButton>::selected","value":"pub fn selected(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If `true`, mark this button as \"selected\".\n","sig":null,"attributes":[{"value":"/ If `true`, mark this button as \"selected\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":638858,"byte_end":638904,"line_start":418,"line_end":418,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":639053,"byte_end":639058,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"frame","qualname":"<ImageButton>::frame","value":"pub fn frame(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turn off the frame\n","sig":null,"attributes":[{"value":"/ Turn off the frame","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":639019,"byte_end":639041,"line_start":424,"line_end":424,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":639253,"byte_end":639258,"line_start":432,"line_end":432,"column_start":12,"column_end":17},"name":"sense","qualname":"<ImageButton>::sense","value":"pub fn sense(Self, Sense) -> Self","parent":null,"children":[],"decl_id":null,"docs":" By default, buttons senses clicks.\n Change this to a drag-button with `Sense::drag()`.\n","sig":null,"attributes":[{"value":"/ By default, buttons senses clicks.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":639144,"byte_end":639182,"line_start":430,"line_end":430,"column_start":5,"column_end":43}},{"value":"/ Change this to a drag-button with `Sense::drag()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":639187,"byte_end":639241,"line_start":431,"line_end":431,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":2742},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"color_picker","qualname":"::widgets::color_picker","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","parent":null,"children":[{"krate":0,"index":2743},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2761},{"krate":0,"index":6016},{"krate":0,"index":6023},{"krate":0,"index":6025},{"krate":0,"index":6026},{"krate":0,"index":6027},{"krate":0,"index":2763},{"krate":0,"index":2766},{"krate":0,"index":2774},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2783},{"krate":0,"index":2784},{"krate":0,"index":2786},{"krate":0,"index":2790},{"krate":0,"index":2793}],"decl_id":null,"docs":" Color picker widgets.\n","sig":null,"attributes":[{"value":"/ Color picker widgets.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":641437,"byte_end":641462,"line_start":1,"line_end":1,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":2754},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":642959,"byte_end":642969,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"show_color","qualname":"::widgets::color_picker::show_color","value":"pub fn show_color<impl Into<Hsva>: Into<Hsva>>(&mut Ui, impl Into<Hsva>, Vec2)\n-> Response","parent":null,"children":[],"decl_id":null,"docs":" Show a color with background checkers to demonstrate transparency (if any).\n","sig":null,"attributes":[{"value":"/ Show a color with background checkers to demonstrate transparency (if any).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":642872,"byte_end":642951,"line_start":47,"line_end":47,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6017},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":649303,"byte_end":649309,"line_start":220,"line_end":220,"column_start":5,"column_end":11},"name":"Opaque","qualname":"::widgets::color_picker::Alpha::Opaque","value":"Alpha::Opaque","parent":{"krate":0,"index":6016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6019},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":649361,"byte_end":649370,"line_start":222,"line_end":222,"column_start":5,"column_end":14},"name":"OnlyBlend","qualname":"::widgets::color_picker::Alpha::OnlyBlend","value":"Alpha::OnlyBlend","parent":{"krate":0,"index":6016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6021},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":649421,"byte_end":649436,"line_start":224,"line_end":224,"column_start":5,"column_end":20},"name":"BlendOrAdditive","qualname":"::widgets::color_picker::Alpha::BlendOrAdditive","value":"Alpha::BlendOrAdditive","parent":{"krate":0,"index":6016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6016},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":649239,"byte_end":649244,"line_start":218,"line_end":218,"column_start":10,"column_end":15},"name":"Alpha","qualname":"::widgets::color_picker::Alpha","value":"pub enum Alpha { Opaque, OnlyBlend, BlendOrAdditive, }","parent":null,"children":[{"krate":0,"index":6017},{"krate":0,"index":6019},{"krate":0,"index":6021}],"decl_id":null,"docs":" What options to show for alpha\n","sig":null,"attributes":[{"value":"/ What options to show for alpha","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":649161,"byte_end":649195,"line_start":216,"line_end":216,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":652307,"byte_end":652327,"line_start":320,"line_end":320,"column_start":8,"column_end":28},"name":"color_picker_hsva_2d","qualname":"::widgets::color_picker::color_picker_hsva_2d","value":"pub fn color_picker_hsva_2d(&mut Ui, &mut Hsva, Alpha) -> bool","parent":null,"children":[],"decl_id":null,"docs":"\n Returns `true` on change.\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":652266,"byte_end":652269,"line_start":318,"line_end":318,"column_start":1,"column_end":4}},{"value":"/ Returns `true` on change.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":652270,"byte_end":652299,"line_start":319,"line_end":319,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2776},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":652775,"byte_end":652795,"line_start":337,"line_end":337,"column_start":8,"column_end":28},"name":"color_picker_color32","qualname":"::widgets::color_picker::color_picker_color32","value":"pub fn color_picker_color32(&mut Ui, &mut Color32, Alpha) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Shows a color picker where the user can change the given [`Color32`] color.","sig":null,"attributes":[{"value":"/ Shows a color picker where the user can change the given [`Color32`] color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":652654,"byte_end":652733,"line_start":334,"line_end":334,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":652734,"byte_end":652737,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ Returns `true` on change.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":652738,"byte_end":652767,"line_start":336,"line_end":336,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":653071,"byte_end":653093,"line_start":345,"line_end":345,"column_start":8,"column_end":30},"name":"color_edit_button_hsva","qualname":"::widgets::color_picker::color_edit_button_hsva","value":"pub fn color_edit_button_hsva(&mut Ui, &mut Hsva, Alpha) -> Response","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":654483,"byte_end":654506,"line_start":383,"line_end":383,"column_start":8,"column_end":31},"name":"color_edit_button_srgba","qualname":"::widgets::color_picker::color_edit_button_srgba","value":"pub fn color_edit_button_srgba(&mut Ui, &mut Color32, Alpha) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":654370,"byte_end":654410,"line_start":381,"line_end":381,"column_start":1,"column_end":41}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":654411,"byte_end":654475,"line_start":382,"line_end":382,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2781},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":654936,"byte_end":654958,"line_start":394,"line_end":394,"column_start":8,"column_end":30},"name":"color_edit_button_srgb","qualname":"::widgets::color_picker::color_edit_button_srgb","value":"pub fn color_edit_button_srgb(&mut Ui, &mut [u8; ]) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n The given color is in `sRGB` space.\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":654783,"byte_end":654823,"line_start":391,"line_end":391,"column_start":1,"column_end":41}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":654824,"byte_end":654888,"line_start":392,"line_end":392,"column_start":1,"column_end":65}},{"value":"/ The given color is in `sRGB` space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":654889,"byte_end":654928,"line_start":393,"line_end":393,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":655348,"byte_end":655370,"line_start":405,"line_end":405,"column_start":8,"column_end":30},"name":"color_edit_button_rgba","qualname":"::widgets::color_picker::color_edit_button_rgba","value":"pub fn color_edit_button_rgba(&mut Ui, &mut Rgba, Alpha) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":655235,"byte_end":655275,"line_start":403,"line_end":403,"column_start":1,"column_end":41}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":655276,"byte_end":655340,"line_start":404,"line_end":404,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":655750,"byte_end":655771,"line_start":415,"line_end":415,"column_start":8,"column_end":29},"name":"color_edit_button_rgb","qualname":"::widgets::color_picker::color_edit_button_rgb","value":"pub fn color_edit_button_rgb(&mut Ui, &mut [f32; ]) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Shows a button with the given color.\n If the user clicks the button, a full color picker is shown.\n","sig":null,"attributes":[{"value":"/ Shows a button with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":655637,"byte_end":655677,"line_start":413,"line_end":413,"column_start":1,"column_end":41}},{"value":"/ If the user clicks the button, a full color picker is shown.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\color_picker.rs","byte_start":655678,"byte_end":655742,"line_start":414,"line_end":414,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2807},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658316,"byte_end":658325,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"DragValue","qualname":"::widgets::drag_value::DragValue","value":"DragValue {  }","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":2813},{"krate":0,"index":2814},{"krate":0,"index":2815}],"decl_id":null,"docs":" A numeric value that you can change by dragging the number. More compact than a [`Slider`].","sig":null,"attributes":[{"value":"/ A numeric value that you can change by dragging the number. More compact than a [`Slider`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":657980,"byte_end":658075,"line_start":42,"line_end":42,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658076,"byte_end":658079,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658080,"byte_end":658087,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658088,"byte_end":658120,"line_start":45,"line_end":45,"column_start":1,"column_end":33}},{"value":"/ # let mut my_f32: f32 = 0.0;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658121,"byte_end":658153,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/ ui.add(egui::DragValue::new(&mut my_f32).speed(0.1));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658154,"byte_end":658211,"line_start":47,"line_end":47,"column_start":1,"column_end":58}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658212,"byte_end":658221,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658222,"byte_end":658229,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658230,"byte_end":658304,"line_start":50,"line_end":50,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658559,"byte_end":658562,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<DragValue>::new","value":"pub fn new<Num: emath::Numeric>(&'a mut Num) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2821},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":659004,"byte_end":659016,"line_start":79,"line_end":79,"column_start":12,"column_end":24},"name":"from_get_set","qualname":"<DragValue>::from_get_set","value":"pub fn from_get_set<impl 'a + FnMut(Option<f64>) -> f64: 'a +\n                    FnMut(Option<f64>) ->\n                    f64>(impl 'a + FnMut(Option<f64>) -> f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2823},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":659474,"byte_end":659479,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"speed","qualname":"<DragValue>::speed","value":"pub fn speed<impl Into<f64>: Into<f64>>(Self, impl Into<f64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" How much the value changes when dragged one point (logical pixel).\n","sig":null,"attributes":[{"value":"/ How much the value changes when dragged one point (logical pixel).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":659392,"byte_end":659462,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":659647,"byte_end":659658,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"clamp_range","qualname":"<DragValue>::clamp_range","value":"pub fn clamp_range<Num: emath::Numeric>(Self, RangeInclusive<Num>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clamp incoming and outgoing values to this range.\n","sig":null,"attributes":[{"value":"/ Clamp incoming and outgoing values to this range.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":659582,"byte_end":659635,"line_start":97,"line_end":97,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":659903,"byte_end":659909,"line_start":104,"line_end":104,"column_start":12,"column_end":18},"name":"prefix","qualname":"<DragValue>::prefix","value":"pub fn prefix<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show a prefix before the number, e.g. \"x: \"\n","sig":null,"attributes":[{"value":"/ Show a prefix before the number, e.g. \"x: \"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":659844,"byte_end":659891,"line_start":103,"line_end":103,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":660101,"byte_end":660107,"line_start":110,"line_end":110,"column_start":12,"column_end":18},"name":"suffix","qualname":"<DragValue>::suffix","value":"pub fn suffix<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a suffix to the number, this can be e.g. a unit (\"°\" or \" m\")\n","sig":null,"attributes":[{"value":"/ Add a suffix to the number, this can be e.g. a unit (\"°\" or \" m\")","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":660019,"byte_end":660089,"line_start":109,"line_end":109,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2831},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":660549,"byte_end":660561,"line_start":119,"line_end":119,"column_start":12,"column_end":24},"name":"min_decimals","qualname":"<DragValue>::min_decimals","value":"pub fn min_decimals(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a minimum number of decimals to display.\n Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.\n Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.\n","sig":null,"attributes":[{"value":"/ Set a minimum number of decimals to display.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":660269,"byte_end":660317,"line_start":116,"line_end":116,"column_start":5,"column_end":53}},{"value":"/ Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":660322,"byte_end":660429,"line_start":117,"line_end":117,"column_start":5,"column_end":112}},{"value":"/ Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":660434,"byte_end":660537,"line_start":118,"line_end":118,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":661065,"byte_end":661077,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"max_decimals","qualname":"<DragValue>::max_decimals","value":"pub fn max_decimals(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a maximum number of decimals to display.\n Values will also be rounded to this number of decimals.\n Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.\n Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.\n","sig":null,"attributes":[{"value":"/ Set a maximum number of decimals to display.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":660721,"byte_end":660769,"line_start":125,"line_end":125,"column_start":5,"column_end":53}},{"value":"/ Values will also be rounded to this number of decimals.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":660774,"byte_end":660833,"line_start":126,"line_end":126,"column_start":5,"column_end":64}},{"value":"/ Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":660838,"byte_end":660945,"line_start":127,"line_end":127,"column_start":5,"column_end":112}},{"value":"/ Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":660950,"byte_end":661053,"line_start":128,"line_end":128,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":2833},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":661198,"byte_end":661214,"line_start":134,"line_end":134,"column_start":12,"column_end":28},"name":"max_decimals_opt","qualname":"<DragValue>::max_decimals_opt","value":"pub fn max_decimals_opt(Self, Option<usize>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":661673,"byte_end":661687,"line_start":143,"line_end":143,"column_start":12,"column_end":26},"name":"fixed_decimals","qualname":"<DragValue>::fixed_decimals","value":"pub fn fixed_decimals(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set an exact number of decimals to display.\n Values will also be rounded to this number of decimals.\n Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.\n Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.\n","sig":null,"attributes":[{"value":"/ Set an exact number of decimals to display.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":661330,"byte_end":661377,"line_start":139,"line_end":139,"column_start":5,"column_end":52}},{"value":"/ Values will also be rounded to this number of decimals.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":661382,"byte_end":661441,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/ Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":661446,"byte_end":661553,"line_start":141,"line_end":141,"column_start":5,"column_end":112}},{"value":"/ Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":661558,"byte_end":661661,"line_start":142,"line_end":142,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668632,"byte_end":668641,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"Hyperlink","qualname":"::widgets::hyperlink::Hyperlink","value":"Hyperlink {  }","parent":null,"children":[{"krate":0,"index":2844},{"krate":0,"index":2845}],"decl_id":null,"docs":" A clickable hyperlink, e.g. to `\"https://github.com/emilk/egui\"`.","sig":null,"attributes":[{"value":"/ A clickable hyperlink, e.g. to `\"https://github.com/emilk/egui\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":667996,"byte_end":668065,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668066,"byte_end":668069,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ See also [`Ui::hyperlink`] and [`Ui::hyperlink_to`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668070,"byte_end":668126,"line_start":5,"line_end":5,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668127,"byte_end":668130,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668131,"byte_end":668138,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668139,"byte_end":668171,"line_start":8,"line_end":8,"column_start":1,"column_end":33}},{"value":"/ // These are equivalent:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668172,"byte_end":668200,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/ ui.hyperlink(\"https://github.com/emilk/egui\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668201,"byte_end":668251,"line_start":10,"line_end":10,"column_start":1,"column_end":51}},{"value":"/ ui.add(egui::Hyperlink::new(\"https://github.com/emilk/egui\"));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668252,"byte_end":668318,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668319,"byte_end":668322,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ // These are equivalent:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668323,"byte_end":668351,"line_start":13,"line_end":13,"column_start":1,"column_end":29}},{"value":"/ ui.hyperlink_to(\"My favorite repo\", \"https://github.com/emilk/egui\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668352,"byte_end":668425,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ ui.add(egui::Hyperlink::from_label_and_url(\"My favorite repo\", \"https://github.com/emilk/egui\"));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668426,"byte_end":668527,"line_start":15,"line_end":15,"column_start":1,"column_end":102}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668528,"byte_end":668537,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668538,"byte_end":668545,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668546,"byte_end":668620,"line_start":18,"line_end":18,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668759,"byte_end":668762,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<Hyperlink>::new","value":"pub fn new<impl ToString: ToString>(impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668707,"byte_end":668747,"line_start":25,"line_end":25,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668976,"byte_end":668994,"line_start":35,"line_end":35,"column_start":12,"column_end":30},"name":"from_label_and_url","qualname":"<Hyperlink>::from_label_and_url","value":"pub fn from_label_and_url<impl Into<WidgetText>: Into<WidgetText>,\n                          impl ToString: ToString>(impl Into<WidgetText>,\n                                                   impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668924,"byte_end":668964,"line_start":34,"line_end":34,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6039},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671681,"byte_end":671686,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Image","qualname":"::widgets::image::Image","value":"Image {  }","parent":null,"children":[{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6042},{"krate":0,"index":6043},{"krate":0,"index":6044},{"krate":0,"index":6045}],"decl_id":null,"docs":" An widget to show an image of a given size.","sig":null,"attributes":[{"value":"/ An widget to show an image of a given size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670739,"byte_end":670786,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670787,"byte_end":670790,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ In order to display an image you must first acquire a [`TextureHandle`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670791,"byte_end":670866,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ using [`Context::load_texture`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670867,"byte_end":670903,"line_start":6,"line_end":6,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670904,"byte_end":670907,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670908,"byte_end":670915,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ struct MyImage {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670916,"byte_end":670936,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"/     texture: Option<egui::TextureHandle>,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670937,"byte_end":670982,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670983,"byte_end":670988,"line_start":11,"line_end":11,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670989,"byte_end":670992,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ impl MyImage {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":670993,"byte_end":671011,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/     fn ui(&mut self, ui: &mut egui::Ui) {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671012,"byte_end":671057,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/         let texture: &egui::TextureHandle = self.texture.get_or_insert_with(|| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671058,"byte_end":671142,"line_start":15,"line_end":15,"column_start":1,"column_end":85}},{"value":"/             // Load the texture only once.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671143,"byte_end":671189,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/             ui.ctx().load_texture(\"my-image\", egui::ColorImage::example())","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671190,"byte_end":671268,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/         });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671269,"byte_end":671284,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671285,"byte_end":671288,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/         // Show the image:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671289,"byte_end":671319,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/         ui.add(egui::Image::new(texture, texture.size_vec2()));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671320,"byte_end":671387,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671388,"byte_end":671391,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/         // Shorter version:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671392,"byte_end":671423,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/         ui.image(texture, texture.size_vec2());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671424,"byte_end":671475,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671476,"byte_end":671485,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671486,"byte_end":671491,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671492,"byte_end":671499,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671500,"byte_end":671503,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Se also [`crate::Ui::image`] and [`crate::ImageButton`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671504,"byte_end":671564,"line_start":29,"line_end":29,"column_start":1,"column_end":61}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671565,"byte_end":671639,"line_start":30,"line_end":30,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2858},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671832,"byte_end":671835,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Image>::new","value":"pub fn new<impl Into<TextureId>: Into<TextureId>,\n           impl Into<Vec2>: Into<Vec2>>(impl Into<TextureId>, impl Into<Vec2>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672273,"byte_end":672275,"line_start":54,"line_end":54,"column_start":12,"column_end":14},"name":"uv","qualname":"<Image>::uv","value":"pub fn uv<impl Into<Rect>: Into<Rect>>(Self, impl Into<Rect>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Select UV range. Default is (0,0) in top-left, (1,1) bottom right.\n","sig":null,"attributes":[{"value":"/ Select UV range. Default is (0,0) in top-left, (1,1) bottom right.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672191,"byte_end":672261,"line_start":53,"line_end":53,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672455,"byte_end":672462,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"bg_fill","qualname":"<Image>::bg_fill","value":"pub fn bg_fill<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A solid color to put behind the image. Useful for transparent images.\n","sig":null,"attributes":[{"value":"/ A solid color to put behind the image. Useful for transparent images.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672370,"byte_end":672443,"line_start":59,"line_end":59,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672650,"byte_end":672654,"line_start":66,"line_end":66,"column_start":12,"column_end":16},"name":"tint","qualname":"<Image>::tint","value":"pub fn tint<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiply image color with this. Default is WHITE (no tint).\n","sig":null,"attributes":[{"value":"/ Multiply image color with this. Default is WHITE (no tint).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672575,"byte_end":672638,"line_start":65,"line_end":65,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672900,"byte_end":672905,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"sense","qualname":"<Image>::sense","value":"pub fn sense(Self, Sense) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make the image respond to clicks and/or drags.","sig":null,"attributes":[{"value":"/ Make the image respond to clicks and/or drags.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672758,"byte_end":672808,"line_start":71,"line_end":71,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672813,"byte_end":672816,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Consider using [`ImageButton`] instead, for an on-hover effect.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672821,"byte_end":672888,"line_start":73,"line_end":73,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":673014,"byte_end":673018,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"size","qualname":"<Image>::size","value":"pub fn size(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":673072,"byte_end":673080,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"paint_at","qualname":"<Image>::paint_at","value":"pub fn paint_at(&Self, &mut Ui, Rect)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674536,"byte_end":674541,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Label","qualname":"::widgets::label::Label","value":"Label {  }","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883}],"decl_id":null,"docs":" Static text.","sig":null,"attributes":[{"value":"/ Static text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674114,"byte_end":674130,"line_start":3,"line_end":3,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674131,"byte_end":674134,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Usually it is more convenient to use [`Ui::label`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674135,"byte_end":674190,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674191,"byte_end":674194,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674195,"byte_end":674202,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674203,"byte_end":674235,"line_start":8,"line_end":8,"column_start":1,"column_end":33}},{"value":"/ ui.label(\"Equivalent\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674236,"byte_end":674263,"line_start":9,"line_end":9,"column_start":1,"column_end":28}},{"value":"/ ui.add(egui::Label::new(\"Equivalent\"));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674264,"byte_end":674307,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"/ ui.add(egui::Label::new(\"With Options\").wrap(false));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674308,"byte_end":674365,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/ ui.label(egui::RichText::new(\"With formatting\").underline());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674366,"byte_end":674431,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674432,"byte_end":674441,"line_start":13,"line_end":13,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674442,"byte_end":674449,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674450,"byte_end":674524,"line_start":15,"line_end":15,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674635,"byte_end":674638,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Label>::new","value":"pub fn new<impl Into<WidgetText>: Into<WidgetText>>(impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674830,"byte_end":674834,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"text","qualname":"<Label>::text","value":"pub fn text(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675243,"byte_end":675247,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"wrap","qualname":"<Label>::wrap","value":"pub fn wrap(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If `true`, the text will wrap to stay within the max width of the `Ui`.","sig":null,"attributes":[{"value":"/ If `true`, the text will wrap to stay within the max width of the `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674888,"byte_end":674963,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674968,"byte_end":674971,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ By default [`Self::wrap`] will be true in vertical layouts","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674976,"byte_end":675038,"line_start":37,"line_end":37,"column_start":5,"column_end":67}},{"value":"/ and horizontal layouts with wrapping,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675043,"byte_end":675084,"line_start":38,"line_end":38,"column_start":5,"column_end":46}},{"value":"/ and false on non-wrapping horizontal layouts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675089,"byte_end":675138,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675143,"byte_end":675146,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Note that any `\\n` in the text will always produce a new line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675151,"byte_end":675217,"line_start":41,"line_end":41,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675222,"byte_end":675231,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675872,"byte_end":675877,"line_start":62,"line_end":62,"column_start":12,"column_end":17},"name":"sense","qualname":"<Label>::sense","value":"pub fn sense(Self, Sense) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make the label respond to clicks and/or drags.","sig":null,"attributes":[{"value":"/ Make the label respond to clicks and/or drags.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675336,"byte_end":675386,"line_start":48,"line_end":48,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675391,"byte_end":675394,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ By default, a label is inert and does not respond to click or drags.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675399,"byte_end":675471,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/ By calling this you can turn the label into a button of sorts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675476,"byte_end":675542,"line_start":51,"line_end":51,"column_start":5,"column_end":71}},{"value":"/ This will also give the label the hover-effect of a button, but without the frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675547,"byte_end":675633,"line_start":52,"line_end":52,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675638,"byte_end":675641,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675646,"byte_end":675653,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"/ # use egui::{Label, Sense};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675658,"byte_end":675689,"line_start":55,"line_end":55,"column_start":5,"column_end":36}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675694,"byte_end":675726,"line_start":56,"line_end":56,"column_start":5,"column_end":37}},{"value":"/ if ui.add(Label::new(\"click me\").sense(Sense::click())).clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675731,"byte_end":675802,"line_start":57,"line_end":57,"column_start":5,"column_end":76}},{"value":"/     /* … */","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675807,"byte_end":675824,"line_start":58,"line_end":58,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675829,"byte_end":675834,"line_start":59,"line_end":59,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675839,"byte_end":675848,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675853,"byte_end":675860,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":676082,"byte_end":676094,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"layout_in_ui","qualname":"<Label>::layout_in_ui","value":"pub fn layout_in_ui(Self, &mut Ui) -> (Pos2, WidgetTextGalley, Response)","parent":null,"children":[],"decl_id":null,"docs":" Do layout and position the galley in the ui, without painting it or adding widget info.\n","sig":null,"attributes":[{"value":"/ Do layout and position the galley in the ui, without painting it or adding widget info.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675979,"byte_end":676070,"line_start":69,"line_end":69,"column_start":5,"column_end":96}}]},{"kind":"Mod","id":{"krate":0,"index":2896},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"plot","qualname":"::widgets::plot","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","parent":null,"children":[{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2901},{"krate":0,"index":2904},{"krate":0,"index":2907},{"krate":0,"index":2908},{"krate":0,"index":2911},{"krate":0,"index":2914},{"krate":0,"index":2917},{"krate":0,"index":2920},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2927},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2934},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2943},{"krate":0,"index":2946},{"krate":0,"index":2949},{"krate":0,"index":2952},{"krate":0,"index":2955},{"krate":0,"index":2958},{"krate":0,"index":2961},{"krate":0,"index":2964},{"krate":0,"index":2967},{"krate":0,"index":2970},{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":2979},{"krate":0,"index":2982},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":3630},{"krate":0,"index":3677},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736},{"krate":0,"index":3737},{"krate":0,"index":3739},{"krate":0,"index":3745},{"krate":0,"index":6290},{"krate":0,"index":6297},{"krate":0,"index":3747},{"krate":0,"index":6299},{"krate":0,"index":6303},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":3750},{"krate":0,"index":3759},{"krate":0,"index":3785},{"krate":0,"index":3832},{"krate":0,"index":3838},{"krate":0,"index":3857},{"krate":0,"index":3868}],"decl_id":null,"docs":" Simple plotting library.\n","sig":null,"attributes":[{"value":"/ Simple plotting library.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":680708,"byte_end":680736,"line_start":1,"line_end":1,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":6051},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770116,"byte_end":770119,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"Bar","qualname":"::widgets::plot::items::bar::Bar","value":"Bar { name, orientation, argument, value, base_offset, bar_width, stroke, fill }","parent":null,"children":[{"krate":0,"index":6052},{"krate":0,"index":6053},{"krate":0,"index":6054},{"krate":0,"index":6055},{"krate":0,"index":6056},{"krate":0,"index":6057},{"krate":0,"index":6058},{"krate":0,"index":6059}],"decl_id":null,"docs":" One bar in a [`BarChart`]. Potentially floating, allowing stacked bar charts.\n Width can be changed to allow variable-width histograms.\n","sig":null,"attributes":[{"value":"/ One bar in a [`BarChart`]. Potentially floating, allowing stacked bar charts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":769927,"byte_end":770008,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/ Width can be changed to allow variable-width histograms.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770009,"byte_end":770069,"line_start":8,"line_end":8,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6052},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770207,"byte_end":770211,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"name":"name","qualname":"::widgets::plot::items::bar::Bar::name","value":"std::string::String","parent":{"krate":0,"index":6051},"children":[],"decl_id":null,"docs":" Name of plot element in the diagram (annotated by default formatter)\n","sig":null,"attributes":[{"value":"/ Name of plot element in the diagram (annotated by default formatter)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770126,"byte_end":770198,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":6053},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770283,"byte_end":770294,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"name":"orientation","qualname":"::widgets::plot::items::bar::Bar::orientation","value":"widgets::plot::items::values::Orientation","parent":{"krate":0,"index":6051},"children":[],"decl_id":null,"docs":" Which direction the bar faces in the diagram\n","sig":null,"attributes":[{"value":"/ Which direction the bar faces in the diagram","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770226,"byte_end":770274,"line_start":14,"line_end":14,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":6054},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770398,"byte_end":770406,"line_start":18,"line_end":18,"column_start":9,"column_end":17},"name":"argument","qualname":"::widgets::plot::items::bar::Bar::argument","value":"f64","parent":{"krate":0,"index":6051},"children":[],"decl_id":null,"docs":" Position on the argument (input) axis -- X if vertical, Y if horizontal\n","sig":null,"attributes":[{"value":"/ Position on the argument (input) axis -- X if vertical, Y if horizontal","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770314,"byte_end":770389,"line_start":17,"line_end":17,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":6055},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770500,"byte_end":770505,"line_start":21,"line_end":21,"column_start":9,"column_end":14},"name":"value","qualname":"::widgets::plot::items::bar::Bar::value","value":"f64","parent":{"krate":0,"index":6051},"children":[],"decl_id":null,"docs":" Position on the value (output) axis -- Y if vertical, X if horizontal\n","sig":null,"attributes":[{"value":"/ Position on the value (output) axis -- Y if vertical, X if horizontal","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770418,"byte_end":770491,"line_start":20,"line_end":20,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":6056},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770600,"byte_end":770611,"line_start":24,"line_end":24,"column_start":9,"column_end":20},"name":"base_offset","qualname":"::widgets::plot::items::bar::Bar::base_offset","value":"std::option::Option<f64>","parent":{"krate":0,"index":6051},"children":[],"decl_id":null,"docs":" For stacked bars, this denotes where the bar starts. None if base axis\n","sig":null,"attributes":[{"value":"/ For stacked bars, this denotes where the bar starts. None if base axis","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770517,"byte_end":770591,"line_start":23,"line_end":23,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":6057},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770664,"byte_end":770673,"line_start":27,"line_end":27,"column_start":9,"column_end":18},"name":"bar_width","qualname":"::widgets::plot::items::bar::Bar::bar_width","value":"f64","parent":{"krate":0,"index":6051},"children":[],"decl_id":null,"docs":" Thickness of the bar\n","sig":null,"attributes":[{"value":"/ Thickness of the bar","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770631,"byte_end":770655,"line_start":26,"line_end":26,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":6058},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770718,"byte_end":770724,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"stroke","qualname":"::widgets::plot::items::bar::Bar::stroke","value":"epaint::Stroke","parent":{"krate":0,"index":6051},"children":[],"decl_id":null,"docs":" Line width and color\n","sig":null,"attributes":[{"value":"/ Line width and color","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770685,"byte_end":770709,"line_start":29,"line_end":29,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":6059},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770762,"byte_end":770766,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"name":"fill","qualname":"::widgets::plot::items::bar::Bar::fill","value":"epaint::Color32","parent":{"krate":0,"index":6051},"children":[],"decl_id":null,"docs":" Fill color\n","sig":null,"attributes":[{"value":"/ Fill color","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770739,"byte_end":770753,"line_start":32,"line_end":32,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3094},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771095,"byte_end":771098,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Bar>::new","value":"pub fn new(f64, f64) -> Bar","parent":null,"children":[],"decl_id":null,"docs":" Create a bar. Its `orientation` is set by its [`BarChart`] parent.","sig":null,"attributes":[{"value":"/ Create a bar. Its `orientation` is set by its [`BarChart`] parent.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770795,"byte_end":770865,"line_start":37,"line_end":37,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770870,"byte_end":770873,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ - `argument`: Position on the argument axis (X if vertical, Y if horizontal).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770878,"byte_end":770959,"line_start":39,"line_end":39,"column_start":5,"column_end":86}},{"value":"/ - `value`: Height of the bar (if vertical).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770964,"byte_end":771011,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771016,"byte_end":771019,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ By default the bar is vertical and its base is at zero.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771024,"byte_end":771083,"line_start":42,"line_end":42,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3095},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771558,"byte_end":771562,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"name","qualname":"<Bar>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this bar chart element.\n","sig":null,"attributes":[{"value":"/ Name of this bar chart element.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771466,"byte_end":771501,"line_start":56,"line_end":56,"column_start":5,"column_end":40}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771506,"byte_end":771546,"line_start":57,"line_end":57,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3097},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771702,"byte_end":771708,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Bar>::stroke","value":"pub fn stroke<impl Into<Stroke>: Into<Stroke>>(Self, impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a custom stroke.\n","sig":null,"attributes":[{"value":"/ Add a custom stroke.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771666,"byte_end":771690,"line_start":63,"line_end":63,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3099},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771857,"byte_end":771861,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"fill","qualname":"<Bar>::fill","value":"pub fn fill<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a custom fill color.\n","sig":null,"attributes":[{"value":"/ Add a custom fill color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771817,"byte_end":771845,"line_start":69,"line_end":69,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":772114,"byte_end":772125,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"base_offset","qualname":"<Bar>::base_offset","value":"pub fn base_offset(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Offset the base of the bar.\n This offset is on the Y axis for a vertical bar\n and on the X axis for a horizontal bar.\n","sig":null,"attributes":[{"value":"/ Offset the base of the bar.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":771967,"byte_end":771998,"line_start":75,"line_end":75,"column_start":5,"column_end":36}},{"value":"/ This offset is on the Y axis for a vertical bar","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":772003,"byte_end":772054,"line_start":76,"line_end":76,"column_start":5,"column_end":56}},{"value":"/ and on the X axis for a horizontal bar.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":772059,"byte_end":772102,"line_start":77,"line_end":77,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":772258,"byte_end":772263,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"width","qualname":"<Bar>::width","value":"pub fn width(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the bar width.\n","sig":null,"attributes":[{"value":"/ Set the bar width.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":772224,"byte_end":772246,"line_start":83,"line_end":83,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":772431,"byte_end":772439,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"vertical","qualname":"<Bar>::vertical","value":"pub fn vertical(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set orientation of the element as vertical. Argument axis is X.\n","sig":null,"attributes":[{"value":"/ Set orientation of the element as vertical. Argument axis is X.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":772352,"byte_end":772419,"line_start":89,"line_end":89,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":772615,"byte_end":772625,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<Bar>::horizontal","value":"pub fn horizontal(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set orientation of the element as horizontal. Argument axis is Y.\n","sig":null,"attributes":[{"value":"/ Set orientation of the element as horizontal. Argument axis is Y.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":772534,"byte_end":772603,"line_start":95,"line_end":95,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6068},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775530,"byte_end":775539,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"BoxSpread","qualname":"::widgets::plot::items::box_elem::BoxSpread","value":"BoxSpread { lower_whisker, quartile1, median, quartile3, upper_whisker }","parent":null,"children":[{"krate":0,"index":6069},{"krate":0,"index":6070},{"krate":0,"index":6071},{"krate":0,"index":6072},{"krate":0,"index":6073}],"decl_id":null,"docs":" Contains the values of a single box in a box plot.\n","sig":null,"attributes":[{"value":"/ Contains the values of a single box in a box plot.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775429,"byte_end":775483,"line_start":7,"line_end":7,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6069},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775676,"byte_end":775689,"line_start":13,"line_end":13,"column_start":9,"column_end":22},"name":"lower_whisker","qualname":"::widgets::plot::items::box_elem::BoxSpread::lower_whisker","value":"f64","parent":{"krate":0,"index":6068},"children":[],"decl_id":null,"docs":" Value of lower whisker (typically minimum).","sig":null,"attributes":[{"value":"/ Value of lower whisker (typically minimum).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775546,"byte_end":775593,"line_start":10,"line_end":10,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775598,"byte_end":775601,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ The whisker is not drawn if `lower_whisker >= quartile1`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775606,"byte_end":775667,"line_start":12,"line_end":12,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":6070},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775767,"byte_end":775776,"line_start":16,"line_end":16,"column_start":9,"column_end":18},"name":"quartile1","qualname":"::widgets::plot::items::box_elem::BoxSpread::quartile1","value":"f64","parent":{"krate":0,"index":6068},"children":[],"decl_id":null,"docs":" Value of lower box threshold (typically 25% quartile)\n","sig":null,"attributes":[{"value":"/ Value of lower box threshold (typically 25% quartile)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775701,"byte_end":775758,"line_start":15,"line_end":15,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":6071},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775847,"byte_end":775853,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"name":"median","qualname":"::widgets::plot::items::box_elem::BoxSpread::median","value":"f64","parent":{"krate":0,"index":6068},"children":[],"decl_id":null,"docs":" Value of middle line in box (typically median)\n","sig":null,"attributes":[{"value":"/ Value of middle line in box (typically median)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775788,"byte_end":775838,"line_start":18,"line_end":18,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":6072},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775931,"byte_end":775940,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"name":"quartile3","qualname":"::widgets::plot::items::box_elem::BoxSpread::quartile3","value":"f64","parent":{"krate":0,"index":6068},"children":[],"decl_id":null,"docs":" Value of upper box threshold (typically 75% quartile)\n","sig":null,"attributes":[{"value":"/ Value of upper box threshold (typically 75% quartile)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775865,"byte_end":775922,"line_start":21,"line_end":21,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":6073},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776081,"byte_end":776094,"line_start":27,"line_end":27,"column_start":9,"column_end":22},"name":"upper_whisker","qualname":"::widgets::plot::items::box_elem::BoxSpread::upper_whisker","value":"f64","parent":{"krate":0,"index":6068},"children":[],"decl_id":null,"docs":" Value of upper whisker (typically maximum)","sig":null,"attributes":[{"value":"/ Value of upper whisker (typically maximum)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":775952,"byte_end":775998,"line_start":24,"line_end":24,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776003,"byte_end":776006,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The whisker is not drawn if `upper_whisker <= quartile3`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776011,"byte_end":776072,"line_start":26,"line_end":26,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776132,"byte_end":776135,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxSpread>::new","value":"pub fn new(f64, f64, f64, f64, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6082},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776696,"byte_end":776703,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"BoxElem","qualname":"::widgets::plot::items::box_elem::BoxElem","value":"BoxElem { name, orientation, argument, spread, box_width, whisker_width, stroke, fill }","parent":null,"children":[{"krate":0,"index":6083},{"krate":0,"index":6084},{"krate":0,"index":6085},{"krate":0,"index":6086},{"krate":0,"index":6087},{"krate":0,"index":6088},{"krate":0,"index":6089},{"krate":0,"index":6090}],"decl_id":null,"docs":" A box in a [`BoxPlot`] diagram. This is a low level graphical element; it will not compute quartiles and whiskers,\n letting one use their preferred formula. Use [`Points`][`super::Points`] to draw the outliers.\n","sig":null,"attributes":[{"value":"/ A box in a [`BoxPlot`] diagram. This is a low level graphical element; it will not compute quartiles and whiskers,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776432,"byte_end":776550,"line_start":48,"line_end":48,"column_start":1,"column_end":119}},{"value":"/ letting one use their preferred formula. Use [`Points`][`super::Points`] to draw the outliers.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776551,"byte_end":776649,"line_start":49,"line_end":49,"column_start":1,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":6083},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776792,"byte_end":776796,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"name":"name","qualname":"::widgets::plot::items::box_elem::BoxElem::name","value":"std::string::String","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":" Name of plot element in the diagram (annotated by default formatter).\n","sig":null,"attributes":[{"value":"/ Name of plot element in the diagram (annotated by default formatter).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776710,"byte_end":776783,"line_start":52,"line_end":52,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":6084},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776869,"byte_end":776880,"line_start":56,"line_end":56,"column_start":9,"column_end":20},"name":"orientation","qualname":"::widgets::plot::items::box_elem::BoxElem::orientation","value":"widgets::plot::items::values::Orientation","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":" Which direction the box faces in the diagram.\n","sig":null,"attributes":[{"value":"/ Which direction the box faces in the diagram.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776811,"byte_end":776860,"line_start":55,"line_end":55,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":6085},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776985,"byte_end":776993,"line_start":59,"line_end":59,"column_start":9,"column_end":17},"name":"argument","qualname":"::widgets::plot::items::box_elem::BoxElem::argument","value":"f64","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":" Position on the argument (input) axis -- X if vertical, Y if horizontal.\n","sig":null,"attributes":[{"value":"/ Position on the argument (input) axis -- X if vertical, Y if horizontal.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776900,"byte_end":776976,"line_start":58,"line_end":58,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":6086},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777035,"byte_end":777041,"line_start":62,"line_end":62,"column_start":9,"column_end":15},"name":"spread","qualname":"::widgets::plot::items::box_elem::BoxElem::spread","value":"widgets::plot::items::box_elem::BoxSpread","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":" Values of the box\n","sig":null,"attributes":[{"value":"/ Values of the box","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777005,"byte_end":777026,"line_start":61,"line_end":61,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":6087},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777092,"byte_end":777101,"line_start":65,"line_end":65,"column_start":9,"column_end":18},"name":"box_width","qualname":"::widgets::plot::items::box_elem::BoxElem::box_width","value":"f64","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":" Thickness of the box\n","sig":null,"attributes":[{"value":"/ Thickness of the box","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777059,"byte_end":777083,"line_start":64,"line_end":64,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":6088},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777165,"byte_end":777178,"line_start":68,"line_end":68,"column_start":9,"column_end":22},"name":"whisker_width","qualname":"::widgets::plot::items::box_elem::BoxElem::whisker_width","value":"f64","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":" Width of the whisker at minimum/maximum\n","sig":null,"attributes":[{"value":"/ Width of the whisker at minimum/maximum","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777113,"byte_end":777156,"line_start":67,"line_end":67,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":6089},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777223,"byte_end":777229,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"name":"stroke","qualname":"::widgets::plot::items::box_elem::BoxElem::stroke","value":"epaint::Stroke","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":" Line width and color\n","sig":null,"attributes":[{"value":"/ Line width and color","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777190,"byte_end":777214,"line_start":70,"line_end":70,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":6090},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777267,"byte_end":777271,"line_start":74,"line_end":74,"column_start":9,"column_end":13},"name":"fill","qualname":"::widgets::plot::items::box_elem::BoxElem::fill","value":"epaint::Color32","parent":{"krate":0,"index":6082},"children":[],"decl_id":null,"docs":" Fill color\n","sig":null,"attributes":[{"value":"/ Fill color","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777244,"byte_end":777258,"line_start":73,"line_end":73,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777460,"byte_end":777463,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxElem>::new","value":"pub fn new(f64, BoxSpread) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a box element. Its `orientation` is set by its [`BoxPlot`] parent.","sig":null,"attributes":[{"value":"/ Create a box element. Its `orientation` is set by its [`BoxPlot`] parent.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777304,"byte_end":777381,"line_start":78,"line_end":78,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777386,"byte_end":777389,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Check [`BoxElem`] fields for detailed description.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777394,"byte_end":777448,"line_start":80,"line_end":80,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777920,"byte_end":777924,"line_start":96,"line_end":96,"column_start":12,"column_end":16},"name":"name","qualname":"<BoxElem>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this box element.\n","sig":null,"attributes":[{"value":"/ Name of this box element.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777834,"byte_end":777863,"line_start":94,"line_end":94,"column_start":5,"column_end":34}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777868,"byte_end":777908,"line_start":95,"line_end":95,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778064,"byte_end":778070,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"stroke","qualname":"<BoxElem>::stroke","value":"pub fn stroke<impl Into<Stroke>: Into<Stroke>>(Self, impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a custom stroke.\n","sig":null,"attributes":[{"value":"/ Add a custom stroke.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778028,"byte_end":778052,"line_start":101,"line_end":101,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778219,"byte_end":778223,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"fill","qualname":"<BoxElem>::fill","value":"pub fn fill<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a custom fill color.\n","sig":null,"attributes":[{"value":"/ Add a custom fill color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778179,"byte_end":778207,"line_start":107,"line_end":107,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778363,"byte_end":778372,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"box_width","qualname":"<BoxElem>::box_width","value":"pub fn box_width(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the box width.\n","sig":null,"attributes":[{"value":"/ Set the box width.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778329,"byte_end":778351,"line_start":113,"line_end":113,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778499,"byte_end":778512,"line_start":120,"line_end":120,"column_start":12,"column_end":25},"name":"whisker_width","qualname":"<BoxElem>::whisker_width","value":"pub fn whisker_width(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the whisker width.\n","sig":null,"attributes":[{"value":"/ Set the whisker width.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778461,"byte_end":778487,"line_start":119,"line_end":119,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778684,"byte_end":778692,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"vertical","qualname":"<BoxElem>::vertical","value":"pub fn vertical(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set orientation of the element as vertical. Argument axis is X.\n","sig":null,"attributes":[{"value":"/ Set orientation of the element as vertical. Argument axis is X.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778605,"byte_end":778672,"line_start":125,"line_end":125,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778868,"byte_end":778878,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<BoxElem>::horizontal","value":"pub fn horizontal(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set orientation of the element as horizontal. Argument axis is Y.\n","sig":null,"attributes":[{"value":"/ Set orientation of the element as horizontal. Argument axis is Y.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":778787,"byte_end":778856,"line_start":131,"line_end":131,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6099},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786605,"byte_end":786610,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Value","qualname":"::widgets::plot::items::values::Value","value":"Value { x, y }","parent":null,"children":[{"krate":0,"index":6100},{"krate":0,"index":6101}],"decl_id":null,"docs":" A value in the value-space of the plot.","sig":null,"attributes":[{"value":"/ A value in the value-space of the plot.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786406,"byte_end":786449,"line_start":6,"line_end":6,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786450,"byte_end":786453,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Uses f64 for improved accuracy to enable plotting","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786454,"byte_end":786507,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/ large values (e.g. unix time on x axis).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786508,"byte_end":786552,"line_start":9,"line_end":9,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":6100},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786750,"byte_end":786751,"line_start":14,"line_end":14,"column_start":9,"column_end":10},"name":"x","qualname":"::widgets::plot::items::values::Value::x","value":"f64","parent":{"krate":0,"index":6099},"children":[],"decl_id":null,"docs":" This is often something monotonically increasing, such as time, but doesn't have to be.\n Goes from left to right.\n","sig":null,"attributes":[{"value":"/ This is often something monotonically increasing, such as time, but doesn't have to be.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786617,"byte_end":786708,"line_start":12,"line_end":12,"column_start":5,"column_end":96}},{"value":"/ Goes from left to right.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786713,"byte_end":786741,"line_start":13,"line_end":13,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":6101},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786837,"byte_end":786838,"line_start":16,"line_end":16,"column_start":9,"column_end":10},"name":"y","qualname":"::widgets::plot::items::values::Value::y","value":"f64","parent":{"krate":0,"index":6099},"children":[],"decl_id":null,"docs":" Goes from bottom to top (inverse of everything else in egui!).\n","sig":null,"attributes":[{"value":"/ Goes from bottom to top (inverse of everything else in egui!).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786762,"byte_end":786828,"line_start":15,"line_end":15,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786894,"byte_end":786897,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Value>::new","value":"pub fn new<impl Into<f64>: Into<f64>,\n           impl Into<f64>: Into<f64>>(impl Into<f64>, impl Into<f64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786865,"byte_end":786882,"line_start":20,"line_end":20,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3262},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787061,"byte_end":787068,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"to_pos2","qualname":"<Value>::to_pos2","value":"pub fn to_pos2(Self) -> Pos2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787032,"byte_end":787049,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787173,"byte_end":787180,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"to_vec2","qualname":"<Value>::to_vec2","value":"pub fn to_vec2(Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787144,"byte_end":787161,"line_start":33,"line_end":33,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6112},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787401,"byte_end":787406,"line_start":43,"line_end":43,"column_start":5,"column_end":10},"name":"Solid","qualname":"::widgets::plot::items::values::LineStyle::Solid","value":"LineStyle::Solid","parent":{"krate":0,"index":6111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6114},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787412,"byte_end":787418,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Dotted","qualname":"::widgets::plot::items::values::LineStyle::Dotted","value":"LineStyle::Dotted { spacing }","parent":{"krate":0,"index":6111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6116},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787441,"byte_end":787447,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"Dashed","qualname":"::widgets::plot::items::values::LineStyle::Dashed","value":"LineStyle::Dashed { length }","parent":{"krate":0,"index":6111},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6111},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787385,"byte_end":787394,"line_start":42,"line_end":42,"column_start":10,"column_end":19},"name":"LineStyle","qualname":"::widgets::plot::items::values::LineStyle","value":"pub enum LineStyle {\n    Solid,\n    Dotted {\n        spacing: f32,\n    },\n    Dashed {\n        length: f32,\n    },\n}","parent":null,"children":[{"krate":0,"index":6112},{"krate":0,"index":6114},{"krate":0,"index":6116}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787496,"byte_end":787508,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"dashed_loose","qualname":"<LineStyle>::dashed_loose","value":"pub fn dashed_loose() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787577,"byte_end":787589,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"dashed_dense","qualname":"<LineStyle>::dashed_dense","value":"pub fn dashed_dense() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787657,"byte_end":787669,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"dotted_loose","qualname":"<LineStyle>::dotted_loose","value":"pub fn dotted_loose() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787739,"byte_end":787751,"line_start":61,"line_end":61,"column_start":12,"column_end":24},"name":"dotted_dense","qualname":"<LineStyle>::dotted_dense","value":"pub fn dotted_dense() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6128},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790195,"byte_end":790205,"line_start":131,"line_end":131,"column_start":5,"column_end":15},"name":"Horizontal","qualname":"::widgets::plot::items::values::Orientation::Horizontal","value":"Orientation::Horizontal","parent":{"krate":0,"index":6127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6130},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790211,"byte_end":790219,"line_start":132,"line_end":132,"column_start":5,"column_end":13},"name":"Vertical","qualname":"::widgets::plot::items::values::Orientation::Vertical","value":"Orientation::Vertical","parent":{"krate":0,"index":6127},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6127},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790177,"byte_end":790188,"line_start":130,"line_end":130,"column_start":10,"column_end":21},"name":"Orientation","qualname":"::widgets::plot::items::values::Orientation","value":"pub enum Orientation { Horizontal, Vertical, }","parent":null,"children":[{"krate":0,"index":6128},{"krate":0,"index":6130}],"decl_id":null,"docs":" Determines whether a plot element is vertically or horizontally oriented.\n","sig":null,"attributes":[{"value":"/ Determines whether a plot element is vertically or horizontally oriented.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790045,"byte_end":790122,"line_start":128,"line_end":128,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":6143},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790425,"byte_end":790431,"line_start":144,"line_end":144,"column_start":12,"column_end":18},"name":"Values","qualname":"::widgets::plot::items::values::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":6144},{"krate":0,"index":6145}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790539,"byte_end":790550,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"from_values","qualname":"<Values>::from_values","value":"pub fn from_values(Vec<Value>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790673,"byte_end":790689,"line_start":157,"line_end":157,"column_start":12,"column_end":28},"name":"from_values_iter","qualname":"<Values>::from_values_iter","value":"pub fn from_values_iter<impl Iterator<Item = Value>: Iterator<Item =\n                        Value>>(impl Iterator<Item = Value>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790909,"byte_end":790931,"line_start":162,"line_end":162,"column_start":12,"column_end":34},"name":"from_explicit_callback","qualname":"<Values>::from_explicit_callback","value":"pub fn from_explicit_callback<impl Fn(f64) -> f64 + 'static: Fn(f64) -> f64 +\n                              'static,\n                              impl RangeBounds<f64>: RangeBounds<f64>>(impl Fn(f64) -> f64 + 'static,\n                                                                       impl RangeBounds<f64>,\n                                                                       usize)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Draw a line based on a function `y=f(x)`, a range (which can be infinite) for x and the number of points.\n","sig":null,"attributes":[{"value":"/ Draw a line based on a function `y=f(x)`, a range (which can be infinite) for x and the number of points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790788,"byte_end":790897,"line_start":161,"line_end":161,"column_start":5,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":791847,"byte_end":791871,"line_start":191,"line_end":191,"column_start":12,"column_end":36},"name":"from_parametric_callback","qualname":"<Values>::from_parametric_callback","value":"pub fn from_parametric_callback<impl Fn(f64) -> (f64, f64): Fn(f64) ->\n                                (f64, f64),\n                                impl RangeBounds<f64>: RangeBounds<f64>>(impl Fn(f64) -> (f64, f64),\n                                                                         impl RangeBounds<f64>,\n                                                                         usize)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Draw a line based on a function `(x,y)=f(t)`, a range for t and the number of points.\n The range may be specified as start..end or as start..=end.\n","sig":null,"attributes":[{"value":"/ Draw a line based on a function `(x,y)=f(t)`, a range for t and the number of points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":791678,"byte_end":791767,"line_start":189,"line_end":189,"column_start":5,"column_end":94}},{"value":"/ The range may be specified as start..end or as start..=end.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":791772,"byte_end":791835,"line_start":190,"line_end":190,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":793022,"byte_end":793033,"line_start":221,"line_end":221,"column_start":12,"column_end":23},"name":"from_ys_f32","qualname":"<Values>::from_ys_f32","value":"pub fn from_ys_f32(&[f32]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From a series of y-values.\n The x-values will be the indices of these values\n","sig":null,"attributes":[{"value":"/ From a series of y-values.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":792923,"byte_end":792953,"line_start":219,"line_end":219,"column_start":5,"column_end":35}},{"value":"/ The x-values will be the indices of these values","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":792958,"byte_end":793010,"line_start":220,"line_end":220,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6149},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795084,"byte_end":795090,"line_start":279,"line_end":279,"column_start":5,"column_end":11},"name":"Circle","qualname":"::widgets::plot::items::values::MarkerShape::Circle","value":"MarkerShape::Circle","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6151},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795096,"byte_end":795103,"line_start":280,"line_end":280,"column_start":5,"column_end":12},"name":"Diamond","qualname":"::widgets::plot::items::values::MarkerShape::Diamond","value":"MarkerShape::Diamond","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6153},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795109,"byte_end":795115,"line_start":281,"line_end":281,"column_start":5,"column_end":11},"name":"Square","qualname":"::widgets::plot::items::values::MarkerShape::Square","value":"MarkerShape::Square","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6155},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795121,"byte_end":795126,"line_start":282,"line_end":282,"column_start":5,"column_end":10},"name":"Cross","qualname":"::widgets::plot::items::values::MarkerShape::Cross","value":"MarkerShape::Cross","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6157},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795132,"byte_end":795136,"line_start":283,"line_end":283,"column_start":5,"column_end":9},"name":"Plus","qualname":"::widgets::plot::items::values::MarkerShape::Plus","value":"MarkerShape::Plus","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6159},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795142,"byte_end":795144,"line_start":284,"line_end":284,"column_start":5,"column_end":7},"name":"Up","qualname":"::widgets::plot::items::values::MarkerShape::Up","value":"MarkerShape::Up","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6161},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795150,"byte_end":795154,"line_start":285,"line_end":285,"column_start":5,"column_end":9},"name":"Down","qualname":"::widgets::plot::items::values::MarkerShape::Down","value":"MarkerShape::Down","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6163},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795160,"byte_end":795164,"line_start":286,"line_end":286,"column_start":5,"column_end":9},"name":"Left","qualname":"::widgets::plot::items::values::MarkerShape::Left","value":"MarkerShape::Left","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6165},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795170,"byte_end":795175,"line_start":287,"line_end":287,"column_start":5,"column_end":10},"name":"Right","qualname":"::widgets::plot::items::values::MarkerShape::Right","value":"MarkerShape::Right","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6167},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795181,"byte_end":795189,"line_start":288,"line_end":288,"column_start":5,"column_end":13},"name":"Asterisk","qualname":"::widgets::plot::items::values::MarkerShape::Asterisk","value":"MarkerShape::Asterisk","parent":{"krate":0,"index":6148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6148},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795066,"byte_end":795077,"line_start":278,"line_end":278,"column_start":10,"column_end":21},"name":"MarkerShape","qualname":"::widgets::plot::items::values::MarkerShape","value":"pub enum MarkerShape {\n    Circle,\n    Diamond,\n    Square,\n    Cross,\n    Plus,\n    Up,\n    Down,\n    Left,\n    Right,\n    Asterisk,\n}","parent":null,"children":[{"krate":0,"index":6149},{"krate":0,"index":6151},{"krate":0,"index":6153},{"krate":0,"index":6155},{"krate":0,"index":6157},{"krate":0,"index":6159},{"krate":0,"index":6161},{"krate":0,"index":6163},{"krate":0,"index":6165},{"krate":0,"index":6167}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795275,"byte_end":795278,"line_start":293,"line_end":293,"column_start":12,"column_end":15},"name":"all","qualname":"<MarkerShape>::all","value":"pub fn all() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get a vector containing all marker shapes.\n","sig":null,"attributes":[{"value":"/ Get a vector containing all marker shapes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795217,"byte_end":795263,"line_start":292,"line_end":292,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":6180},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721137,"byte_end":721142,"line_start":100,"line_end":100,"column_start":12,"column_end":17},"name":"HLine","qualname":"::widgets::plot::items::HLine","value":"HLine {  }","parent":null,"children":[{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6185}],"decl_id":null,"docs":" A horizontal line in a plot, filling the full width\n","sig":null,"attributes":[{"value":"/ A horizontal line in a plot, filling the full width","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721035,"byte_end":721090,"line_start":98,"line_end":98,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721320,"byte_end":721323,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<HLine>::new","value":"pub fn new<impl Into<f64>: Into<f64>>(impl Into<f64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721649,"byte_end":721658,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"highlight","qualname":"<HLine>::highlight","value":"pub fn highlight(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight this line in the plot by scaling up the line.\n","sig":null,"attributes":[{"value":"/ Highlight this line in the plot by scaling up the line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721578,"byte_end":721637,"line_start":119,"line_end":119,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721785,"byte_end":721791,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"stroke","qualname":"<HLine>::stroke","value":"pub fn stroke<impl Into<Stroke>: Into<Stroke>>(Self, impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stroke.\n","sig":null,"attributes":[{"value":"/ Add a stroke.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721756,"byte_end":721773,"line_start":125,"line_end":125,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721967,"byte_end":721972,"line_start":132,"line_end":132,"column_start":12,"column_end":17},"name":"width","qualname":"<HLine>::width","value":"pub fn width<impl Into<f32>: Into<f32>>(Self, impl Into<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Stroke width. A high value means the plot thickens.\n","sig":null,"attributes":[{"value":"/ Stroke width. A high value means the plot thickens.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721900,"byte_end":721955,"line_start":131,"line_end":131,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722188,"byte_end":722193,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"color","qualname":"<HLine>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Stroke color. Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.\n","sig":null,"attributes":[{"value":"/ Stroke color. Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722082,"byte_end":722176,"line_start":137,"line_end":137,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722375,"byte_end":722380,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"style","qualname":"<HLine>::style","value":"pub fn style(Self, LineStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the line's style. Default is `LineStyle::Solid`.\n","sig":null,"attributes":[{"value":"/ Set the line's style. Default is `LineStyle::Solid`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722307,"byte_end":722363,"line_start":143,"line_end":143,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722774,"byte_end":722778,"line_start":156,"line_end":156,"column_start":12,"column_end":16},"name":"name","qualname":"<HLine>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this horizontal line.","sig":null,"attributes":[{"value":"/ Name of this horizontal line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722471,"byte_end":722504,"line_start":149,"line_end":149,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722509,"byte_end":722512,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ This name will show up in the plot legend, if legends are turned on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722517,"byte_end":722589,"line_start":151,"line_end":151,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722594,"byte_end":722597,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Multiple plot items may share the same name, in which case they will also share an entry in","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722602,"byte_end":722697,"line_start":153,"line_end":153,"column_start":5,"column_end":100}},{"value":"/ the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722702,"byte_end":722717,"line_start":154,"line_end":154,"column_start":5,"column_end":20}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722722,"byte_end":722762,"line_start":155,"line_end":155,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6194},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":724086,"byte_end":724091,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"VLine","qualname":"::widgets::plot::items::VLine","value":"VLine {  }","parent":null,"children":[{"krate":0,"index":6195},{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6198},{"krate":0,"index":6199}],"decl_id":null,"docs":" A vertical line in a plot, filling the full width\n","sig":null,"attributes":[{"value":"/ A vertical line in a plot, filling the full width","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":723986,"byte_end":724039,"line_start":208,"line_end":208,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":724269,"byte_end":724272,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<VLine>::new","value":"pub fn new<impl Into<f64>: Into<f64>>(impl Into<f64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":724598,"byte_end":724607,"line_start":230,"line_end":230,"column_start":12,"column_end":21},"name":"highlight","qualname":"<VLine>::highlight","value":"pub fn highlight(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight this line in the plot by scaling up the line.\n","sig":null,"attributes":[{"value":"/ Highlight this line in the plot by scaling up the line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":724527,"byte_end":724586,"line_start":229,"line_end":229,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":724734,"byte_end":724740,"line_start":236,"line_end":236,"column_start":12,"column_end":18},"name":"stroke","qualname":"<VLine>::stroke","value":"pub fn stroke<impl Into<Stroke>: Into<Stroke>>(Self, impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stroke.\n","sig":null,"attributes":[{"value":"/ Add a stroke.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":724705,"byte_end":724722,"line_start":235,"line_end":235,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":724916,"byte_end":724921,"line_start":242,"line_end":242,"column_start":12,"column_end":17},"name":"width","qualname":"<VLine>::width","value":"pub fn width<impl Into<f32>: Into<f32>>(Self, impl Into<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Stroke width. A high value means the plot thickens.\n","sig":null,"attributes":[{"value":"/ Stroke width. A high value means the plot thickens.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":724849,"byte_end":724904,"line_start":241,"line_end":241,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725137,"byte_end":725142,"line_start":248,"line_end":248,"column_start":12,"column_end":17},"name":"color","qualname":"<VLine>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Stroke color. Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.\n","sig":null,"attributes":[{"value":"/ Stroke color. Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725031,"byte_end":725125,"line_start":247,"line_end":247,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725324,"byte_end":725329,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"style","qualname":"<VLine>::style","value":"pub fn style(Self, LineStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the line's style. Default is `LineStyle::Solid`.\n","sig":null,"attributes":[{"value":"/ Set the line's style. Default is `LineStyle::Solid`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725256,"byte_end":725312,"line_start":253,"line_end":253,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725721,"byte_end":725725,"line_start":266,"line_end":266,"column_start":12,"column_end":16},"name":"name","qualname":"<VLine>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this vertical line.","sig":null,"attributes":[{"value":"/ Name of this vertical line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725420,"byte_end":725451,"line_start":259,"line_end":259,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725456,"byte_end":725459,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This name will show up in the plot legend, if legends are turned on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725464,"byte_end":725536,"line_start":261,"line_end":261,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725541,"byte_end":725544,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Multiple plot items may share the same name, in which case they will also share an entry in","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725549,"byte_end":725644,"line_start":263,"line_end":263,"column_start":5,"column_end":100}},{"value":"/ the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725649,"byte_end":725664,"line_start":264,"line_end":264,"column_start":5,"column_end":20}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725669,"byte_end":725709,"line_start":265,"line_end":265,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":726983,"byte_end":726987,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"Line","qualname":"::widgets::plot::items::Line","value":"Line {  }","parent":null,"children":[{"krate":0,"index":3378},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382},{"krate":0,"index":3383}],"decl_id":null,"docs":" A series of values forming a path.\n","sig":null,"attributes":[{"value":"/ A series of values forming a path.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":726933,"byte_end":726971,"line_start":318,"line_end":318,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3385},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":727206,"byte_end":727209,"line_start":329,"line_end":329,"column_start":12,"column_end":15},"name":"new","qualname":"<Line>::new","value":"pub fn new(Values) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":727552,"byte_end":727561,"line_start":341,"line_end":341,"column_start":12,"column_end":21},"name":"highlight","qualname":"<Line>::highlight","value":"pub fn highlight(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight this line in the plot by scaling up the line.\n","sig":null,"attributes":[{"value":"/ Highlight this line in the plot by scaling up the line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":727481,"byte_end":727540,"line_start":340,"line_end":340,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":727688,"byte_end":727694,"line_start":347,"line_end":347,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Line>::stroke","value":"pub fn stroke<impl Into<Stroke>: Into<Stroke>>(Self, impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a stroke.\n","sig":null,"attributes":[{"value":"/ Add a stroke.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":727659,"byte_end":727676,"line_start":346,"line_end":346,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3389},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":727870,"byte_end":727875,"line_start":353,"line_end":353,"column_start":12,"column_end":17},"name":"width","qualname":"<Line>::width","value":"pub fn width<impl Into<f32>: Into<f32>>(Self, impl Into<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Stroke width. A high value means the plot thickens.\n","sig":null,"attributes":[{"value":"/ Stroke width. A high value means the plot thickens.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":727803,"byte_end":727858,"line_start":352,"line_end":352,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728091,"byte_end":728096,"line_start":359,"line_end":359,"column_start":12,"column_end":17},"name":"color","qualname":"<Line>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Stroke color. Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.\n","sig":null,"attributes":[{"value":"/ Stroke color. Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":727985,"byte_end":728079,"line_start":358,"line_end":358,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728296,"byte_end":728300,"line_start":365,"line_end":365,"column_start":12,"column_end":16},"name":"fill","qualname":"<Line>::fill","value":"pub fn fill<impl Into<f32>: Into<f32>>(Self, impl Into<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Fill the area between this line and a given horizontal reference line.\n","sig":null,"attributes":[{"value":"/ Fill the area between this line and a given horizontal reference line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728210,"byte_end":728284,"line_start":364,"line_end":364,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728488,"byte_end":728493,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"style","qualname":"<Line>::style","value":"pub fn style(Self, LineStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the line's style. Default is `LineStyle::Solid`.\n","sig":null,"attributes":[{"value":"/ Set the line's style. Default is `LineStyle::Solid`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728420,"byte_end":728476,"line_start":370,"line_end":370,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728876,"byte_end":728880,"line_start":383,"line_end":383,"column_start":12,"column_end":16},"name":"name","qualname":"<Line>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this line.","sig":null,"attributes":[{"value":"/ Name of this line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728584,"byte_end":728606,"line_start":376,"line_end":376,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728611,"byte_end":728614,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ This name will show up in the plot legend, if legends are turned on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728619,"byte_end":728691,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728696,"byte_end":728699,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Multiple plot items may share the same name, in which case they will also share an entry in","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728704,"byte_end":728799,"line_start":380,"line_end":380,"column_start":5,"column_end":100}},{"value":"/ the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728804,"byte_end":728819,"line_start":381,"line_end":381,"column_start":5,"column_end":20}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":728824,"byte_end":728864,"line_start":382,"line_end":382,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3411},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":732220,"byte_end":732227,"line_start":486,"line_end":486,"column_start":12,"column_end":19},"name":"Polygon","qualname":"::widgets::plot::items::Polygon","value":"Polygon {  }","parent":null,"children":[{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417}],"decl_id":null,"docs":" A convex polygon.\n","sig":null,"attributes":[{"value":"/ A convex polygon.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":732187,"byte_end":732208,"line_start":485,"line_end":485,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":732447,"byte_end":732450,"line_start":496,"line_end":496,"column_start":12,"column_end":15},"name":"new","qualname":"<Polygon>::new","value":"pub fn new(Values) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3420},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":732861,"byte_end":732870,"line_start":509,"line_end":509,"column_start":12,"column_end":21},"name":"highlight","qualname":"<Polygon>::highlight","value":"pub fn highlight(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight this polygon in the plot by scaling up the stroke and reducing the fill\n transparency.\n","sig":null,"attributes":[{"value":"/ Highlight this polygon in the plot by scaling up the stroke and reducing the fill","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":732742,"byte_end":732827,"line_start":507,"line_end":507,"column_start":5,"column_end":90}},{"value":"/ transparency.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":732832,"byte_end":732849,"line_start":508,"line_end":508,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733004,"byte_end":733010,"line_start":515,"line_end":515,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Polygon>::stroke","value":"pub fn stroke<impl Into<Stroke>: Into<Stroke>>(Self, impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a custom stroke.\n","sig":null,"attributes":[{"value":"/ Add a custom stroke.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":732968,"byte_end":732992,"line_start":514,"line_end":514,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733156,"byte_end":733161,"line_start":521,"line_end":521,"column_start":12,"column_end":17},"name":"width","qualname":"<Polygon>::width","value":"pub fn width<impl Into<f32>: Into<f32>>(Self, impl Into<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the stroke width.\n","sig":null,"attributes":[{"value":"/ Set the stroke width.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733119,"byte_end":733144,"line_start":520,"line_end":520,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733377,"byte_end":733382,"line_start":527,"line_end":527,"column_start":12,"column_end":17},"name":"color","qualname":"<Polygon>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Stroke color. Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.\n","sig":null,"attributes":[{"value":"/ Stroke color. Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733271,"byte_end":733365,"line_start":526,"line_end":526,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733537,"byte_end":733547,"line_start":533,"line_end":533,"column_start":12,"column_end":22},"name":"fill_alpha","qualname":"<Polygon>::fill_alpha","value":"pub fn fill_alpha<impl Into<f32>: Into<f32>>(Self, impl Into<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Alpha of the filled area.\n","sig":null,"attributes":[{"value":"/ Alpha of the filled area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733496,"byte_end":733525,"line_start":532,"line_end":532,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733726,"byte_end":733731,"line_start":539,"line_end":539,"column_start":12,"column_end":17},"name":"style","qualname":"<Polygon>::style","value":"pub fn style(Self, LineStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the outline's style. Default is `LineStyle::Solid`.\n","sig":null,"attributes":[{"value":"/ Set the outline's style. Default is `LineStyle::Solid`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733655,"byte_end":733714,"line_start":538,"line_end":538,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":734117,"byte_end":734121,"line_start":551,"line_end":551,"column_start":12,"column_end":16},"name":"name","qualname":"<Polygon>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this polygon.","sig":null,"attributes":[{"value":"/ Name of this polygon.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733822,"byte_end":733847,"line_start":544,"line_end":544,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733852,"byte_end":733855,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ This name will show up in the plot legend, if legends are turned on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733860,"byte_end":733932,"line_start":546,"line_end":546,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733937,"byte_end":733940,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Multiple plot items may share the same name, in which case they will also share an entry in","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":733945,"byte_end":734040,"line_start":548,"line_end":548,"column_start":5,"column_end":100}},{"value":"/ the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":734045,"byte_end":734060,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":734065,"byte_end":734105,"line_start":550,"line_end":550,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6208},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":735698,"byte_end":735702,"line_start":617,"line_end":617,"column_start":12,"column_end":16},"name":"Text","qualname":"::widgets::plot::items::Text","value":"Text {  }","parent":null,"children":[{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":6211},{"krate":0,"index":6212},{"krate":0,"index":6213},{"krate":0,"index":6214}],"decl_id":null,"docs":" Text inside the plot.\n","sig":null,"attributes":[{"value":"/ Text inside the plot.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":735644,"byte_end":735669,"line_start":615,"line_end":615,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":735919,"byte_end":735922,"line_start":627,"line_end":627,"column_start":12,"column_end":15},"name":"new","qualname":"<Text>::new","value":"pub fn new<impl Into<WidgetText>: Into<WidgetText>>(Value,\n                                                    impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736301,"byte_end":736310,"line_start":639,"line_end":639,"column_start":12,"column_end":21},"name":"highlight","qualname":"<Text>::highlight","value":"pub fn highlight(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight this text in the plot by drawing a rectangle around it.\n","sig":null,"attributes":[{"value":"/ Highlight this text in the plot by drawing a rectangle around it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736220,"byte_end":736289,"line_start":638,"line_end":638,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736435,"byte_end":736440,"line_start":645,"line_end":645,"column_start":12,"column_end":17},"name":"color","qualname":"<Text>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Text color.\n","sig":null,"attributes":[{"value":"/ Text color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736408,"byte_end":736423,"line_start":644,"line_end":644,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3448},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736627,"byte_end":736633,"line_start":651,"line_end":651,"column_start":12,"column_end":18},"name":"anchor","qualname":"<Text>::anchor","value":"pub fn anchor(Self, Align2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Anchor position of the text. Default is `Align2::CENTER_CENTER`.\n","sig":null,"attributes":[{"value":"/ Anchor position of the text. Default is `Align2::CENTER_CENTER`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736547,"byte_end":736615,"line_start":650,"line_end":650,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":737016,"byte_end":737020,"line_start":663,"line_end":663,"column_start":12,"column_end":16},"name":"name","qualname":"<Text>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this text.","sig":null,"attributes":[{"value":"/ Name of this text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736724,"byte_end":736746,"line_start":656,"line_end":656,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736751,"byte_end":736754,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ This name will show up in the plot legend, if legends are turned on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736759,"byte_end":736831,"line_start":658,"line_end":658,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736836,"byte_end":736839,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Multiple plot items may share the same name, in which case they will also share an entry in","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736844,"byte_end":736939,"line_start":660,"line_end":660,"column_start":5,"column_end":100}},{"value":"/ the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736944,"byte_end":736959,"line_start":661,"line_end":661,"column_start":5,"column_end":20}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":736964,"byte_end":737004,"line_start":662,"line_end":662,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":738735,"byte_end":738741,"line_start":732,"line_end":732,"column_start":12,"column_end":18},"name":"Points","qualname":"::widgets::plot::items::Points","value":"Points {  }","parent":null,"children":[{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3465},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3468}],"decl_id":null,"docs":" A set of points.\n","sig":null,"attributes":[{"value":"/ A set of points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":738703,"byte_end":738723,"line_start":731,"line_end":731,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":739241,"byte_end":739244,"line_start":747,"line_end":747,"column_start":12,"column_end":15},"name":"new","qualname":"<Points>::new","value":"pub fn new(Values) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3471},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":739597,"byte_end":739602,"line_start":761,"line_end":761,"column_start":12,"column_end":17},"name":"shape","qualname":"<Points>::shape","value":"pub fn shape(Self, MarkerShape) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the shape of the markers.\n","sig":null,"attributes":[{"value":"/ Set the shape of the markers.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":739552,"byte_end":739585,"line_start":760,"line_end":760,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":739774,"byte_end":739783,"line_start":767,"line_end":767,"column_start":12,"column_end":21},"name":"highlight","qualname":"<Points>::highlight","value":"pub fn highlight(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight these points in the plot by scaling up their markers.\n","sig":null,"attributes":[{"value":"/ Highlight these points in the plot by scaling up their markers.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":739695,"byte_end":739762,"line_start":766,"line_end":766,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3473},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":739920,"byte_end":739925,"line_start":773,"line_end":773,"column_start":12,"column_end":17},"name":"color","qualname":"<Points>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the marker's color.\n","sig":null,"attributes":[{"value":"/ Set the marker's color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":739881,"byte_end":739908,"line_start":772,"line_end":772,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3475},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740075,"byte_end":740081,"line_start":779,"line_end":779,"column_start":12,"column_end":18},"name":"filled","qualname":"<Points>::filled","value":"pub fn filled(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to fill the marker.\n","sig":null,"attributes":[{"value":"/ Whether to fill the marker.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740032,"byte_end":740063,"line_start":778,"line_end":778,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740259,"byte_end":740264,"line_start":785,"line_end":785,"column_start":12,"column_end":17},"name":"stems","qualname":"<Points>::stems","value":"pub fn stems<impl Into<f32>: Into<f32>>(Self, impl Into<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to add stems between the markers and a horizontal reference line.\n","sig":null,"attributes":[{"value":"/ Whether to add stems between the markers and a horizontal reference line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740170,"byte_end":740247,"line_start":784,"line_end":784,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3478},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740458,"byte_end":740464,"line_start":791,"line_end":791,"column_start":12,"column_end":18},"name":"radius","qualname":"<Points>::radius","value":"pub fn radius<impl Into<f32>: Into<f32>>(Self, impl Into<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum extent of the marker around its position.\n","sig":null,"attributes":[{"value":"/ Set the maximum extent of the marker around its position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740385,"byte_end":740446,"line_start":790,"line_end":790,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3480},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740871,"byte_end":740875,"line_start":803,"line_end":803,"column_start":12,"column_end":16},"name":"name","qualname":"<Points>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this set of points.","sig":null,"attributes":[{"value":"/ Name of this set of points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740570,"byte_end":740601,"line_start":796,"line_end":796,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740606,"byte_end":740609,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ This name will show up in the plot legend, if legends are turned on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740614,"byte_end":740686,"line_start":798,"line_end":798,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740691,"byte_end":740694,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Multiple plot items may share the same name, in which case they will also share an entry in","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740699,"byte_end":740794,"line_start":800,"line_end":800,"column_start":5,"column_end":100}},{"value":"/ the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740799,"byte_end":740814,"line_start":801,"line_end":801,"column_start":5,"column_end":20}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740819,"byte_end":740859,"line_start":802,"line_end":802,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3497},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747147,"byte_end":747153,"line_start":968,"line_end":968,"column_start":12,"column_end":18},"name":"Arrows","qualname":"::widgets::plot::items::Arrows","value":"Arrows {  }","parent":null,"children":[{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502}],"decl_id":null,"docs":" A set of arrows.\n","sig":null,"attributes":[{"value":"/ A set of arrows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747115,"byte_end":747135,"line_start":967,"line_end":967,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747337,"byte_end":747340,"line_start":977,"line_end":977,"column_start":12,"column_end":15},"name":"new","qualname":"<Arrows>::new","value":"pub fn new(Values, Values) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747617,"byte_end":747626,"line_start":988,"line_end":988,"column_start":12,"column_end":21},"name":"highlight","qualname":"<Arrows>::highlight","value":"pub fn highlight(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight these arrows in the plot.\n","sig":null,"attributes":[{"value":"/ Highlight these arrows in the plot.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747566,"byte_end":747605,"line_start":987,"line_end":987,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747762,"byte_end":747767,"line_start":994,"line_end":994,"column_start":12,"column_end":17},"name":"color","qualname":"<Arrows>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the arrows' color.\n","sig":null,"attributes":[{"value":"/ Set the arrows' color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747724,"byte_end":747750,"line_start":993,"line_end":993,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":748175,"byte_end":748179,"line_start":1006,"line_end":1006,"column_start":12,"column_end":16},"name":"name","qualname":"<Arrows>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this set of arrows.","sig":null,"attributes":[{"value":"/ Name of this set of arrows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747874,"byte_end":747905,"line_start":999,"line_end":999,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747910,"byte_end":747913,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ This name will show up in the plot legend, if legends are turned on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747918,"byte_end":747990,"line_start":1001,"line_end":1001,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747995,"byte_end":747998,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ Multiple plot items may share the same name, in which case they will also share an entry in","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":748003,"byte_end":748098,"line_start":1003,"line_end":1003,"column_start":5,"column_end":100}},{"value":"/ the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":748103,"byte_end":748118,"line_start":1004,"line_end":1004,"column_start":5,"column_end":20}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":748123,"byte_end":748163,"line_start":1005,"line_end":1005,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":6217},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":750347,"byte_end":750356,"line_start":1084,"line_end":1084,"column_start":12,"column_end":21},"name":"PlotImage","qualname":"::widgets::plot::items::PlotImage","value":"PlotImage {  }","parent":null,"children":[{"krate":0,"index":6218},{"krate":0,"index":6219},{"krate":0,"index":6220},{"krate":0,"index":6221},{"krate":0,"index":6222},{"krate":0,"index":6223},{"krate":0,"index":6224},{"krate":0,"index":6225}],"decl_id":null,"docs":" An image in the plot.\n","sig":null,"attributes":[{"value":"/ An image in the plot.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":750293,"byte_end":750318,"line_start":1082,"line_end":1082,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":750707,"byte_end":750710,"line_start":1097,"line_end":1097,"column_start":12,"column_end":15},"name":"new","qualname":"<PlotImage>::new","value":"pub fn new<impl Into<TextureId>: Into<TextureId>,\n           impl Into<Vec2>: Into<Vec2>>(impl Into<TextureId>, Value,\n                                        impl Into<Vec2>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image with position and size in plot coordinates.\n","sig":null,"attributes":[{"value":"/ Create a new image with position and size in plot coordinates.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":750629,"byte_end":750695,"line_start":1096,"line_end":1096,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751242,"byte_end":751251,"line_start":1115,"line_end":1115,"column_start":12,"column_end":21},"name":"highlight","qualname":"<PlotImage>::highlight","value":"pub fn highlight(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight this image in the plot.\n","sig":null,"attributes":[{"value":"/ Highlight this image in the plot.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751193,"byte_end":751230,"line_start":1114,"line_end":1114,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3527},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751431,"byte_end":751433,"line_start":1121,"line_end":1121,"column_start":12,"column_end":14},"name":"uv","qualname":"<PlotImage>::uv","value":"pub fn uv<impl Into<Rect>: Into<Rect>>(Self, impl Into<Rect>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Select UV range. Default is (0,0) in top-left, (1,1) bottom right.\n","sig":null,"attributes":[{"value":"/ Select UV range. Default is (0,0) in top-left, (1,1) bottom right.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751349,"byte_end":751419,"line_start":1120,"line_end":1120,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751613,"byte_end":751620,"line_start":1127,"line_end":1127,"column_start":12,"column_end":19},"name":"bg_fill","qualname":"<PlotImage>::bg_fill","value":"pub fn bg_fill<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A solid color to put behind the image. Useful for transparent images.\n","sig":null,"attributes":[{"value":"/ A solid color to put behind the image. Useful for transparent images.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751528,"byte_end":751601,"line_start":1126,"line_end":1126,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751808,"byte_end":751812,"line_start":1133,"line_end":1133,"column_start":12,"column_end":16},"name":"tint","qualname":"<PlotImage>::tint","value":"pub fn tint<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiply image color with this. Default is WHITE (no tint).\n","sig":null,"attributes":[{"value":"/ Multiply image color with this. Default is WHITE (no tint).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751733,"byte_end":751796,"line_start":1132,"line_end":1132,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":752209,"byte_end":752213,"line_start":1145,"line_end":1145,"column_start":12,"column_end":16},"name":"name","qualname":"<PlotImage>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this image.","sig":null,"attributes":[{"value":"/ Name of this image.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751916,"byte_end":751939,"line_start":1138,"line_end":1138,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751944,"byte_end":751947,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ This name will show up in the plot legend, if legends are turned on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":751952,"byte_end":752024,"line_start":1140,"line_end":1140,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":752029,"byte_end":752032,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ Multiple plot items may share the same name, in which case they will also share an entry in","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":752037,"byte_end":752132,"line_start":1142,"line_end":1142,"column_start":5,"column_end":100}},{"value":"/ the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":752137,"byte_end":752152,"line_start":1143,"line_end":1143,"column_start":5,"column_end":20}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":752157,"byte_end":752197,"line_start":1144,"line_end":1144,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":754582,"byte_end":754590,"line_start":1231,"line_end":1231,"column_start":12,"column_end":20},"name":"BarChart","qualname":"::widgets::plot::items::BarChart","value":"BarChart {  }","parent":null,"children":[{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3549}],"decl_id":null,"docs":" A bar chart.\n","sig":null,"attributes":[{"value":"/ A bar chart.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":754554,"byte_end":754570,"line_start":1230,"line_end":1230,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":754933,"byte_end":754936,"line_start":1242,"line_end":1242,"column_start":12,"column_end":15},"name":"new","qualname":"<BarChart>::new","value":"pub fn new(Vec<Bar>) -> BarChart","parent":null,"children":[],"decl_id":null,"docs":" Create a bar chart. It defaults to vertically oriented elements.\n","sig":null,"attributes":[{"value":"/ Create a bar chart. It defaults to vertically oriented elements.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":754853,"byte_end":754921,"line_start":1241,"line_end":1241,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":755484,"byte_end":755489,"line_start":1256,"line_end":1256,"column_start":12,"column_end":17},"name":"color","qualname":"<BarChart>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the default color. It is set on all elements that do not already have a specific color.\n This is the color that shows up in the legend.\n It can be overridden at the bar level (see [[`Bar`]]).\n Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.\n","sig":null,"attributes":[{"value":"/ Set the default color. It is set on all elements that do not already have a specific color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":755174,"byte_end":755269,"line_start":1252,"line_end":1252,"column_start":5,"column_end":100}},{"value":"/ This is the color that shows up in the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":755274,"byte_end":755324,"line_start":1253,"line_end":1253,"column_start":5,"column_end":55}},{"value":"/ It can be overridden at the bar level (see [[`Bar`]]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":755329,"byte_end":755387,"line_start":1254,"line_end":1254,"column_start":5,"column_end":63}},{"value":"/ Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":755392,"byte_end":755472,"line_start":1255,"line_end":1255,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756177,"byte_end":756181,"line_start":1273,"line_end":1273,"column_start":12,"column_end":16},"name":"name","qualname":"<BarChart>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this chart.","sig":null,"attributes":[{"value":"/ Name of this chart.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":755904,"byte_end":755927,"line_start":1268,"line_end":1268,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":755932,"byte_end":755935,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ This name will show up in the plot legend, if legends are turned on. Multiple charts may","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":755940,"byte_end":756032,"line_start":1270,"line_end":1270,"column_start":5,"column_end":97}},{"value":"/ share the same name, in which case they will also share an entry in the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756037,"byte_end":756120,"line_start":1271,"line_end":1271,"column_start":5,"column_end":88}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756125,"byte_end":756165,"line_start":1272,"line_end":1272,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756420,"byte_end":756428,"line_start":1280,"line_end":1280,"column_start":12,"column_end":20},"name":"vertical","qualname":"<BarChart>::vertical","value":"pub fn vertical(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set all elements to be in a vertical orientation.\n Argument axis will be X and bar values will be on the Y axis.\n","sig":null,"attributes":[{"value":"/ Set all elements to be in a vertical orientation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756285,"byte_end":756338,"line_start":1278,"line_end":1278,"column_start":5,"column_end":58}},{"value":"/ Argument axis will be X and bar values will be on the Y axis.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756343,"byte_end":756408,"line_start":1279,"line_end":1279,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756717,"byte_end":756727,"line_start":1289,"line_end":1289,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<BarChart>::horizontal","value":"pub fn horizontal(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set all elements to be in a horizontal orientation.\n Argument axis will be Y and bar values will be on the X axis.\n","sig":null,"attributes":[{"value":"/ Set all elements to be in a horizontal orientation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756580,"byte_end":756635,"line_start":1287,"line_end":1287,"column_start":5,"column_end":60}},{"value":"/ Argument axis will be Y and bar values will be on the X axis.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756640,"byte_end":756705,"line_start":1288,"line_end":1288,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756943,"byte_end":756948,"line_start":1297,"line_end":1297,"column_start":12,"column_end":17},"name":"width","qualname":"<BarChart>::width","value":"pub fn width(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the width (thickness) of all its elements.\n","sig":null,"attributes":[{"value":"/ Set the width (thickness) of all its elements.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":756881,"byte_end":756931,"line_start":1296,"line_end":1296,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":757138,"byte_end":757147,"line_start":1305,"line_end":1305,"column_start":12,"column_end":21},"name":"highlight","qualname":"<BarChart>::highlight","value":"pub fn highlight(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight all plot elements.\n","sig":null,"attributes":[{"value":"/ Highlight all plot elements.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":757094,"byte_end":757126,"line_start":1304,"line_end":1304,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3564},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":757373,"byte_end":757390,"line_start":1312,"line_end":1312,"column_start":12,"column_end":29},"name":"element_formatter","qualname":"<BarChart>::element_formatter","value":"pub fn element_formatter(Self, Box<dyn Fn(&Bar, &BarChart) -> String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a custom way to format an element.\n Can be used to display a set number of decimals or custom labels.\n","sig":null,"attributes":[{"value":"/ Add a custom way to format an element.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":757245,"byte_end":757287,"line_start":1310,"line_end":1310,"column_start":5,"column_end":47}},{"value":"/ Can be used to display a set number of decimals or custom labels.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":757292,"byte_end":757361,"line_start":1311,"line_end":1311,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3565},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":757726,"byte_end":757734,"line_start":1320,"line_end":1320,"column_start":12,"column_end":20},"name":"stack_on","qualname":"<BarChart>::stack_on","value":"pub fn stack_on(Self, &[&BarChart]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Stacks the bars on top of another chart.\n Positive values are stacked on top of other positive values.\n Negative values are stacked below other negative values.\n","sig":null,"attributes":[{"value":"/ Stacks the bars on top of another chart.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":757536,"byte_end":757580,"line_start":1317,"line_end":1317,"column_start":5,"column_end":49}},{"value":"/ Positive values are stacked on top of other positive values.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":757585,"byte_end":757649,"line_start":1318,"line_end":1318,"column_start":5,"column_end":69}},{"value":"/ Negative values are stacked below other negative values.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":757654,"byte_end":757714,"line_start":1319,"line_end":1319,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3585},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":759920,"byte_end":759927,"line_start":1400,"line_end":1400,"column_start":12,"column_end":19},"name":"BoxPlot","qualname":"::widgets::plot::items::BoxPlot","value":"BoxPlot {  }","parent":null,"children":[{"krate":0,"index":3586},{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3590}],"decl_id":null,"docs":" A diagram containing a series of [`BoxElem`] elements.\n","sig":null,"attributes":[{"value":"/ A diagram containing a series of [`BoxElem`] elements.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":759850,"byte_end":759908,"line_start":1399,"line_end":1399,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":760300,"byte_end":760303,"line_start":1411,"line_end":1411,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxPlot>::new","value":"pub fn new(Vec<BoxElem>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a plot containing multiple `boxes`. It defaults to vertically oriented elements.\n","sig":null,"attributes":[{"value":"/ Create a plot containing multiple `boxes`. It defaults to vertically oriented elements.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":760197,"byte_end":760288,"line_start":1410,"line_end":1410,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":3593},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":760855,"byte_end":760860,"line_start":1425,"line_end":1425,"column_start":12,"column_end":17},"name":"color","qualname":"<BoxPlot>::color","value":"pub fn color<impl Into<Color32>: Into<Color32>>(Self, impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the default color. It is set on all elements that do not already have a specific color.\n This is the color that shows up in the legend.\n It can be overridden at the element level (see [`BoxElem`]).\n Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.\n","sig":null,"attributes":[{"value":"/ Set the default color. It is set on all elements that do not already have a specific color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":760539,"byte_end":760634,"line_start":1421,"line_end":1421,"column_start":5,"column_end":100}},{"value":"/ This is the color that shows up in the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":760639,"byte_end":760689,"line_start":1422,"line_end":1422,"column_start":5,"column_end":55}},{"value":"/ It can be overridden at the element level (see [`BoxElem`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":760694,"byte_end":760758,"line_start":1423,"line_end":1423,"column_start":5,"column_end":69}},{"value":"/ Default is `Color32::TRANSPARENT` which means a color will be auto-assigned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":760763,"byte_end":760843,"line_start":1424,"line_end":1424,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3596},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":761623,"byte_end":761627,"line_start":1444,"line_end":1444,"column_start":12,"column_end":16},"name":"name","qualname":"<BoxPlot>::name","value":"pub fn name<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Name of this box plot diagram.","sig":null,"attributes":[{"value":"/ Name of this box plot diagram.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":761339,"byte_end":761373,"line_start":1439,"line_end":1439,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":761378,"byte_end":761381,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ This name will show up in the plot legend, if legends are turned on. Multiple series may","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":761386,"byte_end":761478,"line_start":1441,"line_end":1441,"column_start":5,"column_end":97}},{"value":"/ share the same name, in which case they will also share an entry in the legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":761483,"byte_end":761566,"line_start":1442,"line_end":1442,"column_start":5,"column_end":88}},{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":761571,"byte_end":761611,"line_start":1443,"line_end":1443,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3598},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":761862,"byte_end":761870,"line_start":1451,"line_end":1451,"column_start":12,"column_end":20},"name":"vertical","qualname":"<BoxPlot>::vertical","value":"pub fn vertical(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set all elements to be in a vertical orientation.\n Argument axis will be X and values will be on the Y axis.\n","sig":null,"attributes":[{"value":"/ Set all elements to be in a vertical orientation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":761731,"byte_end":761784,"line_start":1449,"line_end":1449,"column_start":5,"column_end":58}},{"value":"/ Argument axis will be X and values will be on the Y axis.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":761789,"byte_end":761850,"line_start":1450,"line_end":1450,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":762170,"byte_end":762180,"line_start":1460,"line_end":1460,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<BoxPlot>::horizontal","value":"pub fn horizontal(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set all elements to be in a horizontal orientation.\n Argument axis will be Y and values will be on the X axis.\n","sig":null,"attributes":[{"value":"/ Set all elements to be in a horizontal orientation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":762037,"byte_end":762092,"line_start":1458,"line_end":1458,"column_start":5,"column_end":60}},{"value":"/ Argument axis will be Y and values will be on the X axis.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":762097,"byte_end":762158,"line_start":1459,"line_end":1459,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3602},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":762393,"byte_end":762402,"line_start":1468,"line_end":1468,"column_start":12,"column_end":21},"name":"highlight","qualname":"<BoxPlot>::highlight","value":"pub fn highlight(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Highlight all plot elements.\n","sig":null,"attributes":[{"value":"/ Highlight all plot elements.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":762349,"byte_end":762381,"line_start":1467,"line_end":1467,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":762628,"byte_end":762645,"line_start":1475,"line_end":1475,"column_start":12,"column_end":29},"name":"element_formatter","qualname":"<BoxPlot>::element_formatter","value":"pub fn element_formatter(Self, Box<dyn Fn(&BoxElem, &BoxPlot) -> String>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a custom way to format an element.\n Can be used to display a set number of decimals or custom labels.\n","sig":null,"attributes":[{"value":"/ Add a custom way to format an element.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":762500,"byte_end":762542,"line_start":1473,"line_end":1473,"column_start":5,"column_end":47}},{"value":"/ Can be used to display a set number of decimals or custom labels.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":762547,"byte_end":762616,"line_start":1474,"line_end":1474,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6229},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797234,"byte_end":797241,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"LeftTop","qualname":"::widgets::plot::legend::Corner::LeftTop","value":"Corner::LeftTop","parent":{"krate":0,"index":6228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6231},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797247,"byte_end":797255,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"RightTop","qualname":"::widgets::plot::legend::Corner::RightTop","value":"Corner::RightTop","parent":{"krate":0,"index":6228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6233},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797261,"byte_end":797271,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"LeftBottom","qualname":"::widgets::plot::legend::Corner::LeftBottom","value":"Corner::LeftBottom","parent":{"krate":0,"index":6228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6235},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797277,"byte_end":797288,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"RightBottom","qualname":"::widgets::plot::legend::Corner::RightBottom","value":"Corner::RightBottom","parent":{"krate":0,"index":6228},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6228},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797221,"byte_end":797227,"line_start":11,"line_end":11,"column_start":10,"column_end":16},"name":"Corner","qualname":"::widgets::plot::legend::Corner","value":"pub enum Corner { LeftTop, RightTop, LeftBottom, RightBottom, }","parent":null,"children":[{"krate":0,"index":6229},{"krate":0,"index":6231},{"krate":0,"index":6233},{"krate":0,"index":6235}],"decl_id":null,"docs":" Where to place the plot legend.\n","sig":null,"attributes":[{"value":"/ Where to place the plot legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797135,"byte_end":797170,"line_start":9,"line_end":9,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797318,"byte_end":797321,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"all","qualname":"<Corner>::all","value":"pub fn all() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6245},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797625,"byte_end":797631,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"Legend","qualname":"::widgets::plot::legend::Legend","value":"Legend { text_style, background_alpha, position }","parent":null,"children":[{"krate":0,"index":6246},{"krate":0,"index":6247},{"krate":0,"index":6248}],"decl_id":null,"docs":" The configuration for a plot legend.\n","sig":null,"attributes":[{"value":"/ The configuration for a plot legend.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797545,"byte_end":797585,"line_start":31,"line_end":31,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":6246},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797642,"byte_end":797652,"line_start":34,"line_end":34,"column_start":9,"column_end":19},"name":"text_style","qualname":"::widgets::plot::legend::Legend::text_style","value":"style::TextStyle","parent":{"krate":0,"index":6245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6247},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797673,"byte_end":797689,"line_start":35,"line_end":35,"column_start":9,"column_end":25},"name":"background_alpha","qualname":"::widgets::plot::legend::Legend::background_alpha","value":"f32","parent":{"krate":0,"index":6245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6248},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797704,"byte_end":797712,"line_start":36,"line_end":36,"column_start":9,"column_end":17},"name":"position","qualname":"::widgets::plot::legend::Legend::position","value":"widgets::plot::legend::Corner","parent":{"krate":0,"index":6245},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3651},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":798030,"byte_end":798040,"line_start":51,"line_end":51,"column_start":12,"column_end":22},"name":"text_style","qualname":"<Legend>::text_style","value":"pub fn text_style(Self, TextStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Which text style to use for the legend. Default: `TextStyle::Body`.\n","sig":null,"attributes":[{"value":"/ Which text style to use for the legend. Default: `TextStyle::Body`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797947,"byte_end":798018,"line_start":50,"line_end":50,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":798204,"byte_end":798220,"line_start":57,"line_end":57,"column_start":12,"column_end":28},"name":"background_alpha","qualname":"<Legend>::background_alpha","value":"pub fn background_alpha(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The alpha of the legend background. Default: `0.75`.\n","sig":null,"attributes":[{"value":"/ The alpha of the legend background. Default: `0.75`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":798136,"byte_end":798192,"line_start":56,"line_end":56,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3653},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":798397,"byte_end":798405,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"position","qualname":"<Legend>::position","value":"pub fn position(Self, Corner) -> Self","parent":null,"children":[],"decl_id":null,"docs":" In which corner to place the legend. Default: `Corner::RightTop`.\n","sig":null,"attributes":[{"value":"/ In which corner to place the legend. Default: `Corner::RightTop`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":798316,"byte_end":798385,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":6267},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":805203,"byte_end":805213,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"PlotBounds","qualname":"::widgets::plot::transform::PlotBounds","value":"PlotBounds {  }","parent":null,"children":[{"krate":0,"index":6268},{"krate":0,"index":6270}],"decl_id":null,"docs":" 2D bounding box of f64 precision.\n The range of data values we show.\n","sig":null,"attributes":[{"value":"/ 2D bounding box of f64 precision.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":804998,"byte_end":805035,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"/ The range of data values we show.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":805036,"byte_end":805073,"line_start":7,"line_end":7,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":805311,"byte_end":805318,"line_start":16,"line_end":16,"column_start":15,"column_end":22},"name":"NOTHING","qualname":"::widgets::plot::transform::PlotBounds::NOTHING","value":"Self","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3689},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":805420,"byte_end":805423,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"min","qualname":"<PlotBounds>::min","value":"pub fn min(&Self) -> [f64; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3691},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":805480,"byte_end":805483,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"max","qualname":"<PlotBounds>::max","value":"pub fn max(&Self) -> [f64; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3696},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":805705,"byte_end":805714,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"is_finite","qualname":"<PlotBounds>::is_finite","value":"pub fn is_finite(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3697},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":805899,"byte_end":805907,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<PlotBounds>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3698},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":806013,"byte_end":806018,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"width","qualname":"<PlotBounds>::width","value":"pub fn width(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":806087,"byte_end":806093,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"height","qualname":"<PlotBounds>::height","value":"pub fn height(&Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3700},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":806162,"byte_end":806168,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"center","qualname":"<PlotBounds>::center","value":"pub fn center(&Self) -> Value","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3737},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681573,"byte_end":681593,"line_start":29,"line_end":29,"column_start":12,"column_end":32},"name":"CoordinatesFormatter","qualname":"::widgets::plot::CoordinatesFormatter","value":"CoordinatesFormatter {  }","parent":null,"children":[{"krate":0,"index":3738}],"decl_id":null,"docs":" Specifies the coordinates formatting when passed to [`Plot::coordinates_formatter`].\n","sig":null,"attributes":[{"value":"/ Specifies the coordinates formatting when passed to [`Plot::coordinates_formatter`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681473,"byte_end":681561,"line_start":28,"line_end":28,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3740},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681780,"byte_end":681783,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<CoordinatesFormatter>::new","value":"pub fn new<impl Fn(&Value, &PlotBounds) -> String + 'static: Fn(&Value,\n                                                                &PlotBounds)\n           -> String +\n           'static>(impl Fn(&Value, &PlotBounds) -> String + 'static) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new formatter based on the pointer coordinate and the plot bounds.\n","sig":null,"attributes":[{"value":"/ Create a new formatter based on the pointer coordinate and the plot bounds.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681689,"byte_end":681768,"line_start":34,"line_end":34,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3742},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681986,"byte_end":681999,"line_start":42,"line_end":42,"column_start":12,"column_end":25},"name":"with_decimals","qualname":"<CoordinatesFormatter>::with_decimals","value":"pub fn with_decimals(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show a fixed number of decimal places.\n","sig":null,"attributes":[{"value":"/ Show a fixed number of decimal places.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681932,"byte_end":681974,"line_start":41,"line_end":41,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6299},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683589,"byte_end":683604,"line_start":92,"line_end":92,"column_start":12,"column_end":27},"name":"LinkedAxisGroup","qualname":"::widgets::plot::LinkedAxisGroup","value":"LinkedAxisGroup {  }","parent":null,"children":[{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302}],"decl_id":null,"docs":" Defines how multiple plots share the same range for one or both of their axes. Can be added while building\n a plot with [`Plot::link_axis`]. Contains an internal state, meaning that this object should be stored by\n the user between frames.\n","sig":null,"attributes":[{"value":"/ Defines how multiple plots share the same range for one or both of their axes. Can be added while building","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683300,"byte_end":683410,"line_start":88,"line_end":88,"column_start":1,"column_end":111}},{"value":"/ a plot with [`Plot::link_axis`]. Contains an internal state, meaning that this object should be stored by","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683411,"byte_end":683520,"line_start":89,"line_end":89,"column_start":1,"column_end":110}},{"value":"/ the user between frames.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683521,"byte_end":683549,"line_start":90,"line_end":90,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3751},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683758,"byte_end":683761,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<LinkedAxisGroup>::new","value":"pub fn new(bool, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3752},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683962,"byte_end":683963,"line_start":108,"line_end":108,"column_start":12,"column_end":13},"name":"x","qualname":"<LinkedAxisGroup>::x","value":"pub fn x() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Only link the x-axis.\n","sig":null,"attributes":[{"value":"/ Only link the x-axis.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683925,"byte_end":683950,"line_start":107,"line_end":107,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3753},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":684055,"byte_end":684056,"line_start":113,"line_end":113,"column_start":12,"column_end":13},"name":"y","qualname":"<LinkedAxisGroup>::y","value":"pub fn y() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Only link the y-axis.\n","sig":null,"attributes":[{"value":"/ Only link the y-axis.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":684018,"byte_end":684043,"line_start":112,"line_end":112,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3754},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":684214,"byte_end":684218,"line_start":118,"line_end":118,"column_start":12,"column_end":16},"name":"both","qualname":"<LinkedAxisGroup>::both","value":"pub fn both() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Link both axes. Note that this still respects the aspect ratio of the individual plots.\n","sig":null,"attributes":[{"value":"/ Link both axes. Note that this still respects the aspect ratio of the individual plots.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":684111,"byte_end":684202,"line_start":117,"line_end":117,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":3755},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":684454,"byte_end":684464,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"set_link_x","qualname":"<LinkedAxisGroup>::set_link_x","value":"pub fn set_link_x(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Change whether the x-axis is linked for this group. Using this after plots in this group have been\n drawn in this frame already may lead to unexpected results.\n","sig":null,"attributes":[{"value":"/ Change whether the x-axis is linked for this group. Using this after plots in this group have been","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":684272,"byte_end":684374,"line_start":122,"line_end":122,"column_start":5,"column_end":107}},{"value":"/ drawn in this frame already may lead to unexpected results.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":684379,"byte_end":684442,"line_start":123,"line_end":123,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":684711,"byte_end":684721,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"set_link_y","qualname":"<LinkedAxisGroup>::set_link_y","value":"pub fn set_link_y(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Change whether the y-axis is linked for this group. Using this after plots in this group have been\n drawn in this frame already may lead to unexpected results.\n","sig":null,"attributes":[{"value":"/ Change whether the y-axis is linked for this group. Using this after plots in this group have been","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":684529,"byte_end":684631,"line_start":128,"line_end":128,"column_start":5,"column_end":107}},{"value":"/ drawn in this frame already may lead to unexpected results.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":684636,"byte_end":684699,"line_start":129,"line_end":129,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3759},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685503,"byte_end":685507,"line_start":160,"line_end":160,"column_start":12,"column_end":16},"name":"Plot","qualname":"::widgets::plot::Plot","value":"Plot {  }","parent":null,"children":[{"krate":0,"index":3760},{"krate":0,"index":3761},{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3775},{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3783}],"decl_id":null,"docs":" A 2D plot, e.g. a graph of a function.","sig":null,"attributes":[{"value":"/ A 2D plot, e.g. a graph of a function.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685041,"byte_end":685083,"line_start":145,"line_end":145,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685084,"byte_end":685087,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ `Plot` supports multiple lines and points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685088,"byte_end":685134,"line_start":147,"line_end":147,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685135,"byte_end":685138,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685139,"byte_end":685146,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685147,"byte_end":685179,"line_start":150,"line_end":150,"column_start":1,"column_end":33}},{"value":"/ use egui::plot::{Line, Plot, Value, Values};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685180,"byte_end":685228,"line_start":151,"line_end":151,"column_start":1,"column_end":49}},{"value":"/ let sin = (0..1000).map(|i| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685229,"byte_end":685262,"line_start":152,"line_end":152,"column_start":1,"column_end":34}},{"value":"/     let x = i as f64 * 0.01;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685263,"byte_end":685295,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/     Value::new(x, x.sin())","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685296,"byte_end":685326,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685327,"byte_end":685334,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/ let line = Line::new(Values::from_values_iter(sin));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685335,"byte_end":685391,"line_start":156,"line_end":156,"column_start":1,"column_end":57}},{"value":"/ Plot::new(\"my_plot\").view_aspect(2.0).show(ui, |plot_ui| plot_ui.line(line));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685392,"byte_end":685473,"line_start":157,"line_end":157,"column_start":1,"column_end":82}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685474,"byte_end":685483,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":685484,"byte_end":685491,"line_start":159,"line_end":159,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":686287,"byte_end":686290,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<Plot>::new","value":"pub fn new<impl std::hash::Hash: std::hash::Hash>(impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Give a unique id for each plot within the same `Ui`.\n","sig":null,"attributes":[{"value":"/ Give a unique id for each plot within the same `Ui`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":686219,"byte_end":686275,"line_start":190,"line_end":190,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687446,"byte_end":687457,"line_start":226,"line_end":226,"column_start":12,"column_end":23},"name":"data_aspect","qualname":"<Plot>::data_aspect","value":"pub fn data_aspect(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" width / height ratio of the data.\n For instance, it can be useful to set this to `1.0` for when the two axes show the same\n unit.\n By default the plot window's aspect ratio is used.\n","sig":null,"attributes":[{"value":"/ width / height ratio of the data.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687228,"byte_end":687265,"line_start":222,"line_end":222,"column_start":5,"column_end":42}},{"value":"/ For instance, it can be useful to set this to `1.0` for when the two axes show the same","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687270,"byte_end":687361,"line_start":223,"line_end":223,"column_start":5,"column_end":96}},{"value":"/ unit.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687366,"byte_end":687375,"line_start":224,"line_end":224,"column_start":5,"column_end":14}},{"value":"/ By default the plot window's aspect ratio is used.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687380,"byte_end":687434,"line_start":225,"line_end":225,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3790},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687716,"byte_end":687727,"line_start":233,"line_end":233,"column_start":12,"column_end":23},"name":"view_aspect","qualname":"<Plot>::view_aspect","value":"pub fn view_aspect(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" width / height ratio of the plot region.\n By default no fixed aspect ratio is set (and width/height will fill the ui it is in).\n","sig":null,"attributes":[{"value":"/ width / height ratio of the plot region.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687566,"byte_end":687610,"line_start":231,"line_end":231,"column_start":5,"column_end":49}},{"value":"/ By default no fixed aspect ratio is set (and width/height will fill the ui it is in).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687615,"byte_end":687704,"line_start":232,"line_end":232,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687998,"byte_end":688003,"line_start":240,"line_end":240,"column_start":12,"column_end":17},"name":"width","qualname":"<Plot>::width","value":"pub fn width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Width of plot. By default a plot will fill the ui it is in.\n If you set [`Self::view_aspect`], the width can be calculated from the height.\n","sig":null,"attributes":[{"value":"/ Width of plot. By default a plot will fill the ui it is in.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687836,"byte_end":687899,"line_start":238,"line_end":238,"column_start":5,"column_end":68}},{"value":"/ If you set [`Self::view_aspect`], the width can be calculated from the height.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":687904,"byte_end":687986,"line_start":239,"line_end":239,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3792},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688290,"byte_end":688296,"line_start":248,"line_end":248,"column_start":12,"column_end":18},"name":"height","qualname":"<Plot>::height","value":"pub fn height(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Height of plot. By default a plot will fill the ui it is in.\n If you set [`Self::view_aspect`], the height can be calculated from the width.\n","sig":null,"attributes":[{"value":"/ Height of plot. By default a plot will fill the ui it is in.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688127,"byte_end":688191,"line_start":246,"line_end":246,"column_start":5,"column_end":69}},{"value":"/ If you set [`Self::view_aspect`], the height can be calculated from the width.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688196,"byte_end":688278,"line_start":247,"line_end":247,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3793},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688470,"byte_end":688478,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"min_size","qualname":"<Plot>::min_size","value":"pub fn min_size(Self, Vec2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Minimum size of the plot view.\n","sig":null,"attributes":[{"value":"/ Minimum size of the plot view.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688424,"byte_end":688458,"line_start":254,"line_end":254,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3794},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688644,"byte_end":688650,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"show_x","qualname":"<Plot>::show_x","value":"pub fn show_x(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show the x-value (e.g. when hovering). Default: `true`.\n","sig":null,"attributes":[{"value":"/ Show the x-value (e.g. when hovering). Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688573,"byte_end":688632,"line_start":260,"line_end":260,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688810,"byte_end":688816,"line_start":267,"line_end":267,"column_start":12,"column_end":18},"name":"show_y","qualname":"<Plot>::show_y","value":"pub fn show_y(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show the y-value (e.g. when hovering). Default: `true`.\n","sig":null,"attributes":[{"value":"/ Show the y-value (e.g. when hovering). Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688739,"byte_end":688798,"line_start":266,"line_end":266,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3796},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688971,"byte_end":688984,"line_start":273,"line_end":273,"column_start":12,"column_end":25},"name":"center_x_axis","qualname":"<Plot>::center_x_axis","value":"pub fn center_x_axis(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Always keep the x-axis centered. Default: `false`.\n","sig":null,"attributes":[{"value":"/ Always keep the x-axis centered. Default: `false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":688905,"byte_end":688959,"line_start":272,"line_end":272,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3797},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689138,"byte_end":689151,"line_start":279,"line_end":279,"column_start":12,"column_end":25},"name":"center_y_axis","qualname":"<Plot>::center_y_axis","value":"pub fn center_y_axis(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Always keep the y-axis centered. Default: `false`.\n","sig":null,"attributes":[{"value":"/ Always keep the y-axis centered. Default: `false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689072,"byte_end":689126,"line_start":278,"line_end":278,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3798},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689309,"byte_end":689319,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"allow_zoom","qualname":"<Plot>::allow_zoom","value":"pub fn allow_zoom(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to allow zooming in the plot. Default: `true`.\n","sig":null,"attributes":[{"value":"/ Whether to allow zooming in the plot. Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689239,"byte_end":689297,"line_start":284,"line_end":284,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3799},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689544,"byte_end":689560,"line_start":293,"line_end":293,"column_start":12,"column_end":28},"name":"allow_boxed_zoom","qualname":"<Plot>::allow_boxed_zoom","value":"pub fn allow_boxed_zoom(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to allow zooming in the plot by dragging out a box with the secondary mouse button.","sig":null,"attributes":[{"value":"/ Whether to allow zooming in the plot by dragging out a box with the secondary mouse button.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689404,"byte_end":689499,"line_start":290,"line_end":290,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689504,"byte_end":689507,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689512,"byte_end":689532,"line_start":292,"line_end":292,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689739,"byte_end":689764,"line_start":299,"line_end":299,"column_start":12,"column_end":37},"name":"boxed_zoom_pointer_button","qualname":"<Plot>::boxed_zoom_pointer_button","value":"pub fn boxed_zoom_pointer_button(Self, PointerButton) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Config the button pointer to use for boxed zooming. Default: `Secondary`\n","sig":null,"attributes":[{"value":"/ Config the button pointer to use for boxed zooming. Default: `Secondary`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689651,"byte_end":689727,"line_start":298,"line_end":298,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3801},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690009,"byte_end":690019,"line_start":305,"line_end":305,"column_start":12,"column_end":22},"name":"allow_drag","qualname":"<Plot>::allow_drag","value":"pub fn allow_drag(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to allow dragging in the plot to move the bounds. Default: `true`.\n","sig":null,"attributes":[{"value":"/ Whether to allow dragging in the plot to move the bounds. Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":689919,"byte_end":689997,"line_start":304,"line_end":304,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3802},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690825,"byte_end":690840,"line_start":331,"line_end":331,"column_start":12,"column_end":27},"name":"label_formatter","qualname":"<Plot>::label_formatter","value":"pub fn label_formatter<impl Fn(&str, &Value) -> String + 'static: Fn(&str,\n                                                                     &Value)\n                       -> String +\n                       'static>(Self,\n                                impl Fn(&str, &Value) -> String + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Provide a function to customize the on-hovel label for the x and y axis","sig":null,"attributes":[{"value":"/ Provide a function to customize the on-hovel label for the x and y axis","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690104,"byte_end":690179,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690184,"byte_end":690187,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690192,"byte_end":690199,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690204,"byte_end":690236,"line_start":313,"line_end":313,"column_start":5,"column_end":37}},{"value":"/ use egui::plot::{Line, Plot, Value, Values};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690241,"byte_end":690289,"line_start":314,"line_end":314,"column_start":5,"column_end":53}},{"value":"/ let sin = (0..1000).map(|i| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690294,"byte_end":690327,"line_start":315,"line_end":315,"column_start":5,"column_end":38}},{"value":"/     let x = i as f64 * 0.01;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690332,"byte_end":690364,"line_start":316,"line_end":316,"column_start":5,"column_end":37}},{"value":"/     Value::new(x, x.sin())","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690369,"byte_end":690399,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/ });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690404,"byte_end":690411,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ let line = Line::new(Values::from_values_iter(sin));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690416,"byte_end":690472,"line_start":319,"line_end":319,"column_start":5,"column_end":61}},{"value":"/ Plot::new(\"my_plot\").view_aspect(2.0)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690477,"byte_end":690518,"line_start":320,"line_end":320,"column_start":5,"column_end":46}},{"value":"/ .label_formatter(|name, value| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690523,"byte_end":690559,"line_start":321,"line_end":321,"column_start":5,"column_end":41}},{"value":"/     if !name.is_empty() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690564,"byte_end":690593,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/         format!(\"{}: {:.*}%\", name, 1, value.y).to_string()","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690598,"byte_end":690661,"line_start":323,"line_end":323,"column_start":5,"column_end":68}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690666,"byte_end":690682,"line_start":324,"line_end":324,"column_start":5,"column_end":21}},{"value":"/         \"\".to_string()","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690687,"byte_end":690713,"line_start":325,"line_end":325,"column_start":5,"column_end":31}},{"value":"/     }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690718,"byte_end":690727,"line_start":326,"line_end":326,"column_start":5,"column_end":14}},{"value":"/ })","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690732,"byte_end":690738,"line_start":327,"line_end":327,"column_start":5,"column_end":11}},{"value":"/ .show(ui, |plot_ui| plot_ui.line(line));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690743,"byte_end":690787,"line_start":328,"line_end":328,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690792,"byte_end":690801,"line_start":329,"line_end":329,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":690806,"byte_end":690813,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3804},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691089,"byte_end":691110,"line_start":340,"line_end":340,"column_start":12,"column_end":33},"name":"coordinates_formatter","qualname":"<Plot>::coordinates_formatter","value":"pub fn coordinates_formatter(Self, Corner, CoordinatesFormatter) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show the pointer coordinates in the plot.\n","sig":null,"attributes":[{"value":"/ Show the pointer coordinates in the plot.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691032,"byte_end":691077,"line_start":339,"line_end":339,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3805},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691745,"byte_end":691761,"line_start":356,"line_end":356,"column_start":12,"column_end":28},"name":"x_axis_formatter","qualname":"<Plot>::x_axis_formatter","value":"pub fn x_axis_formatter<impl Fn(f64, &RangeInclusive<f64>) -> String + 'static: Fn(f64,\n                                                                                   &RangeInclusive<f64>)\n                        -> String +\n                        'static>(Self,\n                                 impl Fn(f64, &RangeInclusive<f64>) -> String + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Provide a function to customize the labels for the X axis based on the current visible value range.","sig":null,"attributes":[{"value":"/ Provide a function to customize the labels for the X axis based on the current visible value range.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691303,"byte_end":691406,"line_start":349,"line_end":349,"column_start":5,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691411,"byte_end":691414,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This is useful for custom input domains, e.g. date/time.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691419,"byte_end":691479,"line_start":351,"line_end":351,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691484,"byte_end":691487,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If axis labels should not appear for certain values or beyond a certain zoom/resolution,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691492,"byte_end":691584,"line_start":353,"line_end":353,"column_start":5,"column_end":97}},{"value":"/ the formatter function can return empty strings. This is also useful if your domain is","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691589,"byte_end":691679,"line_start":354,"line_end":354,"column_start":5,"column_end":95}},{"value":"/ discrete (e.g. only full days in a calendar).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691684,"byte_end":691733,"line_start":355,"line_end":355,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3807},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692386,"byte_end":692402,"line_start":371,"line_end":371,"column_start":12,"column_end":28},"name":"y_axis_formatter","qualname":"<Plot>::y_axis_formatter","value":"pub fn y_axis_formatter<impl Fn(f64, &RangeInclusive<f64>) -> String + 'static: Fn(f64,\n                                                                                   &RangeInclusive<f64>)\n                        -> String +\n                        'static>(Self,\n                                 impl Fn(f64, &RangeInclusive<f64>) -> String + 'static)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Provide a function to customize the labels for the Y axis based on the current value range.","sig":null,"attributes":[{"value":"/ Provide a function to customize the labels for the Y axis based on the current value range.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":691947,"byte_end":692042,"line_start":364,"line_end":364,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692047,"byte_end":692050,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This is useful for custom value representation, e.g. percentage or units.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692055,"byte_end":692132,"line_start":366,"line_end":366,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692137,"byte_end":692140,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ If axis labels should not appear for certain values or beyond a certain zoom/resolution,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692145,"byte_end":692237,"line_start":368,"line_end":368,"column_start":5,"column_end":97}},{"value":"/ the formatter function can return empty strings. This is also useful if your Y values are","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692242,"byte_end":692335,"line_start":369,"line_end":369,"column_start":5,"column_end":98}},{"value":"/ discrete (e.g. only integers).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692340,"byte_end":692374,"line_start":370,"line_end":370,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3809},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692724,"byte_end":692733,"line_start":381,"line_end":381,"column_start":12,"column_end":21},"name":"include_x","qualname":"<Plot>::include_x","value":"pub fn include_x<impl Into<f64>: Into<f64>>(Self, impl Into<f64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Expand bounds to include the given x value.\n For instance, to always show the y axis, call `plot.include_x(0.0)`.\n","sig":null,"attributes":[{"value":"/ Expand bounds to include the given x value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692588,"byte_end":692635,"line_start":379,"line_end":379,"column_start":5,"column_end":52}},{"value":"/ For instance, to always show the y axis, call `plot.include_x(0.0)`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692640,"byte_end":692712,"line_start":380,"line_end":380,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3811},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692987,"byte_end":692996,"line_start":388,"line_end":388,"column_start":12,"column_end":21},"name":"include_y","qualname":"<Plot>::include_y","value":"pub fn include_y<impl Into<f64>: Into<f64>>(Self, impl Into<f64>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Expand bounds to include the given y value.\n For instance, to always show the x axis, call `plot.include_y(0.0)`.\n","sig":null,"attributes":[{"value":"/ Expand bounds to include the given y value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692851,"byte_end":692898,"line_start":386,"line_end":386,"column_start":5,"column_end":52}},{"value":"/ For instance, to always show the x axis, call `plot.include_y(0.0)`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":692903,"byte_end":692975,"line_start":387,"line_end":387,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3813},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693170,"byte_end":693176,"line_start":394,"line_end":394,"column_start":12,"column_end":18},"name":"legend","qualname":"<Plot>::legend","value":"pub fn legend(Self, Legend) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show a legend including all named items.\n","sig":null,"attributes":[{"value":"/ Show a legend including all named items.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693114,"byte_end":693158,"line_start":393,"line_end":393,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693446,"byte_end":693461,"line_start":402,"line_end":402,"column_start":12,"column_end":27},"name":"show_background","qualname":"<Plot>::show_background","value":"pub fn show_background(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether or not to show the background `Rect`.\n Can be useful to disable if the plot is overlaid over existing content.\n Default: `true`.\n","sig":null,"attributes":[{"value":"/ Whether or not to show the background `Rect`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693280,"byte_end":693329,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/ Can be useful to disable if the plot is overlaid over existing content.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693334,"byte_end":693409,"line_start":400,"line_end":400,"column_start":5,"column_end":80}},{"value":"/ Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693414,"byte_end":693434,"line_start":401,"line_end":401,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3815},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693706,"byte_end":693715,"line_start":410,"line_end":410,"column_start":12,"column_end":21},"name":"show_axes","qualname":"<Plot>::show_axes","value":"pub fn show_axes(Self, [bool; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show the axes.\n Can be useful to disable if the plot is overlaid over an existing grid or content.\n Default: `[true; 2]`.\n","sig":null,"attributes":[{"value":"/ Show the axes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693555,"byte_end":693573,"line_start":407,"line_end":407,"column_start":5,"column_end":23}},{"value":"/ Can be useful to disable if the plot is overlaid over an existing grid or content.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693578,"byte_end":693664,"line_start":408,"line_end":408,"column_start":5,"column_end":91}},{"value":"/ Default: `[true; 2]`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693669,"byte_end":693694,"line_start":409,"line_end":409,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3817},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693990,"byte_end":693999,"line_start":417,"line_end":417,"column_start":12,"column_end":21},"name":"link_axis","qualname":"<Plot>::link_axis","value":"pub fn link_axis(Self, LinkedAxisGroup) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a [`LinkedAxisGroup`] so that this plot will share the bounds with other plots that have this\n group assigned. A plot cannot belong to more than one group.\n","sig":null,"attributes":[{"value":"/ Add a [`LinkedAxisGroup`] so that this plot will share the bounds with other plots that have this","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693808,"byte_end":693909,"line_start":415,"line_end":415,"column_start":5,"column_end":106}},{"value":"/ group assigned. A plot cannot belong to more than one group.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":693914,"byte_end":693978,"line_start":416,"line_end":416,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":694184,"byte_end":694188,"line_start":423,"line_end":423,"column_start":12,"column_end":16},"name":"show","qualname":"<Plot>::show","value":"pub fn show<R, impl FnOnce(&mut PlotUi) -> R: FnOnce(&mut PlotUi) ->\n            R>(Self, &mut Ui, impl FnOnce(&mut PlotUi) -> R)\n-> InnerResponse<R>","parent":null,"children":[],"decl_id":null,"docs":" Interact with and add items to the plot and finally draw it.\n","sig":null,"attributes":[{"value":"/ Interact with and add items to the plot and finally draw it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":694108,"byte_end":694172,"line_start":422,"line_end":422,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":3832},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":705204,"byte_end":705210,"line_start":729,"line_end":729,"column_start":12,"column_end":18},"name":"PlotUi","qualname":"::widgets::plot::PlotUi","value":"PlotUi {  }","parent":null,"children":[{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837}],"decl_id":null,"docs":" Provides methods to interact with a plot while building it. It is the single argument of the closure\n provided to [`Plot::show`]. See [`Plot`] for an example of how to use it.\n","sig":null,"attributes":[{"value":"/ Provides methods to interact with a plot while building it. It is the single argument of the closure","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":705010,"byte_end":705114,"line_start":727,"line_end":727,"column_start":1,"column_end":105}},{"value":"/ provided to [`Plot::show`]. See [`Plot`] for an example of how to use it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":705115,"byte_end":705192,"line_start":728,"line_end":728,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":705736,"byte_end":705739,"line_start":746,"line_end":746,"column_start":12,"column_end":15},"name":"ctx","qualname":"<PlotUi>::ctx","value":"pub fn ctx(&Self) -> &Context","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3841},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":706059,"byte_end":706070,"line_start":753,"line_end":753,"column_start":12,"column_end":23},"name":"plot_bounds","qualname":"<PlotUi>::plot_bounds","value":"pub fn plot_bounds(&Self) -> PlotBounds","parent":null,"children":[],"decl_id":null,"docs":" The plot bounds as they were in the last frame. If called on the first frame and the bounds were not\n further specified in the plot builder, this will return bounds centered on the origin. The bounds do\n not change until the plot is drawn.\n","sig":null,"attributes":[{"value":"/ The plot bounds as they were in the last frame. If called on the first frame and the bounds were not","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":705790,"byte_end":705894,"line_start":750,"line_end":750,"column_start":5,"column_end":109}},{"value":"/ further specified in the plot builder, this will return bounds centered on the origin. The bounds do","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":705899,"byte_end":706003,"line_start":751,"line_end":751,"column_start":5,"column_end":109}},{"value":"/ not change until the plot is drawn.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":706008,"byte_end":706047,"line_start":752,"line_end":752,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3842},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":706219,"byte_end":706231,"line_start":758,"line_end":758,"column_start":12,"column_end":24},"name":"plot_hovered","qualname":"<PlotUi>::plot_hovered","value":"pub fn plot_hovered(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the plot area is currently hovered.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the plot area is currently hovered.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":706150,"byte_end":706207,"line_start":757,"line_end":757,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":706405,"byte_end":706423,"line_start":763,"line_end":763,"column_start":12,"column_end":30},"name":"pointer_coordinate","qualname":"<PlotUi>::pointer_coordinate","value":"pub fn pointer_coordinate(&Self) -> Option<Value>","parent":null,"children":[],"decl_id":null,"docs":" The pointer position in plot coordinates. Independent of whether the pointer is in the plot area.\n","sig":null,"attributes":[{"value":"/ The pointer position in plot coordinates. Independent of whether the pointer is in the plot area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":706292,"byte_end":706393,"line_start":762,"line_end":762,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":706790,"byte_end":706819,"line_start":771,"line_end":771,"column_start":12,"column_end":41},"name":"pointer_coordinate_drag_delta","qualname":"<PlotUi>::pointer_coordinate_drag_delta","value":"pub fn pointer_coordinate_drag_delta(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":" The pointer drag delta in plot coordinates.\n","sig":null,"attributes":[{"value":"/ The pointer drag delta in plot coordinates.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":706731,"byte_end":706778,"line_start":770,"line_end":770,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3845},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":707099,"byte_end":707115,"line_start":778,"line_end":778,"column_start":12,"column_end":28},"name":"screen_from_plot","qualname":"<PlotUi>::screen_from_plot","value":"pub fn screen_from_plot(&Self, Value) -> Pos2","parent":null,"children":[],"decl_id":null,"docs":" Transform the plot coordinates to screen coordinates.\n","sig":null,"attributes":[{"value":"/ Transform the plot coordinates to screen coordinates.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":707030,"byte_end":707087,"line_start":777,"line_end":777,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3846},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":707296,"byte_end":707312,"line_start":783,"line_end":783,"column_start":12,"column_end":28},"name":"plot_from_screen","qualname":"<PlotUi>::plot_from_screen","value":"pub fn plot_from_screen(&Self, Pos2) -> Value","parent":null,"children":[],"decl_id":null,"docs":" Transform the screen coordinates to plot coordinates.\n","sig":null,"attributes":[{"value":"/ Transform the screen coordinates to plot coordinates.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":707227,"byte_end":707284,"line_start":782,"line_end":782,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3847},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":707455,"byte_end":707459,"line_start":788,"line_end":788,"column_start":12,"column_end":16},"name":"line","qualname":"<PlotUi>::line","value":"pub fn line(&mut Self, Line)","parent":null,"children":[],"decl_id":null,"docs":" Add a data line.\n","sig":null,"attributes":[{"value":"/ Add a data line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":707423,"byte_end":707443,"line_start":787,"line_end":787,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":707862,"byte_end":707869,"line_start":801,"line_end":801,"column_start":12,"column_end":19},"name":"polygon","qualname":"<PlotUi>::polygon","value":"pub fn polygon(&mut Self, Polygon)","parent":null,"children":[],"decl_id":null,"docs":" Add a polygon. The polygon has to be convex.\n","sig":null,"attributes":[{"value":"/ Add a polygon. The polygon has to be convex.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":707802,"byte_end":707850,"line_start":800,"line_end":800,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3849},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":708257,"byte_end":708261,"line_start":814,"line_end":814,"column_start":12,"column_end":16},"name":"text","qualname":"<PlotUi>::text","value":"pub fn text(&mut Self, Text)","parent":null,"children":[],"decl_id":null,"docs":" Add a text.\n","sig":null,"attributes":[{"value":"/ Add a text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":708230,"byte_end":708245,"line_start":813,"line_end":813,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3850},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":708437,"byte_end":708443,"line_start":823,"line_end":823,"column_start":12,"column_end":18},"name":"points","qualname":"<PlotUi>::points","value":"pub fn points(&mut Self, Points)","parent":null,"children":[],"decl_id":null,"docs":" Add data points.\n","sig":null,"attributes":[{"value":"/ Add data points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":708405,"byte_end":708425,"line_start":822,"line_end":822,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3851},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":708811,"byte_end":708817,"line_start":836,"line_end":836,"column_start":12,"column_end":18},"name":"arrows","qualname":"<PlotUi>::arrows","value":"pub fn arrows(&mut Self, Arrows)","parent":null,"children":[],"decl_id":null,"docs":" Add arrows.\n","sig":null,"attributes":[{"value":"/ Add arrows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":708784,"byte_end":708799,"line_start":835,"line_end":835,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3852},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":709214,"byte_end":709219,"line_start":849,"line_end":849,"column_start":12,"column_end":17},"name":"image","qualname":"<PlotUi>::image","value":"pub fn image(&mut Self, PlotImage)","parent":null,"children":[],"decl_id":null,"docs":" Add an image.\n","sig":null,"attributes":[{"value":"/ Add an image.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":709185,"byte_end":709202,"line_start":848,"line_end":848,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3853},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":709453,"byte_end":709458,"line_start":856,"line_end":856,"column_start":12,"column_end":17},"name":"hline","qualname":"<PlotUi>::hline","value":"pub fn hline(&mut Self, HLine)","parent":null,"children":[],"decl_id":null,"docs":" Add a horizontal line.\n Can be useful e.g. to show min/max bounds or similar.\n Always fills the full width of the plot.\n","sig":null,"attributes":[{"value":"/ Add a horizontal line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":709304,"byte_end":709330,"line_start":853,"line_end":853,"column_start":5,"column_end":31}},{"value":"/ Can be useful e.g. to show min/max bounds or similar.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":709335,"byte_end":709392,"line_start":854,"line_end":854,"column_start":5,"column_end":62}},{"value":"/ Always fills the full width of the plot.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":709397,"byte_end":709441,"line_start":855,"line_end":855,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3854},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":709809,"byte_end":709814,"line_start":866,"line_end":866,"column_start":12,"column_end":17},"name":"vline","qualname":"<PlotUi>::vline","value":"pub fn vline(&mut Self, VLine)","parent":null,"children":[],"decl_id":null,"docs":" Add a vertical line.\n Can be useful e.g. to show min/max bounds or similar.\n Always fills the full height of the plot.\n","sig":null,"attributes":[{"value":"/ Add a vertical line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":709661,"byte_end":709685,"line_start":863,"line_end":863,"column_start":5,"column_end":29}},{"value":"/ Can be useful e.g. to show min/max bounds or similar.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":709690,"byte_end":709747,"line_start":864,"line_end":864,"column_start":5,"column_end":62}},{"value":"/ Always fills the full height of the plot.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":709752,"byte_end":709797,"line_start":865,"line_end":865,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3855},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":710056,"byte_end":710064,"line_start":874,"line_end":874,"column_start":12,"column_end":20},"name":"box_plot","qualname":"<PlotUi>::box_plot","value":"pub fn box_plot(&mut Self, BoxPlot)","parent":null,"children":[],"decl_id":null,"docs":" Add a box plot diagram.\n","sig":null,"attributes":[{"value":"/ Add a box plot diagram.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":710017,"byte_end":710044,"line_start":873,"line_end":873,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3856},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":710466,"byte_end":710475,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"bar_chart","qualname":"<PlotUi>::bar_chart","value":"pub fn bar_chart(&mut Self, BarChart)","parent":null,"children":[],"decl_id":null,"docs":" Add a bar chart.\n","sig":null,"attributes":[{"value":"/ Add a bar chart.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":710434,"byte_end":710454,"line_start":886,"line_end":886,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3884},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814227,"byte_end":814238,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"ProgressBar","qualname":"::widgets::progress_bar::ProgressBar","value":"ProgressBar {  }","parent":null,"children":[{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888}],"decl_id":null,"docs":" A simple progress bar.","sig":null,"attributes":[{"value":"/ A simple progress bar.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814076,"byte_end":814102,"line_start":8,"line_end":8,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814103,"byte_end":814106,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also: [`crate::Spinner`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814107,"byte_end":814140,"line_start":10,"line_end":10,"column_start":1,"column_end":34}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814141,"byte_end":814215,"line_start":11,"line_end":11,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814448,"byte_end":814451,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<ProgressBar>::new","value":"pub fn new(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Progress in the `[0, 1]` range, where `1` means \"completed\".\n","sig":null,"attributes":[{"value":"/ Progress in the `[0, 1]` range, where `1` means \"completed\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814372,"byte_end":814436,"line_start":20,"line_end":20,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814733,"byte_end":814746,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"desired_width","qualname":"<ProgressBar>::desired_width","value":"pub fn desired_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The desired width of the bar. Will use all horizontal space if not set.\n","sig":null,"attributes":[{"value":"/ The desired width of the bar. Will use all horizontal space if not set.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814646,"byte_end":814721,"line_start":30,"line_end":30,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3892},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814922,"byte_end":814926,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"text","qualname":"<ProgressBar>::text","value":"pub fn text<impl Into<WidgetText>: Into<WidgetText>>(Self,\n                                                     impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A custom text to display on the progress bar.\n","sig":null,"attributes":[{"value":"/ A custom text to display on the progress bar.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814861,"byte_end":814910,"line_start":36,"line_end":36,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":815129,"byte_end":815144,"line_start":43,"line_end":43,"column_start":12,"column_end":27},"name":"show_percentage","qualname":"<ProgressBar>::show_percentage","value":"pub fn show_percentage(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show the progress in percent on the progress bar.\n","sig":null,"attributes":[{"value":"/ Show the progress in percent on the progress bar.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":815064,"byte_end":815117,"line_start":42,"line_end":42,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":815404,"byte_end":815411,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"animate","qualname":"<ProgressBar>::animate","value":"pub fn animate(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Whether to display a loading animation when progress `< 1`.\n Note that this will cause the UI to be redrawn.\n Defaults to `false`.\n","sig":null,"attributes":[{"value":"/ Whether to display a loading animation when progress `< 1`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":815244,"byte_end":815307,"line_start":48,"line_end":48,"column_start":5,"column_end":68}},{"value":"/ Note that this will cause the UI to be redrawn.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":815312,"byte_end":815363,"line_start":49,"line_end":49,"column_start":5,"column_end":56}},{"value":"/ Defaults to `false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":815368,"byte_end":815392,"line_start":50,"line_end":50,"column_start":5,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3902},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819800,"byte_end":819815,"line_start":25,"line_end":25,"column_start":12,"column_end":27},"name":"SelectableLabel","qualname":"::widgets::selected_label::SelectableLabel","value":"SelectableLabel {  }","parent":null,"children":[{"krate":0,"index":3903},{"krate":0,"index":3904}],"decl_id":null,"docs":" One out of several alternatives, either selected or not.\n Will mark selected items with a different background color.\n An alternative to [`RadioButton`] and [`Checkbox`].","sig":null,"attributes":[{"value":"/ One out of several alternatives, either selected or not.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819062,"byte_end":819122,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/ Will mark selected items with a different background color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819123,"byte_end":819186,"line_start":4,"line_end":4,"column_start":1,"column_end":64}},{"value":"/ An alternative to [`RadioButton`] and [`Checkbox`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819187,"byte_end":819242,"line_start":5,"line_end":5,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819243,"byte_end":819246,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Usually you'd use [`Ui::selectable_value`] or [`Ui::selectable_label`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819247,"byte_end":819330,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819331,"byte_end":819334,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819335,"byte_end":819342,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819343,"byte_end":819375,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ #[derive(PartialEq)]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819376,"byte_end":819400,"line_start":11,"line_end":11,"column_start":1,"column_end":25}},{"value":"/ enum Enum { First, Second, Third }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819401,"byte_end":819439,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/ let mut my_enum = Enum::First;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819440,"byte_end":819474,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819475,"byte_end":819478,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ui.selectable_value(&mut my_enum, Enum::First, \"First\");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819479,"byte_end":819539,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819540,"byte_end":819543,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ // is equivalent to:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819544,"byte_end":819568,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819569,"byte_end":819572,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ if ui.add(egui::SelectableLabel::new(my_enum == Enum::First, \"First\")).clicked() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819573,"byte_end":819659,"line_start":19,"line_end":19,"column_start":1,"column_end":87}},{"value":"/     my_enum = Enum::First","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819660,"byte_end":819689,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819690,"byte_end":819695,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819696,"byte_end":819705,"line_start":22,"line_end":22,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819706,"byte_end":819713,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819714,"byte_end":819788,"line_start":24,"line_end":24,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819897,"byte_end":819900,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectableLabel>::new","value":"pub fn new<impl Into<WidgetText>: Into<WidgetText>>(bool,\n                                                    impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3913},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821837,"byte_end":821846,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"Separator","qualname":"::widgets::separator::Separator","value":"Separator {  }","parent":null,"children":[{"krate":0,"index":3914},{"krate":0,"index":3915}],"decl_id":null,"docs":" A visual separator. A horizontal or vertical line (depending on [`Layout`]).","sig":null,"attributes":[{"value":"/ A visual separator. A horizontal or vertical line (depending on [`Layout`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821453,"byte_end":821533,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821534,"byte_end":821537,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Usually you'd use the shorter version [`Ui::separator`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821538,"byte_end":821598,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821599,"byte_end":821602,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821603,"byte_end":821610,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821611,"byte_end":821643,"line_start":8,"line_end":8,"column_start":1,"column_end":33}},{"value":"/ // These are equivalent:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821644,"byte_end":821672,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/ ui.separator();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821673,"byte_end":821692,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/ ui.add(egui::Separator::default());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821693,"byte_end":821732,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821733,"byte_end":821742,"line_start":12,"line_end":12,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821743,"byte_end":821750,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821751,"byte_end":821825,"line_start":14,"line_end":14,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3919},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822168,"byte_end":822175,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"spacing","qualname":"<Separator>::spacing","value":"pub fn spacing(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" How much space we take up. The line is painted in the middle of this.\n","sig":null,"attributes":[{"value":"/ How much space we take up. The line is painted in the middle of this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822083,"byte_end":822156,"line_start":30,"line_end":30,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822441,"byte_end":822451,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<Separator>::horizontal","value":"pub fn horizontal(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Explicitly ask for a horizontal line.\n By default you will get a horizontal line in vertical layouts,\n and a vertical line in horizontal layouts.\n","sig":null,"attributes":[{"value":"/ Explicitly ask for a horizontal line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822266,"byte_end":822307,"line_start":36,"line_end":36,"column_start":5,"column_end":46}},{"value":"/ By default you will get a horizontal line in vertical layouts,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822312,"byte_end":822378,"line_start":37,"line_end":37,"column_start":5,"column_end":71}},{"value":"/ and a vertical line in horizontal layouts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822383,"byte_end":822429,"line_start":38,"line_end":38,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3921},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822715,"byte_end":822723,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"vertical","qualname":"<Separator>::vertical","value":"pub fn vertical(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Explicitly ask for a vertical line.\n By default you will get a horizontal line in vertical layouts,\n and a vertical line in horizontal layouts.\n","sig":null,"attributes":[{"value":"/ Explicitly ask for a vertical line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822542,"byte_end":822581,"line_start":44,"line_end":44,"column_start":5,"column_end":44}},{"value":"/ By default you will get a horizontal line in vertical layouts,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822586,"byte_end":822652,"line_start":45,"line_end":45,"column_start":5,"column_end":71}},{"value":"/ and a vertical line in horizontal layouts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822657,"byte_end":822703,"line_start":46,"line_end":46,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3935},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825164,"byte_end":825174,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"Horizontal","qualname":"::widgets::slider::SliderOrientation::Horizontal","value":"SliderOrientation::Horizontal","parent":{"krate":0,"index":3934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825180,"byte_end":825188,"line_start":38,"line_end":38,"column_start":5,"column_end":13},"name":"Vertical","qualname":"::widgets::slider::SliderOrientation::Vertical","value":"SliderOrientation::Vertical","parent":{"krate":0,"index":3934},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3934},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825140,"byte_end":825157,"line_start":36,"line_end":36,"column_start":10,"column_end":27},"name":"SliderOrientation","qualname":"::widgets::slider::SliderOrientation","value":"pub enum SliderOrientation { Horizontal, Vertical, }","parent":null,"children":[{"krate":0,"index":3935},{"krate":0,"index":3937}],"decl_id":null,"docs":" Specifies the orientation of a [`Slider`].\n","sig":null,"attributes":[{"value":"/ Specifies the orientation of a [`Slider`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825084,"byte_end":825130,"line_start":35,"line_end":35,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":826215,"byte_end":826221,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"Slider","qualname":"::widgets::slider::Slider","value":"Slider {  }","parent":null,"children":[{"krate":0,"index":3941},{"krate":0,"index":3942},{"krate":0,"index":3943},{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3946},{"krate":0,"index":3947},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3950},{"krate":0,"index":3951},{"krate":0,"index":3952},{"krate":0,"index":3953},{"krate":0,"index":3954}],"decl_id":null,"docs":" Control a number with a slider.","sig":null,"attributes":[{"value":"/ Control a number with a slider.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825193,"byte_end":825228,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825229,"byte_end":825232,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The slider range defines the values you get when pulling the slider to the far edges.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825233,"byte_end":825322,"line_start":43,"line_end":43,"column_start":1,"column_end":90}},{"value":"/ By default, the slider can still show values outside this range,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825323,"byte_end":825391,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ and still allows users to enter values outside the range by clicking the slider value and editing it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825392,"byte_end":825497,"line_start":45,"line_end":45,"column_start":1,"column_end":106}},{"value":"/ If you want to clamp incoming and outgoing values, use [`Slider::clamp_to_range`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825498,"byte_end":825584,"line_start":46,"line_end":46,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825585,"byte_end":825588,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The range can include any numbers, and go from low-to-high or from high-to-low.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825589,"byte_end":825672,"line_start":48,"line_end":48,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825673,"byte_end":825676,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The slider consists of three parts: a slider, a value display, and an optional text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825677,"byte_end":825765,"line_start":50,"line_end":50,"column_start":1,"column_end":89}},{"value":"/ The user can click the value display to edit its value. It can be turned off with `.show_value(false)`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825766,"byte_end":825873,"line_start":51,"line_end":51,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825874,"byte_end":825877,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825878,"byte_end":825885,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825886,"byte_end":825918,"line_start":54,"line_end":54,"column_start":1,"column_end":33}},{"value":"/ # let mut my_f32: f32 = 0.0;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825919,"byte_end":825951,"line_start":55,"line_end":55,"column_start":1,"column_end":33}},{"value":"/ ui.add(egui::Slider::new(&mut my_f32, 0.0..=100.0).text(\"My value\"));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":825952,"byte_end":826025,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":826026,"byte_end":826035,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":826036,"byte_end":826043,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":826044,"byte_end":826047,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The default `Slider` size is set by [`crate::style::Spacing::slider_width`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":826048,"byte_end":826128,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":826129,"byte_end":826203,"line_start":61,"line_end":61,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":826722,"byte_end":826725,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<Slider>::new","value":"pub fn new<Num: emath::Numeric>(&'a mut Num, RangeInclusive<Num>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new horizontal slider.\n","sig":null,"attributes":[{"value":"/ Creates a new horizontal slider.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":826674,"byte_end":826710,"line_start":81,"line_end":81,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":827192,"byte_end":827204,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"from_get_set","qualname":"<Slider>::from_get_set","value":"pub fn from_get_set<impl 'a + FnMut(Option<f64>) -> f64: 'a +\n                    FnMut(Option<f64>) ->\n                    f64>(RangeInclusive<f64>,\n                         impl 'a + FnMut(Option<f64>) -> f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828076,"byte_end":828086,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"show_value","qualname":"<Slider>::show_value","value":"pub fn show_value(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Control whether or not the slider shows the current value.\n Default: `true`.\n","sig":null,"attributes":[{"value":"/ Control whether or not the slider shows the current value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":827977,"byte_end":828039,"line_start":124,"line_end":124,"column_start":5,"column_end":67}},{"value":"/ Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828044,"byte_end":828064,"line_start":125,"line_end":125,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3963},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828246,"byte_end":828252,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"prefix","qualname":"<Slider>::prefix","value":"pub fn prefix<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show a prefix before the number, e.g. \"x: \"\n","sig":null,"attributes":[{"value":"/ Show a prefix before the number, e.g. \"x: \"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828187,"byte_end":828234,"line_start":131,"line_end":131,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3965},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828444,"byte_end":828450,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"suffix","qualname":"<Slider>::suffix","value":"pub fn suffix<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a suffix to the number, this can be e.g. a unit (\"°\" or \" m\")\n","sig":null,"attributes":[{"value":"/ Add a suffix to the number, this can be e.g. a unit (\"°\" or \" m\")","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828362,"byte_end":828432,"line_start":137,"line_end":137,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828650,"byte_end":828654,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"text","qualname":"<Slider>::text","value":"pub fn text<impl ToString: ToString>(Self, impl ToString) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Show a text next to the slider (e.g. explaining what the slider controls).\n","sig":null,"attributes":[{"value":"/ Show a text next to the slider (e.g. explaining what the slider controls).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828560,"byte_end":828638,"line_start":143,"line_end":143,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":3969},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828765,"byte_end":828775,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"text_color","qualname":"<Slider>::text_color","value":"pub fn text_color(Self, Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3970},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828958,"byte_end":828969,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"orientation","qualname":"<Slider>::orientation","value":"pub fn orientation(Self, SliderOrientation) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Vertical or horizontal slider? The default is horizontal.\n","sig":null,"attributes":[{"value":"/ Vertical or horizontal slider? The default is horizontal.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":828885,"byte_end":828946,"line_start":154,"line_end":154,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3971},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829130,"byte_end":829138,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"vertical","qualname":"<Slider>::vertical","value":"pub fn vertical(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make this a vertical slider.\n","sig":null,"attributes":[{"value":"/ Make this a vertical slider.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829086,"byte_end":829118,"line_start":160,"line_end":160,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829412,"byte_end":829423,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"logarithmic","qualname":"<Slider>::logarithmic","value":"pub fn logarithmic(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Make this a logarithmic slider.\n This is great for when the slider spans a huge range,\n e.g. from one to a million.\n The default is OFF.\n","sig":null,"attributes":[{"value":"/ Make this a logarithmic slider.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829239,"byte_end":829274,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/ This is great for when the slider spans a huge range,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829279,"byte_end":829336,"line_start":167,"line_end":167,"column_start":5,"column_end":62}},{"value":"/ e.g. from one to a million.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829341,"byte_end":829372,"line_start":168,"line_end":168,"column_start":5,"column_end":36}},{"value":"/ The default is OFF.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829377,"byte_end":829400,"line_start":169,"line_end":169,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829742,"byte_end":829759,"line_start":178,"line_end":178,"column_start":12,"column_end":29},"name":"smallest_positive","qualname":"<Slider>::smallest_positive","value":"pub fn smallest_positive(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" For logarithmic sliders that includes zero:\n what is the smallest positive value you want to be able to select?\n The default is `1` for integer sliders and `1e-6` for real sliders.\n","sig":null,"attributes":[{"value":"/ For logarithmic sliders that includes zero:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829532,"byte_end":829579,"line_start":175,"line_end":175,"column_start":5,"column_end":52}},{"value":"/ what is the smallest positive value you want to be able to select?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829584,"byte_end":829654,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ The default is `1` for integer sliders and `1e-6` for real sliders.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829659,"byte_end":829730,"line_start":177,"line_end":177,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3974},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830077,"byte_end":830091,"line_start":186,"line_end":186,"column_start":12,"column_end":26},"name":"largest_finite","qualname":"<Slider>::largest_finite","value":"pub fn largest_finite(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" For logarithmic sliders, the largest positive value we are interested in\n before the slider switches to `INFINITY`, if that is the higher end.\n Default: INFINITY.\n","sig":null,"attributes":[{"value":"/ For logarithmic sliders, the largest positive value we are interested in","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829885,"byte_end":829961,"line_start":183,"line_end":183,"column_start":5,"column_end":81}},{"value":"/ before the slider switches to `INFINITY`, if that is the higher end.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":829966,"byte_end":830038,"line_start":184,"line_end":184,"column_start":5,"column_end":77}},{"value":"/ Default: INFINITY.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830043,"byte_end":830065,"line_start":185,"line_end":185,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3975},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830336,"byte_end":830350,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"clamp_to_range","qualname":"<Slider>::clamp_to_range","value":"pub fn clamp_to_range(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If set to `true`, all incoming and outgoing values will be clamped to the slider range.\n Default: `true`.\n","sig":null,"attributes":[{"value":"/ If set to `true`, all incoming and outgoing values will be clamped to the slider range.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830208,"byte_end":830299,"line_start":191,"line_end":191,"column_start":5,"column_end":96}},{"value":"/ Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830304,"byte_end":830324,"line_start":192,"line_end":192,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3976},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830570,"byte_end":830579,"line_start":200,"line_end":200,"column_start":12,"column_end":21},"name":"smart_aim","qualname":"<Slider>::smart_aim","value":"pub fn smart_aim(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Turn smart aim on/off. Default is ON.\n There is almost no point in turning this off.\n","sig":null,"attributes":[{"value":"/ Turn smart aim on/off. Default is ON.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830463,"byte_end":830504,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ There is almost no point in turning this off.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830509,"byte_end":830558,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830953,"byte_end":830960,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"step_by","qualname":"<Slider>::step_by","value":"pub fn step_by(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the minimal change of the value.\n Value `0.0` effectively disables the feature. If the new value is out of range\n and `clamp_to_range` is enabled, you would not have the ability to change the value.","sig":null,"attributes":[{"value":"/ Sets the minimal change of the value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830677,"byte_end":830718,"line_start":205,"line_end":205,"column_start":5,"column_end":46}},{"value":"/ Value `0.0` effectively disables the feature. If the new value is out of range","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830723,"byte_end":830805,"line_start":206,"line_end":206,"column_start":5,"column_end":87}},{"value":"/ and `clamp_to_range` is enabled, you would not have the ability to change the value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830810,"byte_end":830898,"line_start":207,"line_end":207,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830903,"byte_end":830906,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Default: `0.0` (disabled).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":830911,"byte_end":830941,"line_start":209,"line_end":209,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3978},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":831413,"byte_end":831425,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"min_decimals","qualname":"<Slider>::min_decimals","value":"pub fn min_decimals(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a minimum number of decimals to display.\n Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.\n Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.\n","sig":null,"attributes":[{"value":"/ Set a minimum number of decimals to display.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":831133,"byte_end":831181,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/ Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":831186,"byte_end":831293,"line_start":217,"line_end":217,"column_start":5,"column_end":112}},{"value":"/ Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":831298,"byte_end":831401,"line_start":218,"line_end":218,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":3979},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":831929,"byte_end":831941,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"max_decimals","qualname":"<Slider>::max_decimals","value":"pub fn max_decimals(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a maximum number of decimals to display.\n Values will also be rounded to this number of decimals.\n Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.\n Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.\n","sig":null,"attributes":[{"value":"/ Set a maximum number of decimals to display.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":831585,"byte_end":831633,"line_start":225,"line_end":225,"column_start":5,"column_end":53}},{"value":"/ Values will also be rounded to this number of decimals.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":831638,"byte_end":831697,"line_start":226,"line_end":226,"column_start":5,"column_end":64}},{"value":"/ Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":831702,"byte_end":831809,"line_start":227,"line_end":227,"column_start":5,"column_end":112}},{"value":"/ Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":831814,"byte_end":831917,"line_start":228,"line_end":228,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":3980},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":832398,"byte_end":832412,"line_start":238,"line_end":238,"column_start":12,"column_end":26},"name":"fixed_decimals","qualname":"<Slider>::fixed_decimals","value":"pub fn fixed_decimals(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set an exact number of decimals to display.\n Values will also be rounded to this number of decimals.\n Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.\n Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.\n","sig":null,"attributes":[{"value":"/ Set an exact number of decimals to display.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":832055,"byte_end":832102,"line_start":234,"line_end":234,"column_start":5,"column_end":52}},{"value":"/ Values will also be rounded to this number of decimals.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":832107,"byte_end":832166,"line_start":235,"line_end":235,"column_start":5,"column_end":64}},{"value":"/ Normally you don't need to pick a precision, as the slider will intelligently pick a precision for you.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":832171,"byte_end":832278,"line_start":236,"line_end":236,"column_start":5,"column_end":112}},{"value":"/ Regardless of precision the slider will use \"smart aim\" to help the user select nice, round values.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":832283,"byte_end":832386,"line_start":237,"line_end":237,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":3981},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":832844,"byte_end":832851,"line_start":247,"line_end":247,"column_start":12,"column_end":19},"name":"integer","qualname":"<Slider>::integer","value":"pub fn integer(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Helper: equivalent to `self.precision(0).smallest_positive(1.0)`.\n If you use one of the integer constructors (e.g. `Slider::i32`) this is called for you,\n but if you want to have a slider for picking integer values in an `Slider::f64`, use this.\n","sig":null,"attributes":[{"value":"/ Helper: equivalent to `self.precision(0).smallest_positive(1.0)`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":832568,"byte_end":832637,"line_start":244,"line_end":244,"column_start":5,"column_end":74}},{"value":"/ If you use one of the integer constructors (e.g. `Slider::i32`) this is called for you,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":832642,"byte_end":832733,"line_start":245,"line_end":245,"column_start":5,"column_end":96}},{"value":"/ but if you want to have a slider for picking integer values in an `Slider::f64`, use this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":832738,"byte_end":832832,"line_start":246,"line_end":246,"column_start":5,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":6315},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":849815,"byte_end":849822,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Spinner","qualname":"::widgets::spinner::Spinner","value":"Spinner {  }","parent":null,"children":[{"krate":0,"index":6316}],"decl_id":null,"docs":" A spinner widget used to indicate loading.","sig":null,"attributes":[{"value":"/ A spinner widget used to indicate loading.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":849621,"byte_end":849667,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":849668,"byte_end":849671,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See also: [`crate::ProgressBar`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":849672,"byte_end":849709,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":849710,"byte_end":849784,"line_start":8,"line_end":8,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4049},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":850012,"byte_end":850015,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Spinner>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new spinner that uses the style's `interact_size` unless changed.\n","sig":null,"attributes":[{"value":"/ Create a new spinner that uses the style's `interact_size` unless changed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":849922,"byte_end":850000,"line_start":16,"line_end":16,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":4050},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":850263,"byte_end":850267,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"size","qualname":"<Spinner>::size","value":"pub fn size(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the spinner's size. The size sets both the height and width, as the spinner is always\n square. If the size isn't set explicitly, the active style's `interact_size` is used.\n","sig":null,"attributes":[{"value":"/ Sets the spinner's size. The size sets both the height and width, as the spinner is always","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":850063,"byte_end":850157,"line_start":21,"line_end":21,"column_start":5,"column_end":99}},{"value":"/ square. If the size isn't set explicitly, the active style's `interact_size` is used.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":850162,"byte_end":850251,"line_start":22,"line_end":22,"column_start":5,"column_end":94}}]},{"kind":"Mod","id":{"krate":0,"index":4055},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text_edit","qualname":"::widgets::text_edit","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\mod.rs","parent":null,"children":[{"krate":0,"index":4056},{"krate":0,"index":4179},{"krate":0,"index":4198},{"krate":0,"index":4209},{"krate":0,"index":4237},{"krate":0,"index":4264},{"krate":0,"index":4265},{"krate":0,"index":4268},{"krate":0,"index":4269},{"krate":0,"index":4272},{"krate":0,"index":4275}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4086},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853036,"byte_end":853044,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"TextEdit","qualname":"::widgets::text_edit::builder::TextEdit","value":"TextEdit {  }","parent":null,"children":[{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090},{"krate":0,"index":4091},{"krate":0,"index":4092},{"krate":0,"index":4093},{"krate":0,"index":4094},{"krate":0,"index":4095},{"krate":0,"index":4096},{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4103}],"decl_id":null,"docs":" A text region that the user can edit the contents of.","sig":null,"attributes":[{"value":"/ A text region that the user can edit the contents of.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":851866,"byte_end":851923,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":851924,"byte_end":851927,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See also [`Ui::text_edit_singleline`] and [`Ui::text_edit_multiline`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":851928,"byte_end":852002,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852003,"byte_end":852006,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852007,"byte_end":852019,"line_start":13,"line_end":13,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852020,"byte_end":852023,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852024,"byte_end":852031,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852032,"byte_end":852064,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/ # let mut my_string = String::new();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852065,"byte_end":852105,"line_start":17,"line_end":17,"column_start":1,"column_end":41}},{"value":"/ let response = ui.add(egui::TextEdit::singleline(&mut my_string));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852106,"byte_end":852176,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ if response.changed() {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852177,"byte_end":852204,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"/     // …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852205,"byte_end":852219,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852220,"byte_end":852225,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"/ if response.lost_focus() && ui.input().key_pressed(egui::Key::Enter) {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852226,"byte_end":852300,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/     // …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852301,"byte_end":852315,"line_start":23,"line_end":23,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852316,"byte_end":852321,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852322,"byte_end":852331,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852332,"byte_end":852339,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852340,"byte_end":852343,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ To fill an [`Ui`] with a [`TextEdit`] use [`Ui::add_sized`]:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852344,"byte_end":852408,"line_start":28,"line_end":28,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852409,"byte_end":852412,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852413,"byte_end":852420,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852421,"byte_end":852453,"line_start":31,"line_end":31,"column_start":1,"column_end":33}},{"value":"/ # let mut my_string = String::new();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852454,"byte_end":852494,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/ ui.add_sized(ui.available_size(), egui::TextEdit::multiline(&mut my_string));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852495,"byte_end":852576,"line_start":33,"line_end":33,"column_start":1,"column_end":82}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852577,"byte_end":852586,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852587,"byte_end":852594,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852595,"byte_end":852598,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852599,"byte_end":852602,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ You can also use [`TextEdit`] to show text that can be selected, but not edited.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852603,"byte_end":852687,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ To do so, pass in a `&mut` reference to a `&str`, for instance:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852688,"byte_end":852755,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852756,"byte_end":852759,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852760,"byte_end":852767,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ fn selectable_text(ui: &mut egui::Ui, mut text: &str) {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852768,"byte_end":852827,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/     ui.add(egui::TextEdit::multiline(&mut text));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852828,"byte_end":852881,"line_start":43,"line_end":43,"column_start":1,"column_end":54}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852882,"byte_end":852887,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852888,"byte_end":852895,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852896,"byte_end":852899,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Advanced usage","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852900,"byte_end":852921,"line_start":47,"line_end":47,"column_start":1,"column_end":22}},{"value":"/ See [`TextEdit::show`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852922,"byte_end":852949,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":852950,"byte_end":853024,"line_start":49,"line_end":49,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4109},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853626,"byte_end":853636,"line_start":74,"line_end":74,"column_start":12,"column_end":22},"name":"load_state","qualname":"<TextEdit>::load_state","value":"pub fn load_state(&Context, Id) -> Option<TextEditState>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853742,"byte_end":853753,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"store_state","qualname":"<TextEdit>::store_state","value":"pub fn store_state(&Context, Id, TextEditState)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4113},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853998,"byte_end":854008,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"singleline","qualname":"<TextEdit>::singleline","value":"pub fn singleline(&'t mut dyn TextBuffer) -> Self","parent":null,"children":[],"decl_id":null,"docs":" No newlines (`\\n`) allowed. Pressing enter key will result in the `TextEdit` losing focus (`response.lost_focus`).\n","sig":null,"attributes":[{"value":"/ No newlines (`\\n`) allowed. Pressing enter key will result in the `TextEdit` losing focus (`response.lost_focus`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853868,"byte_end":853986,"line_start":84,"line_end":84,"column_start":5,"column_end":123}}]},{"kind":"Method","id":{"krate":0,"index":4114},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":854278,"byte_end":854287,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"multiline","qualname":"<TextEdit>::multiline","value":"pub fn multiline(&'t mut dyn TextBuffer) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A `TextEdit` for multiple lines. Pressing enter key will create a new line.\n","sig":null,"attributes":[{"value":"/ A `TextEdit` for multiple lines. Pressing enter key will create a new line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":854187,"byte_end":854266,"line_start":93,"line_end":93,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":4115},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855005,"byte_end":855016,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"code_editor","qualname":"<TextEdit>::code_editor","value":"pub fn code_editor(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Build a `TextEdit` focused on code editing.\n By default it comes with:\n - monospaced font\n - focus lock\n","sig":null,"attributes":[{"value":"/ Build a `TextEdit` focused on code editing.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":854865,"byte_end":854912,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/ By default it comes with:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":854917,"byte_end":854946,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/ - monospaced font","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":854951,"byte_end":854972,"line_start":117,"line_end":117,"column_start":5,"column_end":26}},{"value":"/ - focus lock","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":854977,"byte_end":854993,"line_start":118,"line_end":118,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4116},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855173,"byte_end":855175,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"name":"id","qualname":"<TextEdit>::id","value":"pub fn id(Self, Id) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use if you want to set an explicit `Id` for this widget.\n","sig":null,"attributes":[{"value":"/ Use if you want to set an explicit `Id` for this widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855101,"byte_end":855161,"line_start":123,"line_end":123,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4117},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855374,"byte_end":855383,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"id_source","qualname":"<TextEdit>::id_source","value":"pub fn id_source<impl std::hash::Hash: std::hash::Hash>(Self,\n                                                        impl std::hash::Hash)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A source for the unique `Id`, e.g. `.id_source(\"second_text_edit_field\")` or `.id_source(loop_index)`.\n","sig":null,"attributes":[{"value":"/ A source for the unique `Id`, e.g. `.id_source(\"second_text_edit_field\")` or `.id_source(loop_index)`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855256,"byte_end":855362,"line_start":129,"line_end":129,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":4119},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855580,"byte_end":855589,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"hint_text","qualname":"<TextEdit>::hint_text","value":"pub fn hint_text<impl Into<WidgetText>: Into<WidgetText>>(Self,\n                                                          impl Into<WidgetText>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Show a faint hint text when the text field is empty.\n","sig":null,"attributes":[{"value":"/ Show a faint hint text when the text field is empty.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855512,"byte_end":855568,"line_start":135,"line_end":135,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4121},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855798,"byte_end":855806,"line_start":142,"line_end":142,"column_start":12,"column_end":20},"name":"password","qualname":"<TextEdit>::password","value":"pub fn password(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If true, hide the letters from view and prevent copying from the field.\n","sig":null,"attributes":[{"value":"/ If true, hide the letters from view and prevent copying from the field.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855711,"byte_end":855786,"line_start":141,"line_end":141,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4122},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855952,"byte_end":855956,"line_start":148,"line_end":148,"column_start":12,"column_end":16},"name":"font","qualname":"<TextEdit>::font","value":"pub fn font<impl Into<FontSelection>: Into<FontSelection>>(Self,\n                                                           impl Into<FontSelection>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Pick a [`FontId`] or [`TextStyle`].\n","sig":null,"attributes":[{"value":"/ Pick a [`FontId`] or [`TextStyle`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":855901,"byte_end":855940,"line_start":147,"line_end":147,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4124},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856148,"byte_end":856158,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"text_style","qualname":"<TextEdit>::text_style","value":"pub fn text_style(Self, TextStyle) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated = \"Use .font(…) instead\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856096,"byte_end":856136,"line_start":153,"line_end":153,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4125},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856246,"byte_end":856256,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"text_color","qualname":"<TextEdit>::text_color","value":"pub fn text_color(Self, Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4126},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856373,"byte_end":856387,"line_start":163,"line_end":163,"column_start":12,"column_end":26},"name":"text_color_opt","qualname":"<TextEdit>::text_color_opt","value":"pub fn text_color_opt(Self, Option<Color32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857583,"byte_end":857591,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"layouter","qualname":"<TextEdit>::layouter","value":"pub fn layouter(Self, &'t mut dyn FnMut(&Ui, &str, f32) -> Arc<Galley>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Override how text is being shown inside the `TextEdit`.","sig":null,"attributes":[{"value":"/ Override how text is being shown inside the `TextEdit`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856499,"byte_end":856558,"line_start":168,"line_end":168,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856563,"byte_end":856566,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This can be used to implement things like syntax highlighting.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856571,"byte_end":856637,"line_start":170,"line_end":170,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856642,"byte_end":856645,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function will be called at least once per frame,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856650,"byte_end":856707,"line_start":172,"line_end":172,"column_start":5,"column_end":62}},{"value":"/ so it is strongly suggested that you cache the results of any syntax highlighter","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856712,"byte_end":856796,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/ so as not to waste CPU highlighting the same string every frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856801,"byte_end":856869,"line_start":174,"line_end":174,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856874,"byte_end":856877,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ The arguments is the enclosing [`Ui`] (so you can access e.g. [`Ui::fonts`]),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856882,"byte_end":856963,"line_start":176,"line_end":176,"column_start":5,"column_end":86}},{"value":"/ the text and the wrap width.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":856968,"byte_end":857000,"line_start":177,"line_end":177,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857005,"byte_end":857008,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857013,"byte_end":857020,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857025,"byte_end":857057,"line_start":180,"line_end":180,"column_start":5,"column_end":37}},{"value":"/ # let mut my_code = String::new();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857062,"byte_end":857100,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/ # fn my_memoized_highlighter(s: &str) -> egui::text::LayoutJob { Default::default() }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857105,"byte_end":857194,"line_start":182,"line_end":182,"column_start":5,"column_end":94}},{"value":"/ let mut layouter = |ui: &egui::Ui, string: &str, wrap_width: f32| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857199,"byte_end":857270,"line_start":183,"line_end":183,"column_start":5,"column_end":76}},{"value":"/     let mut layout_job: egui::text::LayoutJob = my_memoized_highlighter(string);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857275,"byte_end":857359,"line_start":184,"line_end":184,"column_start":5,"column_end":89}},{"value":"/     layout_job.wrap_width = wrap_width;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857364,"byte_end":857407,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/     ui.fonts().layout_job(layout_job)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857412,"byte_end":857453,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/ };","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857458,"byte_end":857464,"line_start":187,"line_end":187,"column_start":5,"column_end":11}},{"value":"/ ui.add(egui::TextEdit::multiline(&mut my_code).layouter(&mut layouter));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857469,"byte_end":857545,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857550,"byte_end":857559,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857564,"byte_end":857571,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857963,"byte_end":857974,"line_start":200,"line_end":200,"column_start":12,"column_end":23},"name":"interactive","qualname":"<TextEdit>::interactive","value":"pub fn interactive(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Default is `true`. If set to `false` then you cannot interact with the text (neither edit or select it).","sig":null,"attributes":[{"value":"/ Default is `true`. If set to `false` then you cannot interact with the text (neither edit or select it).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857737,"byte_end":857845,"line_start":197,"line_end":197,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857850,"byte_end":857853,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Consider using [`Ui::add_enabled`] instead to also give the `TextEdit` a greyed out look.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":857858,"byte_end":857951,"line_start":199,"line_end":199,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":4129},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858189,"byte_end":858194,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"name":"frame","qualname":"<TextEdit>::frame","value":"pub fn frame(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Default is `true`. If set to `false` there will be no frame showing that this is editable text!\n","sig":null,"attributes":[{"value":"/ Default is `true`. If set to `false` there will be no frame showing that this is editable text!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858078,"byte_end":858177,"line_start":205,"line_end":205,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":4130},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858336,"byte_end":858342,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"margin","qualname":"<TextEdit>::margin","value":"pub fn margin(Self, Vec2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set margin of text. Default is [4.0,2.0]\n","sig":null,"attributes":[{"value":"/ Set margin of text. Default is [4.0,2.0]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858280,"byte_end":858324,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858587,"byte_end":858600,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"desired_width","qualname":"<TextEdit>::desired_width","value":"pub fn desired_width(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set to 0.0 to keep as small as possible.\n Set to [`f32::INFINITY`] to take up all available space (i.e. disable automatic word wrap).\n","sig":null,"attributes":[{"value":"/ Set to 0.0 to keep as small as possible.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858431,"byte_end":858475,"line_start":217,"line_end":217,"column_start":5,"column_end":49}},{"value":"/ Set to [`f32::INFINITY`] to take up all available space (i.e. disable automatic word wrap).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858480,"byte_end":858575,"line_start":218,"line_end":218,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858868,"byte_end":858880,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"desired_rows","qualname":"<TextEdit>::desired_rows","value":"pub fn desired_rows(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the number of rows to show by default.\n The default for singleline text is `1`.\n The default for multiline text is `4`.\n","sig":null,"attributes":[{"value":"/ Set the number of rows to show by default.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858715,"byte_end":858761,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/ The default for singleline text is `1`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858766,"byte_end":858809,"line_start":225,"line_end":225,"column_start":5,"column_end":48}},{"value":"/ The default for multiline text is `4`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":858814,"byte_end":858856,"line_start":226,"line_end":226,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4133},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859224,"byte_end":859234,"line_start":237,"line_end":237,"column_start":12,"column_end":22},"name":"lock_focus","qualname":"<TextEdit>::lock_focus","value":"pub fn lock_focus(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When `false` (default), pressing TAB will move focus\n to the next widget.","sig":null,"attributes":[{"value":"/ When `false` (default), pressing TAB will move focus","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859009,"byte_end":859065,"line_start":232,"line_end":232,"column_start":5,"column_end":61}},{"value":"/ to the next widget.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859070,"byte_end":859093,"line_start":233,"line_end":233,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859098,"byte_end":859101,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ When `true`, the widget will keep the focus and pressing TAB","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859106,"byte_end":859170,"line_start":235,"line_end":235,"column_start":5,"column_end":69}},{"value":"/ will insert the `'\\t'` character.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859175,"byte_end":859212,"line_start":236,"line_end":236,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4134},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859511,"byte_end":859524,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"cursor_at_end","qualname":"<TextEdit>::cursor_at_end","value":"pub fn cursor_at_end(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When `true` (default), the cursor will initially be placed at the end of the text.","sig":null,"attributes":[{"value":"/ When `true` (default), the cursor will initially be placed at the end of the text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859317,"byte_end":859403,"line_start":242,"line_end":242,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859408,"byte_end":859411,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ When `false`, the cursor will initially be placed at the beginning of the text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859416,"byte_end":859499,"line_start":244,"line_end":244,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860451,"byte_end":860455,"line_start":275,"line_end":275,"column_start":12,"column_end":16},"name":"show","qualname":"<TextEdit>::show","value":"pub fn show(Self, &mut Ui) -> TextEditOutput","parent":null,"children":[],"decl_id":null,"docs":" Show the [`TextEdit`], returning a rich [`TextEditOutput`].","sig":null,"attributes":[{"value":"/ Show the [`TextEdit`], returning a rich [`TextEditOutput`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859835,"byte_end":859898,"line_start":260,"line_end":260,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859903,"byte_end":859906,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859911,"byte_end":859918,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ # egui::__run_test_ui(|ui| {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859923,"byte_end":859955,"line_start":263,"line_end":263,"column_start":5,"column_end":37}},{"value":"/ # let mut my_string = String::new();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859960,"byte_end":860000,"line_start":264,"line_end":264,"column_start":5,"column_end":45}},{"value":"/ let output = egui::TextEdit::singleline(&mut my_string).show(ui);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860005,"byte_end":860074,"line_start":265,"line_end":265,"column_start":5,"column_end":74}},{"value":"/ if let Some(text_cursor_range) = output.cursor_range {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860079,"byte_end":860137,"line_start":266,"line_end":266,"column_start":5,"column_end":63}},{"value":"/     use egui::TextBuffer as _;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860142,"byte_end":860176,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/     let selected_chars = text_cursor_range.as_sorted_char_range();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860181,"byte_end":860251,"line_start":268,"line_end":268,"column_start":5,"column_end":75}},{"value":"/     let selected_text = my_string.char_range(selected_chars);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860256,"byte_end":860321,"line_start":269,"line_end":269,"column_start":5,"column_end":70}},{"value":"/     ui.label(\"Selected text: \");","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860326,"byte_end":860362,"line_start":270,"line_end":270,"column_start":5,"column_end":41}},{"value":"/     ui.monospace(selected_text);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860367,"byte_end":860403,"line_start":271,"line_end":271,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860408,"byte_end":860413,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860418,"byte_end":860427,"line_start":273,"line_end":273,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":860432,"byte_end":860439,"line_start":274,"line_end":274,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6319},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":897658,"byte_end":897669,"line_start":6,"line_end":6,"column_start":12,"column_end":23},"name":"CursorRange","qualname":"::widgets::text_edit::cursor_range::CursorRange","value":"CursorRange { primary, secondary }","parent":null,"children":[{"krate":0,"index":6320},{"krate":0,"index":6321}],"decl_id":null,"docs":" A selected text range (could be a range of length zero).\n","sig":null,"attributes":[{"value":"/ A selected text range (could be a range of length zero).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":897470,"byte_end":897530,"line_start":3,"line_end":3,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":6320},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":897907,"byte_end":897914,"line_start":10,"line_end":10,"column_start":9,"column_end":16},"name":"primary","qualname":"::widgets::text_edit::cursor_range::CursorRange::primary","value":"epaint::text::cursor::Cursor","parent":{"krate":0,"index":6319},"children":[],"decl_id":null,"docs":" When selecting with a mouse, this is where the mouse was released.\n When moving with e.g. shift+arrows, this is what moves.\n Note that the two ends can come in any order, and also be equal (no selection).\n","sig":null,"attributes":[{"value":"/ When selecting with a mouse, this is where the mouse was released.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":897676,"byte_end":897746,"line_start":7,"line_end":7,"column_start":5,"column_end":75}},{"value":"/ When moving with e.g. shift+arrows, this is what moves.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":897751,"byte_end":897810,"line_start":8,"line_end":8,"column_start":5,"column_end":64}},{"value":"/ Note that the two ends can come in any order, and also be equal (no selection).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":897815,"byte_end":897898,"line_start":9,"line_end":9,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":6321},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898079,"byte_end":898088,"line_start":14,"line_end":14,"column_start":9,"column_end":18},"name":"secondary","qualname":"::widgets::text_edit::cursor_range::CursorRange::secondary","value":"epaint::text::cursor::Cursor","parent":{"krate":0,"index":6319},"children":[],"decl_id":null,"docs":" When selecting with a mouse, this is where the mouse was first pressed.\n This part of the cursor does not move when shift is down.\n","sig":null,"attributes":[{"value":"/ When selecting with a mouse, this is where the mouse was first pressed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":897929,"byte_end":898004,"line_start":12,"line_end":12,"column_start":5,"column_end":80}},{"value":"/ This part of the cursor does not move when shift is down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898009,"byte_end":898070,"line_start":13,"line_end":13,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4182},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898156,"byte_end":898159,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"one","qualname":"<CursorRange>::one","value":"pub fn one(Cursor) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The empty range.\n","sig":null,"attributes":[{"value":"/ The empty range.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898124,"byte_end":898144,"line_start":18,"line_end":18,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4183},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898289,"byte_end":898292,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"two","qualname":"<CursorRange>::two","value":"pub fn two(Cursor, Cursor) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4184},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898426,"byte_end":898442,"line_start":33,"line_end":33,"column_start":12,"column_end":28},"name":"as_ccursor_range","qualname":"<CursorRange>::as_ccursor_range","value":"pub fn as_ccursor_range(&Self) -> CCursorRange","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4185},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898658,"byte_end":898678,"line_start":41,"line_end":41,"column_start":12,"column_end":32},"name":"as_sorted_char_range","qualname":"<CursorRange>::as_sorted_char_range","value":"pub fn as_sorted_char_range(&Self) -> std::ops::Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" The range of selected character indices.\n","sig":null,"attributes":[{"value":"/ The range of selected character indices.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898602,"byte_end":898646,"line_start":40,"line_end":40,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4186},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898953,"byte_end":898961,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<CursorRange>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the selected range contains no characters.\n","sig":null,"attributes":[{"value":"/ True if the selected range contains no characters.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898887,"byte_end":898941,"line_start":49,"line_end":49,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4187},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":899158,"byte_end":899164,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"single","qualname":"<CursorRange>::single","value":"pub fn single(&Self) -> Option<Cursor>","parent":null,"children":[],"decl_id":null,"docs":" If there is a selection, None is returned.\n If the two ends is the same, that is returned.\n","sig":null,"attributes":[{"value":"/ If there is a selection, None is returned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":899045,"byte_end":899091,"line_start":54,"line_end":54,"column_start":5,"column_end":51}},{"value":"/ If the two ends is the same, that is returned.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":899096,"byte_end":899146,"line_start":55,"line_end":55,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4188},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":899314,"byte_end":899323,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"is_sorted","qualname":"<CursorRange>::is_sorted","value":"pub fn is_sorted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4189},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":899506,"byte_end":899512,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"sorted","qualname":"<CursorRange>::sorted","value":"pub fn sorted(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4190},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":899773,"byte_end":899787,"line_start":82,"line_end":82,"column_start":12,"column_end":26},"name":"sorted_cursors","qualname":"<CursorRange>::sorted_cursors","value":"pub fn sorted_cursors(&Self) -> [Cursor; ]","parent":null,"children":[],"decl_id":null,"docs":" returns the two ends ordered\n","sig":null,"attributes":[{"value":"/ returns the two ends ordered","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":899729,"byte_end":899761,"line_start":81,"line_end":81,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6329},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900232,"byte_end":900244,"line_start":96,"line_end":96,"column_start":12,"column_end":24},"name":"CCursorRange","qualname":"::widgets::text_edit::cursor_range::CCursorRange","value":"CCursorRange { primary, secondary }","parent":null,"children":[{"krate":0,"index":6330},{"krate":0,"index":6331}],"decl_id":null,"docs":" A selected text range (could be a range of length zero).","sig":null,"attributes":[{"value":"/ A selected text range (could be a range of length zero).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":899964,"byte_end":900024,"line_start":91,"line_end":91,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900025,"byte_end":900028,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The selection is based on character count (NOT byte count!).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900029,"byte_end":900093,"line_start":93,"line_end":93,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":6330},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900482,"byte_end":900489,"line_start":100,"line_end":100,"column_start":9,"column_end":16},"name":"primary","qualname":"::widgets::text_edit::cursor_range::CCursorRange::primary","value":"epaint::text::cursor::CCursor","parent":{"krate":0,"index":6329},"children":[],"decl_id":null,"docs":" When selecting with a mouse, this is where the mouse was released.\n When moving with e.g. shift+arrows, this is what moves.\n Note that the two ends can come in any order, and also be equal (no selection).\n","sig":null,"attributes":[{"value":"/ When selecting with a mouse, this is where the mouse was released.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900251,"byte_end":900321,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ When moving with e.g. shift+arrows, this is what moves.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900326,"byte_end":900385,"line_start":98,"line_end":98,"column_start":5,"column_end":64}},{"value":"/ Note that the two ends can come in any order, and also be equal (no selection).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900390,"byte_end":900473,"line_start":99,"line_end":99,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":6331},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900655,"byte_end":900664,"line_start":104,"line_end":104,"column_start":9,"column_end":18},"name":"secondary","qualname":"::widgets::text_edit::cursor_range::CCursorRange::secondary","value":"epaint::text::cursor::CCursor","parent":{"krate":0,"index":6329},"children":[],"decl_id":null,"docs":" When selecting with a mouse, this is where the mouse was first pressed.\n This part of the cursor does not move when shift is down.\n","sig":null,"attributes":[{"value":"/ When selecting with a mouse, this is where the mouse was first pressed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900505,"byte_end":900580,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/ This part of the cursor does not move when shift is down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900585,"byte_end":900646,"line_start":103,"line_end":103,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4193},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900734,"byte_end":900737,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"one","qualname":"<CCursorRange>::one","value":"pub fn one(CCursor) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The empty range.\n","sig":null,"attributes":[{"value":"/ The empty range.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900702,"byte_end":900722,"line_start":108,"line_end":108,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":4194},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900871,"byte_end":900874,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"two","qualname":"<CCursorRange>::two","value":"pub fn two(CCursor, CCursor) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4195},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901010,"byte_end":901019,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"is_sorted","qualname":"<CCursorRange>::is_sorted","value":"pub fn is_sorted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4196},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901223,"byte_end":901229,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"sorted","qualname":"<CCursorRange>::sorted","value":"pub fn sorted(&Self) -> [CCursor; ]","parent":null,"children":[],"decl_id":null,"docs":" returns the two ends ordered\n","sig":null,"attributes":[{"value":"/ returns the two ends ordered","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901179,"byte_end":901211,"line_start":129,"line_end":129,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6343},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901545,"byte_end":901557,"line_start":141,"line_end":141,"column_start":12,"column_end":24},"name":"PCursorRange","qualname":"::widgets::text_edit::cursor_range::PCursorRange","value":"PCursorRange { primary, secondary }","parent":null,"children":[{"krate":0,"index":6344},{"krate":0,"index":6345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6344},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901795,"byte_end":901802,"line_start":145,"line_end":145,"column_start":9,"column_end":16},"name":"primary","qualname":"::widgets::text_edit::cursor_range::PCursorRange::primary","value":"epaint::text::cursor::PCursor","parent":{"krate":0,"index":6343},"children":[],"decl_id":null,"docs":" When selecting with a mouse, this is where the mouse was released.\n When moving with e.g. shift+arrows, this is what moves.\n Note that the two ends can come in any order, and also be equal (no selection).\n","sig":null,"attributes":[{"value":"/ When selecting with a mouse, this is where the mouse was released.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901564,"byte_end":901634,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ When moving with e.g. shift+arrows, this is what moves.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901639,"byte_end":901698,"line_start":143,"line_end":143,"column_start":5,"column_end":64}},{"value":"/ Note that the two ends can come in any order, and also be equal (no selection).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901703,"byte_end":901786,"line_start":144,"line_end":144,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":6345},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901968,"byte_end":901977,"line_start":149,"line_end":149,"column_start":9,"column_end":18},"name":"secondary","qualname":"::widgets::text_edit::cursor_range::PCursorRange::secondary","value":"epaint::text::cursor::PCursor","parent":{"krate":0,"index":6343},"children":[],"decl_id":null,"docs":" When selecting with a mouse, this is where the mouse was first pressed.\n This part of the cursor does not move when shift is down.\n","sig":null,"attributes":[{"value":"/ When selecting with a mouse, this is where the mouse was first pressed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901818,"byte_end":901893,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ This part of the cursor does not move when shift is down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":901898,"byte_end":901959,"line_start":148,"line_end":148,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4202},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902057,"byte_end":902071,"line_start":4,"line_end":4,"column_start":12,"column_end":26},"name":"TextEditOutput","qualname":"::widgets::text_edit::output::TextEditOutput","value":"TextEditOutput { response, galley, text_draw_pos, text_clip_rect, state, cursor_range }","parent":null,"children":[{"krate":0,"index":4203},{"krate":0,"index":4204},{"krate":0,"index":4205},{"krate":0,"index":4206},{"krate":0,"index":4207},{"krate":0,"index":4208}],"decl_id":null,"docs":" The output from a `TextEdit`.\n","sig":null,"attributes":[{"value":"/ The output from a `TextEdit`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902012,"byte_end":902045,"line_start":3,"line_end":3,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":4203},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902116,"byte_end":902124,"line_start":6,"line_end":6,"column_start":9,"column_end":17},"name":"response","qualname":"::widgets::text_edit::output::TextEditOutput::response","value":"response::Response","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":" The interaction response.\n","sig":null,"attributes":[{"value":"/ The interaction response.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902078,"byte_end":902107,"line_start":5,"line_end":5,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902188,"byte_end":902194,"line_start":9,"line_end":9,"column_start":9,"column_end":15},"name":"galley","qualname":"::widgets::text_edit::output::TextEditOutput::galley","value":"std::sync::Arc<epaint::Galley>","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":" How the text was displayed.\n","sig":null,"attributes":[{"value":"/ How the text was displayed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902148,"byte_end":902179,"line_start":8,"line_end":8,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":4205},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902292,"byte_end":902305,"line_start":12,"line_end":12,"column_start":9,"column_end":22},"name":"text_draw_pos","qualname":"::widgets::text_edit::output::TextEditOutput::text_draw_pos","value":"epaint::Pos2","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":" Where the text in [`Self::galley`] ended up on the screen.\n","sig":null,"attributes":[{"value":"/ Where the text in [`Self::galley`] ended up on the screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902221,"byte_end":902283,"line_start":11,"line_end":11,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":4206},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902390,"byte_end":902404,"line_start":15,"line_end":15,"column_start":9,"column_end":23},"name":"text_clip_rect","qualname":"::widgets::text_edit::output::TextEditOutput::text_clip_rect","value":"epaint::Rect","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":" The text was clipped to this rectangle when painted.\n","sig":null,"attributes":[{"value":"/ The text was clipped to this rectangle when painted.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902325,"byte_end":902381,"line_start":14,"line_end":14,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902471,"byte_end":902476,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"state","qualname":"::widgets::text_edit::output::TextEditOutput::state","value":"widgets::text_edit::state::TextEditState","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":" The state we stored after the run.\n","sig":null,"attributes":[{"value":"/ The state we stored after the run.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902424,"byte_end":902462,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":4208},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902543,"byte_end":902555,"line_start":21,"line_end":21,"column_start":9,"column_end":21},"name":"cursor_range","qualname":"::widgets::text_edit::output::TextEditOutput::cursor_range","value":"std::option::Option<widgets::text_edit::cursor_range::CursorRange>","parent":{"krate":0,"index":4202},"children":[],"decl_id":null,"docs":" Where the text cursor is.\n","sig":null,"attributes":[{"value":"/ Where the text cursor is.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\output.rs","byte_start":902505,"byte_end":902534,"line_start":20,"line_end":20,"column_start":5,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":6357},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":903062,"byte_end":903075,"line_start":15,"line_end":15,"column_start":12,"column_end":25},"name":"TextEditState","qualname":"::widgets::text_edit::state::TextEditState","value":"TextEditState {  }","parent":null,"children":[{"krate":0,"index":6358},{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":6361},{"krate":0,"index":6362}],"decl_id":null,"docs":" The text edit state stored between frames.\n","sig":null,"attributes":[{"value":"/ The text edit state stored between frames.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":902854,"byte_end":902900,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":4226},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":903745,"byte_end":903749,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"load","qualname":"<TextEditState>::load","value":"pub fn load(&Context, Id) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4227},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":903846,"byte_end":903851,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"store","qualname":"<TextEditState>::store","value":"pub fn store(Self, &Context, Id)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4228},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":904004,"byte_end":904017,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"ccursor_range","qualname":"<TextEditState>::ccursor_range","value":"pub fn ccursor_range(&Self) -> Option<CCursorRange>","parent":null,"children":[],"decl_id":null,"docs":" The the currently selected range of characters.\n","sig":null,"attributes":[{"value":"/ The the currently selected range of characters.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":903941,"byte_end":903992,"line_start":44,"line_end":44,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":4231},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":904276,"byte_end":904293,"line_start":53,"line_end":53,"column_start":12,"column_end":29},"name":"set_ccursor_range","qualname":"<TextEditState>::set_ccursor_range","value":"pub fn set_ccursor_range(&mut Self, Option<CCursorRange>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the currently selected range of characters.\n","sig":null,"attributes":[{"value":"/ Sets the currently selected range of characters.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":904212,"byte_end":904264,"line_start":52,"line_end":52,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4232},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":904440,"byte_end":904456,"line_start":58,"line_end":58,"column_start":12,"column_end":28},"name":"set_cursor_range","qualname":"<TextEditState>::set_cursor_range","value":"pub fn set_cursor_range(&mut Self, Option<CursorRange>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4233},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":904600,"byte_end":904612,"line_start":63,"line_end":63,"column_start":12,"column_end":24},"name":"cursor_range","qualname":"<TextEditState>::cursor_range","value":"pub fn cursor_range(&mut Self, &Galley) -> Option<CursorRange>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4241},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906060,"byte_end":906070,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"TextBuffer","qualname":"::widgets::text_edit::text_buffer::TextBuffer","value":"TextBuffer: AsRef<str>","parent":null,"children":[{"krate":0,"index":4242},{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4250}],"decl_id":null,"docs":" Trait constraining what types [`crate::TextEdit`] may use as\n an underlying buffer.","sig":null,"attributes":[{"value":"/ Trait constraining what types [`crate::TextEdit`] may use as","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":905884,"byte_end":905948,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ an underlying buffer.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":905949,"byte_end":905974,"line_start":4,"line_end":4,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":905975,"byte_end":905978,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Most likely you will use a `String` which implements `TextBuffer`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":905979,"byte_end":906049,"line_start":6,"line_end":6,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":4242},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906125,"byte_end":906135,"line_start":9,"line_end":9,"column_start":8,"column_end":18},"name":"is_mutable","qualname":"::widgets::text_edit::text_buffer::TextBuffer::is_mutable","value":"pub fn is_mutable(&Self) -> bool","parent":{"krate":0,"index":4241},"children":[],"decl_id":null,"docs":" Can this text be edited?\n","sig":null,"attributes":[{"value":"/ Can this text be edited?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906089,"byte_end":906117,"line_start":8,"line_end":8,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906307,"byte_end":906313,"line_start":15,"line_end":15,"column_start":8,"column_end":14},"name":"as_str","qualname":"::widgets::text_edit::text_buffer::TextBuffer::as_str","value":"pub fn as_str(&Self) -> &str","parent":{"krate":0,"index":4241},"children":[],"decl_id":null,"docs":" Returns this buffer as a `str`.","sig":null,"attributes":[{"value":"/ Returns this buffer as a `str`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906157,"byte_end":906192,"line_start":11,"line_end":11,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906197,"byte_end":906200,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This is an utility method, as it simply relies on the `AsRef<str>`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906205,"byte_end":906275,"line_start":13,"line_end":13,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906280,"byte_end":906299,"line_start":14,"line_end":14,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906408,"byte_end":906418,"line_start":20,"line_end":20,"column_start":8,"column_end":18},"name":"char_range","qualname":"::widgets::text_edit::text_buffer::TextBuffer::char_range","value":"pub fn char_range(&Self, Range<usize>) -> &str","parent":{"krate":0,"index":4241},"children":[],"decl_id":null,"docs":" Reads the given character range.\n","sig":null,"attributes":[{"value":"/ Reads the given character range.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906364,"byte_end":906400,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":4245},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906722,"byte_end":906748,"line_start":27,"line_end":27,"column_start":8,"column_end":34},"name":"byte_index_from_char_index","qualname":"::widgets::text_edit::text_buffer::TextBuffer::byte_index_from_char_index","value":"pub fn byte_index_from_char_index(&Self, usize) -> usize","parent":{"krate":0,"index":4241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4246},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907117,"byte_end":907128,"line_start":38,"line_end":38,"column_start":8,"column_end":19},"name":"insert_text","qualname":"::widgets::text_edit::text_buffer::TextBuffer::insert_text","value":"pub fn insert_text(&mut Self, &str, usize) -> usize","parent":{"krate":0,"index":4241},"children":[],"decl_id":null,"docs":" Inserts text `text` into this buffer at character index `char_index`.","sig":null,"attributes":[{"value":"/ Inserts text `text` into this buffer at character index `char_index`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906859,"byte_end":906932,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906937,"byte_end":906940,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906945,"byte_end":906956,"line_start":33,"line_end":33,"column_start":5,"column_end":16}},{"value":"/ `char_index` is a *character index*, not a byte index.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906961,"byte_end":907019,"line_start":34,"line_end":34,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907024,"byte_end":907027,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907032,"byte_end":907044,"line_start":36,"line_end":36,"column_start":5,"column_end":17}},{"value":"/ Returns how many *characters* were successfully inserted","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907049,"byte_end":907109,"line_start":37,"line_end":37,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":4247},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907339,"byte_end":907356,"line_start":44,"line_end":44,"column_start":8,"column_end":25},"name":"delete_char_range","qualname":"::widgets::text_edit::text_buffer::TextBuffer::delete_char_range","value":"pub fn delete_char_range(&mut Self, Range<usize>)","parent":{"krate":0,"index":4241},"children":[],"decl_id":null,"docs":" Deletes a range of text `char_range` from this buffer.","sig":null,"attributes":[{"value":"/ Deletes a range of text `char_range` from this buffer.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907186,"byte_end":907244,"line_start":40,"line_end":40,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907249,"byte_end":907252,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907257,"byte_end":907268,"line_start":42,"line_end":42,"column_start":5,"column_end":16}},{"value":"/ `char_range` is a *character range*, not a byte range.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907273,"byte_end":907331,"line_start":43,"line_end":43,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":4248},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907448,"byte_end":907453,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"clear","qualname":"::widgets::text_edit::text_buffer::TextBuffer::clear","value":"pub fn clear(&mut Self)","parent":{"krate":0,"index":4241},"children":[],"decl_id":null,"docs":" Clears all characters in this buffer\n","sig":null,"attributes":[{"value":"/ Clears all characters in this buffer","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907400,"byte_end":907440,"line_start":46,"line_end":46,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907594,"byte_end":907601,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"replace","qualname":"::widgets::text_edit::text_buffer::TextBuffer::replace","value":"pub fn replace(&mut Self, &str)","parent":{"krate":0,"index":4241},"children":[],"decl_id":null,"docs":" Replaces all contents of this string with `text`\n","sig":null,"attributes":[{"value":"/ Replaces all contents of this string with `text`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907534,"byte_end":907586,"line_start":51,"line_end":51,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907781,"byte_end":907785,"line_start":58,"line_end":58,"column_start":8,"column_end":12},"name":"take","qualname":"::widgets::text_edit::text_buffer::TextBuffer::take","value":"pub fn take(&mut Self) -> String","parent":{"krate":0,"index":4241},"children":[],"decl_id":null,"docs":" Clears all characters in this buffer and returns a string of the contents.\n","sig":null,"attributes":[{"value":"/ Clears all characters in this buffer and returns a string of the contents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907695,"byte_end":907773,"line_start":57,"line_end":57,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":4305},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621919,"byte_end":621925,"line_start":49,"line_end":49,"column_start":11,"column_end":17},"name":"Widget","qualname":"::widgets::Widget","value":"Widget","parent":null,"children":[{"krate":0,"index":4306}],"decl_id":null,"docs":" Anything implementing Widget can be added to a [`Ui`] with [`Ui::add`].","sig":null,"attributes":[{"value":"/ Anything implementing Widget can be added to a [`Ui`] with [`Ui::add`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621371,"byte_end":621446,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621447,"byte_end":621450,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`Button`], [`Label`], [`Slider`], etc all implement the `Widget` trait.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621451,"byte_end":621527,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621528,"byte_end":621531,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Note that the widgets (`Button`, `TextEdit` etc) are","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621532,"byte_end":621588,"line_start":41,"line_end":41,"column_start":1,"column_end":57}},{"value":"/ [builders](https://doc.rust-lang.org/1.0.0/style/ownership/builders.html),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621589,"byte_end":621667,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ and not objects that hold state.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621668,"byte_end":621704,"line_start":43,"line_end":43,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621705,"byte_end":621708,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Tip: you can `impl Widget for &mut YourThing { }`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621709,"byte_end":621763,"line_start":45,"line_end":45,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621764,"byte_end":621767,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ `|ui: &mut Ui| -> Response { … }` also implements `Widget`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621768,"byte_end":621833,"line_start":47,"line_end":47,"column_start":1,"column_end":64}},{"value":"must_use = \"You should put this widget in an ui with `ui.add(widget);`\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621834,"byte_end":621908,"line_start":48,"line_end":48,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4306},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":622273,"byte_end":622275,"line_start":57,"line_end":57,"column_start":8,"column_end":10},"name":"ui","qualname":"::widgets::Widget::ui","value":"pub fn ui(Self, &mut Ui) -> Response","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":" Allocate space, interact, paint, and return a [`Response`].","sig":null,"attributes":[{"value":"/ Allocate space, interact, paint, and return a [`Response`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":621932,"byte_end":621995,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":622000,"byte_end":622003,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Note that this consumes `self`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":622008,"byte_end":622043,"line_start":52,"line_end":52,"column_start":5,"column_end":40}},{"value":"/ This is because most widgets ([`Button`], [`TextEdit`] etc) are","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":622048,"byte_end":622115,"line_start":53,"line_end":53,"column_start":5,"column_end":72}},{"value":"/ [builders](https://doc.rust-lang.org/1.0.0/style/ownership/builders.html)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":622120,"byte_end":622197,"line_start":54,"line_end":54,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":622202,"byte_end":622205,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Tip: you can `impl Widget for &mut YourObject { }`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":622210,"byte_end":622265,"line_start":56,"line_end":56,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":4310},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":623073,"byte_end":623088,"line_start":86,"line_end":86,"column_start":11,"column_end":26},"name":"WidgetWithState","qualname":"::widgets::WidgetWithState","value":"WidgetWithState","parent":null,"children":[{"krate":0,"index":4311}],"decl_id":null,"docs":" Helper so that you can do `TextEdit::State::read…`\n","sig":null,"attributes":[{"value":"/ Helper so that you can do `TextEdit::State::read…`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":623006,"byte_end":623062,"line_start":85,"line_end":85,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":4311},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":623100,"byte_end":623105,"line_start":87,"line_end":87,"column_start":10,"column_end":15},"name":"State","qualname":"::widgets::WidgetWithState::State","value":"type State;","parent":{"krate":0,"index":4310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":623335,"byte_end":623347,"line_start":94,"line_end":94,"column_start":8,"column_end":20},"name":"reset_button","qualname":"::widgets::reset_button","value":"pub fn reset_button<T: Default + PartialEq>(&mut Ui, &mut T)","parent":null,"children":[],"decl_id":null,"docs":" Show a button to reset a value to its default.\n The button is only enabled if the value does not already have its original value.\n","sig":null,"attributes":[{"value":"/ Show a button to reset a value to its default.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":623191,"byte_end":623241,"line_start":92,"line_end":92,"column_start":1,"column_end":51}},{"value":"/ The button is only enabled if the value does not already have its original value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":623242,"byte_end":623327,"line_start":93,"line_end":93,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":623596,"byte_end":623613,"line_start":99,"line_end":99,"column_start":8,"column_end":25},"name":"reset_button_with","qualname":"::widgets::reset_button_with","value":"pub fn reset_button_with<T: PartialEq>(&mut Ui, &mut T, T)","parent":null,"children":[],"decl_id":null,"docs":" Show a button to reset a value to its default.\n The button is only enabled if the value does not already have its original value.\n","sig":null,"attributes":[{"value":"/ Show a button to reset a value to its default.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":623452,"byte_end":623502,"line_start":97,"line_end":97,"column_start":1,"column_end":51}},{"value":"/ The button is only enabled if the value does not already have its original value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":623503,"byte_end":623588,"line_start":98,"line_end":98,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":4316},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":623902,"byte_end":623911,"line_start":110,"line_end":110,"column_start":8,"column_end":17},"name":"stroke_ui","qualname":"::widgets::stroke_ui","value":"pub fn stroke_ui(&mut crate::Ui, &mut epaint::Stroke, &str)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4320},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":624993,"byte_end":625022,"line_start":141,"line_end":141,"column_start":8,"column_end":37},"name":"global_dark_light_mode_switch","qualname":"::widgets::global_dark_light_mode_switch","value":"pub fn global_dark_light_mode_switch(&mut Ui)","parent":null,"children":[],"decl_id":null,"docs":" Show a small button to switch to/from dark/light mode (globally).\n","sig":null,"attributes":[{"value":"/ Show a small button to switch to/from dark/light mode (globally).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":624916,"byte_end":624985,"line_start":140,"line_end":140,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":4321},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":625343,"byte_end":625373,"line_start":150,"line_end":150,"column_start":8,"column_end":38},"name":"global_dark_light_mode_buttons","qualname":"::widgets::global_dark_light_mode_buttons","value":"pub fn global_dark_light_mode_buttons(&mut Ui)","parent":null,"children":[],"decl_id":null,"docs":" Show larger buttons for switching between light and dark mode (globally).\n","sig":null,"attributes":[{"value":"/ Show larger buttons for switching between light and dark mode (globally).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":625258,"byte_end":625335,"line_start":149,"line_end":149,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":4424},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12687,"byte_end":12691,"line_start":393,"line_end":393,"column_start":9,"column_end":13},"name":"text","qualname":"::text","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":4425},{"krate":0,"index":4426},{"krate":0,"index":4429},{"krate":0,"index":4432},{"krate":0,"index":4435},{"krate":0,"index":4438},{"krate":0,"index":4441},{"krate":0,"index":4444},{"krate":0,"index":4447},{"krate":0,"index":4450}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4551},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13590,"byte_end":13609,"line_start":426,"line_end":426,"column_start":8,"column_end":27},"name":"warn_if_debug_build","qualname":"::warn_if_debug_build","value":"pub fn warn_if_debug_build(&mut crate::Ui)","parent":null,"children":[],"decl_id":null,"docs":" Helper function that adds a label when compiling with debug assertions enabled.\n","sig":null,"attributes":[{"value":"/ Helper function that adds a label when compiling with debug assertions enabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":13499,"byte_end":13582,"line_start":425,"line_end":425,"column_start":1,"column_end":84}}]},{"kind":"Mod","id":{"krate":0,"index":4556},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17007,"byte_end":17021,"line_start":532,"line_end":532,"column_start":9,"column_end":23},"name":"special_emojis","qualname":"::special_emojis","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":4557},{"krate":0,"index":4558},{"krate":0,"index":4559},{"krate":0,"index":4560},{"krate":0,"index":4561},{"krate":0,"index":4562}],"decl_id":null,"docs":" The default egui fonts supports around 1216 emojis in total.\n Here are some of the most useful:\n ∞⊗⎗⎘⎙⏏⏴⏵⏶⏷\n ⏩⏪⏭⏮⏸⏹⏺■▶📾🔀🔁🔃\n ☀☁★☆☐☑☜☝☞☟⛃⛶✔\n ↺↻⟲⟳⬅➡⬆⬇⬈⬉⬊⬋⬌⬍⮨⮩⮪⮫\n ♡\n 📅📆\n 📈📉📊\n 📋📌📎📤📥🔆\n 🔈🔉🔊🔍🔎🔗🔘\n 🕓🖧🖩🖮🖱🖴🖵🖼🗀🗁🗋🗐🗑🗙🚫❓","sig":null,"attributes":[{"value":"/ The default egui fonts supports around 1216 emojis in total.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16256,"byte_end":16320,"line_start":513,"line_end":513,"column_start":1,"column_end":65}},{"value":"/ Here are some of the most useful:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16321,"byte_end":16358,"line_start":514,"line_end":514,"column_start":1,"column_end":38}},{"value":"/ ∞⊗⎗⎘⎙⏏⏴⏵⏶⏷","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16359,"byte_end":16393,"line_start":515,"line_end":515,"column_start":1,"column_end":15}},{"value":"/ ⏩⏪⏭⏮⏸⏹⏺■▶📾🔀🔁🔃","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16394,"byte_end":16441,"line_start":516,"line_end":516,"column_start":1,"column_end":18}},{"value":"/ ☀☁★☆☐☑☜☝☞☟⛃⛶✔","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16442,"byte_end":16485,"line_start":517,"line_end":517,"column_start":1,"column_end":18}},{"value":"/ ↺↻⟲⟳⬅➡⬆⬇⬈⬉⬊⬋⬌⬍⮨⮩⮪⮫","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16486,"byte_end":16544,"line_start":518,"line_end":518,"column_start":1,"column_end":23}},{"value":"/ ♡","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16545,"byte_end":16552,"line_start":519,"line_end":519,"column_start":1,"column_end":6}},{"value":"/ 📅📆","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16553,"byte_end":16565,"line_start":520,"line_end":520,"column_start":1,"column_end":7}},{"value":"/ 📈📉📊","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16566,"byte_end":16582,"line_start":521,"line_end":521,"column_start":1,"column_end":8}},{"value":"/ 📋📌📎📤📥🔆","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16583,"byte_end":16611,"line_start":522,"line_end":522,"column_start":1,"column_end":11}},{"value":"/ 🔈🔉🔊🔍🔎🔗🔘","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16612,"byte_end":16644,"line_start":523,"line_end":523,"column_start":1,"column_end":12}},{"value":"/ 🕓🖧🖩🖮🖱🖴🖵🖼🗀🗁🗋🗐🗑🗙🚫❓","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16645,"byte_end":16712,"line_start":524,"line_end":524,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16713,"byte_end":16716,"line_start":525,"line_end":525,"column_start":1,"column_end":4}},{"value":"/ NOTE: In egui all emojis are monochrome!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16717,"byte_end":16761,"line_start":526,"line_end":526,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16762,"byte_end":16765,"line_start":527,"line_end":527,"column_start":1,"column_end":4}},{"value":"/ You can explore them all in the Font Book in [the online demo](https://www.egui.rs/#demo).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16766,"byte_end":16860,"line_start":528,"line_end":528,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16861,"byte_end":16864,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ In addition, egui supports a few special emojis that are not part of the unicode standard.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16865,"byte_end":16959,"line_start":530,"line_end":530,"column_start":1,"column_end":95}},{"value":"/ This module contains some of them:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":16960,"byte_end":16998,"line_start":531,"line_end":531,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":4557},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17070,"byte_end":17078,"line_start":534,"line_end":534,"column_start":15,"column_end":23},"name":"OS_LINUX","qualname":"::special_emojis::OS_LINUX","value":"char","parent":null,"children":[],"decl_id":null,"docs":" Tux, the Linux penguin.\n","sig":null,"attributes":[{"value":"/ Tux, the Linux penguin.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17028,"byte_end":17055,"line_start":533,"line_end":533,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":4558},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17135,"byte_end":17145,"line_start":536,"line_end":536,"column_start":15,"column_end":25},"name":"OS_WINDOWS","qualname":"::special_emojis::OS_WINDOWS","value":"char","parent":null,"children":[],"decl_id":null,"docs":" The Windows logo.\n","sig":null,"attributes":[{"value":"/ The Windows logo.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17099,"byte_end":17120,"line_start":535,"line_end":535,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":4559},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17201,"byte_end":17211,"line_start":538,"line_end":538,"column_start":15,"column_end":25},"name":"OS_ANDROID","qualname":"::special_emojis::OS_ANDROID","value":"char","parent":null,"children":[],"decl_id":null,"docs":" The Android logo.\n","sig":null,"attributes":[{"value":"/ The Android logo.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17165,"byte_end":17186,"line_start":537,"line_end":537,"column_start":5,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":4560},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17265,"byte_end":17273,"line_start":540,"line_end":540,"column_start":15,"column_end":23},"name":"OS_APPLE","qualname":"::special_emojis::OS_APPLE","value":"char","parent":null,"children":[],"decl_id":null,"docs":" The Apple logo.\n","sig":null,"attributes":[{"value":"/ The Apple logo.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17231,"byte_end":17250,"line_start":539,"line_end":539,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":4561},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17329,"byte_end":17335,"line_start":543,"line_end":543,"column_start":15,"column_end":21},"name":"GITHUB","qualname":"::special_emojis::GITHUB","value":"char","parent":null,"children":[],"decl_id":null,"docs":" The Github logo.\n","sig":null,"attributes":[{"value":"/ The Github logo.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17294,"byte_end":17314,"line_start":542,"line_end":542,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":4562},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17390,"byte_end":17393,"line_start":546,"line_end":546,"column_start":15,"column_end":18},"name":"GIT","qualname":"::special_emojis::GIT","value":"char","parent":null,"children":[],"decl_id":null,"docs":" The word `git`.\n","sig":null,"attributes":[{"value":"/ The word `git`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17356,"byte_end":17375,"line_start":545,"line_end":545,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6368},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17657,"byte_end":17662,"line_start":555,"line_end":555,"column_start":5,"column_end":10},"name":"Label","qualname":"::WidgetType::Label","value":"WidgetType::Label","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6370},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17695,"byte_end":17704,"line_start":556,"line_end":556,"column_start":5,"column_end":14},"name":"Hyperlink","qualname":"::WidgetType::Hyperlink","value":"WidgetType::Hyperlink","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6372},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17710,"byte_end":17718,"line_start":557,"line_end":557,"column_start":5,"column_end":13},"name":"TextEdit","qualname":"::WidgetType::TextEdit","value":"WidgetType::TextEdit","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6374},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17724,"byte_end":17730,"line_start":558,"line_end":558,"column_start":5,"column_end":11},"name":"Button","qualname":"::WidgetType::Button","value":"WidgetType::Button","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6376},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17736,"byte_end":17744,"line_start":559,"line_end":559,"column_start":5,"column_end":13},"name":"Checkbox","qualname":"::WidgetType::Checkbox","value":"WidgetType::Checkbox","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6378},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17750,"byte_end":17761,"line_start":560,"line_end":560,"column_start":5,"column_end":16},"name":"RadioButton","qualname":"::WidgetType::RadioButton","value":"WidgetType::RadioButton","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6380},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17767,"byte_end":17782,"line_start":561,"line_end":561,"column_start":5,"column_end":20},"name":"SelectableLabel","qualname":"::WidgetType::SelectableLabel","value":"WidgetType::SelectableLabel","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6382},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17788,"byte_end":17796,"line_start":562,"line_end":562,"column_start":5,"column_end":13},"name":"ComboBox","qualname":"::WidgetType::ComboBox","value":"WidgetType::ComboBox","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6384},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17802,"byte_end":17808,"line_start":563,"line_end":563,"column_start":5,"column_end":11},"name":"Slider","qualname":"::WidgetType::Slider","value":"WidgetType::Slider","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6386},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17814,"byte_end":17823,"line_start":564,"line_end":564,"column_start":5,"column_end":14},"name":"DragValue","qualname":"::WidgetType::DragValue","value":"WidgetType::DragValue","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6388},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17829,"byte_end":17840,"line_start":565,"line_end":565,"column_start":5,"column_end":16},"name":"ColorButton","qualname":"::WidgetType::ColorButton","value":"WidgetType::ColorButton","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6390},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17846,"byte_end":17857,"line_start":566,"line_end":566,"column_start":5,"column_end":16},"name":"ImageButton","qualname":"::WidgetType::ImageButton","value":"WidgetType::ImageButton","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6392},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17863,"byte_end":17879,"line_start":567,"line_end":567,"column_start":5,"column_end":21},"name":"CollapsingHeader","qualname":"::WidgetType::CollapsingHeader","value":"WidgetType::CollapsingHeader","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6394},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":18015,"byte_end":18020,"line_start":572,"line_end":572,"column_start":5,"column_end":10},"name":"Other","qualname":"::WidgetType::Other","value":"WidgetType::Other","parent":{"krate":0,"index":6367},"children":[],"decl_id":null,"docs":" If you cannot fit any of the above slots.","sig":null,"attributes":[{"value":"/ If you cannot fit any of the above slots.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17886,"byte_end":17931,"line_start":569,"line_end":569,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17936,"byte_end":17939,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ If this is something you think should be added, file an issue.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17944,"byte_end":18010,"line_start":571,"line_end":571,"column_start":5,"column_end":71}}]},{"kind":"Enum","id":{"krate":0,"index":6367},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17640,"byte_end":17650,"line_start":554,"line_end":554,"column_start":10,"column_end":20},"name":"WidgetType","qualname":"::WidgetType","value":"pub enum WidgetType {\n    Label,\n    Hyperlink,\n    TextEdit,\n    Button,\n    Checkbox,\n    RadioButton,\n    SelectableLabel,\n    ComboBox,\n    Slider,\n    DragValue,\n    ColorButton,\n    ImageButton,\n    CollapsingHeader,\n    Other,\n}","parent":null,"children":[{"krate":0,"index":6368},{"krate":0,"index":6370},{"krate":0,"index":6372},{"krate":0,"index":6374},{"krate":0,"index":6376},{"krate":0,"index":6378},{"krate":0,"index":6380},{"krate":0,"index":6382},{"krate":0,"index":6384},{"krate":0,"index":6386},{"krate":0,"index":6388},{"krate":0,"index":6390},{"krate":0,"index":6392},{"krate":0,"index":6394}],"decl_id":null,"docs":" The different types of built-in widgets in egui\n","sig":null,"attributes":[{"value":"/ The different types of built-in widgets in egui","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":17461,"byte_end":17512,"line_start":551,"line_end":551,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":4563},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":18156,"byte_end":18170,"line_start":578,"line_end":578,"column_start":8,"column_end":22},"name":"__run_test_ctx","qualname":"::__run_test_ctx","value":"pub fn __run_test_ctx<impl FnMut(&Context): FnMut(&Context) ->\n                      ()>(impl FnMut(&Context))","parent":null,"children":[],"decl_id":null,"docs":" For use in tests; especially doctests.\n","sig":null,"attributes":[{"value":"/ For use in tests; especially doctests.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":18106,"byte_end":18148,"line_start":577,"line_end":577,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":4566},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":18371,"byte_end":18384,"line_start":586,"line_end":586,"column_start":8,"column_end":21},"name":"__run_test_ui","qualname":"::__run_test_ui","value":"pub fn __run_test_ui<impl FnMut(&mut Ui): FnMut(&mut Ui) ->\n                     ()>(impl FnMut(&mut Ui))","parent":null,"children":[],"decl_id":null,"docs":" For use in tests; especially doctests.\n","sig":null,"attributes":[{"value":"/ For use in tests; especially doctests.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":18321,"byte_end":18363,"line_start":585,"line_end":585,"column_start":1,"column_end":43}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\animation_manager.rs","byte_start":19071,"byte_end":19087,"line_start":24,"line_end":24,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":18},{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23430,"byte_end":23435,"line_start":25,"line_end":25,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24176,"byte_end":24180,"line_start":57,"line_end":57,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":27461,"byte_end":27465,"line_start":176,"line_end":176,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":30406,"byte_end":30414,"line_start":267,"line_end":267,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":36202,"byte_end":36207,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40622,"byte_end":40638,"line_start":150,"line_end":150,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44749,"byte_end":44765,"line_start":274,"line_end":274,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51431,"byte_end":51439,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59548,"byte_end":59553,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":61989,"byte_end":61994,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":63002,"byte_end":63007,"line_start":136,"line_end":136,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":65028,"byte_end":65036,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66660,"byte_end":66670,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67075,"byte_end":67079,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68334,"byte_end":68343,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":70365,"byte_end":70374,"line_start":164,"line_end":164,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":76361,"byte_end":76374,"line_start":331,"line_end":331,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77700,"byte_end":77714,"line_start":380,"line_end":380,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79840,"byte_end":79854,"line_start":449,"line_end":449,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":319},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86532,"byte_end":86544,"line_start":637,"line_end":637,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86710,"byte_end":86722,"line_start":645,"line_end":645,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":336},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":89070,"byte_end":89079,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":98955,"byte_end":98960,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":99565,"byte_end":99571,"line_start":47,"line_end":47,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":99930,"byte_end":99936,"line_start":61,"line_end":61,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":103144,"byte_end":103150,"line_start":165,"line_end":165,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":421},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":110950,"byte_end":110955,"line_start":32,"line_end":32,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111224,"byte_end":111229,"line_start":44,"line_end":44,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":112645,"byte_end":112655,"line_start":98,"line_end":98,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":120457,"byte_end":120467,"line_start":309,"line_end":309,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":497},{"krate":0,"index":502},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":127535,"byte_end":127543,"line_start":506,"line_end":506,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142888,"byte_end":142894,"line_start":35,"line_end":35,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149876,"byte_end":149882,"line_start":232,"line_end":232,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":157584,"byte_end":157604,"line_start":453,"line_end":453,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":158648,"byte_end":158665,"line_start":483,"line_end":483,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":170164,"byte_end":170172,"line_start":834,"line_end":834,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":175060,"byte_end":175081,"line_start":13,"line_end":13,"column_start":18,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":176124,"byte_end":176135,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179520,"byte_end":179527,"line_start":147,"line_end":147,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179639,"byte_end":179646,"line_start":153,"line_end":153,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179960,"byte_end":179967,"line_start":164,"line_end":164,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190792,"byte_end":190799,"line_start":441,"line_end":441,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":718},{"krate":0,"index":720},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":193753,"byte_end":193760,"line_start":534,"line_end":534,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":201127,"byte_end":201134,"line_start":721,"line_end":721,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205998,"byte_end":206005,"line_start":853,"line_end":853,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207006,"byte_end":207013,"line_start":883,"line_end":883,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":208833,"byte_end":208840,"line_start":934,"line_end":934,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":211012,"byte_end":211019,"line_start":988,"line_end":988,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":781},{"krate":0,"index":790},{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":220427,"byte_end":220434,"line_start":1242,"line_end":1242,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223394,"byte_end":223402,"line_start":67,"line_end":67,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223803,"byte_end":223811,"line_start":83,"line_end":83,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231426,"byte_end":231435,"line_start":282,"line_end":282,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":234789,"byte_end":234798,"line_start":403,"line_end":403,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236853,"byte_end":236861,"line_start":493,"line_end":493,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239479,"byte_end":239486,"line_start":560,"line_end":560,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239565,"byte_end":239572,"line_start":566,"line_end":566,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239658,"byte_end":239665,"line_start":572,"line_end":572,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240767,"byte_end":240777,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242309,"byte_end":242323,"line_start":77,"line_end":77,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244479,"byte_end":244486,"line_start":142,"line_end":142,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":247006,"byte_end":247016,"line_start":248,"line_end":248,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":247828,"byte_end":247838,"line_start":278,"line_end":278,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":248574,"byte_end":248585,"line_start":302,"line_end":302,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":250002,"byte_end":250012,"line_start":336,"line_end":336,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":251089,"byte_end":251099,"line_start":377,"line_end":377,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\frame_state.rs","byte_start":256951,"byte_end":256961,"line_start":36,"line_end":36,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\frame_state.rs","byte_start":257297,"byte_end":257307,"line_start":50,"line_end":50,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":260849,"byte_end":260854,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":262486,"byte_end":262496,"line_start":71,"line_end":71,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":263367,"byte_end":263377,"line_start":103,"line_end":103,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269620,"byte_end":269624,"line_start":270,"line_end":270,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":954}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271717,"byte_end":271721,"line_start":335,"line_end":335,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274976,"byte_end":274978,"line_start":32,"line_end":32,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":976},{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":276289,"byte_end":276291,"line_start":74,"line_end":74,"column_start":26,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":276613,"byte_end":276621,"line_start":86,"line_end":86,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":277908,"byte_end":277920,"line_start":136,"line_end":136,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":310154,"byte_end":310164,"line_start":117,"line_end":117,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":317173,"byte_end":317183,"line_start":280,"line_end":280,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":317294,"byte_end":317304,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":317770,"byte_end":317779,"line_start":304,"line_end":304,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280986,"byte_end":280996,"line_start":80,"line_end":80,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":281648,"byte_end":281658,"line_start":101,"line_end":101,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":290823,"byte_end":290828,"line_start":352,"line_end":352,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1106}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":291041,"byte_end":291053,"line_start":365,"line_end":365,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":293142,"byte_end":293154,"line_start":430,"line_end":430,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":293683,"byte_end":293695,"line_start":449,"line_end":449,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1128},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302467,"byte_end":302477,"line_start":714,"line_end":714,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":304507,"byte_end":304519,"line_start":780,"line_end":780,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326563,"byte_end":326568,"line_start":27,"line_end":27,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327744,"byte_end":327751,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328701,"byte_end":328710,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":330253,"byte_end":330266,"line_start":157,"line_end":157,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1201},{"krate":0,"index":1202}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":333408,"byte_end":333414,"line_start":45,"line_end":45,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":334884,"byte_end":334893,"line_start":87,"line_end":87,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":336692,"byte_end":336698,"line_start":145,"line_end":145,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":336881,"byte_end":336887,"line_start":153,"line_end":153,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339901,"byte_end":339907,"line_start":263,"line_end":263,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":342104,"byte_end":342110,"line_start":351,"line_end":351,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":358605,"byte_end":358611,"line_start":763,"line_end":763,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":365227,"byte_end":365234,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1305}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":367835,"byte_end":367846,"line_start":196,"line_end":196,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":368629,"byte_end":368634,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":371391,"byte_end":371397,"line_start":307,"line_end":307,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375613,"byte_end":375619,"line_start":431,"line_end":431,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":377697,"byte_end":377702,"line_start":494,"line_end":494,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":381450,"byte_end":381458,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":382136,"byte_end":382144,"line_start":51,"line_end":51,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":382281,"byte_end":382289,"line_start":57,"line_end":57,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":387319,"byte_end":387334,"line_start":206,"line_end":206,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1452},{"krate":0,"index":1455}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":388058,"byte_end":388073,"line_start":228,"line_end":228,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":388207,"byte_end":388222,"line_start":234,"line_end":234,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":388475,"byte_end":388483,"line_start":247,"line_end":247,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":392939,"byte_end":392951,"line_start":367,"line_end":367,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":393124,"byte_end":393137,"line_start":377,"line_end":377,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":395987,"byte_end":395994,"line_start":456,"line_end":456,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1492},{"krate":0,"index":1494}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":397202,"byte_end":397211,"line_start":492,"line_end":492,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1512},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1525},{"krate":0,"index":1527},{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":402519,"byte_end":402526,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404190,"byte_end":404197,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405647,"byte_end":405654,"line_start":141,"line_end":141,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":407434,"byte_end":407441,"line_start":195,"line_end":195,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":408648,"byte_end":408655,"line_start":235,"line_end":235,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1643},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411408,"byte_end":411415,"line_start":335,"line_end":335,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660},{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\placer.rs","byte_start":414183,"byte_end":414189,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\placer.rs","byte_start":415672,"byte_end":415678,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\placer.rs","byte_start":419884,"byte_end":419890,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\placer.rs","byte_start":422671,"byte_end":422677,"line_start":264,"line_end":264,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":425678,"byte_end":425686,"line_start":70,"line_end":70,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":426775,"byte_end":426783,"line_start":106,"line_end":106,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768},{"krate":0,"index":1769},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441259,"byte_end":441267,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1805}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":443237,"byte_end":443245,"line_start":559,"line_end":559,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":443819,"byte_end":443827,"line_start":577,"line_end":577,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444574,"byte_end":444587,"line_start":606,"line_end":606,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445189,"byte_end":445194,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":448027,"byte_end":448036,"line_start":41,"line_end":41,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":448432,"byte_end":448441,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449368,"byte_end":449381,"line_start":82,"line_end":82,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449461,"byte_end":449474,"line_start":89,"line_end":89,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450085,"byte_end":450098,"line_start":107,"line_end":107,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450226,"byte_end":450239,"line_start":114,"line_end":114,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1879}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452428,"byte_end":452433,"line_start":180,"line_end":180,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455453,"byte_end":455460,"line_start":263,"line_end":263,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456259,"byte_end":456265,"line_start":289,"line_end":289,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456854,"byte_end":456860,"line_start":317,"line_end":317,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1892}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460174,"byte_end":460181,"line_start":411,"line_end":411,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462233,"byte_end":462240,"line_start":472,"line_end":472,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463320,"byte_end":463333,"line_start":508,"line_end":508,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":464743,"byte_end":464748,"line_start":553,"line_end":553,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":465227,"byte_end":465234,"line_start":570,"line_end":570,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":465886,"byte_end":465897,"line_start":590,"line_end":590,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":466103,"byte_end":466110,"line_start":600,"line_end":600,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":467660,"byte_end":467667,"line_start":641,"line_end":641,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":467732,"byte_end":467741,"line_start":647,"line_end":647,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":468123,"byte_end":468132,"line_start":662,"line_end":662,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1921}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":468197,"byte_end":468204,"line_start":668,"line_end":668,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1923},{"krate":0,"index":1924}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":471843,"byte_end":471850,"line_start":750,"line_end":750,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1926}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":472026,"byte_end":472031,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1933}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":475208,"byte_end":475215,"line_start":845,"line_end":845,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":478481,"byte_end":478492,"line_start":948,"line_end":948,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":479122,"byte_end":479129,"line_start":968,"line_end":968,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1962}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":480336,"byte_end":480345,"line_start":1005,"line_end":1005,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1969}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":480584,"byte_end":480597,"line_start":1014,"line_end":1014,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":481143,"byte_end":481150,"line_start":1034,"line_end":1034,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1976}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":484875,"byte_end":484887,"line_start":1139,"line_end":1139,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":489537,"byte_end":489539,"line_start":64,"line_end":64,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500481,"byte_end":500483,"line_start":410,"line_end":410,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":506288,"byte_end":506290,"line_start":571,"line_end":571,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2106}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507028,"byte_end":507030,"line_start":597,"line_end":597,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508117,"byte_end":508119,"line_start":628,"line_end":628,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2127},{"krate":0,"index":2130},{"krate":0,"index":2133},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521849,"byte_end":521851,"line_start":963,"line_end":963,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2140},{"krate":0,"index":2142},{"krate":0,"index":2146},{"krate":0,"index":2150},{"krate":0,"index":2152},{"krate":0,"index":2156},{"krate":0,"index":2158},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2185},{"krate":0,"index":2187},{"krate":0,"index":2189},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2213}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538605,"byte_end":538607,"line_start":1446,"line_end":1446,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542469,"byte_end":542471,"line_start":1533,"line_end":1533,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2245},{"krate":0,"index":2249},{"krate":0,"index":2253},{"krate":0,"index":2257},{"krate":0,"index":2260},{"krate":0,"index":2263},{"krate":0,"index":2266},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2281},{"krate":0,"index":2284},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":558302,"byte_end":558304,"line_start":1992,"line_end":1992,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560131,"byte_end":560141,"line_start":23,"line_end":23,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2325}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560287,"byte_end":560297,"line_start":32,"line_end":32,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2329},{"krate":0,"index":2330}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560859,"byte_end":560869,"line_start":51,"line_end":51,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562073,"byte_end":562083,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562936,"byte_end":562948,"line_start":125,"line_end":125,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":563598,"byte_end":563610,"line_start":148,"line_end":148,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2355}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":563766,"byte_end":563778,"line_start":155,"line_end":155,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2357}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\fixed_cache.rs","byte_start":564314,"byte_end":564324,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2366}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\fixed_cache.rs","byte_start":564471,"byte_end":564481,"line_start":19,"line_end":19,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\fixed_cache.rs","byte_start":564610,"byte_end":564620,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2375},{"krate":0,"index":2376}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566378,"byte_end":566385,"line_start":38,"line_end":38,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2383},{"krate":0,"index":2384},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":2388},{"krate":0,"index":2389},{"krate":0,"index":2391},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2397},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2405}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570263,"byte_end":570270,"line_start":173,"line_end":173,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2408},{"krate":0,"index":2409}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570632,"byte_end":570639,"line_start":194,"line_end":194,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":571041,"byte_end":571048,"line_start":209,"line_end":209,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":572370,"byte_end":572376,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2425},{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":572605,"byte_end":572611,"line_start":28,"line_end":28,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":573319,"byte_end":573320,"line_start":53,"line_end":53,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":574441,"byte_end":574448,"line_start":90,"line_end":90,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2443}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":575069,"byte_end":575076,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":575614,"byte_end":575621,"line_start":129,"line_end":129,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2447},{"krate":0,"index":2450},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2459},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582989,"byte_end":582998,"line_start":337,"line_end":337,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2468},{"krate":0,"index":2470},{"krate":0,"index":2472},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2488},{"krate":0,"index":2494},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595389,"byte_end":595397,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":596716,"byte_end":596722,"line_start":64,"line_end":64,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2522}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":597132,"byte_end":597138,"line_start":81,"line_end":81,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601647,"byte_end":601655,"line_start":40,"line_end":40,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2585}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601766,"byte_end":601774,"line_start":47,"line_end":47,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601892,"byte_end":601900,"line_start":54,"line_end":54,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2589}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602025,"byte_end":602033,"line_start":61,"line_end":61,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2591}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602128,"byte_end":602136,"line_start":68,"line_end":68,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2593},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2601},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2615},{"krate":0,"index":2617},{"krate":0,"index":2620},{"krate":0,"index":2625}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610390,"byte_end":610400,"line_start":359,"line_end":359,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2627}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610488,"byte_end":610498,"line_start":365,"line_end":365,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":617549,"byte_end":617559,"line_start":587,"line_end":587,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":617686,"byte_end":617696,"line_start":594,"line_end":594,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":617825,"byte_end":617835,"line_start":601,"line_end":601,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":617965,"byte_end":617975,"line_start":608,"line_end":608,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618103,"byte_end":618113,"line_start":615,"line_end":615,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618247,"byte_end":618257,"line_start":622,"line_end":622,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618552,"byte_end":618565,"line_start":637,"line_end":637,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619116,"byte_end":619132,"line_start":657,"line_end":657,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":626299,"byte_end":626305,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2689},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2695},{"krate":0,"index":2697},{"krate":0,"index":2699},{"krate":0,"index":2700},{"krate":0,"index":2701},{"krate":0,"index":2702}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":629004,"byte_end":629010,"line_start":125,"line_end":125,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2704}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":632199,"byte_end":632207,"line_start":225,"line_end":225,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":632401,"byte_end":632409,"line_start":234,"line_end":234,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635453,"byte_end":635464,"line_start":319,"line_end":319,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635638,"byte_end":635649,"line_start":328,"line_end":328,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":638195,"byte_end":638206,"line_start":396,"line_end":396,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2729},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":639359,"byte_end":639370,"line_start":438,"line_end":438,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2740}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":657312,"byte_end":657321,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2802}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658532,"byte_end":658541,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2818},{"krate":0,"index":2821},{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":661861,"byte_end":661870,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2837}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668691,"byte_end":668700,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2849}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":669169,"byte_end":669178,"line_start":43,"line_end":43,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2853}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671813,"byte_end":671818,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2858},{"krate":0,"index":2861},{"krate":0,"index":2863},{"krate":0,"index":2865},{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672995,"byte_end":673000,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2869},{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":673878,"byte_end":673883,"line_start":113,"line_end":113,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674616,"byte_end":674621,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2885},{"krate":0,"index":2887},{"krate":0,"index":2888},{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675967,"byte_end":675972,"line_start":68,"line_end":68,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":679774,"byte_end":679779,"line_start":158,"line_end":158,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770785,"byte_end":770788,"line_start":36,"line_end":36,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3110}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":774142,"byte_end":774145,"line_start":155,"line_end":155,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776109,"byte_end":776118,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3166}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777290,"byte_end":777297,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3171},{"krate":0,"index":3173},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3181}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":782267,"byte_end":782274,"line_start":234,"line_end":234,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3190}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786853,"byte_end":786858,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3262},{"krate":0,"index":3263}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787473,"byte_end":787482,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":789676,"byte_end":789685,"line_start":116,"line_end":116,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790241,"byte_end":790252,"line_start":135,"line_end":135,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790519,"byte_end":790525,"line_start":149,"line_end":149,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3275},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3281},{"krate":0,"index":3285},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3292}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795199,"byte_end":795210,"line_start":291,"line_end":291,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721301,"byte_end":721306,"line_start":108,"line_end":108,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3334},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3343},{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722898,"byte_end":722903,"line_start":162,"line_end":162,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":724250,"byte_end":724255,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3356},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3363},{"krate":0,"index":3365},{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725845,"byte_end":725850,"line_start":272,"line_end":272,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":727188,"byte_end":727192,"line_start":328,"line_end":328,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3389},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3396}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":729359,"byte_end":729363,"line_start":396,"line_end":396,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3401},{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":732426,"byte_end":732433,"line_start":495,"line_end":495,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3423},{"krate":0,"index":3425},{"krate":0,"index":3427},{"krate":0,"index":3429},{"krate":0,"index":3430}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":734241,"byte_end":734248,"line_start":557,"line_end":557,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":735901,"byte_end":735905,"line_start":626,"line_end":626,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":737140,"byte_end":737144,"line_start":669,"line_end":669,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3459}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":739221,"byte_end":739227,"line_start":746,"line_end":746,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3478},{"krate":0,"index":3480}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740995,"byte_end":741001,"line_start":809,"line_end":809,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3483},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495},{"krate":0,"index":3496}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747317,"byte_end":747323,"line_start":976,"line_end":976,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3508}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":748299,"byte_end":748305,"line_start":1012,"line_end":1012,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3511},{"krate":0,"index":3515},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":750613,"byte_end":750622,"line_start":1095,"line_end":1095,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3529},{"krate":0,"index":3531},{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":752333,"byte_end":752342,"line_start":1151,"line_end":1151,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3536},{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3540},{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":754838,"byte_end":754846,"line_start":1240,"line_end":1240,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3551},{"krate":0,"index":3552},{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":3563},{"krate":0,"index":3564},{"krate":0,"index":3565}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":758511,"byte_end":758519,"line_start":1342,"line_end":1342,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3573},{"krate":0,"index":3575},{"krate":0,"index":3576},{"krate":0,"index":3577},{"krate":0,"index":3578},{"krate":0,"index":3579},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3583},{"krate":0,"index":3584}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":760183,"byte_end":760190,"line_start":1409,"line_end":1409,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3596},{"krate":0,"index":3598},{"krate":0,"index":3600},{"krate":0,"index":3602},{"krate":0,"index":3603}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":762833,"byte_end":762840,"line_start":1484,"line_end":1484,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3615},{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797298,"byte_end":797304,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3646}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797742,"byte_end":797748,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3649}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797934,"byte_end":797940,"line_start":49,"line_end":49,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3653}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":798600,"byte_end":798611,"line_start":76,"line_end":76,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3655},{"krate":0,"index":3656}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":801251,"byte_end":801263,"line_start":164,"line_end":164,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3659},{"krate":0,"index":3665},{"krate":0,"index":3668}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":805284,"byte_end":805294,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3686},{"krate":0,"index":3689},{"krate":0,"index":3691},{"krate":0,"index":3693},{"krate":0,"index":3696},{"krate":0,"index":3697},{"krate":0,"index":3698},{"krate":0,"index":3699},{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3702},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3708},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3711},{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3714}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":809116,"byte_end":809131,"line_start":154,"line_end":154,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3720},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3726},{"krate":0,"index":3727},{"krate":0,"index":3729},{"krate":0,"index":3731},{"krate":0,"index":3732}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681662,"byte_end":681682,"line_start":33,"line_end":33,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3740},{"krate":0,"index":3742},{"krate":0,"index":3744}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":682346,"byte_end":682366,"line_start":55,"line_end":55,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3746}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683001,"byte_end":683011,"line_start":76,"line_end":76,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3748},{"krate":0,"index":3749}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683729,"byte_end":683744,"line_start":98,"line_end":98,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3751},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3754},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":686208,"byte_end":686212,"line_start":189,"line_end":189,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3786},{"krate":0,"index":3789},{"krate":0,"index":3790},{"krate":0,"index":3791},{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3802},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3807},{"krate":0,"index":3809},{"krate":0,"index":3811},{"krate":0,"index":3813},{"krate":0,"index":3814},{"krate":0,"index":3815},{"krate":0,"index":3817},{"krate":0,"index":3818}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":705374,"byte_end":705380,"line_start":737,"line_end":737,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3851},{"krate":0,"index":3852},{"krate":0,"index":3853},{"krate":0,"index":3854},{"krate":0,"index":3855},{"krate":0,"index":3856}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":711129,"byte_end":711141,"line_start":911,"line_end":911,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3872}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814354,"byte_end":814365,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":3894},{"krate":0,"index":3895}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":815517,"byte_end":815528,"line_start":57,"line_end":57,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3897}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819868,"byte_end":819883,"line_start":30,"line_end":30,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3906}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":820059,"byte_end":820074,"line_start":39,"line_end":39,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3909}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821925,"byte_end":821934,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3917}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822067,"byte_end":822076,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3919},{"krate":0,"index":3920},{"krate":0,"index":3921}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822829,"byte_end":822838,"line_start":53,"line_end":53,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3923}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":826657,"byte_end":826663,"line_start":80,"line_end":80,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3957},{"krate":0,"index":3960},{"krate":0,"index":3962},{"krate":0,"index":3963},{"krate":0,"index":3965},{"krate":0,"index":3967},{"krate":0,"index":3969},{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3972},{"krate":0,"index":3973},{"krate":0,"index":3974},{"krate":0,"index":3975},{"krate":0,"index":3976},{"krate":0,"index":3977},{"krate":0,"index":3978},{"krate":0,"index":3979},{"krate":0,"index":3980},{"krate":0,"index":3981},{"krate":0,"index":3982},{"krate":0,"index":3983},{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":834658,"byte_end":834664,"line_start":301,"line_end":301,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":3995},{"krate":0,"index":3996},{"krate":0,"index":3997},{"krate":0,"index":3998},{"krate":0,"index":3999},{"krate":0,"index":4000},{"krate":0,"index":4003}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":844015,"byte_end":844021,"line_start":527,"line_end":527,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4007}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":849908,"byte_end":849915,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4049},{"krate":0,"index":4050}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":850369,"byte_end":850376,"line_start":29,"line_end":29,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4052}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853541,"byte_end":853549,"line_start":69,"line_end":69,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4106}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853600,"byte_end":853608,"line_start":73,"line_end":73,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4109},{"krate":0,"index":4110}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853849,"byte_end":853857,"line_start":83,"line_end":83,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4119},{"krate":0,"index":4121},{"krate":0,"index":4122},{"krate":0,"index":4124},{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4130},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4133},{"krate":0,"index":4134}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859709,"byte_end":859717,"line_start":253,"line_end":253,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4137}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859816,"byte_end":859824,"line_start":259,"line_end":259,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4140},{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898106,"byte_end":898117,"line_start":17,"line_end":17,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900683,"byte_end":900695,"line_start":107,"line_end":107,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":903718,"byte_end":903731,"line_start":35,"line_end":35,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4226},{"krate":0,"index":4227},{"krate":0,"index":4228},{"krate":0,"index":4231},{"krate":0,"index":4232},{"krate":0,"index":4233}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907912,"byte_end":907918,"line_start":65,"line_end":65,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4252},{"krate":0,"index":4253},{"krate":0,"index":4254},{"krate":0,"index":4255},{"krate":0,"index":4256},{"krate":0,"index":4257}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":622891,"byte_end":622892,"line_start":76,"line_end":76,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4309}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":11968,"byte_end":11978,"line_start":359,"line_end":359,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":20}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22329,"byte_end":22334,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":236}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\mod.rs","byte_start":22344,"byte_end":22349,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":343}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\mod.rs","byte_start":220672,"byte_end":220678,"line_start":4,"line_end":4,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":840}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12074,"byte_end":12087,"line_start":366,"line_end":366,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":1147}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12097,"byte_end":12103,"line_start":367,"line_end":367,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1168}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12137,"byte_end":12141,"line_start":370,"line_end":370,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1358}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12212,"byte_end":12217,"line_start":375,"line_end":375,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1823}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12235,"byte_end":12239,"line_start":377,"line_end":377,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2310}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\mod.rs","byte_start":558991,"byte_end":558996,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2311}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\mod.rs","byte_start":559047,"byte_end":559058,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":2417}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\mod.rs","byte_start":559068,"byte_end":559074,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2514}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\lib.rs","byte_start":12266,"byte_end":12273,"line_start":379,"line_end":379,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":2674}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":620799,"byte_end":620811,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":2742}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":620885,"byte_end":620889,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2896}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":620977,"byte_end":620986,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":4055}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\animation_manager.rs","byte_start":19071,"byte_end":19087,"line_start":24,"line_end":24,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":4570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":23430,"byte_end":23435,"line_start":25,"line_end":25,"column_start":6,"column_end":11},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":4592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":24176,"byte_end":24180,"line_start":57,"line_end":57,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":4601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":27461,"byte_end":27465,"line_start":176,"line_end":176,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":4601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\area.rs","byte_start":30406,"byte_end":30414,"line_start":267,"line_end":267,"column_start":6,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":53},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":36202,"byte_end":36207,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":4616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":40622,"byte_end":40638,"line_start":150,"line_end":150,"column_start":6,"column_end":22},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\collapsing_header.rs","byte_start":44749,"byte_end":44765,"line_start":274,"line_end":274,"column_start":6,"column_end":22},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\combo_box.rs","byte_start":51431,"byte_end":51439,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":59548,"byte_end":59553,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":4626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":61989,"byte_end":61994,"line_start":95,"line_end":95,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":63002,"byte_end":63007,"line_start":136,"line_end":136,"column_start":6,"column_end":11},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4626},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\frame.rs","byte_start":65028,"byte_end":65036,"line_start":201,"line_end":201,"column_start":6,"column_end":14},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":66660,"byte_end":66670,"line_start":28,"line_end":28,"column_start":6,"column_end":16},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":67075,"byte_end":67079,"line_start":47,"line_end":47,"column_start":6,"column_end":10},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":68334,"byte_end":68343,"line_start":96,"line_end":96,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":70365,"byte_end":70374,"line_start":164,"line_end":164,"column_start":6,"column_end":15},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":76361,"byte_end":76374,"line_start":331,"line_end":331,"column_start":6,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":77700,"byte_end":77714,"line_start":380,"line_end":380,"column_start":6,"column_end":20},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":79840,"byte_end":79854,"line_start":449,"line_end":449,"column_start":6,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86532,"byte_end":86544,"line_start":637,"line_end":637,"column_start":6,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\panel.rs","byte_start":86710,"byte_end":86722,"line_start":645,"line_end":645,"column_start":6,"column_end":18},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\popup.rs","byte_start":89070,"byte_end":89079,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":98955,"byte_end":98960,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4689},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":99565,"byte_end":99571,"line_start":47,"line_end":47,"column_start":18,"column_end":24},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4698},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":99930,"byte_end":99936,"line_start":61,"line_end":61,"column_start":6,"column_end":12},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\resize.rs","byte_start":103144,"byte_end":103150,"line_start":165,"line_end":165,"column_start":6,"column_end":12},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":110950,"byte_end":110955,"line_start":32,"line_end":32,"column_start":18,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4711},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":111224,"byte_end":111229,"line_start":44,"line_end":44,"column_start":6,"column_end":11},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":112645,"byte_end":112655,"line_start":98,"line_end":98,"column_start":6,"column_end":16},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":120457,"byte_end":120467,"line_start":309,"line_end":309,"column_start":6,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\scroll_area.rs","byte_start":127535,"byte_end":127543,"line_start":506,"line_end":506,"column_start":6,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":142888,"byte_end":142894,"line_start":35,"line_end":35,"column_start":13,"column_end":19},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":149876,"byte_end":149882,"line_start":232,"line_end":232,"column_start":13,"column_end":19},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":157584,"byte_end":157604,"line_start":453,"line_end":453,"column_start":6,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":4746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":158648,"byte_end":158665,"line_start":483,"line_end":483,"column_start":6,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":4757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\containers\\window.rs","byte_start":170164,"byte_end":170172,"line_start":834,"line_end":834,"column_start":6,"column_end":14},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":175060,"byte_end":175081,"line_start":13,"line_end":13,"column_start":18,"column_end":39},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":679},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":176124,"byte_end":176135,"line_start":53,"line_end":53,"column_start":6,"column_end":17},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":4769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179520,"byte_end":179527,"line_start":147,"line_end":147,"column_start":30,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2667}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179639,"byte_end":179646,"line_start":153,"line_end":153,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":4782},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":179960,"byte_end":179967,"line_start":164,"line_end":164,"column_start":6,"column_end":13},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":190792,"byte_end":190799,"line_start":441,"line_end":441,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":193753,"byte_end":193760,"line_start":534,"line_end":534,"column_start":6,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":201127,"byte_end":201134,"line_start":721,"line_end":721,"column_start":6,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":205998,"byte_end":206005,"line_start":853,"line_end":853,"column_start":6,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":207006,"byte_end":207013,"line_start":883,"line_end":883,"column_start":6,"column_end":13},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":208833,"byte_end":208840,"line_start":934,"line_end":934,"column_start":6,"column_end":13},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":211012,"byte_end":211019,"line_start":988,"line_end":988,"column_start":6,"column_end":13},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\context.rs","byte_start":220427,"byte_end":220434,"line_start":1242,"line_end":1242,"column_start":6,"column_end":13},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":4782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223394,"byte_end":223402,"line_start":67,"line_end":67,"column_start":18,"column_end":26},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":4787},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":223803,"byte_end":223811,"line_start":83,"line_end":83,"column_start":6,"column_end":14},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":4787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":231426,"byte_end":231435,"line_start":282,"line_end":282,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":4907},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":234789,"byte_end":234798,"line_start":403,"line_end":403,"column_start":26,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":4907},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":236853,"byte_end":236861,"line_start":493,"line_end":493,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":4787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239479,"byte_end":239486,"line_start":560,"line_end":560,"column_start":20,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":5064},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239565,"byte_end":239572,"line_start":566,"line_end":566,"column_start":20,"column_end":27},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5064},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\input.rs","byte_start":239658,"byte_end":239665,"line_start":572,"line_end":572,"column_start":20,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5064},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":240767,"byte_end":240777,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":242309,"byte_end":242323,"line_start":77,"line_end":77,"column_start":6,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":5116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":244479,"byte_end":244486,"line_start":142,"line_end":142,"column_start":6,"column_end":13},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":5131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":247006,"byte_end":247016,"line_start":248,"line_end":248,"column_start":6,"column_end":16},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":5140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":247828,"byte_end":247838,"line_start":278,"line_end":278,"column_start":18,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":5140},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":248574,"byte_end":248585,"line_start":302,"line_end":302,"column_start":26,"column_end":37},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":5199},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":250002,"byte_end":250012,"line_start":336,"line_end":336,"column_start":26,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":5221},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\data\\output.rs","byte_start":251089,"byte_end":251099,"line_start":377,"line_end":377,"column_start":6,"column_end":16},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":5221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\frame_state.rs","byte_start":256951,"byte_end":256961,"line_start":36,"line_end":36,"column_start":18,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":5236},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\frame_state.rs","byte_start":257297,"byte_end":257307,"line_start":50,"line_end":50,"column_start":6,"column_end":16},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":5236},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":260849,"byte_end":260854,"line_start":10,"line_end":10,"column_start":6,"column_end":11},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":5247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":262486,"byte_end":262496,"line_start":71,"line_end":71,"column_start":6,"column_end":16},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":263367,"byte_end":263377,"line_start":103,"line_end":103,"column_start":6,"column_end":16},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":269620,"byte_end":269624,"line_start":270,"line_end":270,"column_start":6,"column_end":10},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\grid.rs","byte_start":271717,"byte_end":271721,"line_start":335,"line_end":335,"column_start":6,"column_end":10},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":274976,"byte_end":274978,"line_start":32,"line_end":32,"column_start":6,"column_end":8},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":5260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":276289,"byte_end":276291,"line_start":74,"line_end":74,"column_start":26,"column_end":28},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":5260},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":276613,"byte_end":276621,"line_start":86,"line_end":86,"column_start":28,"column_end":36},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":5276},"to":{"krate":2,"index":9617}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\id.rs","byte_start":277908,"byte_end":277920,"line_start":136,"line_end":136,"column_start":33,"column_end":45},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":5281},"to":{"krate":2,"index":9648}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":310154,"byte_end":310164,"line_start":117,"line_end":117,"column_start":6,"column_end":16},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":5307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":317173,"byte_end":317183,"line_start":280,"line_end":280,"column_start":6,"column_end":16},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":5307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":317294,"byte_end":317304,"line_start":286,"line_end":286,"column_start":16,"column_end":26},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":5307},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state\\touch_state.rs","byte_start":317770,"byte_end":317779,"line_start":304,"line_end":304,"column_start":6,"column_end":15},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":5342},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":280986,"byte_end":280996,"line_start":80,"line_end":80,"column_start":18,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":5353},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":281648,"byte_end":281658,"line_start":101,"line_end":101,"column_start":6,"column_end":16},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":5353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":290823,"byte_end":290828,"line_start":352,"line_end":352,"column_start":6,"column_end":11},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":5372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":291041,"byte_end":291053,"line_start":365,"line_end":365,"column_start":6,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":5385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":293142,"byte_end":293154,"line_start":430,"line_end":430,"column_start":18,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":5403},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":293683,"byte_end":293695,"line_start":449,"line_end":449,"column_start":6,"column_end":18},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":5403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":302467,"byte_end":302477,"line_start":714,"line_end":714,"column_start":6,"column_end":16},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":5353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\input_state.rs","byte_start":304507,"byte_end":304519,"line_start":780,"line_end":780,"column_start":6,"column_end":18},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":5403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":326563,"byte_end":326568,"line_start":27,"line_end":27,"column_start":6,"column_end":11},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":5421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":327744,"byte_end":327751,"line_start":72,"line_end":72,"column_start":6,"column_end":13},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":5452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":328701,"byte_end":328710,"line_start":114,"line_end":114,"column_start":6,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":5480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layers.rs","byte_start":330253,"byte_end":330266,"line_start":157,"line_end":157,"column_start":6,"column_end":19},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":5487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":333408,"byte_end":333414,"line_start":45,"line_end":45,"column_start":6,"column_end":12},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":5495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":334884,"byte_end":334893,"line_start":87,"line_end":87,"column_start":6,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":5504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":336692,"byte_end":336698,"line_start":145,"line_end":145,"column_start":18,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":5521},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":336881,"byte_end":336887,"line_start":153,"line_end":153,"column_start":6,"column_end":12},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":5521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":339901,"byte_end":339907,"line_start":263,"line_end":263,"column_start":6,"column_end":12},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":5521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":342104,"byte_end":342110,"line_start":351,"line_end":351,"column_start":6,"column_end":12},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":5521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\layout.rs","byte_start":358605,"byte_end":358611,"line_start":763,"line_end":763,"column_start":6,"column_end":12},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":5521},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":365227,"byte_end":365234,"line_start":121,"line_end":121,"column_start":18,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":5555},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":367835,"byte_end":367846,"line_start":196,"line_end":196,"column_start":6,"column_end":17},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":5564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":368629,"byte_end":368634,"line_start":224,"line_end":224,"column_start":6,"column_end":11},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":5577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":371391,"byte_end":371397,"line_start":307,"line_end":307,"column_start":6,"column_end":12},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":5537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":375613,"byte_end":375619,"line_start":431,"line_end":431,"column_start":6,"column_end":12},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":5537},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\memory.rs","byte_start":377697,"byte_end":377702,"line_start":494,"line_end":494,"column_start":6,"column_end":11},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":5592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":381450,"byte_end":381458,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":5604},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":382136,"byte_end":382144,"line_start":51,"line_end":51,"column_start":26,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":382281,"byte_end":382289,"line_start":57,"line_end":57,"column_start":29,"column_end":37},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":5604},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":387319,"byte_end":387334,"line_start":206,"line_end":206,"column_start":6,"column_end":21},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":5610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":388058,"byte_end":388073,"line_start":228,"line_end":228,"column_start":26,"column_end":41},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":5610},"to":{"krate":2,"index":3227}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":388207,"byte_end":388222,"line_start":234,"line_end":234,"column_start":29,"column_end":44},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":5610},"to":{"krate":2,"index":3240}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":388475,"byte_end":388483,"line_start":247,"line_end":247,"column_start":6,"column_end":14},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":5616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":392939,"byte_end":392951,"line_start":367,"line_end":367,"column_start":6,"column_end":18},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":5621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":393124,"byte_end":393137,"line_start":377,"line_end":377,"column_start":6,"column_end":19},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":395987,"byte_end":395994,"line_start":456,"line_end":456,"column_start":6,"column_end":13},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1488},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\menu.rs","byte_start":397202,"byte_end":397211,"line_start":492,"line_end":492,"column_start":6,"column_end":15},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":402519,"byte_end":402526,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":404190,"byte_end":404197,"line_start":88,"line_end":88,"column_start":6,"column_end":13},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":405647,"byte_end":405654,"line_start":141,"line_end":141,"column_start":6,"column_end":13},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":407434,"byte_end":407441,"line_start":195,"line_end":195,"column_start":6,"column_end":13},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":408648,"byte_end":408655,"line_start":235,"line_end":235,"column_start":6,"column_end":13},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\painter.rs","byte_start":411408,"byte_end":411415,"line_start":335,"line_end":335,"column_start":6,"column_end":13},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":5637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\placer.rs","byte_start":414183,"byte_end":414189,"line_start":10,"line_end":10,"column_start":6,"column_end":12},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\placer.rs","byte_start":415672,"byte_end":415678,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\placer.rs","byte_start":419884,"byte_end":419890,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\placer.rs","byte_start":422671,"byte_end":422677,"line_start":264,"line_end":264,"column_start":6,"column_end":12},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":425678,"byte_end":425686,"line_start":70,"line_end":70,"column_start":26,"column_end":34},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":5644},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":426775,"byte_end":426783,"line_start":106,"line_end":106,"column_start":6,"column_end":14},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":5644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":441259,"byte_end":441267,"line_start":510,"line_end":510,"column_start":6,"column_end":14},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":5644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":443237,"byte_end":443245,"line_start":559,"line_end":559,"column_start":26,"column_end":34},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":5644},"to":{"krate":2,"index":3144}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":443819,"byte_end":443827,"line_start":577,"line_end":577,"column_start":32,"column_end":40},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":5644},"to":{"krate":2,"index":3170}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\response.rs","byte_start":444574,"byte_end":444587,"line_start":606,"line_end":606,"column_start":9,"column_end":22},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":5663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\sense.rs","byte_start":445189,"byte_end":445194,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":5670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":448027,"byte_end":448036,"line_start":41,"line_end":41,"column_start":28,"column_end":37},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":5686},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":448432,"byte_end":448441,"line_start":54,"line_end":54,"column_start":6,"column_end":15},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":5686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449368,"byte_end":449381,"line_start":82,"line_end":82,"column_start":18,"column_end":31},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1863},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":449461,"byte_end":449474,"line_start":89,"line_end":89,"column_start":6,"column_end":19},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450085,"byte_end":450098,"line_start":107,"line_end":107,"column_start":23,"column_end":36},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1863},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":450226,"byte_end":450239,"line_start":114,"line_end":114,"column_start":26,"column_end":39},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1863},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":452428,"byte_end":452433,"line_start":180,"line_end":180,"column_start":6,"column_end":11},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":5718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":455453,"byte_end":455460,"line_start":263,"line_end":263,"column_start":6,"column_end":13},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":5737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456259,"byte_end":456265,"line_start":289,"line_end":289,"column_start":6,"column_end":12},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":5759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":456854,"byte_end":456860,"line_start":317,"line_end":317,"column_start":21,"column_end":27},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":5759},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":460174,"byte_end":460181,"line_start":411,"line_end":411,"column_start":6,"column_end":13},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":5787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":462233,"byte_end":462240,"line_start":472,"line_end":472,"column_start":6,"column_end":13},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":5825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":463320,"byte_end":463333,"line_start":508,"line_end":508,"column_start":6,"column_end":19},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":5839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":464743,"byte_end":464748,"line_start":553,"line_end":553,"column_start":18,"column_end":23},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":5718},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":465227,"byte_end":465234,"line_start":570,"line_end":570,"column_start":18,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":5737},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":465886,"byte_end":465897,"line_start":590,"line_end":590,"column_start":18,"column_end":29},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":5775},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":466103,"byte_end":466110,"line_start":600,"line_end":600,"column_start":6,"column_end":13},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":5787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":467660,"byte_end":467667,"line_start":641,"line_end":641,"column_start":18,"column_end":25},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":5787},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":467732,"byte_end":467741,"line_start":647,"line_end":647,"column_start":6,"column_end":15},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":5813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":468123,"byte_end":468132,"line_start":662,"line_end":662,"column_start":18,"column_end":27},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":5813},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":468197,"byte_end":468204,"line_start":668,"line_end":668,"column_start":6,"column_end":13},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":5825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":471843,"byte_end":471850,"line_start":750,"line_end":750,"column_start":18,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":5825},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":472026,"byte_end":472031,"line_start":760,"line_end":760,"column_start":6,"column_end":11},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":5718},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":475208,"byte_end":475215,"line_start":845,"line_end":845,"column_start":6,"column_end":13},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":5737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":478481,"byte_end":478492,"line_start":948,"line_end":948,"column_start":6,"column_end":17},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":5775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":479122,"byte_end":479129,"line_start":968,"line_end":968,"column_start":6,"column_end":13},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":5825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":480336,"byte_end":480345,"line_start":1005,"line_end":1005,"column_start":6,"column_end":15},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":5813},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":480584,"byte_end":480597,"line_start":1014,"line_end":1014,"column_start":6,"column_end":19},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":5839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":481143,"byte_end":481150,"line_start":1034,"line_end":1034,"column_start":6,"column_end":13},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":5787},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\style.rs","byte_start":484875,"byte_end":484887,"line_start":1139,"line_end":1139,"column_start":6,"column_end":18},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":5854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":489537,"byte_end":489539,"line_start":64,"line_end":64,"column_start":6,"column_end":8},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":500481,"byte_end":500483,"line_start":410,"line_end":410,"column_start":6,"column_end":8},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":506288,"byte_end":506290,"line_start":571,"line_end":571,"column_start":6,"column_end":8},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":507028,"byte_end":507030,"line_start":597,"line_end":597,"column_start":6,"column_end":8},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":508117,"byte_end":508119,"line_start":628,"line_end":628,"column_start":6,"column_end":8},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":521849,"byte_end":521851,"line_start":963,"line_end":963,"column_start":6,"column_end":8},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":538605,"byte_end":538607,"line_start":1446,"line_end":1446,"column_start":6,"column_end":8},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":542469,"byte_end":542471,"line_start":1533,"line_end":1533,"column_start":6,"column_end":8},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\ui.rs","byte_start":558302,"byte_end":558304,"line_start":1992,"line_end":1992,"column_start":6,"column_end":8},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559700,"byte_end":559704,"line_start":10,"line_end":10,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":2312}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":559707,"byte_end":559711,"line_start":10,"line_end":10,"column_start":53,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":3028},"to":{"krate":0,"index":2312}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560131,"byte_end":560141,"line_start":23,"line_end":23,"column_start":35,"column_end":45},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2316},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560287,"byte_end":560297,"line_start":32,"line_end":32,"column_start":23,"column_end":33},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":560859,"byte_end":560869,"line_start":51,"line_end":51,"column_start":23,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":561764,"byte_end":561768,"line_start":78,"line_end":78,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":2337}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":561771,"byte_end":561775,"line_start":78,"line_end":78,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":3028},"to":{"krate":0,"index":2337}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562073,"byte_end":562083,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2316},"to":{"krate":0,"index":2337}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":562936,"byte_end":562948,"line_start":125,"line_end":125,"column_start":6,"column_end":18},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":5870},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":563598,"byte_end":563610,"line_start":148,"line_end":148,"column_start":16,"column_end":28},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":5870},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\cache.rs","byte_start":563766,"byte_end":563778,"line_start":155,"line_end":155,"column_start":26,"column_end":38},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":5870},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\fixed_cache.rs","byte_start":564314,"byte_end":564324,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":5874},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\fixed_cache.rs","byte_start":564471,"byte_end":564481,"line_start":19,"line_end":19,"column_start":32,"column_end":42},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":5874},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\fixed_cache.rs","byte_start":564610,"byte_end":564620,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":5874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":566378,"byte_end":566385,"line_start":38,"line_end":38,"column_start":9,"column_end":16},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":5884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570263,"byte_end":570270,"line_start":173,"line_end":173,"column_start":9,"column_end":16},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":570632,"byte_end":570639,"line_start":194,"line_end":194,"column_start":9,"column_end":16},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\history.rs","byte_start":571041,"byte_end":571048,"line_start":209,"line_end":209,"column_start":14,"column_end":21},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":572370,"byte_end":572376,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":572605,"byte_end":572611,"line_start":28,"line_end":28,"column_start":33,"column_end":39},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5897},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":573216,"byte_end":573219,"line_start":50,"line_end":50,"column_start":38,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":3677},"to":{"krate":0,"index":2430}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":573222,"byte_end":573227,"line_start":50,"line_end":50,"column_start":44,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":2637},"to":{"krate":0,"index":2430}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":573238,"byte_end":573242,"line_start":50,"line_end":50,"column_start":60,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":2430}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":573245,"byte_end":573249,"line_start":50,"line_end":50,"column_start":67,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":3028},"to":{"krate":0,"index":2430}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":573319,"byte_end":573320,"line_start":53,"line_end":53,"column_start":29,"column_end":30},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2433},"to":{"krate":0,"index":2430}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":574441,"byte_end":574448,"line_start":90,"line_end":90,"column_start":16,"column_end":23},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2435},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":575069,"byte_end":575076,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2435},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":575614,"byte_end":575621,"line_start":129,"line_end":129,"column_start":6,"column_end":13},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2435},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\id_type_map.rs","byte_start":582989,"byte_end":582998,"line_start":337,"line_end":337,"column_start":6,"column_end":15},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":5915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":595389,"byte_end":595397,"line_start":26,"line_end":26,"column_start":18,"column_end":26},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":5924},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":596716,"byte_end":596722,"line_start":64,"line_end":64,"column_start":33,"column_end":39},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":5936},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\util\\undoer.rs","byte_start":597132,"byte_end":597138,"line_start":81,"line_end":81,"column_start":13,"column_end":19},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":5936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601647,"byte_end":601655,"line_start":40,"line_end":40,"column_start":21,"column_end":29},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":5955},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601766,"byte_end":601774,"line_start":47,"line_end":47,"column_start":24,"column_end":32},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":5955},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":601892,"byte_end":601900,"line_start":54,"line_end":54,"column_start":28,"column_end":36},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":5955},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602025,"byte_end":602033,"line_start":61,"line_end":61,"column_start":23,"column_end":31},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":5955},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":602128,"byte_end":602136,"line_start":68,"line_end":68,"column_start":6,"column_end":14},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":5955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610390,"byte_end":610400,"line_start":359,"line_end":359,"column_start":18,"column_end":28},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":5977},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":610488,"byte_end":610498,"line_start":365,"line_end":365,"column_start":6,"column_end":16},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":5977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":617549,"byte_end":617559,"line_start":587,"line_end":587,"column_start":21,"column_end":31},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":5977},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":617686,"byte_end":617696,"line_start":594,"line_end":594,"column_start":24,"column_end":34},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":5977},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":617825,"byte_end":617835,"line_start":601,"line_end":601,"column_start":23,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":5977},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":617965,"byte_end":617975,"line_start":608,"line_end":608,"column_start":25,"column_end":35},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":5977},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618103,"byte_end":618113,"line_start":615,"line_end":615,"column_start":26,"column_end":36},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":5977},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618247,"byte_end":618257,"line_start":622,"line_end":622,"column_start":28,"column_end":38},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":5977},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":618552,"byte_end":618565,"line_start":637,"line_end":637,"column_start":6,"column_end":19},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":5989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widget_text.rs","byte_start":619116,"byte_end":619132,"line_start":657,"line_end":657,"column_start":6,"column_end":22},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":5998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":626299,"byte_end":626305,"line_start":35,"line_end":35,"column_start":6,"column_end":12},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":629004,"byte_end":629010,"line_start":125,"line_end":125,"column_start":17,"column_end":23},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2678},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":632199,"byte_end":632207,"line_start":225,"line_end":225,"column_start":10,"column_end":18},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2707},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":632401,"byte_end":632409,"line_start":234,"line_end":234,"column_start":21,"column_end":29},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2707},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635453,"byte_end":635464,"line_start":319,"line_end":319,"column_start":6,"column_end":17},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":635638,"byte_end":635649,"line_start":328,"line_end":328,"column_start":17,"column_end":28},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2719},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":638195,"byte_end":638206,"line_start":396,"line_end":396,"column_start":6,"column_end":17},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":6007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\button.rs","byte_start":639359,"byte_end":639370,"line_start":438,"line_end":438,"column_start":17,"column_end":28},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":6007},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":657312,"byte_end":657321,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":6029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":658532,"byte_end":658541,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\drag_value.rs","byte_start":661861,"byte_end":661870,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2807},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":668691,"byte_end":668700,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\hyperlink.rs","byte_start":669169,"byte_end":669178,"line_start":43,"line_end":43,"column_start":17,"column_end":26},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2843},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":671813,"byte_end":671818,"line_start":41,"line_end":41,"column_start":6,"column_end":11},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":6039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":672995,"byte_end":673000,"line_start":80,"line_end":80,"column_start":6,"column_end":11},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":6039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\image.rs","byte_start":673878,"byte_end":673883,"line_start":113,"line_end":113,"column_start":17,"column_end":22},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":6039},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":674616,"byte_end":674621,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":675967,"byte_end":675972,"line_start":68,"line_end":68,"column_start":6,"column_end":11},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\label.rs","byte_start":679774,"byte_end":679779,"line_start":158,"line_end":158,"column_start":17,"column_end":22},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2880},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":770785,"byte_end":770788,"line_start":36,"line_end":36,"column_start":6,"column_end":9},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":6051},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\bar.rs","byte_start":774142,"byte_end":774145,"line_start":155,"line_end":155,"column_start":22,"column_end":25},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":6051},"to":{"krate":0,"index":3219}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":776109,"byte_end":776118,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":6068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":777290,"byte_end":777297,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":6082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\box_elem.rs","byte_start":782267,"byte_end":782274,"line_start":234,"line_end":234,"column_start":22,"column_end":29},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":6082},"to":{"krate":0,"index":3219}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":786853,"byte_end":786858,"line_start":19,"line_end":19,"column_start":6,"column_end":11},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":6099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":787473,"byte_end":787482,"line_start":48,"line_end":48,"column_start":6,"column_end":15},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":6111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":789676,"byte_end":789685,"line_start":116,"line_end":116,"column_start":19,"column_end":28},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":6111},"to":{"krate":5,"index":5722}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790241,"byte_end":790252,"line_start":135,"line_end":135,"column_start":18,"column_end":29},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":6127},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":790519,"byte_end":790525,"line_start":149,"line_end":149,"column_start":6,"column_end":12},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":6143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\values.rs","byte_start":795199,"byte_end":795210,"line_start":291,"line_end":291,"column_start":6,"column_end":17},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":6148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":721301,"byte_end":721306,"line_start":108,"line_end":108,"column_start":6,"column_end":11},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":6180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":722898,"byte_end":722903,"line_start":162,"line_end":162,"column_start":19,"column_end":24},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":6180},"to":{"krate":0,"index":3320}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":724250,"byte_end":724255,"line_start":218,"line_end":218,"column_start":6,"column_end":11},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":725845,"byte_end":725850,"line_start":272,"line_end":272,"column_start":19,"column_end":24},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6194},"to":{"krate":0,"index":3320}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":727188,"byte_end":727192,"line_start":328,"line_end":328,"column_start":6,"column_end":10},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":729359,"byte_end":729363,"line_start":396,"line_end":396,"column_start":19,"column_end":23},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":3377},"to":{"krate":0,"index":3320}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":732426,"byte_end":732433,"line_start":495,"line_end":495,"column_start":6,"column_end":13},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":734241,"byte_end":734248,"line_start":557,"line_end":557,"column_start":19,"column_end":26},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":3411},"to":{"krate":0,"index":3320}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":735901,"byte_end":735905,"line_start":626,"line_end":626,"column_start":6,"column_end":10},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":6208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":737140,"byte_end":737144,"line_start":669,"line_end":669,"column_start":19,"column_end":23},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":6208},"to":{"krate":0,"index":3320}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":739221,"byte_end":739227,"line_start":746,"line_end":746,"column_start":6,"column_end":12},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":740995,"byte_end":741001,"line_start":809,"line_end":809,"column_start":19,"column_end":25},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3460},"to":{"krate":0,"index":3320}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":747317,"byte_end":747323,"line_start":976,"line_end":976,"column_start":6,"column_end":12},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":748299,"byte_end":748305,"line_start":1012,"line_end":1012,"column_start":19,"column_end":25},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3497},"to":{"krate":0,"index":3320}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":750613,"byte_end":750622,"line_start":1095,"line_end":1095,"column_start":6,"column_end":15},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":6217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":752333,"byte_end":752342,"line_start":1151,"line_end":1151,"column_start":19,"column_end":28},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":6217},"to":{"krate":0,"index":3320}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":754838,"byte_end":754846,"line_start":1240,"line_end":1240,"column_start":6,"column_end":14},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3544},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":758511,"byte_end":758519,"line_start":1342,"line_end":1342,"column_start":19,"column_end":27},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3544},"to":{"krate":0,"index":3320}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":760183,"byte_end":760190,"line_start":1409,"line_end":1409,"column_start":6,"column_end":13},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\items\\mod.rs","byte_start":762833,"byte_end":762840,"line_start":1484,"line_end":1484,"column_start":19,"column_end":26},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3585},"to":{"krate":0,"index":3320}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797298,"byte_end":797304,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":6228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797742,"byte_end":797748,"line_start":39,"line_end":39,"column_start":18,"column_end":24},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":6245},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":797934,"byte_end":797940,"line_start":49,"line_end":49,"column_start":6,"column_end":12},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":6245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":798600,"byte_end":798611,"line_start":76,"line_end":76,"column_start":6,"column_end":17},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":6255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\legend.rs","byte_start":801251,"byte_end":801263,"line_start":164,"line_end":164,"column_start":6,"column_end":18},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":6261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":805284,"byte_end":805294,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":6267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\transform.rs","byte_start":809116,"byte_end":809131,"line_start":154,"line_end":154,"column_start":6,"column_end":21},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":6283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":681662,"byte_end":681682,"line_start":33,"line_end":33,"column_start":6,"column_end":26},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3737},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":682346,"byte_end":682366,"line_start":55,"line_end":55,"column_start":18,"column_end":38},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3737},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683001,"byte_end":683011,"line_start":76,"line_end":76,"column_start":6,"column_end":16},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":6290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":683729,"byte_end":683744,"line_start":98,"line_end":98,"column_start":6,"column_end":21},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":6299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":686208,"byte_end":686212,"line_start":189,"line_end":189,"column_start":6,"column_end":10},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":705374,"byte_end":705380,"line_start":737,"line_end":737,"column_start":6,"column_end":12},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3832},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\plot\\mod.rs","byte_start":711129,"byte_end":711141,"line_start":911,"line_end":911,"column_start":6,"column_end":18},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":814354,"byte_end":814365,"line_start":19,"line_end":19,"column_start":6,"column_end":17},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\progress_bar.rs","byte_start":815517,"byte_end":815528,"line_start":57,"line_end":57,"column_start":17,"column_end":28},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3884},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":819868,"byte_end":819883,"line_start":30,"line_end":30,"column_start":6,"column_end":21},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3902},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\selected_label.rs","byte_start":820059,"byte_end":820074,"line_start":39,"line_end":39,"column_start":17,"column_end":32},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3902},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":821925,"byte_end":821934,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3913},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822067,"byte_end":822076,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\separator.rs","byte_start":822829,"byte_end":822838,"line_start":53,"line_end":53,"column_start":17,"column_end":26},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3913},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":826657,"byte_end":826663,"line_start":80,"line_end":80,"column_start":10,"column_end":16},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":834658,"byte_end":834664,"line_start":301,"line_end":301,"column_start":10,"column_end":16},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\slider.rs","byte_start":844015,"byte_end":844021,"line_start":527,"line_end":527,"column_start":21,"column_end":27},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3939},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":849908,"byte_end":849915,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":6315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\spinner.rs","byte_start":850369,"byte_end":850376,"line_start":29,"line_end":29,"column_start":17,"column_end":24},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":6315},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853541,"byte_end":853549,"line_start":69,"line_end":69,"column_start":30,"column_end":38},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":4086},"to":{"krate":0,"index":4310}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853600,"byte_end":853608,"line_start":73,"line_end":73,"column_start":10,"column_end":18},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":853849,"byte_end":853857,"line_start":83,"line_end":83,"column_start":10,"column_end":18},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859709,"byte_end":859717,"line_start":253,"line_end":253,"column_start":21,"column_end":29},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4086},"to":{"krate":0,"index":4305}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\builder.rs","byte_start":859816,"byte_end":859824,"line_start":259,"line_end":259,"column_start":10,"column_end":18},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":898106,"byte_end":898117,"line_start":17,"line_end":17,"column_start":6,"column_end":17},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":6319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\cursor_range.rs","byte_start":900683,"byte_end":900695,"line_start":107,"line_end":107,"column_start":6,"column_end":18},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":6329},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\state.rs","byte_start":903718,"byte_end":903731,"line_start":35,"line_end":35,"column_start":6,"column_end":19},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":6357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":906072,"byte_end":906077,"line_start":7,"line_end":7,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2913},"to":{"krate":0,"index":4241}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\text_edit\\text_buffer.rs","byte_start":907912,"byte_end":907918,"line_start":65,"line_end":65,"column_start":21,"column_end":27},"kind":{"Impl":{"id":296}},"from":{"krate":5,"index":7606},"to":{"krate":0,"index":4241}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\egui-0.17.0\\src\\widgets\\mod.rs","byte_start":622891,"byte_end":622892,"line_start":76,"line_end":76,"column_start":20,"column_end":21},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4308},"to":{"krate":0,"index":4305}}]}