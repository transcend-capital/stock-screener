{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0","program":"C:\\Users\\Tyra Bjurman\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","epaint","--edition=2021","C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"atomic_refcell\"","--cfg","feature=\"bytemuck\"","--cfg","feature=\"convert_bytemuck\"","--cfg","feature=\"default_fonts\"","--cfg","feature=\"single_threaded\"","-C","metadata=d7bd6769fd111461","-C","extra-filename=-d7bd6769fd111461","--out-dir","c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps","--extern","ab_glyph=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libab_glyph-c0281da4a8e9f0c9.rmeta","--extern","ahash=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libahash-62f719d609381109.rmeta","--extern","atomic_refcell=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libatomic_refcell-1d90111341ddb257.rmeta","--extern","bytemuck=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libbytemuck-6cb52dd38702454e.rmeta","--extern","emath=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libemath-e65fe6bdb1a2dbb5.rmeta","--extern","nohash_hasher=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libnohash_hasher-9150af6f0cc16b49.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Tyra Bjurman\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libepaint-d7bd6769fd111461.rmeta"},"prelude":{"crate_id":{"name":"epaint","disambiguator":[15603212726322193755,0]},"crate_root":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src","external_crates":[{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[5748888646060736057,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","num":2,"id":{"name":"core","disambiguator":[11647781593125135854,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13810207351280985286,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10856308035441163175,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15195352194256834944,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8936219983177082535,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9514052684633617057,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11173665669995955307,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11489992985031151541,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16828784558795307081,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10060143980449217236,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14817981415011782061,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16087529398371340149,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","num":14,"id":{"name":"emath","disambiguator":[1857022275223742910,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","num":15,"id":{"name":"bytemuck","disambiguator":[6027384491255769145,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","num":16,"id":{"name":"bytemuck_derive","disambiguator":[3807360260228750469,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","num":17,"id":{"name":"atomic_refcell","disambiguator":[5087543260144174942,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","num":18,"id":{"name":"ahash","disambiguator":[7678121960710224047,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","num":19,"id":{"name":"once_cell","disambiguator":[7981614201203751029,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","num":20,"id":{"name":"getrandom","disambiguator":[8713240416360518369,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","num":21,"id":{"name":"cfg_if","disambiguator":[13690946024276880309,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","num":22,"id":{"name":"ab_glyph","disambiguator":[16103060746931527796,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","num":23,"id":{"name":"ab_glyph_rasterizer","disambiguator":[17601843927899529409,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","num":24,"id":{"name":"owned_ttf_parser","disambiguator":[15467540707023769811,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","num":25,"id":{"name":"ttf_parser","disambiguator":[15142029793234110151,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","num":26,"id":{"name":"nohash_hasher","disambiguator":[16649505969791144709,0]}}],"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":6560,"line_start":1,"line_end":222,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":5966},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97482,"byte_end":97485,"line_start":212,"line_end":212,"column_start":24,"column_end":27},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":353}},{"kind":"Use","ref_id":{"krate":5,"index":5966},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97589,"byte_end":97592,"line_start":217,"line_end":217,"column_start":19,"column_end":22},"alias_span":null,"name":"Arc","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97615,"byte_end":97620,"line_start":218,"line_end":218,"column_start":22,"column_end":27},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":17,"index":142},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97622,"byte_end":97632,"line_start":218,"line_end":218,"column_start":29,"column_end":39},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":1638},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97658,"byte_end":97664,"line_start":219,"line_end":219,"column_start":24,"column_end":30},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":17,"index":113},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97666,"byte_end":97681,"line_start":219,"line_end":219,"column_start":32,"column_end":47},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":17,"index":142},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97683,"byte_end":97699,"line_start":219,"line_end":219,"column_start":49,"column_end":65},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":332}},{"kind":"Use","ref_id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168107,"byte_end":168115,"line_start":13,"line_end":13,"column_start":13,"column_end":21},"alias_span":null,"name":"FontData","value":"","parent":{"krate":0,"index":626}},{"kind":"Use","ref_id":{"krate":0,"index":2012},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168117,"byte_end":168132,"line_start":13,"line_end":13,"column_start":23,"column_end":38},"alias_span":null,"name":"FontDefinitions","value":"","parent":{"krate":0,"index":626}},{"kind":"Use","ref_id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168134,"byte_end":168144,"line_start":13,"line_end":13,"column_start":40,"column_end":50},"alias_span":null,"name":"FontFamily","value":"","parent":{"krate":0,"index":626}},{"kind":"Use","ref_id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168146,"byte_end":168152,"line_start":13,"line_end":13,"column_start":52,"column_end":58},"alias_span":null,"name":"FontId","value":"","parent":{"krate":0,"index":626}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168154,"byte_end":168163,"line_start":13,"line_end":13,"column_start":60,"column_end":69},"alias_span":null,"name":"FontTweak","value":"","parent":{"krate":0,"index":626}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168165,"byte_end":168170,"line_start":13,"line_end":13,"column_start":71,"column_end":76},"alias_span":null,"name":"Fonts","value":"","parent":{"krate":0,"index":626}},{"kind":"Use","ref_id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168172,"byte_end":168181,"line_start":13,"line_end":13,"column_start":78,"column_end":87},"alias_span":null,"name":"FontsImpl","value":"","parent":{"krate":0,"index":626}},{"kind":"Use","ref_id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168201,"byte_end":168207,"line_start":14,"line_end":14,"column_start":18,"column_end":24},"alias_span":null,"name":"layout","value":"","parent":{"krate":0,"index":626}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168232,"byte_end":168233,"line_start":15,"line_end":15,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"RowVisuals, LayoutSection, Galley, Row, Glyph, LayoutJob","parent":{"krate":0,"index":626}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\mod.rs","byte_start":271864,"byte_end":271865,"line_start":3,"line_end":3,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1167}},{"kind":"Use","ref_id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3082,"byte_end":3098,"line_start":108,"line_end":108,"column_start":14,"column_end":30},"alias_span":null,"name":"CubicBezierShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3100,"byte_end":3120,"line_start":108,"line_end":108,"column_start":32,"column_end":52},"alias_span":null,"name":"QuadraticBezierShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3135,"byte_end":3142,"line_start":109,"line_end":109,"column_start":13,"column_end":20},"alias_span":null,"name":"Color32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3135,"byte_end":3142,"line_start":109,"line_end":109,"column_start":13,"column_end":20},"alias_span":null,"name":"Color32","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3144,"byte_end":3148,"line_start":109,"line_end":109,"column_start":22,"column_end":26},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3144,"byte_end":3148,"line_start":109,"line_end":109,"column_start":22,"column_end":26},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3163,"byte_end":3173,"line_start":110,"line_end":110,"column_start":13,"column_end":23},"alias_span":null,"name":"AlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3175,"byte_end":3185,"line_start":110,"line_end":110,"column_start":25,"column_end":35},"alias_span":null,"name":"ColorImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3187,"byte_end":3196,"line_start":110,"line_end":110,"column_start":37,"column_end":46},"alias_span":null,"name":"ImageData","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3198,"byte_end":3208,"line_start":110,"line_end":110,"column_start":48,"column_end":58},"alias_span":null,"name":"ImageDelta","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3222,"byte_end":3226,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"alias_span":null,"name":"Mesh","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3228,"byte_end":3234,"line_start":111,"line_end":111,"column_start":18,"column_end":24},"alias_span":null,"name":"Mesh16","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3236,"byte_end":3242,"line_start":111,"line_end":111,"column_start":26,"column_end":32},"alias_span":null,"name":"Vertex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3257,"byte_end":3263,"line_start":112,"line_end":112,"column_start":13,"column_end":19},"alias_span":null,"name":"Shadow","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3277,"byte_end":3288,"line_start":113,"line_end":113,"column_start":13,"column_end":24},"alias_span":null,"name":"CircleShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3290,"byte_end":3299,"line_start":113,"line_end":113,"column_start":26,"column_end":35},"alias_span":null,"name":"PathShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1725},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3301,"byte_end":3310,"line_start":113,"line_end":113,"column_start":37,"column_end":46},"alias_span":null,"name":"RectShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3312,"byte_end":3320,"line_start":113,"line_end":113,"column_start":48,"column_end":56},"alias_span":null,"name":"Rounding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3322,"byte_end":3327,"line_start":113,"line_end":113,"column_start":58,"column_end":63},"alias_span":null,"name":"Shape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3329,"byte_end":3338,"line_start":113,"line_end":113,"column_start":65,"column_end":74},"alias_span":null,"name":"TextShape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3352,"byte_end":3362,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"alias_span":null,"name":"PaintStats","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3376,"byte_end":3382,"line_start":115,"line_end":115,"column_start":13,"column_end":19},"alias_span":null,"name":"Stroke","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3402,"byte_end":3419,"line_start":116,"line_end":116,"column_start":19,"column_end":36},"alias_span":null,"name":"tessellate_shapes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3421,"byte_end":3440,"line_start":116,"line_end":116,"column_start":38,"column_end":57},"alias_span":null,"name":"TessellationOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3442,"byte_end":3453,"line_start":116,"line_end":116,"column_start":59,"column_end":70},"alias_span":null,"name":"Tessellator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3467,"byte_end":3477,"line_start":117,"line_end":117,"column_start":12,"column_end":22},"alias_span":null,"name":"FontFamily","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3479,"byte_end":3485,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"alias_span":null,"name":"FontId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3487,"byte_end":3492,"line_start":117,"line_end":117,"column_start":32,"column_end":37},"alias_span":null,"name":"Fonts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3494,"byte_end":3500,"line_start":117,"line_end":117,"column_start":39,"column_end":45},"alias_span":null,"name":"Galley","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3522,"byte_end":3534,"line_start":118,"line_end":118,"column_start":20,"column_end":32},"alias_span":null,"name":"TextureAtlas","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3556,"byte_end":3569,"line_start":119,"line_end":119,"column_start":21,"column_end":34},"alias_span":null,"name":"TextureHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3585,"byte_end":3599,"line_start":120,"line_end":120,"column_start":15,"column_end":29},"alias_span":null,"name":"TextureManager","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":78},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3621,"byte_end":3625,"line_start":123,"line_end":123,"column_start":17,"column_end":21},"alias_span":null,"name":"pos2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":304},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3627,"byte_end":3631,"line_start":123,"line_end":123,"column_start":23,"column_end":27},"alias_span":null,"name":"vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":563},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3633,"byte_end":3637,"line_start":123,"line_end":123,"column_start":29,"column_end":33},"alias_span":null,"name":"Pos2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":604},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3639,"byte_end":3643,"line_start":123,"line_end":123,"column_start":35,"column_end":39},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":722},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3645,"byte_end":3649,"line_start":123,"line_end":123,"column_start":41,"column_end":45},"alias_span":null,"name":"Vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":18,"index":0},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3661,"byte_end":3666,"line_start":125,"line_end":125,"column_start":9,"column_end":14},"alias_span":null,"name":"ahash","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":14,"index":0},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3676,"byte_end":3681,"line_start":126,"line_end":126,"column_start":9,"column_end":14},"alias_span":null,"name":"emath","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":6560,"line_start":1,"line_end":222,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":86},{"krate":0,"index":250},{"krate":0,"index":302},{"krate":0,"index":332},{"krate":0,"index":380},{"krate":0,"index":390},{"krate":0,"index":504},{"krate":0,"index":508},{"krate":0,"index":552},{"krate":0,"index":566},{"krate":0,"index":626},{"krate":0,"index":1058},{"krate":0,"index":1080},{"krate":0,"index":1134},{"krate":0,"index":1167},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1252},{"krate":0,"index":1255},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1268},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1284},{"krate":0,"index":1287},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1335},{"krate":0,"index":1338},{"krate":0,"index":1341},{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":2214},{"krate":0,"index":2221},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2235},{"krate":0,"index":2237},{"krate":0,"index":1351},{"krate":0,"index":2240},{"krate":0,"index":2244},{"krate":0,"index":2246},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1359}],"decl_id":null,"docs":" A simple 2D graphics library for turning simple 2D shapes and text into textured triangles.","sig":null,"attributes":[{"value":"/ A simple 2D graphics library for turning simple 2D shapes and text into textured triangles.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":95,"line_start":1,"line_end":1,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":96,"byte_end":99,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Made for [`egui`](https://github.com/emilk/egui/).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":100,"byte_end":154,"line_start":3,"line_end":3,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":155,"byte_end":158,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Create some [`Shape`]:s and pass them to [`tessellate_shapes`] to generate [`Mesh`]:es","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":159,"byte_end":249,"line_start":5,"line_end":5,"column_start":1,"column_end":91}},{"value":"/ that you can then paint using some graphics API of your choice (e.g. OpenGL).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":250,"byte_end":331,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":423,"byte_end":446,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"warn(clippy :: all, clippy :: await_holding_lock, clippy :: char_lit_as_u8,\n       clippy :: checked_conversions, clippy :: dbg_macro, clippy ::\n       debug_assert_with_mut_call, clippy :: disallowed_method, clippy ::\n       doc_markdown, clippy :: empty_enum, clippy :: enum_glob_use, clippy ::\n       exit, clippy :: expl_impl_clone_on_copy, clippy ::\n       explicit_deref_methods, clippy :: explicit_into_iter_loop, clippy ::\n       fallible_impl_from, clippy :: filter_map_next, clippy ::\n       flat_map_option, clippy :: float_cmp_const, clippy ::\n       fn_params_excessive_bools, clippy :: from_iter_instead_of_collect,\n       clippy :: if_let_mutex, clippy :: implicit_clone, clippy ::\n       imprecise_flops, clippy :: inefficient_to_string, clippy ::\n       invalid_upcast_comparisons, clippy :: large_digit_groups, clippy ::\n       large_stack_arrays, clippy :: large_types_passed_by_value, clippy ::\n       let_unit_value, clippy :: linkedlist, clippy :: lossy_float_literal,\n       clippy :: macro_use_imports, clippy :: manual_ok_or, clippy ::\n       map_err_ignore, clippy :: map_flatten, clippy :: map_unwrap_or, clippy\n       :: match_on_vec_items, clippy :: match_same_arms, clippy ::\n       match_wild_err_arm, clippy :: match_wildcard_for_single_variants,\n       clippy :: mem_forget, clippy :: mismatched_target_os, clippy ::\n       missing_errors_doc, clippy :: missing_safety_doc, clippy :: mut_mut,\n       clippy :: mutex_integer, clippy :: needless_borrow, clippy ::\n       needless_continue, clippy :: needless_for_each, clippy ::\n       needless_pass_by_value, clippy :: option_option, clippy ::\n       path_buf_push_overwrite, clippy :: ptr_as_ptr, clippy ::\n       ref_option_ref, clippy :: rest_pat_in_fully_bound_structs, clippy ::\n       same_functions_in_if_condition, clippy ::\n       semicolon_if_nothing_returned, clippy :: single_match_else, clippy ::\n       string_add_assign, clippy :: string_add, clippy :: string_lit_as_bytes,\n       clippy :: string_to_string, clippy :: todo, clippy ::\n       trait_duplication_in_bounds, clippy :: unimplemented, clippy ::\n       unnested_or_patterns, clippy :: unused_self, clippy ::\n       useless_transmute, clippy :: verbose_file_reads, clippy ::\n       zero_sized_map_values, future_incompatible, nonstandard_style,\n       rust_2018_idioms, rustdoc :: missing_crate_level_docs)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":447,"byte_end":2738,"line_start":11,"line_end":86,"column_start":1,"column_end":3}},{"value":"allow(clippy :: float_cmp)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":2739,"byte_end":2767,"line_start":87,"line_end":87,"column_start":1,"column_end":29}},{"value":"allow(clippy :: manual_range_contains)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":2768,"byte_end":2808,"line_start":88,"line_end":88,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7027,"byte_end":7043,"line_start":14,"line_end":14,"column_start":12,"column_end":28},"name":"CubicBezierShape","qualname":"::bezier::CubicBezierShape","value":"CubicBezierShape { points, closed, fill, stroke }","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369}],"decl_id":null,"docs":" A cubic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).","sig":null,"attributes":[{"value":"/ A cubic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":6777,"byte_end":6854,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":6855,"byte_end":6858,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ See also [`QuadraticBezierShape`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":6859,"byte_end":6897,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7201,"byte_end":7207,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"points","qualname":"::bezier::CubicBezierShape::points","value":"[emath::Pos2; 4]","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":" The first point is the starting point and the last one is the ending point of the curve.\n The middle points are the control points.\n","sig":null,"attributes":[{"value":"/ The first point is the starting point and the last one is the ending point of the curve.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7050,"byte_end":7142,"line_start":15,"line_end":15,"column_start":5,"column_end":97}},{"value":"/ The middle points are the control points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7147,"byte_end":7192,"line_start":16,"line_end":16,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7228,"byte_end":7234,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"name":"closed","qualname":"::bezier::CubicBezierShape::closed","value":"bool","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7251,"byte_end":7255,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"fill","qualname":"::bezier::CubicBezierShape::fill","value":"color::Color32","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7274,"byte_end":7280,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"name":"stroke","qualname":"::bezier::CubicBezierShape::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":1364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7551,"byte_end":7569,"line_start":29,"line_end":29,"column_start":12,"column_end":30},"name":"from_points_stroke","qualname":"<CubicBezierShape>::from_points_stroke","value":"pub fn from_points_stroke<impl Into<Stroke>: Into<Stroke>>([Pos2; ], bool,\n                                                           Color32,\n                                                           impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a cubic Bézier curve based on 4 points and stroke.","sig":null,"attributes":[{"value":"/ Creates a cubic Bézier curve based on 4 points and stroke.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7321,"byte_end":7384,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7389,"byte_end":7392,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The first point is the starting point and the last one is the ending point of the curve.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7397,"byte_end":7489,"line_start":27,"line_end":27,"column_start":5,"column_end":97}},{"value":"/ The middle points are the control points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7494,"byte_end":7539,"line_start":28,"line_end":28,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7884,"byte_end":7893,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"transform","qualname":"<CubicBezierShape>::transform","value":"pub fn transform(&Self, &RectTransform) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transform the curve with the given transform.\n","sig":null,"attributes":[{"value":"/ Transform the curve with the given transform.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7823,"byte_end":7872,"line_start":43,"line_end":43,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":8680,"byte_end":8694,"line_start":62,"line_end":62,"column_start":12,"column_end":26},"name":"to_path_shapes","qualname":"<CubicBezierShape>::to_path_shapes","value":"pub fn to_path_shapes(&Self, Option<f32>, Option<f32>) -> Vec<PathShape>","parent":null,"children":[],"decl_id":null,"docs":" Convert the cubic Bézier curve to one or two `PathShapes`.\n When the curve is closed and it has to intersect with the base line, it will be converted into two shapes.\n Otherwise, it will be converted into one shape.\n The `tolerance` will be used to control the max distance between the curve and the base line.\n The `epsilon` is used when comparing two floats.\n","sig":null,"attributes":[{"value":"/ Convert the cubic Bézier curve to one or two `PathShapes`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":8275,"byte_end":8338,"line_start":57,"line_end":57,"column_start":5,"column_end":67}},{"value":"/ When the curve is closed and it has to intersect with the base line, it will be converted into two shapes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":8343,"byte_end":8453,"line_start":58,"line_end":58,"column_start":5,"column_end":115}},{"value":"/ Otherwise, it will be converted into one shape.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":8458,"byte_end":8509,"line_start":59,"line_end":59,"column_start":5,"column_end":56}},{"value":"/ The `tolerance` will be used to control the max distance between the curve and the base line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":8514,"byte_end":8611,"line_start":60,"line_end":60,"column_start":5,"column_end":102}},{"value":"/ The `epsilon` is used when comparing two floats.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":8616,"byte_end":8668,"line_start":61,"line_end":61,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":9259,"byte_end":9279,"line_start":78,"line_end":78,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<CubicBezierShape>::visual_bounding_rect","value":"pub fn visual_bounding_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke width)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke width)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":9190,"byte_end":9247,"line_start":77,"line_end":77,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":9573,"byte_end":9594,"line_start":87,"line_end":87,"column_start":12,"column_end":33},"name":"logical_bounding_rect","qualname":"<CubicBezierShape>::logical_bounding_rect","value":"pub fn logical_bounding_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Logical bounding rectangle (ignoring stroke width)\n","sig":null,"attributes":[{"value":"/ Logical bounding rectangle (ignoring stroke width)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":9507,"byte_end":9561,"line_start":86,"line_end":86,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":11193,"byte_end":11204,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"split_range","qualname":"<CubicBezierShape>::split_range","value":"pub fn split_range(&Self, Range<f32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" split the original cubic curve into a new one within a range.\n","sig":null,"attributes":[{"value":"/ split the original cubic curve into a new one within a range.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":11116,"byte_end":11181,"line_start":140,"line_end":140,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":12761,"byte_end":12775,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"num_quadratics","qualname":"<CubicBezierShape>::num_quadratics","value":"pub fn num_quadratics(&Self, f32) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15828,"byte_end":15840,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"find_cross_t","qualname":"<CubicBezierShape>::find_cross_t","value":"pub fn find_cross_t(&Self, f32) -> Option<f32>","parent":null,"children":[],"decl_id":null,"docs":" Find out the t value for the point where the curve is intersected with the base line.\n The base line is the line from P0 to P3.\n If the curve only has two intersection points with the base line, they should be 0.0 and 1.0.\n In this case, the \"fill\" will be simple since the curve is a convex line.\n If the curve has more than two intersection points with the base line, the \"fill\" will be a problem.\n We need to find out where is the 3rd t value (0<t<1)\n And the original cubic curve will be split into two curves (0.0..t and t..1.0).\n B(t) = (1-t)^3*P0 + 3*t*(1-t)^2*P1 + 3*t^2*(1-t)*P2 + t^3*P3\n or B(t) = (P3 - 3*P2 + 3*P1 - P0)*t^3 + (3*P2 - 6*P1 + 3*P0)*t^2 + (3*P1 - 3*P0)*t + P0\n this B(t) should be on the line between P0 and P3. Therefore:\n (B.x - P0.x)/(P3.x - P0.x) = (B.y - P0.y)/(P3.y - P0.y), or:\n B.x * (P3.y - P0.y) - B.y * (P3.x - P0.x) + P0.x * (P0.y - P3.y) + P0.y * (P3.x - P0.x) = 0\n B.x = (P3.x - 3 * P2.x + 3 * P1.x - P0.x) * t^3 + (3 * P2.x - 6 * P1.x + 3 * P0.x) * t^2 + (3 * P1.x - 3 * P0.x) * t + P0.x\n B.y = (P3.y - 3 * P2.y + 3 * P1.y - P0.y) * t^3 + (3 * P2.y - 6 * P1.y + 3 * P0.y) * t^2 + (3 * P1.y - 3 * P0.y) * t + P0.y\n Combine the above three equations and iliminate B.x and B.y, we get:\n t^3 * ( (P3.x - 3*P2.x + 3*P1.x - P0.x) * (P3.y - P0.y) - (P3.y - 3*P2.y + 3*P1.y - P0.y) * (P3.x - P0.x))\n + t^2 * ( (3 * P2.x - 6 * P1.x + 3 * P0.x) * (P3.y - P0.y) - (3 * P2.y - 6 * P1.y + 3 * P0.y) * (P3.x - P0.x))\n + t^1 * ( (3 * P1.x - 3 * P0.x) * (P3.y - P0.y) - (3 * P1.y - 3 * P0.y) * (P3.x - P0.x))\n + (P0.x * (P3.y - P0.y) - P0.y * (P3.x - P0.x)) + P0.x * (P0.y - P3.y) + P0.y * (P3.x - P0.x)\n = 0\n or a * t^3 + b * t^2 + c * t + d = 0","sig":null,"attributes":[{"value":"/ Find out the t value for the point where the curve is intersected with the base line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":13294,"byte_end":13383,"line_start":192,"line_end":192,"column_start":5,"column_end":94}},{"value":"/ The base line is the line from P0 to P3.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":13388,"byte_end":13432,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"/ If the curve only has two intersection points with the base line, they should be 0.0 and 1.0.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":13437,"byte_end":13534,"line_start":194,"line_end":194,"column_start":5,"column_end":102}},{"value":"/ In this case, the \"fill\" will be simple since the curve is a convex line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":13539,"byte_end":13616,"line_start":195,"line_end":195,"column_start":5,"column_end":82}},{"value":"/ If the curve has more than two intersection points with the base line, the \"fill\" will be a problem.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":13621,"byte_end":13725,"line_start":196,"line_end":196,"column_start":5,"column_end":109}},{"value":"/ We need to find out where is the 3rd t value (0<t<1)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":13730,"byte_end":13786,"line_start":197,"line_end":197,"column_start":5,"column_end":61}},{"value":"/ And the original cubic curve will be split into two curves (0.0..t and t..1.0).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":13791,"byte_end":13874,"line_start":198,"line_end":198,"column_start":5,"column_end":88}},{"value":"/ B(t) = (1-t)^3*P0 + 3*t*(1-t)^2*P1 + 3*t^2*(1-t)*P2 + t^3*P3","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":13879,"byte_end":13943,"line_start":199,"line_end":199,"column_start":5,"column_end":69}},{"value":"/ or B(t) = (P3 - 3*P2 + 3*P1 - P0)*t^3 + (3*P2 - 6*P1 + 3*P0)*t^2 + (3*P1 - 3*P0)*t + P0","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":13948,"byte_end":14039,"line_start":200,"line_end":200,"column_start":5,"column_end":96}},{"value":"/ this B(t) should be on the line between P0 and P3. Therefore:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":14044,"byte_end":14109,"line_start":201,"line_end":201,"column_start":5,"column_end":70}},{"value":"/ (B.x - P0.x)/(P3.x - P0.x) = (B.y - P0.y)/(P3.y - P0.y), or:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":14114,"byte_end":14178,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ B.x * (P3.y - P0.y) - B.y * (P3.x - P0.x) + P0.x * (P0.y - P3.y) + P0.y * (P3.x - P0.x) = 0","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":14183,"byte_end":14278,"line_start":203,"line_end":203,"column_start":5,"column_end":100}},{"value":"/ B.x = (P3.x - 3 * P2.x + 3 * P1.x - P0.x) * t^3 + (3 * P2.x - 6 * P1.x + 3 * P0.x) * t^2 + (3 * P1.x - 3 * P0.x) * t + P0.x","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":14283,"byte_end":14410,"line_start":204,"line_end":204,"column_start":5,"column_end":132}},{"value":"/ B.y = (P3.y - 3 * P2.y + 3 * P1.y - P0.y) * t^3 + (3 * P2.y - 6 * P1.y + 3 * P0.y) * t^2 + (3 * P1.y - 3 * P0.y) * t + P0.y","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":14415,"byte_end":14542,"line_start":205,"line_end":205,"column_start":5,"column_end":132}},{"value":"/ Combine the above three equations and iliminate B.x and B.y, we get:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":14547,"byte_end":14619,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ t^3 * ( (P3.x - 3*P2.x + 3*P1.x - P0.x) * (P3.y - P0.y) - (P3.y - 3*P2.y + 3*P1.y - P0.y) * (P3.x - P0.x))","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":14624,"byte_end":14734,"line_start":207,"line_end":207,"column_start":5,"column_end":115}},{"value":"/ + t^2 * ( (3 * P2.x - 6 * P1.x + 3 * P0.x) * (P3.y - P0.y) - (3 * P2.y - 6 * P1.y + 3 * P0.y) * (P3.x - P0.x))","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":14739,"byte_end":14853,"line_start":208,"line_end":208,"column_start":5,"column_end":119}},{"value":"/ + t^1 * ( (3 * P1.x - 3 * P0.x) * (P3.y - P0.y) - (3 * P1.y - 3 * P0.y) * (P3.x - P0.x))","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":14858,"byte_end":14950,"line_start":209,"line_end":209,"column_start":5,"column_end":97}},{"value":"/ + (P0.x * (P3.y - P0.y) - P0.y * (P3.x - P0.x)) + P0.x * (P0.y - P3.y) + P0.y * (P3.x - P0.x)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":14955,"byte_end":15052,"line_start":210,"line_end":210,"column_start":5,"column_end":102}},{"value":"/ = 0","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15057,"byte_end":15064,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ or a * t^3 + b * t^2 + c * t + d = 0","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15069,"byte_end":15109,"line_start":212,"line_end":212,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15114,"byte_end":15117,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let x = t - b / (3 * a), then we have:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15122,"byte_end":15164,"line_start":214,"line_end":214,"column_start":5,"column_end":47}},{"value":"/ x^3 + p * x + q = 0, where:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15169,"byte_end":15200,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/ p = (3.0 * a * c - b^2) / (3.0 * a^2)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15205,"byte_end":15246,"line_start":216,"line_end":216,"column_start":5,"column_end":46}},{"value":"/ q = (2.0 * b^3 - 9.0 * a * b * c + 27.0 * a^2 * d) / (27.0 * a^3)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15251,"byte_end":15320,"line_start":217,"line_end":217,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15325,"byte_end":15328,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ when p > 0, there will be one real root, two complex roots","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15333,"byte_end":15395,"line_start":219,"line_end":219,"column_start":5,"column_end":67}},{"value":"/ when p = 0, there will be two real roots, when p=q=0, there will be three real roots but all 0.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15400,"byte_end":15499,"line_start":220,"line_end":220,"column_start":5,"column_end":104}},{"value":"/ when p < 0, there will be three unique real roots. this is what we need. (x1, x2, x3)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15504,"byte_end":15593,"line_start":221,"line_end":221,"column_start":5,"column_end":94}},{"value":"/  t = x + b / (3 * a), then we have: t1, t2, t3.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15598,"byte_end":15649,"line_start":222,"line_end":222,"column_start":5,"column_end":56}},{"value":"/ the one between 0.0 and 1.0 is what we need.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15654,"byte_end":15702,"line_start":223,"line_end":223,"column_start":5,"column_end":53}},{"value":"/ <`https://baike.baidu.com/item/%E4%B8%80%E5%85%83%E4%B8%89%E6%AC%A1%E6%96%B9%E7%A8%8B/8388473 /`>","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15707,"byte_end":15808,"line_start":224,"line_end":224,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":15813,"byte_end":15816,"line_start":225,"line_end":225,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":17631,"byte_end":17637,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"sample","qualname":"<CubicBezierShape>::sample","value":"pub fn sample(&Self, f32) -> Pos2","parent":null,"children":[],"decl_id":null,"docs":" Calculate the point (x,y) at t based on the cubic Bézier curve equation.\n t is in [0.0,1.0]\n [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Cubic_B.C3.A9zier_curves)","sig":null,"attributes":[{"value":"/ Calculate the point (x,y) at t based on the cubic Bézier curve equation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":17410,"byte_end":17487,"line_start":268,"line_end":268,"column_start":5,"column_end":81}},{"value":"/ t is in [0.0,1.0]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":17492,"byte_end":17513,"line_start":269,"line_end":269,"column_start":5,"column_end":26}},{"value":"/ [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Cubic_B.C3.A9zier_curves)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":17518,"byte_end":17611,"line_start":270,"line_end":270,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":17616,"byte_end":17619,"line_start":271,"line_end":271,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":18376,"byte_end":18383,"line_start":293,"line_end":293,"column_start":12,"column_end":19},"name":"flatten","qualname":"<CubicBezierShape>::flatten","value":"pub fn flatten(&Self, Option<f32>) -> Vec<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" find a set of points that approximate the cubic Bézier curve.\n the number of points is determined by the tolerance.\n the points may not be evenly distributed in the range [0.0,1.0] (t value)\n","sig":null,"attributes":[{"value":"/ find a set of points that approximate the cubic Bézier curve.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":18155,"byte_end":18221,"line_start":290,"line_end":290,"column_start":5,"column_end":70}},{"value":"/ the number of points is determined by the tolerance.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":18226,"byte_end":18282,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"/ the points may not be evenly distributed in the range [0.0,1.0] (t value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":18287,"byte_end":18364,"line_start":292,"line_end":292,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":19176,"byte_end":19190,"line_start":308,"line_end":308,"column_start":12,"column_end":26},"name":"flatten_closed","qualname":"<CubicBezierShape>::flatten_closed","value":"pub fn flatten_closed(&Self, Option<f32>, Option<f32>) -> Vec<Vec<Pos2>>","parent":null,"children":[],"decl_id":null,"docs":" find a set of points that approximate the cubic Bézier curve.\n the number of points is determined by the tolerance.\n the points may not be evenly distributed in the range [0.0,1.0] (t value)\n this api will check whether the curve will cross the base line or not when closed = true.\n The result will be a vec of vec of Pos2. it will store two closed aren in different vec.\n The epsilon is used to compare a float value.\n","sig":null,"attributes":[{"value":"/ find a set of points that approximate the cubic Bézier curve.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":18706,"byte_end":18772,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/ the number of points is determined by the tolerance.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":18777,"byte_end":18833,"line_start":303,"line_end":303,"column_start":5,"column_end":61}},{"value":"/ the points may not be evenly distributed in the range [0.0,1.0] (t value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":18838,"byte_end":18915,"line_start":304,"line_end":304,"column_start":5,"column_end":82}},{"value":"/ this api will check whether the curve will cross the base line or not when closed = true.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":18920,"byte_end":19013,"line_start":305,"line_end":305,"column_start":5,"column_end":98}},{"value":"/ The result will be a vec of vec of Pos2. it will store two closed aren in different vec.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":19018,"byte_end":19110,"line_start":306,"line_end":306,"column_start":5,"column_end":97}},{"value":"/ The epsilon is used to compare a float value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":19115,"byte_end":19164,"line_start":307,"line_end":307,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":21274,"byte_end":21299,"line_start":358,"line_end":358,"column_start":12,"column_end":37},"name":"for_each_flattened_with_t","qualname":"<CubicBezierShape>::for_each_flattened_with_t","value":"pub fn for_each_flattened_with_t<F: FnMut(Pos2, f32) ->\n                                 ()>(&Self, f32, &mut F)","parent":null,"children":[],"decl_id":null,"docs":" Iterates through the curve invoking a callback at each point.\n","sig":null,"attributes":[{"value":"/ Iterates through the curve invoking a callback at each point.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":21197,"byte_end":21262,"line_start":357,"line_end":357,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":21919,"byte_end":21939,"line_start":377,"line_end":377,"column_start":12,"column_end":32},"name":"QuadraticBezierShape","qualname":"::bezier::QuadraticBezierShape","value":"QuadraticBezierShape { points, closed, fill, stroke }","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385}],"decl_id":null,"docs":" A quadratic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).","sig":null,"attributes":[{"value":"/ A quadratic [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":21669,"byte_end":21750,"line_start":372,"line_end":372,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":21751,"byte_end":21754,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ See also [`CubicBezierShape`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":21755,"byte_end":21789,"line_start":374,"line_end":374,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22095,"byte_end":22101,"line_start":380,"line_end":380,"column_start":9,"column_end":15},"name":"points","qualname":"::bezier::QuadraticBezierShape::points","value":"[emath::Pos2; 3]","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" The first point is the starting point and the last one is the ending point of the curve.\n The middle point is the control points.\n","sig":null,"attributes":[{"value":"/ The first point is the starting point and the last one is the ending point of the curve.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":21946,"byte_end":22038,"line_start":378,"line_end":378,"column_start":5,"column_end":97}},{"value":"/ The middle point is the control points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22043,"byte_end":22086,"line_start":379,"line_end":379,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22122,"byte_end":22128,"line_start":381,"line_end":381,"column_start":9,"column_end":15},"name":"closed","qualname":"::bezier::QuadraticBezierShape::closed","value":"bool","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22145,"byte_end":22149,"line_start":383,"line_end":383,"column_start":9,"column_end":13},"name":"fill","qualname":"::bezier::QuadraticBezierShape::fill","value":"color::Color32","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22168,"byte_end":22174,"line_start":384,"line_end":384,"column_start":9,"column_end":15},"name":"stroke","qualname":"::bezier::QuadraticBezierShape::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22522,"byte_end":22540,"line_start":393,"line_end":393,"column_start":12,"column_end":30},"name":"from_points_stroke","qualname":"<QuadraticBezierShape>::from_points_stroke","value":"pub fn from_points_stroke<impl Into<Stroke>: Into<Stroke>>([Pos2; ], bool,\n                                                           Color32,\n                                                           impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new quadratic Bézier shape based on the 3 points and stroke.","sig":null,"attributes":[{"value":"/ Create a new quadratic Bézier shape based on the 3 points and stroke.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22219,"byte_end":22293,"line_start":388,"line_end":388,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22298,"byte_end":22301,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The first point is the starting point and the last one is the ending point of the curve.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22306,"byte_end":22398,"line_start":390,"line_end":390,"column_start":5,"column_end":97}},{"value":"/ The middle point is the control points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22403,"byte_end":22446,"line_start":391,"line_end":391,"column_start":5,"column_end":48}},{"value":"/ The points should be in the order [start, control, end]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22451,"byte_end":22510,"line_start":392,"line_end":392,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22871,"byte_end":22880,"line_start":408,"line_end":408,"column_start":12,"column_end":21},"name":"transform","qualname":"<QuadraticBezierShape>::transform","value":"pub fn transform(&Self, &RectTransform) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transform the curve with the given transform.\n","sig":null,"attributes":[{"value":"/ Transform the curve with the given transform.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22810,"byte_end":22859,"line_start":407,"line_end":407,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":23439,"byte_end":23452,"line_start":423,"line_end":423,"column_start":12,"column_end":25},"name":"to_path_shape","qualname":"<QuadraticBezierShape>::to_path_shape","value":"pub fn to_path_shape(&Self, Option<f32>) -> PathShape","parent":null,"children":[],"decl_id":null,"docs":" Convert the quadratic Bézier curve to one `PathShape`.\n The `tolerance` will be used to control the max distance between the curve and the base line.\n","sig":null,"attributes":[{"value":"/ Convert the quadratic Bézier curve to one `PathShape`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":23266,"byte_end":23325,"line_start":421,"line_end":421,"column_start":5,"column_end":63}},{"value":"/ The `tolerance` will be used to control the max distance between the curve and the base line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":23330,"byte_end":23427,"line_start":422,"line_end":422,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":23770,"byte_end":23790,"line_start":434,"line_end":434,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<QuadraticBezierShape>::visual_bounding_rect","value":"pub fn visual_bounding_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke width)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke width)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":23701,"byte_end":23758,"line_start":433,"line_end":433,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":24084,"byte_end":24105,"line_start":443,"line_end":443,"column_start":12,"column_end":33},"name":"logical_bounding_rect","qualname":"<QuadraticBezierShape>::logical_bounding_rect","value":"pub fn logical_bounding_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Logical bounding rectangle (ignoring stroke width)\n","sig":null,"attributes":[{"value":"/ Logical bounding rectangle (ignoring stroke width)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":24018,"byte_end":24072,"line_start":442,"line_end":442,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":25659,"byte_end":25665,"line_start":495,"line_end":495,"column_start":12,"column_end":18},"name":"sample","qualname":"<QuadraticBezierShape>::sample","value":"pub fn sample(&Self, f32) -> Pos2","parent":null,"children":[],"decl_id":null,"docs":" Calculate the point (x,y) at t based on the quadratic Bézier curve equation.\n t is in [0.0,1.0]\n [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Quadratic_B.C3.A9zier_curves)","sig":null,"attributes":[{"value":"/ Calculate the point (x,y) at t based on the quadratic Bézier curve equation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":25430,"byte_end":25511,"line_start":491,"line_end":491,"column_start":5,"column_end":85}},{"value":"/ t is in [0.0,1.0]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":25516,"byte_end":25537,"line_start":492,"line_end":492,"column_start":5,"column_end":26}},{"value":"/ [Bézier Curve](https://en.wikipedia.org/wiki/B%C3%A9zier_curve#Quadratic_B.C3.A9zier_curves)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":25542,"byte_end":25639,"line_start":493,"line_end":493,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":25644,"byte_end":25647,"line_start":494,"line_end":494,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26320,"byte_end":26327,"line_start":514,"line_end":514,"column_start":12,"column_end":19},"name":"flatten","qualname":"<QuadraticBezierShape>::flatten","value":"pub fn flatten(&Self, Option<f32>) -> Vec<Pos2>","parent":null,"children":[],"decl_id":null,"docs":" find a set of points that approximate the quadratic Bézier curve.\n the number of points is determined by the tolerance.\n the points may not be evenly distributed in the range [0.0,1.0] (t value)\n","sig":null,"attributes":[{"value":"/ find a set of points that approximate the quadratic Bézier curve.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26095,"byte_end":26165,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/ the number of points is determined by the tolerance.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26170,"byte_end":26226,"line_start":512,"line_end":512,"column_start":5,"column_end":61}},{"value":"/ the points may not be evenly distributed in the range [0.0,1.0] (t value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26231,"byte_end":26308,"line_start":513,"line_end":513,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":27071,"byte_end":27096,"line_start":531,"line_end":531,"column_start":12,"column_end":37},"name":"for_each_flattened_with_t","qualname":"<QuadraticBezierShape>::for_each_flattened_with_t","value":"pub fn for_each_flattened_with_t<F>(&Self, f32, &mut F) where\nF: FnMut(Pos2, f32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Compute a flattened approximation of the curve, invoking a callback at\n each step.","sig":null,"attributes":[{"value":"/ Compute a flattened approximation of the curve, invoking a callback at","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26713,"byte_end":26787,"line_start":524,"line_end":524,"column_start":5,"column_end":79}},{"value":"/ each step.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26792,"byte_end":26806,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26811,"byte_end":26814,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ The callback takes the point and corresponding curve parameter at each step.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26819,"byte_end":26899,"line_start":527,"line_end":527,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26904,"byte_end":26907,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This implements the algorithm described by Raph Levien at","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26912,"byte_end":26973,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/ <https://raphlinus.github.io/graphics/curves/2019/12/23/flatten-quadbez.html>","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":26978,"byte_end":27059,"line_start":530,"line_end":530,"column_start":5,"column_end":86}}]},{"kind":"Mod","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"color","qualname":"::color","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":1426},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1439},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":1452},{"krate":0,"index":1456},{"krate":0,"index":1463},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1476},{"krate":0,"index":1440},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":1477},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":198},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":1493},{"krate":0,"index":1498},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1503},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":249}],"decl_id":null,"docs":" Color conversions and types.","sig":null,"attributes":[{"value":"/ Color conversions and types.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":45803,"byte_end":45835,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":45836,"byte_end":45839,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ If you want a compact color representation, use [`Color32`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":45840,"byte_end":45904,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ If you want to manipulate RGBA colors use [`Rgba`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":45905,"byte_end":45960,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/ If you want to manipulate colors in a way closer to how humans think about colors, use [`HsvaGamma`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":45961,"byte_end":46066,"line_start":5,"line_end":5,"column_start":1,"column_end":106}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46068,"byte_end":46108,"line_start":7,"line_end":7,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46668,"byte_end":46675,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Color32","qualname":"::color::Color32","value":"","parent":null,"children":[],"decl_id":null,"docs":" This format is used for space-efficient color representation (32 bits).","sig":null,"attributes":[{"value":"/ This format is used for space-efficient color representation (32 bits).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46110,"byte_end":46185,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46186,"byte_end":46189,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Instead of manipulating this directly it is often better","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46190,"byte_end":46250,"line_start":11,"line_end":11,"column_start":1,"column_end":61}},{"value":"/ to first convert it to either [`Rgba`] or [`Hsva`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46251,"byte_end":46306,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46307,"byte_end":46310,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Internally this uses 0-255 gamma space `sRGBA` color with premultiplied alpha.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46311,"byte_end":46393,"line_start":14,"line_end":14,"column_start":1,"column_end":83}},{"value":"/ Alpha channel is in linear space.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46394,"byte_end":46431,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46432,"byte_end":46442,"line_start":16,"line_end":16,"column_start":1,"column_end":11}}]},{"kind":"Const","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47081,"byte_end":47092,"line_start":41,"line_end":41,"column_start":15,"column_end":26},"name":"TRANSPARENT","qualname":"::color::Color32::TRANSPARENT","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47164,"byte_end":47169,"line_start":42,"line_end":42,"column_start":15,"column_end":20},"name":"BLACK","qualname":"::color::Color32::BLACK","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47223,"byte_end":47232,"line_start":43,"line_end":43,"column_start":15,"column_end":24},"name":"DARK_GRAY","qualname":"::color::Color32::DARK_GRAY","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47289,"byte_end":47293,"line_start":44,"line_end":44,"column_start":15,"column_end":19},"name":"GRAY","qualname":"::color::Color32::GRAY","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47353,"byte_end":47363,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"name":"LIGHT_GRAY","qualname":"::color::Color32::LIGHT_GRAY","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47423,"byte_end":47428,"line_start":46,"line_end":46,"column_start":15,"column_end":20},"name":"WHITE","qualname":"::color::Color32::WHITE","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47489,"byte_end":47494,"line_start":48,"line_end":48,"column_start":15,"column_end":20},"name":"BROWN","qualname":"::color::Color32::BROWN","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47552,"byte_end":47560,"line_start":49,"line_end":49,"column_start":15,"column_end":23},"name":"DARK_RED","qualname":"::color::Color32::DARK_RED","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47617,"byte_end":47620,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"RED","qualname":"::color::Color32::RED","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47676,"byte_end":47685,"line_start":51,"line_end":51,"column_start":15,"column_end":24},"name":"LIGHT_RED","qualname":"::color::Color32::LIGHT_RED","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47746,"byte_end":47752,"line_start":53,"line_end":53,"column_start":15,"column_end":21},"name":"YELLOW","qualname":"::color::Color32::YELLOW","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47810,"byte_end":47822,"line_start":54,"line_end":54,"column_start":15,"column_end":27},"name":"LIGHT_YELLOW","qualname":"::color::Color32::LIGHT_YELLOW","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47883,"byte_end":47888,"line_start":55,"line_end":55,"column_start":15,"column_end":20},"name":"KHAKI","qualname":"::color::Color32::KHAKI","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47949,"byte_end":47959,"line_start":57,"line_end":57,"column_start":15,"column_end":25},"name":"DARK_GREEN","qualname":"::color::Color32::DARK_GREEN","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48016,"byte_end":48021,"line_start":58,"line_end":58,"column_start":15,"column_end":20},"name":"GREEN","qualname":"::color::Color32::GREEN","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48077,"byte_end":48088,"line_start":59,"line_end":59,"column_start":15,"column_end":26},"name":"LIGHT_GREEN","qualname":"::color::Color32::LIGHT_GREEN","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48152,"byte_end":48161,"line_start":61,"line_end":61,"column_start":15,"column_end":24},"name":"DARK_BLUE","qualname":"::color::Color32::DARK_BLUE","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48218,"byte_end":48222,"line_start":62,"line_end":62,"column_start":15,"column_end":19},"name":"BLUE","qualname":"::color::Color32::BLUE","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48278,"byte_end":48288,"line_start":63,"line_end":63,"column_start":15,"column_end":25},"name":"LIGHT_BLUE","qualname":"::color::Color32::LIGHT_BLUE","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48352,"byte_end":48356,"line_start":65,"line_end":65,"column_start":15,"column_end":19},"name":"GOLD","qualname":"::color::Color32::GOLD","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48415,"byte_end":48426,"line_start":67,"line_end":67,"column_start":15,"column_end":26},"name":"DEBUG_COLOR","qualname":"::color::Color32::DEBUG_COLOR","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48588,"byte_end":48603,"line_start":70,"line_end":70,"column_start":15,"column_end":30},"name":"TEMPORARY_COLOR","qualname":"::color::Color32::TEMPORARY_COLOR","value":"Color32","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" An ugly color that is planned to be replaced before making it to the screen.\n","sig":null,"attributes":[{"value":"/ An ugly color that is planned to be replaced before making it to the screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48493,"byte_end":48573,"line_start":69,"line_end":69,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48686,"byte_end":48694,"line_start":73,"line_end":73,"column_start":18,"column_end":26},"name":"from_rgb","qualname":"<Color32>::from_rgb","value":"pub const fn from_rgb(u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48651,"byte_end":48668,"line_start":72,"line_end":72,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48801,"byte_end":48818,"line_start":78,"line_end":78,"column_start":18,"column_end":35},"name":"from_rgb_additive","qualname":"<Color32>::from_rgb_additive","value":"pub const fn from_rgb_additive(u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48766,"byte_end":48783,"line_start":77,"line_end":77,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48970,"byte_end":48993,"line_start":84,"line_end":84,"column_start":18,"column_end":41},"name":"from_rgba_premultiplied","qualname":"<Color32>::from_rgba_premultiplied","value":"pub const fn from_rgba_premultiplied(u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From `sRGBA` with premultiplied alpha.\n","sig":null,"attributes":[{"value":"/ From `sRGBA` with premultiplied alpha.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48888,"byte_end":48930,"line_start":82,"line_end":82,"column_start":5,"column_end":47}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":48935,"byte_end":48952,"line_start":83,"line_end":83,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":49127,"byte_end":49149,"line_start":89,"line_end":89,"column_start":12,"column_end":34},"name":"from_rgba_unmultiplied","qualname":"<Color32>::from_rgba_unmultiplied","value":"pub fn from_rgba_unmultiplied(u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From `sRGBA` WITHOUT premultiplied alpha.\n","sig":null,"attributes":[{"value":"/ From `sRGBA` WITHOUT premultiplied alpha.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":49070,"byte_end":49115,"line_start":88,"line_end":88,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":49884,"byte_end":49893,"line_start":109,"line_end":109,"column_start":18,"column_end":27},"name":"from_gray","qualname":"<Color32>::from_gray","value":"pub const fn from_gray(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":49849,"byte_end":49866,"line_start":108,"line_end":108,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":49986,"byte_end":50002,"line_start":114,"line_end":114,"column_start":18,"column_end":34},"name":"from_black_alpha","qualname":"<Color32>::from_black_alpha","value":"pub const fn from_black_alpha(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":49951,"byte_end":49968,"line_start":113,"line_end":113,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50065,"byte_end":50081,"line_start":118,"line_end":118,"column_start":12,"column_end":28},"name":"from_white_alpha","qualname":"<Color32>::from_white_alpha","value":"pub fn from_white_alpha(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50213,"byte_end":50236,"line_start":123,"line_end":123,"column_start":18,"column_end":41},"name":"from_additive_luminance","qualname":"<Color32>::from_additive_luminance","value":"pub const fn from_additive_luminance(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50178,"byte_end":50195,"line_start":122,"line_end":122,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50321,"byte_end":50330,"line_start":128,"line_end":128,"column_start":12,"column_end":21},"name":"is_opaque","qualname":"<Color32>::is_opaque","value":"pub fn is_opaque(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50292,"byte_end":50309,"line_start":127,"line_end":127,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50412,"byte_end":50413,"line_start":133,"line_end":133,"column_start":12,"column_end":13},"name":"r","qualname":"<Color32>::r","value":"pub fn r(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50383,"byte_end":50400,"line_start":132,"line_end":132,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50487,"byte_end":50488,"line_start":138,"line_end":138,"column_start":12,"column_end":13},"name":"g","qualname":"<Color32>::g","value":"pub fn g(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50458,"byte_end":50475,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50562,"byte_end":50563,"line_start":143,"line_end":143,"column_start":12,"column_end":13},"name":"b","qualname":"<Color32>::b","value":"pub fn b(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50533,"byte_end":50550,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50637,"byte_end":50638,"line_start":148,"line_end":148,"column_start":12,"column_end":13},"name":"a","qualname":"<Color32>::a","value":"pub fn a(&Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50608,"byte_end":50625,"line_start":147,"line_end":147,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50732,"byte_end":50741,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"to_opaque","qualname":"<Color32>::to_opaque","value":"pub fn to_opaque(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an opaque version of self\n","sig":null,"attributes":[{"value":"/ Returns an opaque version of self","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50683,"byte_end":50720,"line_start":152,"line_end":152,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50886,"byte_end":50894,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"additive","qualname":"<Color32>::additive","value":"pub fn additive(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an additive version of self\n","sig":null,"attributes":[{"value":"/ Returns an additive version of self","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50813,"byte_end":50852,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50857,"byte_end":50874,"line_start":158,"line_end":158,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":51049,"byte_end":51057,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Color32>::to_array","value":"pub fn to_array(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Premultiplied RGBA\n","sig":null,"attributes":[{"value":"/ Premultiplied RGBA","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":50993,"byte_end":51015,"line_start":164,"line_end":164,"column_start":5,"column_end":27}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":51020,"byte_end":51037,"line_start":165,"line_end":165,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":51194,"byte_end":51202,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Color32>::to_tuple","value":"pub fn to_tuple(&Self) -> (u8, u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Premultiplied RGBA\n","sig":null,"attributes":[{"value":"/ Premultiplied RGBA","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":51138,"byte_end":51160,"line_start":170,"line_end":170,"column_start":5,"column_end":27}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":51165,"byte_end":51182,"line_start":171,"line_end":171,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":51299,"byte_end":51320,"line_start":176,"line_end":176,"column_start":12,"column_end":33},"name":"to_srgba_unmultiplied","qualname":"<Color32>::to_srgba_unmultiplied","value":"pub fn to_srgba_unmultiplied(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":51465,"byte_end":51480,"line_start":181,"line_end":181,"column_start":12,"column_end":27},"name":"linear_multiply","qualname":"<Color32>::linear_multiply","value":"pub fn linear_multiply(Self, f32) -> Color32","parent":null,"children":[],"decl_id":null,"docs":" Multiply with 0.5 to make color half as opaque.\n","sig":null,"attributes":[{"value":"/ Multiply with 0.5 to make color half as opaque.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":51402,"byte_end":51453,"line_start":180,"line_end":180,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52148,"byte_end":52152,"line_start":196,"line_end":196,"column_start":12,"column_end":16},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":" 0-1 linear space `RGBA` color with premultiplied alpha.\n","sig":null,"attributes":[{"value":"/ 0-1 linear space `RGBA` color with premultiplied alpha.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":51862,"byte_end":51921,"line_start":191,"line_end":191,"column_start":1,"column_end":60}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":51922,"byte_end":51932,"line_start":192,"line_end":192,"column_start":1,"column_end":11}}]},{"kind":"Const","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52841,"byte_end":52852,"line_start":226,"line_end":226,"column_start":15,"column_end":26},"name":"TRANSPARENT","qualname":"::color::Rgba::TRANSPARENT","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52926,"byte_end":52931,"line_start":227,"line_end":227,"column_start":15,"column_end":20},"name":"BLACK","qualname":"::color::Rgba::BLACK","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52985,"byte_end":52990,"line_start":228,"line_end":228,"column_start":15,"column_end":20},"name":"WHITE","qualname":"::color::Rgba::WHITE","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53044,"byte_end":53047,"line_start":229,"line_end":229,"column_start":15,"column_end":18},"name":"RED","qualname":"::color::Rgba::RED","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53101,"byte_end":53106,"line_start":230,"line_end":230,"column_start":15,"column_end":20},"name":"GREEN","qualname":"::color::Rgba::GREEN","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":150},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53160,"byte_end":53164,"line_start":231,"line_end":231,"column_start":15,"column_end":19},"name":"BLUE","qualname":"::color::Rgba::BLUE","value":"Rgba","parent":{"krate":0,"index":144},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53244,"byte_end":53267,"line_start":234,"line_end":234,"column_start":18,"column_end":41},"name":"from_rgba_premultiplied","qualname":"<Rgba>::from_rgba_premultiplied","value":"pub const fn from_rgba_premultiplied(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53209,"byte_end":53226,"line_start":233,"line_end":233,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53377,"byte_end":53399,"line_start":239,"line_end":239,"column_start":12,"column_end":34},"name":"from_rgba_unmultiplied","qualname":"<Rgba>::from_rgba_unmultiplied","value":"pub fn from_rgba_unmultiplied(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53348,"byte_end":53365,"line_start":238,"line_end":238,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53521,"byte_end":53545,"line_start":244,"line_end":244,"column_start":12,"column_end":36},"name":"from_srgba_premultiplied","qualname":"<Rgba>::from_srgba_premultiplied","value":"pub fn from_srgba_premultiplied(u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53492,"byte_end":53509,"line_start":243,"line_end":243,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53855,"byte_end":53878,"line_start":253,"line_end":253,"column_start":12,"column_end":35},"name":"from_srgba_unmultiplied","qualname":"<Rgba>::from_srgba_unmultiplied","value":"pub fn from_srgba_unmultiplied(u8, u8, u8, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":53826,"byte_end":53843,"line_start":252,"line_end":252,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54206,"byte_end":54214,"line_start":262,"line_end":262,"column_start":18,"column_end":26},"name":"from_rgb","qualname":"<Rgba>::from_rgb","value":"pub const fn from_rgb(f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54171,"byte_end":54188,"line_start":261,"line_end":261,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54324,"byte_end":54333,"line_start":267,"line_end":267,"column_start":18,"column_end":27},"name":"from_gray","qualname":"<Rgba>::from_gray","value":"pub const fn from_gray(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54289,"byte_end":54306,"line_start":266,"line_end":266,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54399,"byte_end":54419,"line_start":271,"line_end":271,"column_start":12,"column_end":32},"name":"from_luminance_alpha","qualname":"<Rgba>::from_luminance_alpha","value":"pub fn from_luminance_alpha(f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54657,"byte_end":54673,"line_start":279,"line_end":279,"column_start":12,"column_end":28},"name":"from_black_alpha","qualname":"<Rgba>::from_black_alpha","value":"pub fn from_black_alpha(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transparent black\n","sig":null,"attributes":[{"value":"/ Transparent black","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54602,"byte_end":54623,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54628,"byte_end":54645,"line_start":278,"line_end":278,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54844,"byte_end":54860,"line_start":286,"line_end":286,"column_start":12,"column_end":28},"name":"from_white_alpha","qualname":"<Rgba>::from_white_alpha","value":"pub fn from_white_alpha(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transparent white\n","sig":null,"attributes":[{"value":"/ Transparent white","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54789,"byte_end":54810,"line_start":284,"line_end":284,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54815,"byte_end":54832,"line_start":285,"line_end":285,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55060,"byte_end":55068,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"additive","qualname":"<Rgba>::additive","value":"pub fn additive(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return an additive version of this color (alpha = 0)\n","sig":null,"attributes":[{"value":"/ Return an additive version of this color (alpha = 0)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":54970,"byte_end":55026,"line_start":291,"line_end":291,"column_start":5,"column_end":61}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55031,"byte_end":55048,"line_start":292,"line_end":292,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55248,"byte_end":55256,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"multiply","qualname":"<Rgba>::multiply","value":"pub fn multiply(Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiply with e.g. 0.5 to make us half transparent\n","sig":null,"attributes":[{"value":"/ Multiply with e.g. 0.5 to make us half transparent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55160,"byte_end":55214,"line_start":298,"line_end":298,"column_start":5,"column_end":59}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55219,"byte_end":55236,"line_start":299,"line_end":299,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55467,"byte_end":55468,"line_start":310,"line_end":310,"column_start":12,"column_end":13},"name":"r","qualname":"<Rgba>::r","value":"pub fn r(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55438,"byte_end":55455,"line_start":309,"line_end":309,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55543,"byte_end":55544,"line_start":315,"line_end":315,"column_start":12,"column_end":13},"name":"g","qualname":"<Rgba>::g","value":"pub fn g(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55514,"byte_end":55531,"line_start":314,"line_end":314,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55619,"byte_end":55620,"line_start":320,"line_end":320,"column_start":12,"column_end":13},"name":"b","qualname":"<Rgba>::b","value":"pub fn b(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55590,"byte_end":55607,"line_start":319,"line_end":319,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55695,"byte_end":55696,"line_start":325,"line_end":325,"column_start":12,"column_end":13},"name":"a","qualname":"<Rgba>::a","value":"pub fn a(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55666,"byte_end":55683,"line_start":324,"line_end":324,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55819,"byte_end":55828,"line_start":331,"line_end":331,"column_start":12,"column_end":21},"name":"intensity","qualname":"<Rgba>::intensity","value":"pub fn intensity(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" How perceptually intense (bright) is the color?\n","sig":null,"attributes":[{"value":"/ How perceptually intense (bright) is the color?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55742,"byte_end":55793,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55798,"byte_end":55807,"line_start":330,"line_end":330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55964,"byte_end":55973,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"to_opaque","qualname":"<Rgba>::to_opaque","value":"pub fn to_opaque(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an opaque version of self\n","sig":null,"attributes":[{"value":"/ Returns an opaque version of self","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":55915,"byte_end":55952,"line_start":335,"line_end":335,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":56410,"byte_end":56418,"line_start":352,"line_end":352,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Rgba>::to_array","value":"pub fn to_array(&Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" Premultiplied RGBA\n","sig":null,"attributes":[{"value":"/ Premultiplied RGBA","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":56354,"byte_end":56376,"line_start":350,"line_end":350,"column_start":5,"column_end":27}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":56381,"byte_end":56398,"line_start":351,"line_end":351,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":56556,"byte_end":56564,"line_start":358,"line_end":358,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Rgba>::to_tuple","value":"pub fn to_tuple(&Self) -> (f32, f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Premultiplied RGBA\n","sig":null,"attributes":[{"value":"/ Premultiplied RGBA","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":56500,"byte_end":56522,"line_start":356,"line_end":356,"column_start":5,"column_end":27}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":56527,"byte_end":56544,"line_start":357,"line_end":357,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":56694,"byte_end":56714,"line_start":363,"line_end":363,"column_start":12,"column_end":32},"name":"to_rgba_unmultiplied","qualname":"<Rgba>::to_rgba_unmultiplied","value":"pub fn to_rgba_unmultiplied(&Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" unmultiply the alpha\n","sig":null,"attributes":[{"value":"/ unmultiply the alpha","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":56658,"byte_end":56682,"line_start":362,"line_end":362,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":56986,"byte_end":57007,"line_start":374,"line_end":374,"column_start":12,"column_end":33},"name":"to_srgba_unmultiplied","qualname":"<Rgba>::to_srgba_unmultiplied","value":"pub fn to_srgba_unmultiplied(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" unmultiply the alpha\n","sig":null,"attributes":[{"value":"/ unmultiply the alpha","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":56950,"byte_end":56974,"line_start":373,"line_end":373,"column_start":5,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":191},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59137,"byte_end":59161,"line_start":467,"line_end":467,"column_start":8,"column_end":32},"name":"linear_f32_from_gamma_u8","qualname":"::color::linear_f32_from_gamma_u8","value":"pub fn linear_f32_from_gamma_u8(u8) -> f32","parent":null,"children":[],"decl_id":null,"docs":" gamma [0, 255] -> linear [0, 1].\n","sig":null,"attributes":[{"value":"/ gamma [0, 255] -> linear [0, 1].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59093,"byte_end":59129,"line_start":466,"line_end":466,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59386,"byte_end":59411,"line_start":478,"line_end":478,"column_start":8,"column_end":33},"name":"linear_f32_from_linear_u8","qualname":"::color::linear_f32_from_linear_u8","value":"pub fn linear_f32_from_linear_u8(u8) -> f32","parent":null,"children":[],"decl_id":null,"docs":" linear [0, 255] -> linear [0, 1].\n Useful for alpha-channel.\n","sig":null,"attributes":[{"value":"/ linear [0, 255] -> linear [0, 1].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59293,"byte_end":59330,"line_start":475,"line_end":475,"column_start":1,"column_end":38}},{"value":"/ Useful for alpha-channel.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59331,"byte_end":59360,"line_start":476,"line_end":476,"column_start":1,"column_end":30}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59361,"byte_end":59378,"line_start":477,"line_end":477,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59566,"byte_end":59590,"line_start":484,"line_end":484,"column_start":8,"column_end":32},"name":"gamma_u8_from_linear_f32","qualname":"::color::gamma_u8_from_linear_f32","value":"pub fn gamma_u8_from_linear_f32(f32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" linear [0, 1] -> gamma [0, 255] (clamped).\n Values outside this range will be clamped to the range.\n","sig":null,"attributes":[{"value":"/ linear [0, 1] -> gamma [0, 255] (clamped).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59452,"byte_end":59498,"line_start":482,"line_end":482,"column_start":1,"column_end":47}},{"value":"/ Values outside this range will be clamped to the range.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59499,"byte_end":59558,"line_start":483,"line_end":483,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59916,"byte_end":59941,"line_start":499,"line_end":499,"column_start":8,"column_end":33},"name":"linear_u8_from_linear_f32","qualname":"::color::linear_u8_from_linear_f32","value":"pub fn linear_u8_from_linear_f32(f32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" linear [0, 1] -> linear [0, 255] (clamped).\n Useful for alpha-channel.\n","sig":null,"attributes":[{"value":"/ linear [0, 1] -> linear [0, 255] (clamped).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59813,"byte_end":59860,"line_start":496,"line_end":496,"column_start":1,"column_end":48}},{"value":"/ Useful for alpha-channel.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59861,"byte_end":59890,"line_start":497,"line_end":497,"column_start":1,"column_end":30}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":59891,"byte_end":59908,"line_start":498,"line_end":498,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":60420,"byte_end":60437,"line_start":518,"line_end":518,"column_start":8,"column_end":25},"name":"linear_from_gamma","qualname":"::color::linear_from_gamma","value":"pub fn linear_from_gamma(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" gamma [0, 1] -> linear [0, 1] (not clamped).\n Works for numbers outside this range (e.g. negative numbers).\n","sig":null,"attributes":[{"value":"/ gamma [0, 1] -> linear [0, 1] (not clamped).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":60298,"byte_end":60346,"line_start":516,"line_end":516,"column_start":1,"column_end":49}},{"value":"/ Works for numbers outside this range (e.g. negative numbers).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":60347,"byte_end":60412,"line_start":517,"line_end":517,"column_start":1,"column_end":66}}]},{"kind":"Function","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":60758,"byte_end":60775,"line_start":530,"line_end":530,"column_start":8,"column_end":25},"name":"gamma_from_linear","qualname":"::color::gamma_from_linear","value":"pub fn gamma_from_linear(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" linear [0, 1] -> gamma [0, 1] (not clamped).\n Works for numbers outside this range (e.g. negative numbers).\n","sig":null,"attributes":[{"value":"/ linear [0, 1] -> gamma [0, 1] (not clamped).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":60636,"byte_end":60684,"line_start":528,"line_end":528,"column_start":1,"column_end":49}},{"value":"/ Works for numbers outside this range (e.g. negative numbers).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":60685,"byte_end":60750,"line_start":529,"line_end":529,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61214,"byte_end":61218,"line_start":545,"line_end":545,"column_start":12,"column_end":16},"name":"Hsva","qualname":"::color::Hsva","value":"Hsva { h, s, v, a }","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481}],"decl_id":null,"docs":" Hue, saturation, value, alpha. All in the range [0, 1].\n No premultiplied alpha.\n","sig":null,"attributes":[{"value":"/ Hue, saturation, value, alpha. All in the range [0, 1].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61065,"byte_end":61124,"line_start":542,"line_end":542,"column_start":1,"column_end":60}},{"value":"/ No premultiplied alpha.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61125,"byte_end":61152,"line_start":543,"line_end":543,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61245,"byte_end":61246,"line_start":547,"line_end":547,"column_start":9,"column_end":10},"name":"h","qualname":"::color::Hsva::h","value":"f32","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" hue 0-1\n","sig":null,"attributes":[{"value":"/ hue 0-1","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61225,"byte_end":61236,"line_start":546,"line_end":546,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61284,"byte_end":61285,"line_start":549,"line_end":549,"column_start":9,"column_end":10},"name":"s","qualname":"::color::Hsva::s","value":"f32","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" saturation 0-1\n","sig":null,"attributes":[{"value":"/ saturation 0-1","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61257,"byte_end":61275,"line_start":548,"line_end":548,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61318,"byte_end":61319,"line_start":551,"line_end":551,"column_start":9,"column_end":10},"name":"v","qualname":"::color::Hsva::v","value":"f32","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" value 0-1\n","sig":null,"attributes":[{"value":"/ value 0-1","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61296,"byte_end":61309,"line_start":550,"line_end":550,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1481},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61422,"byte_end":61423,"line_start":553,"line_end":553,"column_start":9,"column_end":10},"name":"a","qualname":"::color::Hsva::a","value":"f32","parent":{"krate":0,"index":1477},"children":[],"decl_id":null,"docs":" alpha 0-1. A negative value signifies an additive color (and alpha is ignored).\n","sig":null,"attributes":[{"value":"/ alpha 0-1. A negative value signifies an additive color (and alpha is ignored).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61330,"byte_end":61413,"line_start":552,"line_end":552,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61456,"byte_end":61459,"line_start":557,"line_end":557,"column_start":12,"column_end":15},"name":"new","qualname":"<Hsva>::new","value":"pub fn new(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61594,"byte_end":61618,"line_start":562,"line_end":562,"column_start":12,"column_end":36},"name":"from_srgba_premultiplied","qualname":"<Hsva>::from_srgba_premultiplied","value":"pub fn from_srgba_premultiplied([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From `sRGBA` with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ From `sRGBA` with premultiplied alpha","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61541,"byte_end":61582,"line_start":561,"line_end":561,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61954,"byte_end":61977,"line_start":572,"line_end":572,"column_start":12,"column_end":35},"name":"from_srgba_unmultiplied","qualname":"<Hsva>::from_srgba_unmultiplied","value":"pub fn from_srgba_unmultiplied([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From `sRGBA` without premultiplied alpha\n","sig":null,"attributes":[{"value":"/ From `sRGBA` without premultiplied alpha","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61898,"byte_end":61942,"line_start":571,"line_end":571,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":62313,"byte_end":62336,"line_start":582,"line_end":582,"column_start":12,"column_end":35},"name":"from_rgba_premultiplied","qualname":"<Hsva>::from_rgba_premultiplied","value":"pub fn from_rgba_premultiplied(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From linear RGBA with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ From linear RGBA with premultiplied alpha","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":62256,"byte_end":62301,"line_start":581,"line_end":581,"column_start":5,"column_end":50}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":62387,"byte_end":62428,"line_start":583,"line_end":583,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":62814,"byte_end":62836,"line_start":597,"line_end":597,"column_start":12,"column_end":34},"name":"from_rgba_unmultiplied","qualname":"<Hsva>::from_rgba_unmultiplied","value":"pub fn from_rgba_unmultiplied(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" From linear RGBA without premultiplied alpha\n","sig":null,"attributes":[{"value":"/ From linear RGBA without premultiplied alpha","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":62754,"byte_end":62802,"line_start":596,"line_end":596,"column_start":5,"column_end":53}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":62887,"byte_end":62928,"line_start":598,"line_end":598,"column_start":9,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":63024,"byte_end":63041,"line_start":603,"line_end":603,"column_start":12,"column_end":29},"name":"from_additive_rgb","qualname":"<Hsva>::from_additive_rgb","value":"pub fn from_additive_rgb([f32; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":63263,"byte_end":63271,"line_start":613,"line_end":613,"column_start":12,"column_end":20},"name":"from_rgb","qualname":"<Hsva>::from_rgb","value":"pub fn from_rgb([f32; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":63391,"byte_end":63400,"line_start":618,"line_end":618,"column_start":12,"column_end":21},"name":"from_srgb","qualname":"<Hsva>::from_srgb","value":"pub fn from_srgb([u8; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":63689,"byte_end":63698,"line_start":628,"line_end":628,"column_start":12,"column_end":21},"name":"to_opaque","qualname":"<Hsva>::to_opaque","value":"pub fn to_opaque(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":63765,"byte_end":63771,"line_start":632,"line_end":632,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<Hsva>::to_rgb","value":"pub fn to_rgb(&Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":63858,"byte_end":63865,"line_start":636,"line_end":636,"column_start":12,"column_end":19},"name":"to_srgb","qualname":"<Hsva>::to_srgb","value":"pub fn to_srgb(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":64086,"byte_end":64107,"line_start":645,"line_end":645,"column_start":12,"column_end":33},"name":"to_rgba_premultiplied","qualname":"<Hsva>::to_rgba_premultiplied","value":"pub fn to_rgba_premultiplied(&Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":64407,"byte_end":64427,"line_start":656,"line_end":656,"column_start":12,"column_end":32},"name":"to_rgba_unmultiplied","qualname":"<Hsva>::to_rgba_unmultiplied","value":"pub fn to_rgba_unmultiplied(&Self) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" Represents additive colors using a negative alpha.\n","sig":null,"attributes":[{"value":"/ Represents additive colors using a negative alpha.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":64341,"byte_end":64395,"line_start":655,"line_end":655,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":64578,"byte_end":64600,"line_start":662,"line_end":662,"column_start":12,"column_end":34},"name":"to_srgba_premultiplied","qualname":"<Hsva>::to_srgba_premultiplied","value":"pub fn to_srgba_premultiplied(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":64881,"byte_end":64902,"line_start":672,"line_end":672,"column_start":12,"column_end":33},"name":"to_srgba_unmultiplied","qualname":"<Hsva>::to_srgba_unmultiplied","value":"pub fn to_srgba_unmultiplied(&Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65718,"byte_end":65730,"line_start":706,"line_end":706,"column_start":8,"column_end":20},"name":"hsv_from_rgb","qualname":"::color::hsv_from_rgb","value":"pub fn hsv_from_rgb([f32; ]) -> (f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" All ranges in 0-1, rgb is linear.\n","sig":null,"attributes":[{"value":"/ All ranges in 0-1, rgb is linear.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65673,"byte_end":65710,"line_start":705,"line_end":705,"column_start":1,"column_end":38}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65777,"byte_end":65818,"line_start":707,"line_end":707,"column_start":5,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":66352,"byte_end":66364,"line_start":729,"line_end":729,"column_start":8,"column_end":20},"name":"rgb_from_hsv","qualname":"::color::rgb_from_hsv","value":"pub fn rgb_from_hsv((f32, f32, f32)) -> [f32; ]","parent":null,"children":[],"decl_id":null,"docs":" All ranges in 0-1, rgb is linear.\n","sig":null,"attributes":[{"value":"/ All ranges in 0-1, rgb is linear.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":66307,"byte_end":66344,"line_start":728,"line_end":728,"column_start":1,"column_end":38}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":66411,"byte_end":66452,"line_start":730,"line_end":730,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67489,"byte_end":67498,"line_start":769,"line_end":769,"column_start":12,"column_end":21},"name":"HsvaGamma","qualname":"::color::HsvaGamma","value":"HsvaGamma { h, s, v, a }","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497}],"decl_id":null,"docs":" Like Hsva but with the `v` value (brightness) being gamma corrected\n so that it is somewhat perceptually even.\n","sig":null,"attributes":[{"value":"/ Like Hsva but with the `v` value (brightness) being gamma corrected","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67310,"byte_end":67381,"line_start":766,"line_end":766,"column_start":1,"column_end":72}},{"value":"/ so that it is somewhat perceptually even.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67382,"byte_end":67427,"line_start":767,"line_end":767,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1494},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67525,"byte_end":67526,"line_start":771,"line_end":771,"column_start":9,"column_end":10},"name":"h","qualname":"::color::HsvaGamma::h","value":"f32","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" hue 0-1\n","sig":null,"attributes":[{"value":"/ hue 0-1","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67505,"byte_end":67516,"line_start":770,"line_end":770,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":1495},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67564,"byte_end":67565,"line_start":773,"line_end":773,"column_start":9,"column_end":10},"name":"s","qualname":"::color::HsvaGamma::s","value":"f32","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" saturation 0-1\n","sig":null,"attributes":[{"value":"/ saturation 0-1","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67537,"byte_end":67555,"line_start":772,"line_end":772,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1496},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67635,"byte_end":67636,"line_start":775,"line_end":775,"column_start":9,"column_end":10},"name":"v","qualname":"::color::HsvaGamma::v","value":"f32","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" value 0-1, in gamma-space (~perceptually even)\n","sig":null,"attributes":[{"value":"/ value 0-1, in gamma-space (~perceptually even)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67576,"byte_end":67626,"line_start":774,"line_end":774,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1497},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67739,"byte_end":67740,"line_start":777,"line_end":777,"column_start":9,"column_end":10},"name":"a","qualname":"::color::HsvaGamma::a","value":"f32","parent":{"krate":0,"index":1493},"children":[],"decl_id":null,"docs":" alpha 0-1. A negative value signifies an additive color (and alpha is ignored).\n","sig":null,"attributes":[{"value":"/ alpha 0-1. A negative value signifies an additive color (and alpha is ignored).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67647,"byte_end":67730,"line_start":776,"line_end":776,"column_start":5,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":249},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68832,"byte_end":68850,"line_start":832,"line_end":832,"column_start":8,"column_end":26},"name":"tint_color_towards","qualname":"::color::tint_color_towards","value":"pub fn tint_color_towards(Color32, Color32) -> Color32","parent":null,"children":[],"decl_id":null,"docs":" Cheap and ugly.\n Made for graying out disabled `Ui`:s.\n","sig":null,"attributes":[{"value":"/ Cheap and ugly.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68763,"byte_end":68782,"line_start":830,"line_end":830,"column_start":1,"column_end":20}},{"value":"/ Made for graying out disabled `Ui`:s.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68783,"byte_end":68824,"line_start":831,"line_end":831,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"image","qualname":"::image","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":1509},{"krate":0,"index":1516},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":254},{"krate":0,"index":1522},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":260},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":1534},{"krate":0,"index":1538},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1546},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":276},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":1553},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1560},{"krate":0,"index":295}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1510},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74335,"byte_end":74340,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Color","qualname":"::image::ImageData::Color","value":"ImageData::Color(ColorImage)","parent":{"krate":0,"index":1509},"children":[],"decl_id":null,"docs":" RGBA image.\n","sig":null,"attributes":[{"value":"/ RGBA image.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74315,"byte_end":74330,"line_start":13,"line_end":13,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1513},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74393,"byte_end":74398,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Alpha","qualname":"::image::ImageData::Alpha","value":"ImageData::Alpha(AlphaImage)","parent":{"krate":0,"index":1509},"children":[],"decl_id":null,"docs":" Used for the font texture.\n","sig":null,"attributes":[{"value":"/ Used for the font texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74358,"byte_end":74388,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":1509},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74299,"byte_end":74308,"line_start":12,"line_end":12,"column_start":10,"column_end":19},"name":"ImageData","qualname":"::image::ImageData","value":"pub enum ImageData { Color(ColorImage), Alpha(AlphaImage), }","parent":null,"children":[{"krate":0,"index":1510},{"krate":0,"index":1513}],"decl_id":null,"docs":" An image stored in RAM.","sig":null,"attributes":[{"value":"/ An image stored in RAM.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":73953,"byte_end":73980,"line_start":3,"line_end":3,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":73981,"byte_end":73984,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ To load an image file, see [`ColorImage::from_rgba_unmultiplied`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":73985,"byte_end":74055,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74056,"byte_end":74059,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ In order to paint the image on screen, you first need to convert it to","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74060,"byte_end":74134,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74135,"byte_end":74138,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See also: [`ColorImage`], [`AlphaImage`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74139,"byte_end":74184,"line_start":9,"line_end":9,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74443,"byte_end":74447,"line_start":20,"line_end":20,"column_start":12,"column_end":16},"name":"size","qualname":"<ImageData>::size","value":"pub fn size(&Self) -> [usize; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74612,"byte_end":74617,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageData>::width","value":"pub fn width(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74677,"byte_end":74683,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageData>::height","value":"pub fn height(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74743,"byte_end":74758,"line_start":35,"line_end":35,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ImageData>::bytes_per_pixel","value":"pub fn bytes_per_pixel(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1522},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75123,"byte_end":75133,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"ColorImage","qualname":"::image::ColorImage","value":"ColorImage { size, pixels }","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1525}],"decl_id":null,"docs":" A 2D RGBA color image in RAM.\n","sig":null,"attributes":[{"value":"/ A 2D RGBA color image in RAM.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74964,"byte_end":74997,"line_start":45,"line_end":45,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1523},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75167,"byte_end":75171,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"name":"size","qualname":"::image::ColorImage::size","value":"[usize; 2]","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" width, height.\n","sig":null,"attributes":[{"value":"/ width, height.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75140,"byte_end":75158,"line_start":49,"line_end":49,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75245,"byte_end":75251,"line_start":52,"line_end":52,"column_start":9,"column_end":15},"name":"pixels","qualname":"::image::ColorImage::pixels","value":"std::vec::Vec<color::Color32>","parent":{"krate":0,"index":1522},"children":[],"decl_id":null,"docs":" The pixels, row by row, from top to bottom.\n","sig":null,"attributes":[{"value":"/ The pixels, row by row, from top to bottom.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75189,"byte_end":75236,"line_start":51,"line_end":51,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75352,"byte_end":75355,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<ColorImage>::new","value":"pub fn new([usize; ], Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an image filled with the given color.\n","sig":null,"attributes":[{"value":"/ Create an image filled with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75292,"byte_end":75340,"line_start":56,"line_end":56,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76789,"byte_end":76811,"line_start":94,"line_end":94,"column_start":12,"column_end":34},"name":"from_rgba_unmultiplied","qualname":"<ColorImage>::from_rgba_unmultiplied","value":"pub fn from_rgba_unmultiplied([usize; ], &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `Image` from flat un-multiplied RGBA data.","sig":null,"attributes":[{"value":"/ Create an `Image` from flat un-multiplied RGBA data.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75506,"byte_end":75562,"line_start":64,"line_end":64,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75567,"byte_end":75570,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ This is usually what you want to use after having loaded an image file.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75575,"byte_end":75650,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75655,"byte_end":75658,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Panics if `size[0] * size[1] * 4 != rgba.len()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75663,"byte_end":75715,"line_start":68,"line_end":68,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75720,"byte_end":75723,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ## Example using the [`image`](crates.io/crates/image) crate:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75728,"byte_end":75793,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ ``` ignore","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75798,"byte_end":75812,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/ fn load_image_from_path(path: &std::path::Path) -> Result<egui::ColorImage, image::ImageError> {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75817,"byte_end":75917,"line_start":72,"line_end":72,"column_start":5,"column_end":105}},{"value":"/     let image = image::io::Reader::open(path)?.decode()?;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75922,"byte_end":75983,"line_start":73,"line_end":73,"column_start":5,"column_end":66}},{"value":"/     let size = [image.width() as _, image.height() as _];","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75988,"byte_end":76049,"line_start":74,"line_end":74,"column_start":5,"column_end":66}},{"value":"/     let image_buffer = image.to_rgba8();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76054,"byte_end":76098,"line_start":75,"line_end":75,"column_start":5,"column_end":49}},{"value":"/     let pixels = image_buffer.as_flat_samples();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76103,"byte_end":76155,"line_start":76,"line_end":76,"column_start":5,"column_end":57}},{"value":"/     Ok(egui::ColorImage::from_rgba_unmultiplied(","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76160,"byte_end":76212,"line_start":77,"line_end":77,"column_start":5,"column_end":57}},{"value":"/         size,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76217,"byte_end":76234,"line_start":78,"line_end":78,"column_start":5,"column_end":22}},{"value":"/         pixels.as_slice(),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76239,"byte_end":76269,"line_start":79,"line_end":79,"column_start":5,"column_end":35}},{"value":"/     ))","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76274,"byte_end":76284,"line_start":80,"line_end":80,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76289,"byte_end":76294,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76299,"byte_end":76302,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ fn load_image_from_memory(image_data: &[u8]) -> Result<ColorImage, image::ImageError> {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76307,"byte_end":76398,"line_start":83,"line_end":83,"column_start":5,"column_end":96}},{"value":"/     let image = image::load_from_memory(image_data)?;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76403,"byte_end":76460,"line_start":84,"line_end":84,"column_start":5,"column_end":62}},{"value":"/     let size = [image.width() as _, image.height() as _];","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76465,"byte_end":76526,"line_start":85,"line_end":85,"column_start":5,"column_end":66}},{"value":"/     let image_buffer = image.to_rgba8();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76531,"byte_end":76575,"line_start":86,"line_end":86,"column_start":5,"column_end":49}},{"value":"/     let pixels = image_buffer.as_flat_samples();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76580,"byte_end":76632,"line_start":87,"line_end":87,"column_start":5,"column_end":57}},{"value":"/     Ok(ColorImage::from_rgba_unmultiplied(","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76637,"byte_end":76683,"line_start":88,"line_end":88,"column_start":5,"column_end":51}},{"value":"/         size,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76688,"byte_end":76705,"line_start":89,"line_end":89,"column_start":5,"column_end":22}},{"value":"/         pixels.as_slice(),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76710,"byte_end":76740,"line_start":90,"line_end":90,"column_start":5,"column_end":35}},{"value":"/     ))","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76745,"byte_end":76755,"line_start":91,"line_end":91,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76760,"byte_end":76765,"line_start":92,"line_end":92,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":76770,"byte_end":76777,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":77163,"byte_end":77170,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"example","qualname":"<ColorImage>::example","value":"pub fn example() -> Self","parent":null,"children":[],"decl_id":null,"docs":" An example color image, useful for tests.\n","sig":null,"attributes":[{"value":"/ An example color image, useful for tests.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":77106,"byte_end":77151,"line_start":103,"line_end":103,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":77663,"byte_end":77668,"line_start":121,"line_end":121,"column_start":12,"column_end":17},"name":"width","qualname":"<ColorImage>::width","value":"pub fn width(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":77642,"byte_end":77651,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":77740,"byte_end":77746,"line_start":126,"line_end":126,"column_start":12,"column_end":18},"name":"height","qualname":"<ColorImage>::height","value":"pub fn height(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":77719,"byte_end":77728,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1534},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78766,"byte_end":78776,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"AlphaImage","qualname":"::image::AlphaImage","value":"AlphaImage { size, pixels }","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1537}],"decl_id":null,"docs":" An 8-bit image, representing difference levels of transparent white.","sig":null,"attributes":[{"value":"/ An 8-bit image, representing difference levels of transparent white.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78524,"byte_end":78596,"line_start":160,"line_end":160,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78597,"byte_end":78600,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ Used for the font texture","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78601,"byte_end":78630,"line_start":162,"line_end":162,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1535},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78809,"byte_end":78813,"line_start":167,"line_end":167,"column_start":9,"column_end":13},"name":"size","qualname":"::image::AlphaImage::size","value":"[usize; 2]","parent":{"krate":0,"index":1534},"children":[],"decl_id":null,"docs":" width, height\n","sig":null,"attributes":[{"value":"/ width, height","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78783,"byte_end":78800,"line_start":166,"line_end":166,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":1537},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78984,"byte_end":78990,"line_start":171,"line_end":171,"column_start":9,"column_end":15},"name":"pixels","qualname":"::image::AlphaImage::pixels","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1534},"children":[],"decl_id":null,"docs":" The alpha (linear space 0-255) of something white.","sig":null,"attributes":[{"value":"/ The alpha (linear space 0-255) of something white.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78831,"byte_end":78885,"line_start":168,"line_end":168,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78890,"byte_end":78893,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ One byte per pixel. Often you want to use [`Self::srgba_pixels`] instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78898,"byte_end":78975,"line_start":170,"line_end":170,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79033,"byte_end":79036,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<AlphaImage>::new","value":"pub fn new([usize; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79188,"byte_end":79193,"line_start":183,"line_end":183,"column_start":12,"column_end":17},"name":"width","qualname":"<AlphaImage>::width","value":"pub fn width(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79167,"byte_end":79176,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79265,"byte_end":79271,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"height","qualname":"<AlphaImage>::height","value":"pub fn height(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79244,"byte_end":79253,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79595,"byte_end":79607,"line_start":197,"line_end":197,"column_start":12,"column_end":24},"name":"srgba_pixels","qualname":"<AlphaImage>::srgba_pixels","value":"pub fn srgba_pixels(&Self, f32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the textures as `sRGBA` premultiplied pixels, row by row, top to bottom.","sig":null,"attributes":[{"value":"/ Returns the textures as `sRGBA` premultiplied pixels, row by row, top to bottom.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79322,"byte_end":79406,"line_start":192,"line_end":192,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79411,"byte_end":79414,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ `gamma` should normally be set to 1.0.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79419,"byte_end":79461,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"/ If you are having problems with text looking skinny and pixelated, try","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79466,"byte_end":79540,"line_start":195,"line_end":195,"column_start":5,"column_end":79}},{"value":"/ setting a lower gamma, e.g. `0.5`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79545,"byte_end":79583,"line_start":196,"line_end":196,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":80128,"byte_end":80134,"line_start":214,"line_end":214,"column_start":12,"column_end":18},"name":"region","qualname":"<AlphaImage>::region","value":"pub fn region(&Self, [usize; ], [usize; ]) -> AlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Clone a sub-region as a new image\n","sig":null,"attributes":[{"value":"/ Clone a sub-region as a new image","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":80079,"byte_end":80116,"line_start":213,"line_end":213,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81596,"byte_end":81606,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"ImageDelta","qualname":"::image::ImageDelta","value":"ImageDelta { image, pos }","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":1555}],"decl_id":null,"docs":" A change to an image.","sig":null,"attributes":[{"value":"/ A change to an image.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81321,"byte_end":81346,"line_start":260,"line_end":260,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81347,"byte_end":81350,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ Either a whole new image,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81351,"byte_end":81380,"line_start":262,"line_end":262,"column_start":1,"column_end":30}},{"value":"/ or an update to a rectangular region of it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81381,"byte_end":81428,"line_start":263,"line_end":263,"column_start":1,"column_end":48}},{"value":"must_use = \"The painter must take care of this\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81534,"byte_end":81584,"line_start":266,"line_end":266,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81653,"byte_end":81658,"line_start":269,"line_end":269,"column_start":9,"column_end":14},"name":"image","qualname":"::image::ImageDelta::image","value":"image::ImageData","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" What to set the texture to.\n","sig":null,"attributes":[{"value":"/ What to set the texture to.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81613,"byte_end":81644,"line_start":268,"line_end":268,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81818,"byte_end":81821,"line_start":273,"line_end":273,"column_start":9,"column_end":12},"name":"pos","qualname":"::image::ImageDelta::pos","value":"std::option::Option<[usize; 2]>","parent":{"krate":0,"index":1553},"children":[],"decl_id":null,"docs":" If `None`, set the whole texture to [`Self::image`].\n If `Some(pos)`, update a sub-region of an already allocated texture.\n","sig":null,"attributes":[{"value":"/ If `None`, set the whole texture to [`Self::image`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81676,"byte_end":81732,"line_start":271,"line_end":271,"column_start":5,"column_end":61}},{"value":"/ If `Some(pos)`, update a sub-region of an already allocated texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81737,"byte_end":81809,"line_start":272,"line_end":272,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81909,"byte_end":81913,"line_start":278,"line_end":278,"column_start":12,"column_end":16},"name":"full","qualname":"<ImageDelta>::full","value":"pub fn full<impl Into<ImageData>: Into<ImageData>>(impl Into<ImageData>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Update the whole texture.\n","sig":null,"attributes":[{"value":"/ Update the whole texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81868,"byte_end":81897,"line_start":277,"line_end":277,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":82104,"byte_end":82111,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"partial","qualname":"<ImageDelta>::partial","value":"pub fn partial<impl Into<ImageData>: Into<ImageData>>([usize; ],\n                                                      impl Into<ImageData>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Update a sub-region of an existing texture.\n","sig":null,"attributes":[{"value":"/ Update a sub-region of an existing texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":82045,"byte_end":82092,"line_start":285,"line_end":285,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":82376,"byte_end":82384,"line_start":295,"line_end":295,"column_start":12,"column_end":20},"name":"is_whole","qualname":"<ImageDelta>::is_whole","value":"pub fn is_whole(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this affecting the whole texture?\n If `false`, this is a partial (sub-region) update.\n","sig":null,"attributes":[{"value":"/ Is this affecting the whole texture?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":82265,"byte_end":82305,"line_start":293,"line_end":293,"column_start":5,"column_end":45}},{"value":"/ If `false`, this is a partial (sub-region) update.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":82310,"byte_end":82364,"line_start":294,"line_end":294,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1574},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82766,"byte_end":82772,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Vertex","qualname":"::mesh::Vertex","value":"Vertex { pos, uv, color }","parent":null,"children":[{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577}],"decl_id":null,"docs":" The 2D vertex type.","sig":null,"attributes":[{"value":"/ The 2D vertex type.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82467,"byte_end":82490,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82491,"byte_end":82494,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Should be friendly to send to GPU as is.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82495,"byte_end":82539,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82540,"byte_end":82550,"line_start":7,"line_end":7,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1575},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82879,"byte_end":82882,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"pos","qualname":"::mesh::Vertex::pos","value":"emath::Pos2","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":" Logical pixel coordinates (points).\n (0,0) is the top left corner of the screen.\n","sig":null,"attributes":[{"value":"/ Logical pixel coordinates (points).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82779,"byte_end":82818,"line_start":12,"line_end":12,"column_start":5,"column_end":44}},{"value":"/ (0,0) is the top left corner of the screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82823,"byte_end":82870,"line_start":13,"line_end":13,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1576},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83061,"byte_end":83063,"line_start":19,"line_end":19,"column_start":9,"column_end":11},"name":"uv","qualname":"::mesh::Vertex::uv","value":"emath::Pos2","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":" Normalized texture coordinates.\n (0, 0) is the top left corner of the texture.\n (1, 1) is the bottom right corner of the texture.\n","sig":null,"attributes":[{"value":"/ Normalized texture coordinates.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82905,"byte_end":82940,"line_start":16,"line_end":16,"column_start":5,"column_end":40}},{"value":"/ (0, 0) is the top left corner of the texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82945,"byte_end":82994,"line_start":17,"line_end":17,"column_start":5,"column_end":54}},{"value":"/ (1, 1) is the bottom right corner of the texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":82999,"byte_end":83052,"line_start":18,"line_end":18,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1577},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83129,"byte_end":83134,"line_start":22,"line_end":22,"column_start":9,"column_end":14},"name":"color","qualname":"::mesh::Vertex::color","value":"color::Color32","parent":{"krate":0,"index":1574},"children":[],"decl_id":null,"docs":" sRGBA with premultiplied alpha\n","sig":null,"attributes":[{"value":"/ sRGBA with premultiplied alpha","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83086,"byte_end":83120,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1616},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83332,"byte_end":83336,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Mesh","qualname":"::mesh::Mesh","value":"Mesh { indices, vertices, texture_id }","parent":null,"children":[{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619}],"decl_id":null,"docs":" Textured triangles in two dimensions.\n","sig":null,"attributes":[{"value":"/ Textured triangles in two dimensions.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83158,"byte_end":83199,"line_start":25,"line_end":25,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83609,"byte_end":83616,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"name":"indices","qualname":"::mesh::Mesh::indices","value":"std::vec::Vec<u32>","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" Draw as triangles (i.e. the length is always multiple of three).","sig":null,"attributes":[{"value":"/ Draw as triangles (i.e. the length is always multiple of three).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83343,"byte_end":83411,"line_start":29,"line_end":29,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83416,"byte_end":83419,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ If you only support 16-bit indices you can use [`Mesh::split_to_u16`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83424,"byte_end":83498,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83503,"byte_end":83506,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ egui is NOT consistent with what winding order it uses, so turn off backface culling.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83511,"byte_end":83600,"line_start":33,"line_end":33,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83683,"byte_end":83691,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"vertices","qualname":"::mesh::Mesh::vertices","value":"std::vec::Vec<mesh::Vertex>","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" The vertex data indexed by `indices`.\n","sig":null,"attributes":[{"value":"/ The vertex data indexed by `indices`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83633,"byte_end":83674,"line_start":36,"line_end":36,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1619},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83772,"byte_end":83782,"line_start":40,"line_end":40,"column_start":9,"column_end":19},"name":"texture_id","qualname":"::mesh::Mesh::texture_id","value":"TextureId","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" The texture to use when drawing these triangles.\n","sig":null,"attributes":[{"value":"/ The texture to use when drawing these triangles.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83711,"byte_end":83763,"line_start":39,"line_end":39,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83853,"byte_end":83865,"line_start":45,"line_end":45,"column_start":12,"column_end":24},"name":"with_texture","qualname":"<Mesh>::with_texture","value":"pub fn with_texture(TextureId) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":84061,"byte_end":84066,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"clear","qualname":"<Mesh>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Restore to default state, but without freeing memory.\n","sig":null,"attributes":[{"value":"/ Restore to default state, but without freeing memory.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83992,"byte_end":84049,"line_start":52,"line_end":52,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":84203,"byte_end":84213,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"bytes_used","qualname":"<Mesh>::bytes_used","value":"pub fn bytes_used(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":84483,"byte_end":84491,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Mesh>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are all indices within the bounds of the contained vertices?\n","sig":null,"attributes":[{"value":"/ Are all indices within the bounds of the contained vertices?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":84407,"byte_end":84471,"line_start":65,"line_end":65,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":84680,"byte_end":84688,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Mesh>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":84824,"byte_end":84835,"line_start":79,"line_end":79,"column_start":12,"column_end":23},"name":"calc_bounds","qualname":"<Mesh>::calc_bounds","value":"pub fn calc_bounds(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Calculate a bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Calculate a bounding rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":84777,"byte_end":84812,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":85075,"byte_end":85081,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"append","qualname":"<Mesh>::append","value":"pub fn append(&mut Self, Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Append all the indices and vertices of `other` to `self`.\n","sig":null,"attributes":[{"value":"/ Append all the indices and vertices of `other` to `self`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":85002,"byte_end":85063,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":85654,"byte_end":85668,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"colored_vertex","qualname":"<Mesh>::colored_vertex","value":"pub fn colored_vertex(&mut Self, Pos2, Color32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":85625,"byte_end":85642,"line_start":106,"line_end":106,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":85955,"byte_end":85967,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"add_triangle","qualname":"<Mesh>::add_triangle","value":"pub fn add_triangle(&mut Self, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Add a triangle.\n","sig":null,"attributes":[{"value":"/ Add a triangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":85902,"byte_end":85921,"line_start":116,"line_end":116,"column_start":5,"column_end":24}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":85926,"byte_end":85943,"line_start":117,"line_end":117,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86260,"byte_end":86277,"line_start":127,"line_end":127,"column_start":12,"column_end":29},"name":"reserve_triangles","qualname":"<Mesh>::reserve_triangles","value":"pub fn reserve_triangles(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Make room for this many additional triangles (will reserve 3x as many indices).\n See also `reserve_vertices`.\n","sig":null,"attributes":[{"value":"/ Make room for this many additional triangles (will reserve 3x as many indices).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86106,"byte_end":86189,"line_start":124,"line_end":124,"column_start":5,"column_end":88}},{"value":"/ See also `reserve_vertices`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86194,"byte_end":86226,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86231,"byte_end":86248,"line_start":126,"line_end":126,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86507,"byte_end":86523,"line_start":134,"line_end":134,"column_start":12,"column_end":28},"name":"reserve_vertices","qualname":"<Mesh>::reserve_vertices","value":"pub fn reserve_vertices(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Make room for this many additional vertices.\n See also `reserve_triangles`.\n","sig":null,"attributes":[{"value":"/ Make room for this many additional vertices.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86387,"byte_end":86435,"line_start":131,"line_end":131,"column_start":5,"column_end":53}},{"value":"/ See also `reserve_triangles`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86440,"byte_end":86473,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86478,"byte_end":86495,"line_start":133,"line_end":133,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86661,"byte_end":86677,"line_start":139,"line_end":139,"column_start":12,"column_end":28},"name":"add_rect_with_uv","qualname":"<Mesh>::add_rect_with_uv","value":"pub fn add_rect_with_uv(&mut Self, Rect, Rect, Color32)","parent":null,"children":[],"decl_id":null,"docs":" Rectangle with a texture and color.\n","sig":null,"attributes":[{"value":"/ Rectangle with a texture and color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86610,"byte_end":86649,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":86737,"byte_end":86767,"line_start":140,"line_end":140,"column_start":9,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":87545,"byte_end":87561,"line_start":170,"line_end":170,"column_start":12,"column_end":28},"name":"add_colored_rect","qualname":"<Mesh>::add_colored_rect","value":"pub fn add_colored_rect(&mut Self, Rect, Color32)","parent":null,"children":[],"decl_id":null,"docs":" Uniformly colored rectangle.\n","sig":null,"attributes":[{"value":"/ Uniformly colored rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":87479,"byte_end":87511,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":87516,"byte_end":87533,"line_start":169,"line_end":169,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":87960,"byte_end":87972,"line_start":179,"line_end":179,"column_start":12,"column_end":24},"name":"split_to_u16","qualname":"<Mesh>::split_to_u16","value":"pub fn split_to_u16(Self) -> Vec<Mesh16>","parent":null,"children":[],"decl_id":null,"docs":" This is for platforms that only support 16-bit index buffers.","sig":null,"attributes":[{"value":"/ This is for platforms that only support 16-bit index buffers.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":87759,"byte_end":87824,"line_start":175,"line_end":175,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":87829,"byte_end":87832,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Splits this mesh into many smaller meshes (if needed)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":87837,"byte_end":87894,"line_start":177,"line_end":177,"column_start":5,"column_end":62}},{"value":"/ where the smaller meshes have 16-bit indices.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":87899,"byte_end":87948,"line_start":178,"line_end":178,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90044,"byte_end":90053,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"translate","qualname":"<Mesh>::translate","value":"pub fn translate(&mut Self, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Translate location by this much, in-place\n","sig":null,"attributes":[{"value":"/ Translate location by this much, in-place","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":89987,"byte_end":90032,"line_start":239,"line_end":239,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":325},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90412,"byte_end":90418,"line_start":252,"line_end":252,"column_start":12,"column_end":18},"name":"Mesh16","qualname":"::mesh::Mesh16","value":"Mesh16 { indices, vertices, texture_id }","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"decl_id":null,"docs":" A version of [`Mesh`] that uses 16-bit indices.","sig":null,"attributes":[{"value":"/ A version of [`Mesh`] that uses 16-bit indices.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90246,"byte_end":90297,"line_start":249,"line_end":249,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90298,"byte_end":90301,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ This is produced by [`Mesh::split_to_u16`] and is meant to be used for legacy render backends.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90302,"byte_end":90400,"line_start":251,"line_end":251,"column_start":1,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":326},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90604,"byte_end":90611,"line_start":256,"line_end":256,"column_start":9,"column_end":16},"name":"indices","qualname":"::mesh::Mesh16::indices","value":"std::vec::Vec<u16>","parent":{"krate":0,"index":325},"children":[],"decl_id":null,"docs":" Draw as triangles (i.e. the length is always multiple of three).","sig":null,"attributes":[{"value":"/ Draw as triangles (i.e. the length is always multiple of three).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90425,"byte_end":90493,"line_start":253,"line_end":253,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90498,"byte_end":90501,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ egui is NOT consistent with what winding order it uses, so turn off backface culling.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90506,"byte_end":90595,"line_start":255,"line_end":255,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90678,"byte_end":90686,"line_start":259,"line_end":259,"column_start":9,"column_end":17},"name":"vertices","qualname":"::mesh::Mesh16::vertices","value":"std::vec::Vec<mesh::Vertex>","parent":{"krate":0,"index":325},"children":[],"decl_id":null,"docs":" The vertex data indexed by `indices`.\n","sig":null,"attributes":[{"value":"/ The vertex data indexed by `indices`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90628,"byte_end":90669,"line_start":258,"line_end":258,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":328},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90767,"byte_end":90777,"line_start":262,"line_end":262,"column_start":9,"column_end":19},"name":"texture_id","qualname":"::mesh::Mesh16::texture_id","value":"TextureId","parent":{"krate":0,"index":325},"children":[],"decl_id":null,"docs":" The texture to use when drawing these triangles.\n","sig":null,"attributes":[{"value":"/ The texture to use when drawing these triangles.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90706,"byte_end":90758,"line_start":261,"line_end":261,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90887,"byte_end":90895,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Mesh16>::is_valid","value":"pub fn is_valid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are all indices within the bounds of the contained vertices?\n","sig":null,"attributes":[{"value":"/ Are all indices within the bounds of the contained vertices?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90811,"byte_end":90875,"line_start":266,"line_end":266,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mutex","qualname":"::mutex","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":341},{"krate":0,"index":353},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377}],"decl_id":null,"docs":" Helper module that wraps some Mutex types with different implementations.","sig":null,"attributes":[{"value":"/ Helper module that wraps some Mutex types with different implementations.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":91075,"byte_end":91152,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":91153,"byte_end":91156,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ When the `single_threaded` feature is on the mutexes will panic when locked from different threads.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":91157,"byte_end":91260,"line_start":3,"line_end":3,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1631},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":95834,"byte_end":95839,"line_start":157,"line_end":157,"column_start":16,"column_end":21},"name":"Mutex","qualname":"::mutex::mutex_impl::Mutex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Provides interior mutability. Only thread-safe if the `multi_threaded` feature is enabled.\n","sig":null,"attributes":[{"value":"/ Provides interior mutability. Only thread-safe if the `multi_threaded` feature is enabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":95701,"byte_end":95795,"line_start":155,"line_end":155,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96041,"byte_end":96044,"line_start":164,"line_end":164,"column_start":16,"column_end":19},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96008,"byte_end":96025,"line_start":163,"line_end":163,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96211,"byte_end":96215,"line_start":170,"line_end":170,"column_start":16,"column_end":20},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub fn lock(&Self) -> MutexGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Panics if already locked.\n","sig":null,"attributes":[{"value":"/ Panics if already locked.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96140,"byte_end":96169,"line_start":168,"line_end":168,"column_start":9,"column_end":38}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96178,"byte_end":96195,"line_start":169,"line_end":169,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1638},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96797,"byte_end":96803,"line_start":188,"line_end":188,"column_start":16,"column_end":22},"name":"RwLock","qualname":"::mutex::rw_lock_impl::RwLock","value":"","parent":null,"children":[],"decl_id":null,"docs":" Provides interior mutability. Only thread-safe if the `multi_threaded` feature is enabled.\n","sig":null,"attributes":[{"value":"/ Provides interior mutability. Only thread-safe if the `multi_threaded` feature is enabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96664,"byte_end":96758,"line_start":186,"line_end":186,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96908,"byte_end":96911,"line_start":192,"line_end":192,"column_start":16,"column_end":19},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96875,"byte_end":96892,"line_start":191,"line_end":191,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97040,"byte_end":97044,"line_start":197,"line_end":197,"column_start":16,"column_end":20},"name":"read","qualname":"<RwLock<T>>::read","value":"pub fn read(&Self) -> RwLockReadGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97007,"byte_end":97024,"line_start":196,"line_end":196,"column_start":9,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97198,"byte_end":97203,"line_start":203,"line_end":203,"column_start":16,"column_end":21},"name":"write","qualname":"<RwLock<T>>::write","value":"pub fn write(&Self) -> RwLockWriteGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Panics if already locked.\n","sig":null,"attributes":[{"value":"/ Panics if already locked.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97127,"byte_end":97156,"line_start":201,"line_end":201,"column_start":9,"column_end":38}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97165,"byte_end":97182,"line_start":202,"line_end":202,"column_start":9,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1645},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99085,"byte_end":99091,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Shadow","qualname":"::shadow::Shadow","value":"Shadow { extrusion, color }","parent":null,"children":[{"krate":0,"index":1646},{"krate":0,"index":1647}],"decl_id":null,"docs":" The color and fuzziness of a fuzzy shape.\n Can be used for a rectangular shadow with a soft penumbra.\n","sig":null,"attributes":[{"value":"/ The color and fuzziness of a fuzzy shape.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":98838,"byte_end":98883,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"/ Can be used for a rectangular shadow with a soft penumbra.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":98884,"byte_end":98946,"line_start":4,"line_end":4,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1646},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99197,"byte_end":99206,"line_start":10,"line_end":10,"column_start":9,"column_end":18},"name":"extrusion","qualname":"::shadow::Shadow::extrusion","value":"f32","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":" The shadow extends this much outside the rect.\n The size of the fuzzy penumbra.\n","sig":null,"attributes":[{"value":"/ The shadow extends this much outside the rect.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99098,"byte_end":99148,"line_start":8,"line_end":8,"column_start":5,"column_end":55}},{"value":"/ The size of the fuzzy penumbra.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99153,"byte_end":99188,"line_start":9,"line_end":9,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1647},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99272,"byte_end":99277,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"color","qualname":"::shadow::Shadow::color","value":"color::Color32","parent":{"krate":0,"index":1645},"children":[],"decl_id":null,"docs":" Color of the opaque center of the shadow.\n","sig":null,"attributes":[{"value":"/ Color of the opaque center of the shadow.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99218,"byte_end":99263,"line_start":12,"line_end":12,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99345,"byte_end":99355,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"small_dark","qualname":"<Shadow>::small_dark","value":"pub fn small_dark() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tooltips, menus, …\n","sig":null,"attributes":[{"value":"/ Tooltips, menus, …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99309,"byte_end":99333,"line_start":17,"line_end":17,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99519,"byte_end":99530,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"small_light","qualname":"<Shadow>::small_light","value":"pub fn small_light() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tooltips, menus, …\n","sig":null,"attributes":[{"value":"/ Tooltips, menus, …","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99483,"byte_end":99507,"line_start":25,"line_end":25,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99709,"byte_end":99717,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"big_dark","qualname":"<Shadow>::big_dark","value":"pub fn big_dark() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtle and nice on dark backgrounds\n","sig":null,"attributes":[{"value":"/ Subtle and nice on dark backgrounds","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99658,"byte_end":99697,"line_start":33,"line_end":33,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99897,"byte_end":99906,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"big_light","qualname":"<Shadow>::big_light","value":"pub fn big_light() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Subtle and nice on white backgrounds\n","sig":null,"attributes":[{"value":"/ Subtle and nice on white backgrounds","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99845,"byte_end":99885,"line_start":41,"line_end":41,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":100041,"byte_end":100051,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"tessellate","qualname":"<Shadow>::tessellate","value":"pub fn tessellate<impl Into<Rounding>: Into<Rounding>>(&Self, emath::Rect,\n                                                       impl Into<Rounding>)\n-> Mesh","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1660},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101380,"byte_end":101384,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Noop","qualname":"::shape::Shape::Noop","value":"Shape::Noop","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" Paint nothing. This can be useful as a placeholder.\n","sig":null,"attributes":[{"value":"/ Paint nothing. This can be useful as a placeholder.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101320,"byte_end":101375,"line_start":13,"line_end":13,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1662},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101529,"byte_end":101532,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"Vec","qualname":"::shape::Shape::Vec","value":"Shape::Vec(Vec<Shape>)","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" Recursively nest more shapes - sometimes a convenience to be able to do.\n For performance reasons it is better to avoid it.\n","sig":null,"attributes":[{"value":"/ Recursively nest more shapes - sometimes a convenience to be able to do.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101390,"byte_end":101466,"line_start":15,"line_end":15,"column_start":5,"column_end":81}},{"value":"/ For performance reasons it is better to avoid it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101471,"byte_end":101524,"line_start":16,"line_end":16,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101550,"byte_end":101556,"line_start":18,"line_end":18,"column_start":5,"column_end":11},"name":"Circle","qualname":"::shape::Shape::Circle","value":"Shape::Circle(CircleShape)","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":1668},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101610,"byte_end":101621,"line_start":20,"line_end":20,"column_start":5,"column_end":16},"name":"LineSegment","qualname":"::shape::Shape::LineSegment","value":"Shape::LineSegment { points, stroke }","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" A line between two points.\n","sig":null,"attributes":[{"value":"/ A line between two points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101575,"byte_end":101605,"line_start":19,"line_end":19,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1672},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101788,"byte_end":101792,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Path","qualname":"::shape::Shape::Path","value":"Shape::Path(PathShape)","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":" A series of lines between points.\n The path can have a stroke and/or fill (if closed).\n","sig":null,"attributes":[{"value":"/ A series of lines between points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101686,"byte_end":101723,"line_start":24,"line_end":24,"column_start":5,"column_end":42}},{"value":"/ The path can have a stroke and/or fill (if closed).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101728,"byte_end":101783,"line_start":25,"line_end":25,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1675},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101809,"byte_end":101813,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Rect","qualname":"::shape::Shape::Rect","value":"Shape::Rect(RectShape)","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1678},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101830,"byte_end":101834,"line_start":28,"line_end":28,"column_start":5,"column_end":9},"name":"Text","qualname":"::shape::Shape::Text","value":"Shape::Text(TextShape)","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1681},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101851,"byte_end":101855,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Mesh","qualname":"::shape::Shape::Mesh","value":"Shape::Mesh(Mesh)","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1684},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101867,"byte_end":101882,"line_start":30,"line_end":30,"column_start":5,"column_end":20},"name":"QuadraticBezier","qualname":"::shape::Shape::QuadraticBezier","value":"Shape::QuadraticBezier(QuadraticBezierShape)","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101910,"byte_end":101921,"line_start":31,"line_end":31,"column_start":5,"column_end":16},"name":"CubicBezier","qualname":"::shape::Shape::CubicBezier","value":"Shape::CubicBezier(CubicBezierShape)","parent":{"krate":0,"index":1659},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1659},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101308,"byte_end":101313,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Shape","qualname":"::shape::Shape","value":"pub enum Shape {\n    Noop,\n    Vec(Vec<Shape>),\n    Circle(CircleShape),\n    LineSegment {\n        points: [Pos2; ],\n        stroke: Stroke,\n    },\n    Path(PathShape),\n    Rect(RectShape),\n    Text(TextShape),\n    Mesh(Mesh),\n    QuadraticBezier(QuadraticBezierShape),\n    CubicBezier(CubicBezierShape),\n}","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1665},{"krate":0,"index":1668},{"krate":0,"index":1672},{"krate":0,"index":1675},{"krate":0,"index":1678},{"krate":0,"index":1681},{"krate":0,"index":1684},{"krate":0,"index":1687}],"decl_id":null,"docs":" A paint primitive such as a circle or a piece of text.\n Coordinates are all screen space points (not physical pixels).\n","sig":null,"attributes":[{"value":"/ A paint primitive such as a circle or a piece of text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101097,"byte_end":101155,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/ Coordinates are all screen space points (not physical pixels).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101156,"byte_end":101222,"line_start":9,"line_end":9,"column_start":1,"column_end":67}},{"value":"must_use = \"Add a Shape to a Painter\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101223,"byte_end":101263,"line_start":10,"line_end":10,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102340,"byte_end":102352,"line_start":53,"line_end":53,"column_start":12,"column_end":24},"name":"line_segment","qualname":"<Shape>::line_segment","value":"pub fn line_segment<impl Into<Stroke>: Into<Stroke>>([Pos2; ],\n                                                     impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A line between two points.\n More efficient than calling [`Self::line`].\n","sig":null,"attributes":[{"value":"/ A line between two points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102232,"byte_end":102262,"line_start":50,"line_end":50,"column_start":5,"column_end":35}},{"value":"/ More efficient than calling [`Self::line`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102267,"byte_end":102314,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102319,"byte_end":102328,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102660,"byte_end":102664,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"line","qualname":"<Shape>::line","value":"pub fn line<impl Into<Stroke>: Into<Stroke>>(Vec<Pos2>, impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A line through many points.","sig":null,"attributes":[{"value":"/ A line through many points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102513,"byte_end":102544,"line_start":60,"line_end":60,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102549,"byte_end":102552,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Use [`Self::line_segment`] instead if your line only connects two points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102557,"byte_end":102634,"line_start":62,"line_end":62,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102639,"byte_end":102648,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102863,"byte_end":102874,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"closed_line","qualname":"<Shape>::closed_line","value":"pub fn closed_line<impl Into<Stroke>: Into<Stroke>>(Vec<Pos2>,\n                                                    impl Into<Stroke>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A line that closes back to the start point again.\n","sig":null,"attributes":[{"value":"/ A line that closes back to the start point again.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102784,"byte_end":102837,"line_start":68,"line_end":68,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102842,"byte_end":102851,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":103054,"byte_end":103065,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"dotted_line","qualname":"<Shape>::dotted_line","value":"pub fn dotted_line<impl Into<Color32>: Into<Color32>>(&[Pos2],\n                                                      impl Into<Color32>, f32,\n                                                      f32) -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Turn a line into equally spaced dots.\n","sig":null,"attributes":[{"value":"/ Turn a line into equally spaced dots.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":103001,"byte_end":103042,"line_start":74,"line_end":74,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":103368,"byte_end":103379,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"dashed_line","qualname":"<Shape>::dashed_line","value":"pub fn dashed_line<impl Into<Stroke>: Into<Stroke>>(&[Pos2],\n                                                    impl Into<Stroke>, f32,\n                                                    f32) -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Turn a line into dashes.\n","sig":null,"attributes":[{"value":"/ Turn a line into dashes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":103328,"byte_end":103356,"line_start":86,"line_end":86,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":103789,"byte_end":103805,"line_start":100,"line_end":100,"column_start":12,"column_end":28},"name":"dashed_line_many","qualname":"<Shape>::dashed_line_many","value":"pub fn dashed_line_many<impl Into<Stroke>: Into<Stroke>>(&[Pos2],\n                                                         impl Into<Stroke>,\n                                                         f32, f32,\n                                                         &mut Vec<Shape>)","parent":null,"children":[],"decl_id":null,"docs":" Turn a line into dashes. If you need to create many dashed lines use this instead of\n [`Self::dashed_line`]\n","sig":null,"attributes":[{"value":"/ Turn a line into dashes. If you need to create many dashed lines use this instead of","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":103659,"byte_end":103747,"line_start":98,"line_end":98,"column_start":5,"column_end":93}},{"value":"/ [`Self::dashed_line`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":103752,"byte_end":103777,"line_start":99,"line_end":99,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104195,"byte_end":104209,"line_start":114,"line_end":114,"column_start":12,"column_end":26},"name":"convex_polygon","qualname":"<Shape>::convex_polygon","value":"pub fn convex_polygon<impl Into<Color32>: Into<Color32>,\n                      impl Into<Stroke>: Into<Stroke>>(Vec<Pos2>,\n                                                       impl Into<Color32>,\n                                                       impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A convex polygon with a fill and optional stroke.","sig":null,"attributes":[{"value":"/ A convex polygon with a fill and optional stroke.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104052,"byte_end":104105,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104110,"byte_end":104113,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ The most performant winding order is clockwise.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104118,"byte_end":104169,"line_start":112,"line_end":112,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104174,"byte_end":104183,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104423,"byte_end":104436,"line_start":123,"line_end":123,"column_start":12,"column_end":25},"name":"circle_filled","qualname":"<Shape>::circle_filled","value":"pub fn circle_filled<impl Into<Color32>: Into<Color32>>(Pos2, f32,\n                                                        impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104402,"byte_end":104411,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104608,"byte_end":104621,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"circle_stroke","qualname":"<Shape>::circle_stroke","value":"pub fn circle_stroke<impl Into<Stroke>: Into<Stroke>>(Pos2, f32,\n                                                      impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104587,"byte_end":104596,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104784,"byte_end":104795,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"rect_filled","qualname":"<Shape>::rect_filled","value":"pub fn rect_filled<impl Into<Rounding>: Into<Rounding>,\n                   impl Into<Color32>: Into<Color32>>(Rect,\n                                                      impl Into<Rounding>,\n                                                      impl Into<Color32>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104763,"byte_end":104772,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":105010,"byte_end":105021,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"rect_stroke","qualname":"<Shape>::rect_stroke","value":"pub fn rect_stroke<impl Into<Rounding>: Into<Rounding>,\n                   impl Into<Stroke>: Into<Stroke>>(Rect, impl Into<Rounding>,\n                                                    impl Into<Stroke>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":104989,"byte_end":104998,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":105258,"byte_end":105262,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"text","qualname":"<Shape>::text","value":"pub fn text<impl ToString: ToString>(&Fonts, Pos2, Align2, impl ToString,\n                                     FontId, Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":105206,"byte_end":105246,"line_start":150,"line_end":150,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":105652,"byte_end":105658,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"galley","qualname":"<Shape>::galley","value":"pub fn galley(Pos2, crate::mutex::Arc<Galley>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":105631,"byte_end":105640,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":105776,"byte_end":105780,"line_start":169,"line_end":169,"column_start":12,"column_end":16},"name":"mesh","qualname":"<Shape>::mesh","value":"pub fn mesh(Mesh) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":105957,"byte_end":105977,"line_start":175,"line_end":175,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<Shape>::visual_bounding_rect","value":"pub fn visual_bounding_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke widths)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke widths)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":105887,"byte_end":105945,"line_start":174,"line_end":174,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":107166,"byte_end":107176,"line_start":206,"line_end":206,"column_start":12,"column_end":22},"name":"texture_id","qualname":"<Shape>::texture_id","value":"pub fn texture_id(&Self) -> super::TextureId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":107137,"byte_end":107154,"line_start":205,"line_end":205,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":107415,"byte_end":107424,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"translate","qualname":"<Shape>::translate","value":"pub fn translate(&mut Self, Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Move the shape by this many points, in-place.\n","sig":null,"attributes":[{"value":"/ Move the shape by this many points, in-place.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":107354,"byte_end":107403,"line_start":214,"line_end":214,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109006,"byte_end":109017,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"CircleShape","qualname":"::shape::CircleShape","value":"CircleShape { center, radius, fill, stroke }","parent":null,"children":[{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702}],"decl_id":null,"docs":" How to paint a circle.\n","sig":null,"attributes":[{"value":"/ How to paint a circle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":108850,"byte_end":108876,"line_start":261,"line_end":261,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109028,"byte_end":109034,"line_start":265,"line_end":265,"column_start":9,"column_end":15},"name":"center","qualname":"::shape::CircleShape::center","value":"emath::Pos2","parent":{"krate":0,"index":1698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1700},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109050,"byte_end":109056,"line_start":266,"line_end":266,"column_start":9,"column_end":15},"name":"radius","qualname":"::shape::CircleShape::radius","value":"f32","parent":{"krate":0,"index":1698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109071,"byte_end":109075,"line_start":267,"line_end":267,"column_start":9,"column_end":13},"name":"fill","qualname":"::shape::CircleShape::fill","value":"color::Color32","parent":{"krate":0,"index":1698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1702},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109094,"byte_end":109100,"line_start":268,"line_end":268,"column_start":9,"column_end":15},"name":"stroke","qualname":"::shape::CircleShape::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":1698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109157,"byte_end":109163,"line_start":273,"line_end":273,"column_start":12,"column_end":18},"name":"filled","qualname":"<CircleShape>::filled","value":"pub fn filled<impl Into<Color32>: Into<Color32>>(Pos2, f32,\n                                                 impl Into<Color32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109136,"byte_end":109145,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109407,"byte_end":109413,"line_start":283,"line_end":283,"column_start":12,"column_end":18},"name":"stroke","qualname":"<CircleShape>::stroke","value":"pub fn stroke<impl Into<Stroke>: Into<Stroke>>(Pos2, f32, impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109386,"byte_end":109395,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109696,"byte_end":109716,"line_start":293,"line_end":293,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<CircleShape>::visual_bounding_rect","value":"pub fn visual_bounding_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke width)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke width)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109627,"byte_end":109684,"line_start":292,"line_end":292,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110415,"byte_end":110424,"line_start":317,"line_end":317,"column_start":12,"column_end":21},"name":"PathShape","qualname":"::shape::PathShape","value":"PathShape { points, closed, fill, stroke }","parent":null,"children":[{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716}],"decl_id":null,"docs":" A path which can be stroked and/or filled (if closed).\n","sig":null,"attributes":[{"value":"/ A path which can be stroked and/or filled (if closed).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110233,"byte_end":110291,"line_start":314,"line_end":314,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110487,"byte_end":110493,"line_start":319,"line_end":319,"column_start":9,"column_end":15},"name":"points","qualname":"::shape::PathShape::points","value":"std::vec::Vec<emath::Pos2>","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" Filled paths should prefer clockwise order.\n","sig":null,"attributes":[{"value":"/ Filled paths should prefer clockwise order.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110431,"byte_end":110478,"line_start":318,"line_end":318,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1714},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110633,"byte_end":110639,"line_start":322,"line_end":322,"column_start":9,"column_end":15},"name":"closed","qualname":"::shape::PathShape::closed","value":"bool","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" If true, connect the first and last of the points together.\n This is required if `fill != TRANSPARENT`.\n","sig":null,"attributes":[{"value":"/ If true, connect the first and last of the points together.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110510,"byte_end":110573,"line_start":320,"line_end":320,"column_start":5,"column_end":68}},{"value":"/ This is required if `fill != TRANSPARENT`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110578,"byte_end":110624,"line_start":321,"line_end":321,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1715},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110707,"byte_end":110711,"line_start":324,"line_end":324,"column_start":9,"column_end":13},"name":"fill","qualname":"::shape::PathShape::fill","value":"color::Color32","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":" Fill is only supported for convex polygons.\n","sig":null,"attributes":[{"value":"/ Fill is only supported for convex polygons.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110651,"byte_end":110698,"line_start":323,"line_end":323,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110730,"byte_end":110736,"line_start":325,"line_end":325,"column_start":9,"column_end":15},"name":"stroke","qualname":"::shape::PathShape::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":1712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110918,"byte_end":110922,"line_start":333,"line_end":333,"column_start":12,"column_end":16},"name":"line","qualname":"<PathShape>::line","value":"pub fn line<impl Into<Stroke>: Into<Stroke>>(Vec<Pos2>, impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A line through many points.","sig":null,"attributes":[{"value":"/ A line through many points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110770,"byte_end":110801,"line_start":329,"line_end":329,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110806,"byte_end":110809,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Use [`Shape::line_segment`] instead if your line only connects two points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110814,"byte_end":110892,"line_start":331,"line_end":331,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110897,"byte_end":110906,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111219,"byte_end":111230,"line_start":344,"line_end":344,"column_start":12,"column_end":23},"name":"closed_line","qualname":"<PathShape>::closed_line","value":"pub fn closed_line<impl Into<Stroke>: Into<Stroke>>(Vec<Pos2>,\n                                                    impl Into<Stroke>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A line that closes back to the start point again.\n","sig":null,"attributes":[{"value":"/ A line that closes back to the start point again.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111140,"byte_end":111193,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111198,"byte_end":111207,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111590,"byte_end":111604,"line_start":357,"line_end":357,"column_start":12,"column_end":26},"name":"convex_polygon","qualname":"<PathShape>::convex_polygon","value":"pub fn convex_polygon<impl Into<Color32>: Into<Color32>,\n                      impl Into<Stroke>: Into<Stroke>>(Vec<Pos2>,\n                                                       impl Into<Color32>,\n                                                       impl Into<Stroke>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" A convex polygon with a fill and optional stroke.","sig":null,"attributes":[{"value":"/ A convex polygon with a fill and optional stroke.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111447,"byte_end":111500,"line_start":353,"line_end":353,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111505,"byte_end":111508,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The most performant winding order is clockwise.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111513,"byte_end":111564,"line_start":355,"line_end":355,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111569,"byte_end":111578,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111954,"byte_end":111974,"line_start":372,"line_end":372,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<PathShape>::visual_bounding_rect","value":"pub fn visual_bounding_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke width)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke width)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111871,"byte_end":111928,"line_start":370,"line_end":370,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":111933,"byte_end":111942,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1725},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112573,"byte_end":112582,"line_start":393,"line_end":393,"column_start":12,"column_end":21},"name":"RectShape","qualname":"::shape::RectShape","value":"RectShape { rect, rounding, fill, stroke }","parent":null,"children":[{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729}],"decl_id":null,"docs":" How to paint a rectangle.\n","sig":null,"attributes":[{"value":"/ How to paint a rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112414,"byte_end":112443,"line_start":390,"line_end":390,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1726},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112593,"byte_end":112597,"line_start":394,"line_end":394,"column_start":9,"column_end":13},"name":"rect","qualname":"::shape::RectShape::rect","value":"emath::Rect","parent":{"krate":0,"index":1725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112690,"byte_end":112698,"line_start":396,"line_end":396,"column_start":9,"column_end":17},"name":"rounding","qualname":"::shape::RectShape::rounding","value":"shape::Rounding","parent":{"krate":0,"index":1725},"children":[],"decl_id":null,"docs":" How rounded the corners are. Use `Rounding::none()` for no rounding.\n","sig":null,"attributes":[{"value":"/ How rounded the corners are. Use `Rounding::none()` for no rounding.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112609,"byte_end":112681,"line_start":395,"line_end":395,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112718,"byte_end":112722,"line_start":397,"line_end":397,"column_start":9,"column_end":13},"name":"fill","qualname":"::shape::RectShape::fill","value":"color::Color32","parent":{"krate":0,"index":1725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112741,"byte_end":112747,"line_start":398,"line_end":398,"column_start":9,"column_end":15},"name":"stroke","qualname":"::shape::RectShape::stroke","value":"stroke::Stroke","parent":{"krate":0,"index":1725},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112802,"byte_end":112808,"line_start":403,"line_end":403,"column_start":12,"column_end":18},"name":"filled","qualname":"<RectShape>::filled","value":"pub fn filled<impl Into<Rounding>: Into<Rounding>,\n              impl Into<Color32>: Into<Color32>>(Rect, impl Into<Rounding>,\n                                                 impl Into<Color32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112781,"byte_end":112790,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":113116,"byte_end":113122,"line_start":417,"line_end":417,"column_start":12,"column_end":18},"name":"stroke","qualname":"<RectShape>::stroke","value":"pub fn stroke<impl Into<Rounding>: Into<Rounding>,\n              impl Into<Stroke>: Into<Stroke>>(Rect, impl Into<Rounding>,\n                                               impl Into<Stroke>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":113095,"byte_end":113104,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":113452,"byte_end":113472,"line_start":428,"line_end":428,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<RectShape>::visual_bounding_rect","value":"pub fn visual_bounding_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle (includes stroke width)\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle (includes stroke width)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":113369,"byte_end":113426,"line_start":426,"line_end":426,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":113431,"byte_end":113440,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1739},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":113986,"byte_end":113994,"line_start":447,"line_end":447,"column_start":12,"column_end":20},"name":"Rounding","qualname":"::shape::Rounding","value":"Rounding { nw, ne, sw, se }","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743}],"decl_id":null,"docs":" How rounded the corners of things should be\n","sig":null,"attributes":[{"value":"/ How rounded the corners of things should be","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":113927,"byte_end":113974,"line_start":446,"line_end":446,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1740},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114073,"byte_end":114075,"line_start":449,"line_end":449,"column_start":9,"column_end":11},"name":"nw","qualname":"::shape::Rounding::nw","value":"f32","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Radius of the rounding of the North-West (left top) corner.\n","sig":null,"attributes":[{"value":"/ Radius of the rounding of the North-West (left top) corner.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114001,"byte_end":114064,"line_start":448,"line_end":448,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114159,"byte_end":114161,"line_start":451,"line_end":451,"column_start":9,"column_end":11},"name":"ne","qualname":"::shape::Rounding::ne","value":"f32","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Radius of the rounding of the North-East (right top) corner.\n","sig":null,"attributes":[{"value":"/ Radius of the rounding of the North-East (right top) corner.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114086,"byte_end":114150,"line_start":450,"line_end":450,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1742},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114247,"byte_end":114249,"line_start":453,"line_end":453,"column_start":9,"column_end":11},"name":"sw","qualname":"::shape::Rounding::sw","value":"f32","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Radius of the rounding of the South-West (left bottom) corner.\n","sig":null,"attributes":[{"value":"/ Radius of the rounding of the South-West (left bottom) corner.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114172,"byte_end":114238,"line_start":452,"line_end":452,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1743},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114336,"byte_end":114338,"line_start":455,"line_end":455,"column_start":9,"column_end":11},"name":"se","qualname":"::shape::Rounding::se","value":"f32","parent":{"krate":0,"index":1739},"children":[],"decl_id":null,"docs":" Radius of the rounding of the South-East (right bottom) corner.\n","sig":null,"attributes":[{"value":"/ Radius of the rounding of the South-East (right bottom) corner.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114260,"byte_end":114327,"line_start":454,"line_end":454,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114697,"byte_end":114701,"line_start":479,"line_end":479,"column_start":12,"column_end":16},"name":"same","qualname":"<Rounding>::same","value":"pub fn same(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114676,"byte_end":114685,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114878,"byte_end":114882,"line_start":489,"line_end":489,"column_start":12,"column_end":16},"name":"none","qualname":"<Rounding>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114857,"byte_end":114866,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115083,"byte_end":115090,"line_start":500,"line_end":500,"column_start":12,"column_end":19},"name":"is_same","qualname":"<Rounding>::is_same","value":"pub fn is_same(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Do all corners have the same rounding?\n","sig":null,"attributes":[{"value":"/ Do all corners have the same rounding?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115015,"byte_end":115057,"line_start":498,"line_end":498,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115062,"byte_end":115071,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1753},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115430,"byte_end":115439,"line_start":510,"line_end":510,"column_start":12,"column_end":21},"name":"TextShape","qualname":"::shape::TextShape","value":"TextShape { pos, galley, underline, override_text_color, angle }","parent":null,"children":[{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756},{"krate":0,"index":1757},{"krate":0,"index":1758}],"decl_id":null,"docs":" How to paint some text on screen.\n","sig":null,"attributes":[{"value":"/ How to paint some text on screen.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115269,"byte_end":115306,"line_start":507,"line_end":507,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1754},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115498,"byte_end":115501,"line_start":512,"line_end":512,"column_start":9,"column_end":12},"name":"pos","qualname":"::shape::TextShape::pos","value":"emath::Pos2","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":" Top left corner of the first character.\n","sig":null,"attributes":[{"value":"/ Top left corner of the first character.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115446,"byte_end":115489,"line_start":511,"line_end":511,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115574,"byte_end":115580,"line_start":515,"line_end":515,"column_start":9,"column_end":15},"name":"galley","qualname":"::shape::TextShape::galley","value":"std::sync::Arc<text::text_layout_types::Galley>","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":" The layed out text, from [`Fonts::layout_job`].\n","sig":null,"attributes":[{"value":"/ The layed out text, from [`Fonts::layout_job`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115514,"byte_end":115565,"line_start":514,"line_end":514,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1756},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115728,"byte_end":115737,"line_start":519,"line_end":519,"column_start":9,"column_end":18},"name":"underline","qualname":"::shape::TextShape::underline","value":"stroke::Stroke","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":" Add this underline to the whole text.\n You can also set an underline when creating the galley.\n","sig":null,"attributes":[{"value":"/ Add this underline to the whole text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115614,"byte_end":115655,"line_start":517,"line_end":517,"column_start":5,"column_end":46}},{"value":"/ You can also set an underline when creating the galley.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115660,"byte_end":115719,"line_start":518,"line_end":518,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1757},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115942,"byte_end":115961,"line_start":524,"line_end":524,"column_start":9,"column_end":28},"name":"override_text_color","qualname":"::shape::TextShape::override_text_color","value":"std::option::Option<color::Color32>","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":" If set, the text color in the galley will be ignored and replaced\n with the given color.\n This will NOT replace background color nor strikethrough/underline color.\n","sig":null,"attributes":[{"value":"/ If set, the text color in the galley will be ignored and replaced","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115752,"byte_end":115821,"line_start":521,"line_end":521,"column_start":5,"column_end":74}},{"value":"/ with the given color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115826,"byte_end":115851,"line_start":522,"line_end":522,"column_start":5,"column_end":30}},{"value":"/ This will NOT replace background color nor strikethrough/underline color.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115856,"byte_end":115933,"line_start":523,"line_end":523,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1758},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116105,"byte_end":116110,"line_start":528,"line_end":528,"column_start":9,"column_end":14},"name":"angle","qualname":"::shape::TextShape::angle","value":"f32","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":" Rotate text by this many radians clockwise.\n The pivot is `pos` (the upper left corner of the text).\n","sig":null,"attributes":[{"value":"/ Rotate text by this many radians clockwise.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":115985,"byte_end":116032,"line_start":526,"line_end":526,"column_start":5,"column_end":52}},{"value":"/ The pivot is `pos` (the upper left corner of the text).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116037,"byte_end":116096,"line_start":527,"line_end":527,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116162,"byte_end":116165,"line_start":533,"line_end":533,"column_start":12,"column_end":15},"name":"new","qualname":"<TextShape>::new","value":"pub fn new(Pos2, crate::mutex::Arc<Galley>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116141,"byte_end":116150,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116456,"byte_end":116476,"line_start":545,"line_end":545,"column_start":12,"column_end":32},"name":"visual_bounding_rect","qualname":"<TextShape>::visual_bounding_rect","value":"pub fn visual_bounding_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" The visual bounding rectangle\n","sig":null,"attributes":[{"value":"/ The visual bounding rectangle","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116397,"byte_end":116430,"line_start":543,"line_end":543,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116435,"byte_end":116444,"line_start":544,"line_end":544,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape_transform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shape_transform","qualname":"::shape_transform","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape_transform.rs","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape_transform.rs","byte_start":118786,"byte_end":118799,"line_start":3,"line_end":3,"column_start":8,"column_end":21},"name":"adjust_colors","qualname":"::shape_transform::adjust_colors","value":"pub fn adjust_colors<impl Fn(&mut Color32): Fn(&mut Color32) ->\n                     ()>(&mut Shape, &impl Fn(&mut Color32))","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: match_same_arms)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape_transform.rs","byte_start":118863,"byte_end":118897,"line_start":4,"line_end":4,"column_start":5,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":508},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stats","qualname":"::stats","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":1767},{"krate":0,"index":1775},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":510},{"krate":0,"index":1782},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1793},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":533},{"krate":0,"index":1796},{"krate":0,"index":1807},{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":547},{"krate":0,"index":551}],"decl_id":null,"docs":" Collect statistics about what is being painted.\n","sig":null,"attributes":[{"value":"/ Collect statistics about what is being painted.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":120650,"byte_end":120701,"line_start":1,"line_end":1,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":121072,"byte_end":121081,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"AllocInfo","qualname":"::stats::AllocInfo","value":"AllocInfo {  }","parent":null,"children":[{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786}],"decl_id":null,"docs":" Aggregate information about a bunch of allocations.\n","sig":null,"attributes":[{"value":"/ Aggregate information about a bunch of allocations.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":120962,"byte_end":121017,"line_start":19,"line_end":19,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":122963,"byte_end":122974,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"from_galley","qualname":"<AllocInfo>::from_galley","value":"pub fn from_galley(&Galley) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":123321,"byte_end":123330,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"from_mesh","qualname":"<AllocInfo>::from_mesh","value":"pub fn from_mesh(&Mesh) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":123447,"byte_end":123457,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<AllocInfo>::from_slice","value":"pub fn from_slice<T>(&[T]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":123784,"byte_end":123796,"line_start":112,"line_end":112,"column_start":12,"column_end":24},"name":"num_elements","qualname":"<AllocInfo>::num_elements","value":"pub fn num_elements(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":123923,"byte_end":123933,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"num_allocs","qualname":"<AllocInfo>::num_allocs","value":"pub fn num_allocs(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":123993,"byte_end":124002,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"num_bytes","qualname":"<AllocInfo>::num_bytes","value":"pub fn num_bytes(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":124062,"byte_end":124071,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"megabytes","qualname":"<AllocInfo>::megabytes","value":"pub fn megabytes(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":124145,"byte_end":124151,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"format","qualname":"<AllocInfo>::format","value":"pub fn format(&Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125105,"byte_end":125115,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"PaintStats","qualname":"::stats::PaintStats","value":"PaintStats { shapes, shape_text, shape_path, shape_mesh, shape_vec, text_shape_vertices, text_shape_indices, clipped_meshes, vertices, indices }","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806}],"decl_id":null,"docs":" Collected allocation statistics for shapes and meshes.\n","sig":null,"attributes":[{"value":"/ Collected allocation statistics for shapes and meshes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125003,"byte_end":125061,"line_start":157,"line_end":157,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125126,"byte_end":125132,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"name":"shapes","qualname":"::stats::PaintStats::shapes","value":"stats::AllocInfo","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1798},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125153,"byte_end":125163,"line_start":161,"line_end":161,"column_start":9,"column_end":19},"name":"shape_text","qualname":"::stats::PaintStats::shape_text","value":"stats::AllocInfo","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125184,"byte_end":125194,"line_start":162,"line_end":162,"column_start":9,"column_end":19},"name":"shape_path","qualname":"::stats::PaintStats::shape_path","value":"stats::AllocInfo","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125215,"byte_end":125225,"line_start":163,"line_end":163,"column_start":9,"column_end":19},"name":"shape_mesh","qualname":"::stats::PaintStats::shape_mesh","value":"stats::AllocInfo","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1801},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125246,"byte_end":125255,"line_start":164,"line_end":164,"column_start":9,"column_end":18},"name":"shape_vec","qualname":"::stats::PaintStats::shape_vec","value":"stats::AllocInfo","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125277,"byte_end":125296,"line_start":166,"line_end":166,"column_start":9,"column_end":28},"name":"text_shape_vertices","qualname":"::stats::PaintStats::text_shape_vertices","value":"stats::AllocInfo","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125317,"byte_end":125335,"line_start":167,"line_end":167,"column_start":9,"column_end":27},"name":"text_shape_indices","qualname":"::stats::PaintStats::text_shape_indices","value":"stats::AllocInfo","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125400,"byte_end":125414,"line_start":170,"line_end":170,"column_start":9,"column_end":23},"name":"clipped_meshes","qualname":"::stats::PaintStats::clipped_meshes","value":"stats::AllocInfo","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" Number of separate clip rectangles\n","sig":null,"attributes":[{"value":"/ Number of separate clip rectangles","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125353,"byte_end":125391,"line_start":169,"line_end":169,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1805},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125435,"byte_end":125443,"line_start":171,"line_end":171,"column_start":9,"column_end":17},"name":"vertices","qualname":"::stats::PaintStats::vertices","value":"stats::AllocInfo","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1806},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125464,"byte_end":125471,"line_start":172,"line_end":172,"column_start":9,"column_end":16},"name":"indices","qualname":"::stats::PaintStats::indices","value":"stats::AllocInfo","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125516,"byte_end":125527,"line_start":176,"line_end":176,"column_start":12,"column_end":23},"name":"from_shapes","qualname":"<PaintStats>::from_shapes","value":"pub fn from_shapes(&[ClippedShape]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":127235,"byte_end":127254,"line_start":221,"line_end":221,"column_start":12,"column_end":31},"name":"with_clipped_meshes","qualname":"<PaintStats>::with_clipped_meshes","value":"pub fn with_clipped_meshes(Self, &[crate::ClippedMesh]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128339,"byte_end":128345,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Stroke","qualname":"::stroke::Stroke","value":"Stroke { width, color }","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1814}],"decl_id":null,"docs":" Describes the width and color of a line.","sig":null,"attributes":[{"value":"/ Describes the width and color of a line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128096,"byte_end":128140,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128141,"byte_end":128144,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The default stroke is the same as [`Stroke::none`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128145,"byte_end":128200,"line_start":7,"line_end":7,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128356,"byte_end":128361,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"width","qualname":"::stroke::Stroke::width","value":"f32","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128376,"byte_end":128381,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"color","qualname":"::stroke::Stroke::color","value":"color::Color32","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128479,"byte_end":128483,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"none","qualname":"<Stroke>::none","value":"pub fn none() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Same as [`Stroke::default`].\n","sig":null,"attributes":[{"value":"/ Same as [`Stroke::default`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128413,"byte_end":128445,"line_start":16,"line_end":16,"column_start":5,"column_end":37}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128450,"byte_end":128467,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128573,"byte_end":128576,"line_start":23,"line_end":23,"column_start":12,"column_end":15},"name":"new","qualname":"<Stroke>::new","value":"pub fn new<impl Into<f32>: Into<f32>,\n           impl Into<Color32>: Into<Color32>>(impl Into<f32>,\n                                              impl Into<Color32>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128552,"byte_end":128561,"line_start":22,"line_end":22,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128814,"byte_end":128822,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Stroke>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if width is zero or color is transparent\n","sig":null,"attributes":[{"value":"/ True if width is zero or color is transparent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128739,"byte_end":128788,"line_start":30,"line_end":30,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128793,"byte_end":128802,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tessellator","qualname":"::tessellator","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":1826},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":572},{"krate":0,"index":586},{"krate":0,"index":1844},{"krate":0,"index":1849},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":611},{"krate":0,"index":624}],"decl_id":null,"docs":" Converts graphics primitives into textured triangles.","sig":null,"attributes":[{"value":"/ Converts graphics primitives into textured triangles.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":129340,"byte_end":129397,"line_start":1,"line_end":1,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":129398,"byte_end":129401,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module converts lines, circles, text and more represented by [`Shape`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":129402,"byte_end":129481,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ into textured triangles represented by [`Mesh`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":129482,"byte_end":129534,"line_start":4,"line_end":4,"column_start":1,"column_end":53}},{"value":"allow(clippy :: identity_op)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":129536,"byte_end":129566,"line_start":6,"line_end":6,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1835},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130457,"byte_end":130461,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"Path","qualname":"::tessellator::Path","value":"","parent":null,"children":[],"decl_id":null,"docs":" A connected line (without thickness or gaps) which can be tessellated\n to either to a stroke (with thickness) or a filled convex area.\n Used as a scratch-pad during tessellation.\n","sig":null,"attributes":[{"value":"/ A connected line (without thickness or gaps) which can be tessellated","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130224,"byte_end":130297,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ to either to a stroke (with thickness) or a filled convex area.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130298,"byte_end":130365,"line_start":31,"line_end":31,"column_start":1,"column_end":68}},{"value":"/ Used as a scratch-pad during tessellation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130366,"byte_end":130412,"line_start":32,"line_end":32,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130525,"byte_end":130530,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"clear","qualname":"<Path>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130496,"byte_end":130513,"line_start":37,"line_end":37,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130608,"byte_end":130615,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Path>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130579,"byte_end":130596,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130724,"byte_end":130733,"line_start":48,"line_end":48,"column_start":12,"column_end":21},"name":"add_point","qualname":"<Path>::add_point","value":"pub fn add_point(&mut Self, Pos2, Vec2)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130695,"byte_end":130712,"line_start":47,"line_end":47,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130838,"byte_end":130848,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"add_circle","qualname":"<Path>::add_circle","value":"pub fn add_circle(&mut Self, Pos2, f32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":131267,"byte_end":131283,"line_start":63,"line_end":63,"column_start":12,"column_end":28},"name":"add_line_segment","qualname":"<Path>::add_line_segment","value":"pub fn add_line_segment(&mut Self, [Pos2; ])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":131512,"byte_end":131527,"line_start":70,"line_end":70,"column_start":12,"column_end":27},"name":"add_open_points","qualname":"<Path>::add_open_points","value":"pub fn add_open_points(&mut Self, &[Pos2])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":133278,"byte_end":133291,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"add_line_loop","qualname":"<Path>::add_line_loop","value":"pub fn add_line_loop(&mut Self, &[Pos2])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":135247,"byte_end":135258,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"stroke_open","qualname":"<Path>::stroke_open","value":"pub fn stroke_open(&Self, Stroke, &TessellationOptions, &mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Open-ended.\n","sig":null,"attributes":[{"value":"/ Open-ended.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":135220,"byte_end":135235,"line_start":165,"line_end":165,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":135471,"byte_end":135484,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"stroke_closed","qualname":"<Path>::stroke_closed","value":"pub fn stroke_closed(&Self, Stroke, &TessellationOptions, &mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" A closed path (returning to the first point).\n","sig":null,"attributes":[{"value":"/ A closed path (returning to the first point).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":135410,"byte_end":135459,"line_start":170,"line_end":170,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":135645,"byte_end":135651,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"stroke","qualname":"<Path>::stroke","value":"pub fn stroke(&Self, PathType, Stroke, &TessellationOptions, &mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":136106,"byte_end":136110,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"fill","qualname":"<Path>::fill","value":"pub fn fill(&mut Self, Color32, &TessellationOptions, &mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" The path is taken to be closed (i.e. returning to the start again).","sig":null,"attributes":[{"value":"/ The path is taken to be closed (i.e. returning to the start again).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":135866,"byte_end":135937,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":135942,"byte_end":135945,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Calling this may reverse the vertices in the path if they are wrong winding order.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":135950,"byte_end":136036,"line_start":187,"line_end":187,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":136041,"byte_end":136044,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The preferred winding order is clockwise.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":136049,"byte_end":136094,"line_start":189,"line_end":189,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":136264,"byte_end":136268,"line_start":195,"line_end":195,"column_start":9,"column_end":13},"name":"path","qualname":"::tessellator::path","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":594}],"decl_id":null,"docs":" Helpers for constructing paths\n","sig":null,"attributes":[{"value":"/ Helpers for constructing paths","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":136275,"byte_end":136309,"line_start":196,"line_end":196,"column_start":5,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":136408,"byte_end":136425,"line_start":202,"line_end":202,"column_start":12,"column_end":29},"name":"rounded_rectangle","qualname":"::tessellator::path::rounded_rectangle","value":"pub fn rounded_rectangle(&mut Vec<Pos2>, Rect, Rounding)","parent":null,"children":[],"decl_id":null,"docs":" overwrites existing points\n","sig":null,"attributes":[{"value":"/ overwrites existing points","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":136366,"byte_end":136396,"line_start":201,"line_end":201,"column_start":5,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":592},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":137865,"byte_end":137884,"line_start":244,"line_end":244,"column_start":12,"column_end":31},"name":"add_circle_quadrant","qualname":"::tessellator::path::add_circle_quadrant","value":"pub fn add_circle_quadrant(&mut Vec<Pos2>, Pos2, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Add one quadrant of a circle","sig":null,"attributes":[{"value":"/ Add one quadrant of a circle","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":137339,"byte_end":137371,"line_start":226,"line_end":226,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":137376,"byte_end":137379,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ * quadrant 0: right bottom","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":137384,"byte_end":137414,"line_start":228,"line_end":228,"column_start":5,"column_end":35}},{"value":"/ * quadrant 1: left bottom","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":137419,"byte_end":137448,"line_start":229,"line_end":229,"column_start":5,"column_end":34}},{"value":"/ * quadrant 2: left top","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":137453,"byte_end":137479,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/ * quadrant 3: right top","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":137484,"byte_end":137511,"line_start":231,"line_end":231,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1845},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139184,"byte_end":139188,"line_start":280,"line_end":280,"column_start":5,"column_end":9},"name":"Open","qualname":"::tessellator::PathType::Open","value":"PathType::Open","parent":{"krate":0,"index":1844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1847},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139194,"byte_end":139200,"line_start":281,"line_end":281,"column_start":5,"column_end":11},"name":"Closed","qualname":"::tessellator::PathType::Closed","value":"PathType::Closed","parent":{"krate":0,"index":1844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1844},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139169,"byte_end":139177,"line_start":279,"line_end":279,"column_start":10,"column_end":18},"name":"PathType","qualname":"::tessellator::PathType","value":"pub enum PathType { Open, Closed, }","parent":null,"children":[{"krate":0,"index":1845},{"krate":0,"index":1847}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1855},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139414,"byte_end":139433,"line_start":288,"line_end":288,"column_start":12,"column_end":31},"name":"TessellationOptions","qualname":"::tessellator::TessellationOptions","value":"TessellationOptions { pixels_per_point, aa_size, anti_alias, coarse_tessellation_culling, round_text_to_pixels, debug_paint_clip_rects, debug_paint_text_rects, debug_ignore_clip_rects, bezier_tolerance, epsilon }","parent":null,"children":[{"krate":0,"index":1856},{"krate":0,"index":1857},{"krate":0,"index":1858},{"krate":0,"index":1859},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865}],"decl_id":null,"docs":" Tessellation quality options\n","sig":null,"attributes":[{"value":"/ Tessellation quality options","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139205,"byte_end":139237,"line_start":284,"line_end":284,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1856},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139542,"byte_end":139558,"line_start":290,"line_end":290,"column_start":9,"column_end":25},"name":"pixels_per_point","qualname":"::tessellator::TessellationOptions::pixels_per_point","value":"f32","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Size of a point in pixels (DPI scaling), e.g. 2.0. Used to snap text to pixel boundaries.\n","sig":null,"attributes":[{"value":"/ Size of a point in pixels (DPI scaling), e.g. 2.0. Used to snap text to pixel boundaries.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139440,"byte_end":139533,"line_start":289,"line_end":289,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":1857},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139794,"byte_end":139801,"line_start":295,"line_end":295,"column_start":9,"column_end":16},"name":"aa_size","qualname":"::tessellator::TessellationOptions::aa_size","value":"f32","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" The size of a pixel (in points), used for anti-aliasing (smoothing of edges).\n This is normally the inverse of [`Self::pixels_per_point`],\n but you can make it larger if you want more blurry edges.\n","sig":null,"attributes":[{"value":"/ The size of a pixel (in points), used for anti-aliasing (smoothing of edges).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139570,"byte_end":139651,"line_start":292,"line_end":292,"column_start":5,"column_end":86}},{"value":"/ This is normally the inverse of [`Self::pixels_per_point`],","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139656,"byte_end":139719,"line_start":293,"line_end":293,"column_start":5,"column_end":68}},{"value":"/ but you can make it larger if you want more blurry edges.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139724,"byte_end":139785,"line_start":294,"line_end":294,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1858},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139990,"byte_end":140000,"line_start":300,"line_end":300,"column_start":9,"column_end":19},"name":"anti_alias","qualname":"::tessellator::TessellationOptions::anti_alias","value":"bool","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Anti-aliasing makes shapes appear smoother, but requires more triangles and is therefore slower.\n This setting does not affect text.\n Default: `true`.\n","sig":null,"attributes":[{"value":"/ Anti-aliasing makes shapes appear smoother, but requires more triangles and is therefore slower.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139813,"byte_end":139913,"line_start":297,"line_end":297,"column_start":5,"column_end":105}},{"value":"/ This setting does not affect text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139918,"byte_end":139956,"line_start":298,"line_end":298,"column_start":5,"column_end":43}},{"value":"/ Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":139961,"byte_end":139981,"line_start":299,"line_end":299,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1859},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140121,"byte_end":140148,"line_start":304,"line_end":304,"column_start":9,"column_end":36},"name":"coarse_tessellation_culling","qualname":"::tessellator::TessellationOptions::coarse_tessellation_culling","value":"bool","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" If `true` (default) cull certain primitives before tessellating them.\n This likely makes\n","sig":null,"attributes":[{"value":"/ If `true` (default) cull certain primitives before tessellating them.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140013,"byte_end":140086,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ This likely makes","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140091,"byte_end":140112,"line_start":303,"line_end":303,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1860},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140273,"byte_end":140293,"line_start":308,"line_end":308,"column_start":9,"column_end":29},"name":"round_text_to_pixels","qualname":"::tessellator::TessellationOptions::round_text_to_pixels","value":"bool","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" If `true` (default) align text to mesh grid.\n This makes the text sharper on most platforms.\n","sig":null,"attributes":[{"value":"/ If `true` (default) align text to mesh grid.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140161,"byte_end":140209,"line_start":306,"line_end":306,"column_start":5,"column_end":53}},{"value":"/ This makes the text sharper on most platforms.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140214,"byte_end":140264,"line_start":307,"line_end":307,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1861},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140360,"byte_end":140382,"line_start":311,"line_end":311,"column_start":9,"column_end":31},"name":"debug_paint_clip_rects","qualname":"::tessellator::TessellationOptions::debug_paint_clip_rects","value":"bool","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Output the clip rectangles to be painted.\n","sig":null,"attributes":[{"value":"/ Output the clip rectangles to be painted.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140306,"byte_end":140351,"line_start":310,"line_end":310,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1862},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140446,"byte_end":140468,"line_start":314,"line_end":314,"column_start":9,"column_end":31},"name":"debug_paint_text_rects","qualname":"::tessellator::TessellationOptions::debug_paint_text_rects","value":"bool","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" Output the text-containing rectangles.\n","sig":null,"attributes":[{"value":"/ Output the text-containing rectangles.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140395,"byte_end":140437,"line_start":313,"line_end":313,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1863},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140528,"byte_end":140551,"line_start":317,"line_end":317,"column_start":9,"column_end":32},"name":"debug_ignore_clip_rects","qualname":"::tessellator::TessellationOptions::debug_ignore_clip_rects","value":"bool","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" If true, no clipping will be done.\n","sig":null,"attributes":[{"value":"/ If true, no clipping will be done.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140481,"byte_end":140519,"line_start":316,"line_end":316,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1864},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140649,"byte_end":140665,"line_start":320,"line_end":320,"column_start":9,"column_end":25},"name":"bezier_tolerance","qualname":"::tessellator::TessellationOptions::bezier_tolerance","value":"f32","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" The maximum distance between the original curve and the flattened curve.\n","sig":null,"attributes":[{"value":"/ The maximum distance between the original curve and the flattened curve.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140564,"byte_end":140640,"line_start":319,"line_end":319,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1865},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140761,"byte_end":140768,"line_start":323,"line_end":323,"column_start":9,"column_end":16},"name":"epsilon","qualname":"::tessellator::TessellationOptions::epsilon","value":"f32","parent":{"krate":0,"index":1855},"children":[],"decl_id":null,"docs":" The default value will be 1.0e-5, it will be used during float compare.\n","sig":null,"attributes":[{"value":"/ The default value will be 1.0e-5, it will be used during float compare.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140677,"byte_end":140752,"line_start":322,"line_end":322,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":141288,"byte_end":141309,"line_start":344,"line_end":344,"column_start":12,"column_end":33},"name":"from_pixels_per_point","qualname":"<TessellationOptions>::from_pixels_per_point","value":"pub fn from_pixels_per_point(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":141545,"byte_end":141559,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"round_to_pixel","qualname":"<TessellationOptions>::round_to_pixel","value":"pub fn round_to_pixel(&Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":141516,"byte_end":141533,"line_start":354,"line_end":354,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154184,"byte_end":154195,"line_start":679,"line_end":679,"column_start":12,"column_end":23},"name":"Tessellator","qualname":"::tessellator::Tessellator","value":"Tessellator {  }","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"decl_id":null,"docs":" Converts [`Shape`]s into triangles ([`Mesh`]).","sig":null,"attributes":[{"value":"/ Converts [`Shape`]s into triangles ([`Mesh`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":153961,"byte_end":154011,"line_start":674,"line_end":674,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154012,"byte_end":154015,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ For performance reasons it is smart to reuse the same `Tessellator`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154016,"byte_end":154088,"line_start":676,"line_end":676,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154089,"byte_end":154092,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ Se also [`tessellate_shapes`], a convenient wrapper around [`Tessellator`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154093,"byte_end":154172,"line_start":678,"line_end":678,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154415,"byte_end":154427,"line_start":689,"line_end":689,"column_start":12,"column_end":24},"name":"from_options","qualname":"<Tessellator>::from_options","value":"pub fn from_options(TessellationOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Tessellator`].\n","sig":null,"attributes":[{"value":"/ Create a new [`Tessellator`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154370,"byte_end":154403,"line_start":688,"line_end":688,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154921,"byte_end":154937,"line_start":703,"line_end":703,"column_start":12,"column_end":28},"name":"tessellate_shape","qualname":"<Tessellator>::tessellate_shape","value":"pub fn tessellate_shape(&mut Self, [usize; ], Shape, &mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":" Tessellate a single [`Shape`] into a [`Mesh`].","sig":null,"attributes":[{"value":"/ Tessellate a single [`Shape`] into a [`Mesh`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154666,"byte_end":154716,"line_start":698,"line_end":698,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154721,"byte_end":154724,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ * `tex_size`: size of the font texture (required to normalize glyph uv rectangles).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154729,"byte_end":154816,"line_start":700,"line_end":700,"column_start":5,"column_end":92}},{"value":"/ * `shape`: the shape to tessellate.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154821,"byte_end":154860,"line_start":701,"line_end":701,"column_start":5,"column_end":44}},{"value":"/ * `out`: triangles are appended to this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154865,"byte_end":154909,"line_start":702,"line_end":702,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":162325,"byte_end":162340,"line_start":938,"line_end":938,"column_start":12,"column_end":27},"name":"tessellate_text","qualname":"<Tessellator>::tessellate_text","value":"pub fn tessellate_text(&mut Self, [usize; ], TextShape, &mut Mesh)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165967,"byte_end":165984,"line_start":1045,"line_end":1045,"column_start":8,"column_end":25},"name":"tessellate_shapes","qualname":"::tessellator::tessellate_shapes","value":"pub fn tessellate_shapes(Vec<ClippedShape>, TessellationOptions, [usize; ])\n-> Vec<ClippedMesh>","parent":null,"children":[],"decl_id":null,"docs":" Turns [`Shape`]:s into sets of triangles.","sig":null,"attributes":[{"value":"/ Turns [`Shape`]:s into sets of triangles.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165494,"byte_end":165539,"line_start":1032,"line_end":1032,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165540,"byte_end":165543,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ The given shapes will tessellated in the same order as they are given.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165544,"byte_end":165618,"line_start":1034,"line_end":1034,"column_start":1,"column_end":75}},{"value":"/ They will be batched together by clip rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165619,"byte_end":165671,"line_start":1035,"line_end":1035,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165672,"byte_end":165675,"line_start":1036,"line_end":1036,"column_start":1,"column_end":4}},{"value":"/ * `shapes`: what to tessellate","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165676,"byte_end":165710,"line_start":1037,"line_end":1037,"column_start":1,"column_end":35}},{"value":"/ * `options`: tessellation quality","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165711,"byte_end":165748,"line_start":1038,"line_end":1038,"column_start":1,"column_end":38}},{"value":"/ * `tex_size`: size of the font texture (required to normalize glyph uv rectangles)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165749,"byte_end":165835,"line_start":1039,"line_end":1039,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165836,"byte_end":165839,"line_start":1040,"line_end":1040,"column_start":1,"column_end":4}},{"value":"/ The implementation uses a [`Tessellator`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165840,"byte_end":165886,"line_start":1041,"line_end":1041,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165887,"byte_end":165890,"line_start":1042,"line_end":1042,"column_start":1,"column_end":4}},{"value":"/ ## Returns","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165891,"byte_end":165905,"line_start":1043,"line_end":1043,"column_start":1,"column_end":15}},{"value":"/ A list of clip rectangles with matching [`Mesh`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":165906,"byte_end":165959,"line_start":1044,"line_end":1044,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"text","qualname":"::text","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":644},{"krate":0,"index":749},{"krate":0,"index":870},{"krate":0,"index":948},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1056},{"krate":0,"index":1057}],"decl_id":null,"docs":" Everything related to text, fonts, text layout, cursors etc.\n","sig":null,"attributes":[{"value":"/ Everything related to text, fonts, text layout, cursors etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":167860,"byte_end":167924,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"cursor","qualname":"::text::cursor","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1883},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":640},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1893},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1908},{"krate":0,"index":642},{"krate":0,"index":1910},{"krate":0,"index":1914},{"krate":0,"index":1916},{"krate":0,"index":1917},{"krate":0,"index":1919}],"decl_id":null,"docs":" Different types of text cursors, i.e. ways to point into a [`super::Galley`].\n","sig":null,"attributes":[{"value":"/ Different types of text cursors, i.e. ways to point into a [`super::Galley`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168364,"byte_end":168445,"line_start":1,"line_end":1,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168595,"byte_end":168602,"line_start":6,"line_end":6,"column_start":12,"column_end":19},"name":"CCursor","qualname":"::text::cursor::CCursor","value":"CCursor { index, prefer_next_row }","parent":null,"children":[{"krate":0,"index":1876},{"krate":0,"index":1877}],"decl_id":null,"docs":" Character cursor\n","sig":null,"attributes":[{"value":"/ Character cursor","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168447,"byte_end":168467,"line_start":3,"line_end":3,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1876},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168658,"byte_end":168663,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"name":"index","qualname":"::text::cursor::CCursor::index","value":"usize","parent":{"krate":0,"index":1875},"children":[],"decl_id":null,"docs":" Character offset (NOT byte offset!).\n","sig":null,"attributes":[{"value":"/ Character offset (NOT byte offset!).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168609,"byte_end":168649,"line_start":7,"line_end":7,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1877},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168945,"byte_end":168960,"line_start":14,"line_end":14,"column_start":9,"column_end":24},"name":"prefer_next_row","qualname":"::text::cursor::CCursor::prefer_next_row","value":"bool","parent":{"krate":0,"index":1875},"children":[],"decl_id":null,"docs":" If this cursors sits right at the border of a wrapped row break (NOT paragraph break)\n do we prefer the next row?\n This is *almost* always what you want, *except* for when\n explicitly clicking the end of a row or pressing the end key.\n","sig":null,"attributes":[{"value":"/ If this cursors sits right at the border of a wrapped row break (NOT paragraph break)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168677,"byte_end":168766,"line_start":10,"line_end":10,"column_start":5,"column_end":94}},{"value":"/ do we prefer the next row?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168771,"byte_end":168801,"line_start":11,"line_end":11,"column_start":5,"column_end":35}},{"value":"/ This is *almost* always what you want, *except* for when","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168806,"byte_end":168866,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"/ explicitly clicking the end of a row or pressing the end key.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168871,"byte_end":168936,"line_start":13,"line_end":13,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168997,"byte_end":169000,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<CCursor>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1885},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170328,"byte_end":170335,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"RCursor","qualname":"::text::cursor::RCursor","value":"RCursor { row, column }","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1887}],"decl_id":null,"docs":" Row Cursor\n","sig":null,"attributes":[{"value":"/ Row Cursor","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170175,"byte_end":170189,"line_start":66,"line_end":66,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":1886},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170491,"byte_end":170494,"line_start":73,"line_end":73,"column_start":9,"column_end":12},"name":"row","qualname":"::text::cursor::RCursor::row","value":"usize","parent":{"krate":0,"index":1885},"children":[],"decl_id":null,"docs":" 0 is first row, and so on.\n Note that a single paragraph can span multiple rows.\n (a paragraph is text separated by `\\n`).\n","sig":null,"attributes":[{"value":"/ 0 is first row, and so on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170342,"byte_end":170372,"line_start":70,"line_end":70,"column_start":5,"column_end":35}},{"value":"/ Note that a single paragraph can span multiple rows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170377,"byte_end":170433,"line_start":71,"line_end":71,"column_start":5,"column_end":61}},{"value":"/ (a paragraph is text separated by `\\n`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170438,"byte_end":170482,"line_start":72,"line_end":72,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1887},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170696,"byte_end":170702,"line_start":78,"line_end":78,"column_start":9,"column_end":15},"name":"column","qualname":"::text::cursor::RCursor::column","value":"usize","parent":{"krate":0,"index":1885},"children":[],"decl_id":null,"docs":" Character based (NOT bytes).\n It is fine if this points to something beyond the end of the current row.\n When moving up/down it may again be within the next row.\n","sig":null,"attributes":[{"value":"/ Character based (NOT bytes).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170508,"byte_end":170540,"line_start":75,"line_end":75,"column_start":5,"column_end":37}},{"value":"/ It is fine if this points to something beyond the end of the current row.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170545,"byte_end":170622,"line_start":76,"line_end":76,"column_start":5,"column_end":82}},{"value":"/ When moving up/down it may again be within the next row.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170627,"byte_end":170687,"line_start":77,"line_end":77,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170862,"byte_end":170869,"line_start":84,"line_end":84,"column_start":12,"column_end":19},"name":"PCursor","qualname":"::text::cursor::PCursor","value":"PCursor { paragraph, offset, prefer_next_row }","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902}],"decl_id":null,"docs":" Paragraph Cursor\n","sig":null,"attributes":[{"value":"/ Paragraph Cursor","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170714,"byte_end":170734,"line_start":81,"line_end":81,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":1900},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171031,"byte_end":171040,"line_start":88,"line_end":88,"column_start":9,"column_end":18},"name":"paragraph","qualname":"::text::cursor::PCursor::paragraph","value":"usize","parent":{"krate":0,"index":1899},"children":[],"decl_id":null,"docs":" 0 is first paragraph, and so on.\n Note that a single paragraph can span multiple rows.\n (a paragraph is text separated by `\\n`).\n","sig":null,"attributes":[{"value":"/ 0 is first paragraph, and so on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170876,"byte_end":170912,"line_start":85,"line_end":85,"column_start":5,"column_end":41}},{"value":"/ Note that a single paragraph can span multiple rows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170917,"byte_end":170973,"line_start":86,"line_end":86,"column_start":5,"column_end":61}},{"value":"/ (a paragraph is text separated by `\\n`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170978,"byte_end":171022,"line_start":87,"line_end":87,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1901},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171254,"byte_end":171260,"line_start":93,"line_end":93,"column_start":9,"column_end":15},"name":"offset","qualname":"::text::cursor::PCursor::offset","value":"usize","parent":{"krate":0,"index":1899},"children":[],"decl_id":null,"docs":" Character based (NOT bytes).\n It is fine if this points to something beyond the end of the current paragraph.\n When moving up/down it may again be within the next paragraph.\n","sig":null,"attributes":[{"value":"/ Character based (NOT bytes).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171054,"byte_end":171086,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ It is fine if this points to something beyond the end of the current paragraph.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171091,"byte_end":171174,"line_start":91,"line_end":91,"column_start":5,"column_end":88}},{"value":"/ When moving up/down it may again be within the next paragraph.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171179,"byte_end":171245,"line_start":92,"line_end":92,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1902},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171542,"byte_end":171557,"line_start":99,"line_end":99,"column_start":9,"column_end":24},"name":"prefer_next_row","qualname":"::text::cursor::PCursor::prefer_next_row","value":"bool","parent":{"krate":0,"index":1899},"children":[],"decl_id":null,"docs":" If this cursors sits right at the border of a wrapped row break (NOT paragraph break)\n do we prefer the next row?\n This is *almost* always what you want, *except* for when\n explicitly clicking the end of a row or pressing the end key.\n","sig":null,"attributes":[{"value":"/ If this cursors sits right at the border of a wrapped row break (NOT paragraph break)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171274,"byte_end":171363,"line_start":95,"line_end":95,"column_start":5,"column_end":94}},{"value":"/ do we prefer the next row?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171368,"byte_end":171398,"line_start":96,"line_end":96,"column_start":5,"column_end":35}},{"value":"/ This is *almost* always what you want, *except* for when","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171403,"byte_end":171463,"line_start":97,"line_end":97,"column_start":5,"column_end":65}},{"value":"/ explicitly clicking the end of a row or pressing the end key.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171468,"byte_end":171533,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1910},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":172270,"byte_end":172276,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::text::cursor::Cursor","value":"Cursor { ccursor, rcursor, pcursor }","parent":null,"children":[{"krate":0,"index":1911},{"krate":0,"index":1912},{"krate":0,"index":1913}],"decl_id":null,"docs":" All different types of cursors together.\n They all point to the same place, but in their own different ways.\n pcursor/rcursor can also point to after the end of the paragraph/row.\n Does not implement `PartialEq` because you must think which cursor should be equivalent.\n","sig":null,"attributes":[{"value":"/ All different types of cursors together.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171860,"byte_end":171904,"line_start":110,"line_end":110,"column_start":1,"column_end":45}},{"value":"/ They all point to the same place, but in their own different ways.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171905,"byte_end":171975,"line_start":111,"line_end":111,"column_start":1,"column_end":71}},{"value":"/ pcursor/rcursor can also point to after the end of the paragraph/row.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171976,"byte_end":172049,"line_start":112,"line_end":112,"column_start":1,"column_end":74}},{"value":"/ Does not implement `PartialEq` because you must think which cursor should be equivalent.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":172050,"byte_end":172142,"line_start":113,"line_end":113,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":1911},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":172287,"byte_end":172294,"line_start":117,"line_end":117,"column_start":9,"column_end":16},"name":"ccursor","qualname":"::text::cursor::Cursor::ccursor","value":"text::cursor::CCursor","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1912},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":172313,"byte_end":172320,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"name":"rcursor","qualname":"::text::cursor::Cursor::rcursor","value":"text::cursor::RCursor","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1913},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":172339,"byte_end":172346,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"pcursor","qualname":"::text::cursor::Cursor::pcursor","value":"text::cursor::PCursor","parent":{"krate":0,"index":1910},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1921},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":172725,"byte_end":172731,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"UvRect","qualname":"::text::font::UvRect","value":"UvRect { offset, size, min, max }","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924},{"krate":0,"index":1926}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1922},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":172796,"byte_end":172802,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"offset","qualname":"::text::font::UvRect::offset","value":"emath::Vec2","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" X/Y offset for nice rendering (unit: points).\n","sig":null,"attributes":[{"value":"/ X/Y offset for nice rendering (unit: points).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":172738,"byte_end":172787,"line_start":14,"line_end":14,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1923},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":172930,"byte_end":172934,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"name":"size","qualname":"::text::font::UvRect::size","value":"emath::Vec2","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Screen size (in points) of this glyph.\n Note that the height is different from the font height.\n","sig":null,"attributes":[{"value":"/ Screen size (in points) of this glyph.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":172815,"byte_end":172857,"line_start":17,"line_end":17,"column_start":5,"column_end":47}},{"value":"/ Note that the height is different from the font height.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":172862,"byte_end":172921,"line_start":18,"line_end":18,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":172990,"byte_end":172993,"line_start":22,"line_end":22,"column_start":9,"column_end":12},"name":"min","qualname":"::text::font::UvRect::min","value":"[u16; 2]","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Top left corner UV in texture.\n","sig":null,"attributes":[{"value":"/ Top left corner UV in texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":172947,"byte_end":172981,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1926},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":173055,"byte_end":173058,"line_start":25,"line_end":25,"column_start":9,"column_end":12},"name":"max","qualname":"::text::font::UvRect::max","value":"[u16; 2]","parent":{"krate":0,"index":1921},"children":[],"decl_id":null,"docs":" Bottom right corner (exclusive).\n","sig":null,"attributes":[{"value":"/ Bottom right corner (exclusive).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":173010,"byte_end":173046,"line_start":24,"line_end":24,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":173098,"byte_end":173108,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"is_nothing","qualname":"<UvRect>::is_nothing","value":"pub fn is_nothing(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":173764,"byte_end":173772,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"FontImpl","qualname":"::text::font::FontImpl","value":"FontImpl {  }","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"decl_id":null,"docs":" A specific font with a size.\n The interface uses points as the unit for everything.\n","sig":null,"attributes":[{"value":"/ A specific font with a size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":173662,"byte_end":173694,"line_start":57,"line_end":57,"column_start":1,"column_end":33}},{"value":"/ The interface uses points as the unit for everything.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":173695,"byte_end":173752,"line_start":58,"line_end":58,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":174158,"byte_end":174161,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"new","qualname":"<FontImpl>::new","value":"pub fn new(Arc<Mutex<TextureAtlas>>, f32, String, ab_glyph::FontArc, u32, f32)\n-> FontImpl","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":177771,"byte_end":177783,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"pair_kerning","qualname":"<FontImpl>::pair_kerning","value":"pub fn pair_kerning(&Self, ab_glyph::GlyphId, ab_glyph::GlyphId) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":177750,"byte_end":177759,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":178183,"byte_end":178193,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"row_height","qualname":"<FontImpl>::row_height","value":"pub fn row_height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Height of one row of text. In points\n","sig":null,"attributes":[{"value":"/ Height of one row of text. In points","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":178109,"byte_end":178149,"line_start":200,"line_end":200,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":178154,"byte_end":178171,"line_start":201,"line_end":201,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":178280,"byte_end":178296,"line_start":207,"line_end":207,"column_start":12,"column_end":28},"name":"pixels_per_point","qualname":"<FontImpl>::pixels_per_point","value":"pub fn pixels_per_point(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":178251,"byte_end":178268,"line_start":206,"line_end":206,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":178482,"byte_end":178486,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"Font","qualname":"::text::font::Font","value":"Font {  }","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" Wrapper over multiple `FontImpl` (e.g. a primary + fallbacks for emojis)\n","sig":null,"attributes":[{"value":"/ Wrapper over multiple `FontImpl` (e.g. a primary + fallbacks for emojis)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":178394,"byte_end":178470,"line_start":215,"line_end":215,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":178788,"byte_end":178791,"line_start":227,"line_end":227,"column_start":12,"column_end":15},"name":"new","qualname":"<Font>::new","value":"pub fn new(Vec<Arc<FontImpl>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":180177,"byte_end":180202,"line_start":268,"line_end":268,"column_start":12,"column_end":37},"name":"preload_common_characters","qualname":"<Font>::preload_common_characters","value":"pub fn preload_common_characters(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":180661,"byte_end":180671,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"characters","qualname":"<Font>::characters","value":"pub fn characters(&mut Self) -> &BTreeSet<char>","parent":null,"children":[],"decl_id":null,"docs":" All supported characters\n","sig":null,"attributes":[{"value":"/ All supported characters","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":180621,"byte_end":180649,"line_start":279,"line_end":279,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":180982,"byte_end":180996,"line_start":291,"line_end":291,"column_start":12,"column_end":26},"name":"round_to_pixel","qualname":"<Font>::round_to_pixel","value":"pub fn round_to_pixel(&Self, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":180953,"byte_end":180970,"line_start":290,"line_end":290,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":181182,"byte_end":181192,"line_start":297,"line_end":297,"column_start":12,"column_end":22},"name":"row_height","qualname":"<Font>::row_height","value":"pub fn row_height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Height of one row of text. In points\n","sig":null,"attributes":[{"value":"/ Height of one row of text. In points","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":181108,"byte_end":181148,"line_start":295,"line_end":295,"column_start":5,"column_end":45}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":181153,"byte_end":181170,"line_start":296,"line_end":296,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":181251,"byte_end":181258,"line_start":301,"line_end":301,"column_start":12,"column_end":19},"name":"uv_rect","qualname":"<Font>::uv_rect","value":"pub fn uv_rect(&Self, char) -> UvRect","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":181468,"byte_end":181479,"line_start":309,"line_end":309,"column_start":12,"column_end":23},"name":"glyph_width","qualname":"<Font>::glyph_width","value":"pub fn glyph_width(&mut Self, char) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Width of this character in points.\n","sig":null,"attributes":[{"value":"/ Width of this character in points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":181418,"byte_end":181456,"line_start":308,"line_end":308,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185524,"byte_end":185530,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"FontId","qualname":"::text::fonts::FontId","value":"FontId { size, family }","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1952}],"decl_id":null,"docs":" How to select a sized font.\n","sig":null,"attributes":[{"value":"/ How to select a sized font.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185369,"byte_end":185400,"line_start":15,"line_end":15,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1951},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185567,"byte_end":185571,"line_start":20,"line_end":20,"column_start":9,"column_end":13},"name":"size","qualname":"::text::fonts::FontId::size","value":"f32","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" Height in points.\n","sig":null,"attributes":[{"value":"/ Height in points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185537,"byte_end":185558,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185620,"byte_end":185626,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"family","qualname":"::text::fonts::FontId::family","value":"text::fonts::FontFamily","parent":{"krate":0,"index":1950},"children":[],"decl_id":null,"docs":" What font family to use.\n","sig":null,"attributes":[{"value":"/ What font family to use.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185583,"byte_end":185611,"line_start":22,"line_end":22,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185894,"byte_end":185897,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<FontId>::new","value":"pub fn new(f32, FontFamily) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185873,"byte_end":185882,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186001,"byte_end":186013,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"proportional","qualname":"<FontId>::proportional","value":"pub fn proportional(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185980,"byte_end":185989,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186117,"byte_end":186126,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"monospace","qualname":"<FontId>::monospace","value":"pub fn monospace(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186096,"byte_end":186105,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1962},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187085,"byte_end":187097,"line_start":76,"line_end":76,"column_start":5,"column_end":17},"name":"Proportional","qualname":"::text::fonts::FontFamily::Proportional","value":"FontFamily::Proportional","parent":{"krate":0,"index":1961},"children":[],"decl_id":null,"docs":" A font where some characters are wider than other (e.g. 'w' is wider than 'i').","sig":null,"attributes":[{"value":"/ A font where some characters are wider than other (e.g. 'w' is wider than 'i').","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186888,"byte_end":186971,"line_start":73,"line_end":73,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186976,"byte_end":186979,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Proportional fonts are easier to read and should be the preferred choice in most situations.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186984,"byte_end":187080,"line_start":75,"line_end":75,"column_start":5,"column_end":101}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1964},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187275,"byte_end":187284,"line_start":81,"line_end":81,"column_start":5,"column_end":14},"name":"Monospace","qualname":"::text::fonts::FontFamily::Monospace","value":"FontFamily::Monospace","parent":{"krate":0,"index":1961},"children":[],"decl_id":null,"docs":" A font where each character is the same width (`w` is the same width as `i`).","sig":null,"attributes":[{"value":"/ A font where each character is the same width (`w` is the same width as `i`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187104,"byte_end":187185,"line_start":78,"line_end":78,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187190,"byte_end":187193,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Useful for code snippets, or when you need to align numbers or text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187198,"byte_end":187270,"line_start":80,"line_end":80,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187530,"byte_end":187534,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Name","qualname":"::text::fonts::FontFamily::Name","value":"FontFamily::Name(Arc<str>)","parent":{"krate":0,"index":1961},"children":[],"decl_id":null,"docs":" One of the names in [`FontDefinitions::families`].","sig":null,"attributes":[{"value":"/ One of the names in [`FontDefinitions::families`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187291,"byte_end":187345,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187350,"byte_end":187353,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187358,"byte_end":187365,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ # use epaint::FontFamily;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187370,"byte_end":187399,"line_start":86,"line_end":86,"column_start":5,"column_end":34}},{"value":"/ // User-chosen names:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187404,"byte_end":187429,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/ FontFamily::Name(\"arial\".into());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187434,"byte_end":187471,"line_start":88,"line_end":88,"column_start":5,"column_end":42}},{"value":"/ FontFamily::Name(\"serif\".into());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187476,"byte_end":187513,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187518,"byte_end":187525,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186871,"byte_end":186881,"line_start":72,"line_end":72,"column_start":10,"column_end":20},"name":"FontFamily","qualname":"::text::fonts::FontFamily","value":"pub enum FontFamily { Proportional, Monospace, Name(Arc<str>), }","parent":null,"children":[{"krate":0,"index":1962},{"krate":0,"index":1964},{"krate":0,"index":1966}],"decl_id":null,"docs":" Font of unknown size.","sig":null,"attributes":[{"value":"/ Font of unknown size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186554,"byte_end":186579,"line_start":66,"line_end":66,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186580,"byte_end":186583,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Which style of font: [`Monospace`][`FontFamily::Monospace`], [`Proportional`][`FontFamily::Proportional`],","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186584,"byte_end":186694,"line_start":68,"line_end":68,"column_start":1,"column_end":111}},{"value":"/ or by user-chosen name.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186695,"byte_end":186722,"line_start":69,"line_end":69,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1987},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188226,"byte_end":188234,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"FontData","qualname":"::text::fonts::FontData","value":"FontData { font, index, tweak }","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990}],"decl_id":null,"docs":" A `.ttf` or `.otf` file and a font face index.\n","sig":null,"attributes":[{"value":"/ A `.ttf` or `.otf` file and a font face index.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188052,"byte_end":188102,"line_start":113,"line_end":113,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1988},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188293,"byte_end":188297,"line_start":118,"line_end":118,"column_start":9,"column_end":13},"name":"font","qualname":"::text::fonts::FontData::font","value":"std::borrow::Cow<'static, [u8]>","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" The content of a `.ttf` or `.otf` file.\n","sig":null,"attributes":[{"value":"/ The content of a `.ttf` or `.otf` file.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188241,"byte_end":188284,"line_start":117,"line_end":117,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188417,"byte_end":188422,"line_start":122,"line_end":122,"column_start":9,"column_end":14},"name":"index","qualname":"::text::fonts::FontData::index","value":"u32","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Which font face in the file to use.\n When in doubt, use `0`.\n","sig":null,"attributes":[{"value":"/ Which font face in the file to use.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188337,"byte_end":188376,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/ When in doubt, use `0`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188381,"byte_end":188408,"line_start":121,"line_end":121,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1990},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188512,"byte_end":188517,"line_start":125,"line_end":125,"column_start":9,"column_end":14},"name":"tweak","qualname":"::text::fonts::FontData::tweak","value":"text::fonts::FontTweak","parent":{"krate":0,"index":1987},"children":[],"decl_id":null,"docs":" Extra scale and vertical tweak to apply to all text of this font.\n","sig":null,"attributes":[{"value":"/ Extra scale and vertical tweak to apply to all text of this font.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188434,"byte_end":188503,"line_start":124,"line_end":124,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188560,"byte_end":188571,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"from_static","qualname":"<FontData>::from_static","value":"pub fn from_static(&'static [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188759,"byte_end":188769,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"from_owned","qualname":"<FontData>::from_owned","value":"pub fn from_owned(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188948,"byte_end":188953,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"tweak","qualname":"<FontData>::tweak","value":"pub fn tweak(Self, FontTweak) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189313,"byte_end":189322,"line_start":155,"line_end":155,"column_start":12,"column_end":21},"name":"FontTweak","qualname":"::text::fonts::FontTweak","value":"FontTweak { scale, y_offset_factor, y_offset }","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002}],"decl_id":null,"docs":" Extra scale and vertical tweak to apply to all text of a certain font.\n","sig":null,"attributes":[{"value":"/ Extra scale and vertical tweak to apply to all text of a certain font.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189109,"byte_end":189183,"line_start":152,"line_end":152,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189415,"byte_end":189420,"line_start":159,"line_end":159,"column_start":9,"column_end":14},"name":"scale","qualname":"::text::fonts::FontTweak::scale","value":"f32","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Scale the font by this much.","sig":null,"attributes":[{"value":"/ Scale the font by this much.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189329,"byte_end":189361,"line_start":156,"line_end":156,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189366,"byte_end":189369,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Default: `1.0` (no scaling).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189374,"byte_end":189406,"line_start":158,"line_end":158,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2001},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189655,"byte_end":189670,"line_start":167,"line_end":167,"column_start":9,"column_end":24},"name":"y_offset_factor","qualname":"::text::fonts::FontTweak::y_offset_factor","value":"f32","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Shift font downwards by this fraction of the font size (in points).","sig":null,"attributes":[{"value":"/ Shift font downwards by this fraction of the font size (in points).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189432,"byte_end":189503,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189508,"byte_end":189511,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ A positive value shifts the text downwards.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189516,"byte_end":189563,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/ A negative value shifts it upwards.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189568,"byte_end":189607,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189612,"byte_end":189615,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Example value: `-0.2`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189620,"byte_end":189646,"line_start":166,"line_end":166,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2002},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189787,"byte_end":189795,"line_start":172,"line_end":172,"column_start":9,"column_end":17},"name":"y_offset","qualname":"::text::fonts::FontTweak::y_offset","value":"f32","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Shift font downwards by this amount of logical points.","sig":null,"attributes":[{"value":"/ Shift font downwards by this amount of logical points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189682,"byte_end":189740,"line_start":169,"line_end":169,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189745,"byte_end":189748,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Example value: `2.0`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189753,"byte_end":189778,"line_start":171,"line_end":171,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2012},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191902,"byte_end":191917,"line_start":230,"line_end":230,"column_start":12,"column_end":27},"name":"FontDefinitions","qualname":"::text::fonts::FontDefinitions","value":"FontDefinitions { font_data, families }","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":2014}],"decl_id":null,"docs":" Describes the font data and the sizes to use.","sig":null,"attributes":[{"value":"/ Describes the font data and the sizes to use.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":190692,"byte_end":190741,"line_start":201,"line_end":201,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":190742,"byte_end":190745,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ Often you would start with [`FontDefinitions::default()`] and then add/change the contents.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":190746,"byte_end":190841,"line_start":203,"line_end":203,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":190842,"byte_end":190845,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ This is how you install your own custom fonts:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":190846,"byte_end":190896,"line_start":205,"line_end":205,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":190897,"byte_end":190904,"line_start":206,"line_end":206,"column_start":1,"column_end":8}},{"value":"/ # use {epaint::text::{FontDefinitions, FontFamily, FontData}};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":190905,"byte_end":190971,"line_start":207,"line_end":207,"column_start":1,"column_end":67}},{"value":"/ # struct FakeEguiCtx {};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":190972,"byte_end":191000,"line_start":208,"line_end":208,"column_start":1,"column_end":29}},{"value":"/ # impl FakeEguiCtx { fn set_fonts(&self, _: FontDefinitions) {} }","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191001,"byte_end":191070,"line_start":209,"line_end":209,"column_start":1,"column_end":70}},{"value":"/ # let egui_ctx = FakeEguiCtx {};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191071,"byte_end":191107,"line_start":210,"line_end":210,"column_start":1,"column_end":37}},{"value":"/ let mut fonts = FontDefinitions::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191108,"byte_end":191155,"line_start":211,"line_end":211,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191156,"byte_end":191159,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ // Install my own font (maybe supporting non-latin characters):","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191160,"byte_end":191227,"line_start":213,"line_end":213,"column_start":1,"column_end":68}},{"value":"/ fonts.font_data.insert(\"my_font\".to_owned(),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191228,"byte_end":191276,"line_start":214,"line_end":214,"column_start":1,"column_end":49}},{"value":"/    FontData::from_static(include_bytes!(\"../../fonts/Ubuntu-Light.ttf\"))); // .ttf and .otf supported","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191277,"byte_end":191382,"line_start":215,"line_end":215,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191383,"byte_end":191386,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ // Put my font first (highest priority):","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191387,"byte_end":191431,"line_start":217,"line_end":217,"column_start":1,"column_end":45}},{"value":"/ fonts.families.get_mut(&FontFamily::Proportional).unwrap()","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191432,"byte_end":191494,"line_start":218,"line_end":218,"column_start":1,"column_end":63}},{"value":"/     .insert(0, \"my_font\".to_owned());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191495,"byte_end":191536,"line_start":219,"line_end":219,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191537,"byte_end":191540,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ // Put my font as last fallback for monospace:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191541,"byte_end":191591,"line_start":221,"line_end":221,"column_start":1,"column_end":51}},{"value":"/ fonts.families.get_mut(&FontFamily::Monospace).unwrap()","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191592,"byte_end":191651,"line_start":222,"line_end":222,"column_start":1,"column_end":60}},{"value":"/     .push(\"my_font\".to_owned());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191652,"byte_end":191688,"line_start":223,"line_end":223,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191689,"byte_end":191692,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ egui_ctx.set_fonts(fonts);","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191693,"byte_end":191723,"line_start":225,"line_end":225,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191724,"byte_end":191731,"line_start":226,"line_end":226,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":2013},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":192074,"byte_end":192083,"line_start":234,"line_end":234,"column_start":9,"column_end":18},"name":"font_data","qualname":"::text::fonts::FontDefinitions::font_data","value":"std::collections::BTreeMap<std::string::String, text::fonts::FontData>","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" List of font names and their definitions.","sig":null,"attributes":[{"value":"/ List of font names and their definitions.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191924,"byte_end":191969,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191974,"byte_end":191977,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ `epaint` has built-in-default for these, but you can override them if you like.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":191982,"byte_end":192065,"line_start":233,"line_end":233,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":2014},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":192525,"byte_end":192533,"line_start":243,"line_end":243,"column_start":9,"column_end":17},"name":"families","qualname":"::text::fonts::FontDefinitions::families","value":"std::collections::BTreeMap<text::fonts::FontFamily, std::vec::Vec<std::string::String>>","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":" Which fonts (names) to use for each [`FontFamily`].","sig":null,"attributes":[{"value":"/ Which fonts (names) to use for each [`FontFamily`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":192118,"byte_end":192173,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":192178,"byte_end":192181,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The list should be a list of keys into [`Self::font_data`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":192186,"byte_end":192249,"line_start":238,"line_end":238,"column_start":5,"column_end":68}},{"value":"/ When looking for a character glyph `epaint` will start with","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":192254,"byte_end":192317,"line_start":239,"line_end":239,"column_start":5,"column_end":68}},{"value":"/ the first font and then move to the second, and so on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":192322,"byte_end":192380,"line_start":240,"line_end":240,"column_start":5,"column_end":63}},{"value":"/ So the first font is the primary, and then comes a list of fallbacks in order of priority.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":192385,"byte_end":192479,"line_start":241,"line_end":241,"column_start":5,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195208,"byte_end":195213,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"Fonts","qualname":"::text::fonts::Fonts","value":"","parent":null,"children":[],"decl_id":null,"docs":" The collection of fonts used by `epaint`.","sig":null,"attributes":[{"value":"/ The collection of fonts used by `epaint`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":194923,"byte_end":194968,"line_start":316,"line_end":316,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":194969,"byte_end":194972,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ Required in order to paint text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":194973,"byte_end":195009,"line_start":318,"line_end":318,"column_start":1,"column_end":37}},{"value":"/ Create one and reuse. Cheap to clone.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195010,"byte_end":195051,"line_start":319,"line_end":319,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195052,"byte_end":195055,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ You need to call [`Self::begin_frame`] and [`Self::font_image_delta`] once every frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195056,"byte_end":195147,"line_start":321,"line_end":321,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195148,"byte_end":195151,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Wrapper for `Arc<Mutex<FontsAndCache>>`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195152,"byte_end":195196,"line_start":323,"line_end":323,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195552,"byte_end":195555,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<Fonts>::new","value":"pub fn new(f32, usize, FontDefinitions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Fonts`] for text layout.\n This call is expensive, so only create one [`Fonts`] and then reuse it.","sig":null,"attributes":[{"value":"/ Create a new [`Fonts`] for text layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195260,"byte_end":195303,"line_start":327,"line_end":327,"column_start":5,"column_end":48}},{"value":"/ This call is expensive, so only create one [`Fonts`] and then reuse it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195308,"byte_end":195383,"line_start":328,"line_end":328,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195388,"byte_end":195391,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ * `pixels_per_point`: how many physical pixels per logical \"point\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195396,"byte_end":195467,"line_start":330,"line_end":330,"column_start":5,"column_end":76}},{"value":"/ * `max_texture_side`: largest supported texture size (one side).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195472,"byte_end":195540,"line_start":331,"line_end":331,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":196325,"byte_end":196336,"line_start":351,"line_end":351,"column_start":12,"column_end":23},"name":"begin_frame","qualname":"<Fonts>::begin_frame","value":"pub fn begin_frame(&Self, f32, usize)","parent":null,"children":[],"decl_id":null,"docs":" Call at the start of each frame with the latest known\n `pixels_per_point` and `max_texture_side`.","sig":null,"attributes":[{"value":"/ Call at the start of each frame with the latest known","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195925,"byte_end":195982,"line_start":344,"line_end":344,"column_start":5,"column_end":62}},{"value":"/ `pixels_per_point` and `max_texture_side`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195987,"byte_end":196033,"line_start":345,"line_end":345,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":196038,"byte_end":196041,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Call after painting the previous frame, but before using [`Fonts`] for the new frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":196046,"byte_end":196135,"line_start":347,"line_end":347,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":196140,"byte_end":196143,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This function will react to changes in `pixels_per_point` and `max_texture_side`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":196148,"byte_end":196233,"line_start":349,"line_end":349,"column_start":5,"column_end":90}},{"value":"/ as well as notice when the font atlas is getting full, and handle that.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":196238,"byte_end":196313,"line_start":350,"line_end":350,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197376,"byte_end":197392,"line_start":374,"line_end":374,"column_start":12,"column_end":28},"name":"font_image_delta","qualname":"<Fonts>::font_image_delta","value":"pub fn font_image_delta(&Self) -> Option<crate::ImageDelta>","parent":null,"children":[],"decl_id":null,"docs":" Call at the end of each frame (before painting) to get the change to the font texture since last call.\n","sig":null,"attributes":[{"value":"/ Call at the end of each frame (before painting) to get the change to the font texture since last call.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197258,"byte_end":197364,"line_start":373,"line_end":373,"column_start":5,"column_end":111}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197583,"byte_end":197587,"line_start":381,"line_end":381,"column_start":12,"column_end":16},"name":"lock","qualname":"<Fonts>::lock","value":"pub fn lock(&Self) -> MutexGuard<, FontsAndCache>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying [`FontsAndCache`].\n","sig":null,"attributes":[{"value":"/ Access the underlying [`FontsAndCache`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197494,"byte_end":197538,"line_start":378,"line_end":378,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197562,"byte_end":197571,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197684,"byte_end":197700,"line_start":386,"line_end":386,"column_start":12,"column_end":28},"name":"pixels_per_point","qualname":"<Fonts>::pixels_per_point","value":"pub fn pixels_per_point(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197663,"byte_end":197672,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197792,"byte_end":197808,"line_start":391,"line_end":391,"column_start":12,"column_end":28},"name":"max_texture_side","qualname":"<Fonts>::max_texture_side","value":"pub fn max_texture_side(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197771,"byte_end":197780,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197973,"byte_end":197988,"line_start":397,"line_end":397,"column_start":12,"column_end":27},"name":"font_image_size","qualname":"<Fonts>::font_image_size","value":"pub fn font_image_size(&Self) -> [usize; ]","parent":null,"children":[],"decl_id":null,"docs":" Current size of the font image.\n Pass this to [`crate::Tessellator`].\n","sig":null,"attributes":[{"value":"/ Current size of the font image.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197881,"byte_end":197916,"line_start":395,"line_end":395,"column_start":5,"column_end":40}},{"value":"/ Pass this to [`crate::Tessellator`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":197921,"byte_end":197961,"line_start":396,"line_end":396,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198133,"byte_end":198144,"line_start":403,"line_end":403,"column_start":12,"column_end":23},"name":"glyph_width","qualname":"<Fonts>::glyph_width","value":"pub fn glyph_width(&Self, &FontId, char) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Width of this character in points.\n","sig":null,"attributes":[{"value":"/ Width of this character in points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198069,"byte_end":198107,"line_start":401,"line_end":401,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198112,"byte_end":198121,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198314,"byte_end":198324,"line_start":409,"line_end":409,"column_start":12,"column_end":22},"name":"row_height","qualname":"<Fonts>::row_height","value":"pub fn row_height(&Self, &FontId) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Height of one row of text in points\n","sig":null,"attributes":[{"value":"/ Height of one row of text in points","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198249,"byte_end":198288,"line_start":407,"line_end":407,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198293,"byte_end":198302,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198464,"byte_end":198472,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"families","qualname":"<Fonts>::families","value":"pub fn families(&Self) -> Vec<FontFamily>","parent":null,"children":[],"decl_id":null,"docs":" List of all known font families.\n","sig":null,"attributes":[{"value":"/ List of all known font families.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198416,"byte_end":198452,"line_start":413,"line_end":413,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198954,"byte_end":198964,"line_start":432,"line_end":432,"column_start":12,"column_end":22},"name":"layout_job","qualname":"<Fonts>::layout_job","value":"pub fn layout_job(&Self, LayoutJob) -> Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":" Layout some text.","sig":null,"attributes":[{"value":"/ Layout some text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198663,"byte_end":198684,"line_start":424,"line_end":424,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198689,"byte_end":198692,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ This is the most advanced layout function.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198697,"byte_end":198743,"line_start":426,"line_end":426,"column_start":5,"column_end":51}},{"value":"/ See also [`Self::layout`], [`Self::layout_no_wrap`] and","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198748,"byte_end":198807,"line_start":427,"line_end":427,"column_start":5,"column_end":64}},{"value":"/ [`Self::layout_delayed_color`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198812,"byte_end":198847,"line_start":428,"line_end":428,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198852,"byte_end":198855,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ The implementation uses memoization so repeated calls are cheap.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198860,"byte_end":198928,"line_start":430,"line_end":430,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":198933,"byte_end":198942,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199059,"byte_end":199079,"line_start":436,"line_end":436,"column_start":12,"column_end":32},"name":"num_galleys_in_cache","qualname":"<Fonts>::num_galleys_in_cache","value":"pub fn num_galleys_in_cache(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199342,"byte_end":199363,"line_start":444,"line_end":444,"column_start":12,"column_end":33},"name":"font_atlas_fill_ratio","qualname":"<Fonts>::font_atlas_fill_ratio","value":"pub fn font_atlas_fill_ratio(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" How full is the font atlas?","sig":null,"attributes":[{"value":"/ How full is the font atlas?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199165,"byte_end":199196,"line_start":440,"line_end":440,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199201,"byte_end":199204,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ This increases as new fonts and/or glyphs are used,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199209,"byte_end":199264,"line_start":442,"line_end":442,"column_start":5,"column_end":60}},{"value":"/ but can also decrease in a call to [`Self::begin_frame`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199269,"byte_end":199330,"line_start":443,"line_end":443,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199597,"byte_end":199603,"line_start":451,"line_end":451,"column_start":12,"column_end":18},"name":"layout","qualname":"<Fonts>::layout","value":"pub fn layout(&Self, String, FontId, crate::Color32, f32) -> Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":" Will wrap text at the given width and line break at `\\n`.","sig":null,"attributes":[{"value":"/ Will wrap text at the given width and line break at `\\n`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199443,"byte_end":199504,"line_start":448,"line_end":448,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199509,"byte_end":199512,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ The implementation uses memoization so repeated calls are cheap.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199517,"byte_end":199585,"line_start":450,"line_end":450,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199978,"byte_end":199992,"line_start":465,"line_end":465,"column_start":12,"column_end":26},"name":"layout_no_wrap","qualname":"<Fonts>::layout_no_wrap","value":"pub fn layout_no_wrap(&Self, String, FontId, crate::Color32) -> Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":" Will line break at `\\n`.","sig":null,"attributes":[{"value":"/ Will line break at `\\n`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199857,"byte_end":199885,"line_start":462,"line_end":462,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199890,"byte_end":199893,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ The implementation uses memoization so repeated calls are cheap.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":199898,"byte_end":199966,"line_start":464,"line_end":464,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":200402,"byte_end":200422,"line_start":478,"line_end":478,"column_start":12,"column_end":32},"name":"layout_delayed_color","qualname":"<Fonts>::layout_delayed_color","value":"pub fn layout_delayed_color(&Self, String, FontId, f32) -> Arc<Galley>","parent":null,"children":[],"decl_id":null,"docs":" Like [`Self::layout`], made for when you want to pick a color for the text later.","sig":null,"attributes":[{"value":"/ Like [`Self::layout`], made for when you want to pick a color for the text later.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":200224,"byte_end":200309,"line_start":475,"line_end":475,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":200314,"byte_end":200317,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ The implementation uses memoization so repeated calls are cheap.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":200322,"byte_end":200390,"line_start":477,"line_end":477,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":828},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":200797,"byte_end":200810,"line_start":495,"line_end":495,"column_start":12,"column_end":25},"name":"FontsAndCache","qualname":"::text::fonts::FontsAndCache","value":"FontsAndCache { fonts }","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":200821,"byte_end":200826,"line_start":496,"line_end":496,"column_start":9,"column_end":14},"name":"fonts","qualname":"::text::fonts::FontsAndCache::fonts","value":"text::fonts::FontsImpl","parent":{"krate":0,"index":828},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":201199,"byte_end":201208,"line_start":511,"line_end":511,"column_start":12,"column_end":21},"name":"FontsImpl","qualname":"::text::fonts::FontsImpl","value":"FontsImpl {  }","parent":null,"children":[{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839}],"decl_id":null,"docs":" The collection of fonts used by `epaint`.","sig":null,"attributes":[{"value":"/ The collection of fonts used by `epaint`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":201101,"byte_end":201146,"line_start":508,"line_end":508,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":201147,"byte_end":201150,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ Required in order to paint text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":201151,"byte_end":201187,"line_start":510,"line_end":510,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":201601,"byte_end":201604,"line_start":523,"line_end":523,"column_start":12,"column_end":15},"name":"new","qualname":"<FontsImpl>::new","value":"pub fn new(f32, usize, FontDefinitions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`FontsImpl`] for text layout.\n This call is expensive, so only create one [`FontsImpl`] and then reuse it.\n","sig":null,"attributes":[{"value":"/ Create a new [`FontsImpl`] for text layout.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":201458,"byte_end":201505,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/ This call is expensive, so only create one [`FontsImpl`] and then reuse it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":201510,"byte_end":201589,"line_start":522,"line_end":522,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":202678,"byte_end":202694,"line_start":561,"line_end":561,"column_start":12,"column_end":28},"name":"pixels_per_point","qualname":"<FontsImpl>::pixels_per_point","value":"pub fn pixels_per_point(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":202649,"byte_end":202666,"line_start":560,"line_end":560,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":202773,"byte_end":202784,"line_start":566,"line_end":566,"column_start":12,"column_end":23},"name":"definitions","qualname":"<FontsImpl>::definitions","value":"pub fn definitions(&Self) -> &FontDefinitions","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":202752,"byte_end":202761,"line_start":565,"line_end":565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":202930,"byte_end":202934,"line_start":571,"line_end":571,"column_start":12,"column_end":16},"name":"font","qualname":"<FontsImpl>::font","value":"pub fn font(&mut Self, &FontId) -> &mut Font","parent":null,"children":[],"decl_id":null,"docs":" Get the right font implementation from size and [`FontFamily`].\n","sig":null,"attributes":[{"value":"/ Get the right font implementation from size and [`FontFamily`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":202851,"byte_end":202918,"line_start":570,"line_end":570,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout.rs","byte_start":209539,"byte_end":209545,"line_start":53,"line_end":53,"column_start":8,"column_end":14},"name":"layout","qualname":"::text::text_layout::layout","value":"pub fn layout(&mut FontsImpl, Arc<LayoutJob>) -> Galley","parent":null,"children":[],"decl_id":null,"docs":" Layout text into a [`Galley`].","sig":null,"attributes":[{"value":"/ Layout text into a [`Galley`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout.rs","byte_start":209330,"byte_end":209364,"line_start":49,"line_end":49,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout.rs","byte_start":209365,"byte_end":209368,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ In most cases you should use [`crate::Fonts::layout_job`] instead","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout.rs","byte_start":209369,"byte_end":209438,"line_start":51,"line_end":51,"column_start":1,"column_end":70}},{"value":"/ since that memoizes the input, making subsequent layouting of the same text much faster.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout.rs","byte_start":209439,"byte_end":209531,"line_start":52,"line_end":52,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232164,"byte_end":232173,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"LayoutJob","qualname":"::text::text_layout_types::LayoutJob","value":"LayoutJob { text, sections, wrap_width, first_row_min_height, break_on_newline, halign, justify }","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065}],"decl_id":null,"docs":" Describes the task of laying out text.","sig":null,"attributes":[{"value":"/ Describes the task of laying out text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231113,"byte_end":231155,"line_start":9,"line_end":9,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231156,"byte_end":231159,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This supports mixing different fonts, color and formats (underline etc).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231160,"byte_end":231236,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231237,"byte_end":231240,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Pass this to [`crate::Fonts::layout_job`] or [`crate::text::layout`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231241,"byte_end":231314,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231315,"byte_end":231318,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ## Example:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231319,"byte_end":231334,"line_start":15,"line_end":15,"column_start":1,"column_end":16}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231335,"byte_end":231342,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ use epaint::{Color32, text::{LayoutJob, TextFormat}, FontFamily, FontId};","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231343,"byte_end":231420,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231421,"byte_end":231424,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ let mut job = LayoutJob::default();","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231425,"byte_end":231464,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ job.append(","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231465,"byte_end":231480,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/     \"Hello \",","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231481,"byte_end":231498,"line_start":21,"line_end":21,"column_start":1,"column_end":18}},{"value":"/     0.0,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231499,"byte_end":231511,"line_start":22,"line_end":22,"column_start":1,"column_end":13}},{"value":"/     TextFormat {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231512,"byte_end":231532,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/         font_id: FontId::new(14.0, FontFamily::Proportional),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231533,"byte_end":231598,"line_start":24,"line_end":24,"column_start":1,"column_end":66}},{"value":"/         color: Color32::WHITE,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231599,"byte_end":231633,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/         ..Default::default()","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231634,"byte_end":231666,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/     },","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231667,"byte_end":231677,"line_start":27,"line_end":27,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231678,"byte_end":231684,"line_start":28,"line_end":28,"column_start":1,"column_end":7}},{"value":"/ job.append(","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231685,"byte_end":231700,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/     \"World!\",","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231701,"byte_end":231718,"line_start":30,"line_end":30,"column_start":1,"column_end":18}},{"value":"/     0.0,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231719,"byte_end":231731,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/     TextFormat {","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231732,"byte_end":231752,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/         font_id: FontId::new(14.0, FontFamily::Monospace),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231753,"byte_end":231815,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/         color: Color32::BLACK,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231816,"byte_end":231850,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/         ..Default::default()","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231851,"byte_end":231883,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/     },","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231884,"byte_end":231894,"line_start":36,"line_end":36,"column_start":1,"column_end":11}},{"value":"/ );","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231895,"byte_end":231901,"line_start":37,"line_end":37,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231902,"byte_end":231909,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231910,"byte_end":231913,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ As you can see, constructing a `LayoutJob` is currently a lot of work.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231914,"byte_end":231988,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ It would be nice to have a helper macro for it!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":231989,"byte_end":232040,"line_start":41,"line_end":41,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232254,"byte_end":232258,"line_start":46,"line_end":46,"column_start":9,"column_end":13},"name":"text","qualname":"::text::text_layout_types::LayoutJob::text","value":"std::string::String","parent":{"krate":0,"index":2058},"children":[],"decl_id":null,"docs":" The complete text of this job, referenced by `LayoutSection`.\n","sig":null,"attributes":[{"value":"/ The complete text of this job, referenced by `LayoutSection`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232180,"byte_end":232245,"line_start":45,"line_end":45,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232353,"byte_end":232361,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"name":"sections","qualname":"::text::text_layout_types::LayoutJob::sections","value":"std::vec::Vec<text::text_layout_types::LayoutSection>","parent":{"krate":0,"index":2058},"children":[],"decl_id":null,"docs":" The different section, which can have different fonts, colors, etc.\n","sig":null,"attributes":[{"value":"/ The different section, which can have different fonts, colors, etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232273,"byte_end":232344,"line_start":48,"line_end":48,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2061},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232559,"byte_end":232569,"line_start":54,"line_end":54,"column_start":9,"column_end":19},"name":"wrap_width","qualname":"::text::text_layout_types::LayoutJob::wrap_width","value":"f32","parent":{"krate":0,"index":2058},"children":[],"decl_id":null,"docs":" Try to break text so that no row is wider than this.\n Set to [`f32::INFINITY`] to turn off wrapping.\n Note that `\\n` always produces a new line.\n","sig":null,"attributes":[{"value":"/ Try to break text so that no row is wider than this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232388,"byte_end":232444,"line_start":51,"line_end":51,"column_start":5,"column_end":61}},{"value":"/ Set to [`f32::INFINITY`] to turn off wrapping.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232449,"byte_end":232499,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/ Note that `\\n` always produces a new line.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232504,"byte_end":232550,"line_start":53,"line_end":53,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2062},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232863,"byte_end":232883,"line_start":61,"line_end":61,"column_start":9,"column_end":29},"name":"first_row_min_height","qualname":"::text::text_layout_types::LayoutJob::first_row_min_height","value":"f32","parent":{"krate":0,"index":2058},"children":[],"decl_id":null,"docs":" The first row must be at least this high.\n This is in case we lay out text that is the continuation\n of some earlier text (sharing the same row),\n in which case this will be the height of the earlier text.\n In other cases, set this to `0.0`.\n","sig":null,"attributes":[{"value":"/ The first row must be at least this high.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232581,"byte_end":232626,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/ This is in case we lay out text that is the continuation","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232631,"byte_end":232691,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/ of some earlier text (sharing the same row),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232696,"byte_end":232744,"line_start":58,"line_end":58,"column_start":5,"column_end":53}},{"value":"/ in which case this will be the height of the earlier text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232749,"byte_end":232811,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/ In other cases, set this to `0.0`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232816,"byte_end":232854,"line_start":60,"line_end":60,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2063},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233034,"byte_end":233050,"line_start":66,"line_end":66,"column_start":9,"column_end":25},"name":"break_on_newline","qualname":"::text::text_layout_types::LayoutJob::break_on_newline","value":"bool","parent":{"krate":0,"index":2058},"children":[],"decl_id":null,"docs":" If `false`, all newlines characters will be ignored\n and show up as the replacement character.\n Default: `true`.\n","sig":null,"attributes":[{"value":"/ If `false`, all newlines characters will be ignored","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232895,"byte_end":232950,"line_start":63,"line_end":63,"column_start":5,"column_end":60}},{"value":"/ and show up as the replacement character.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":232955,"byte_end":233000,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/ Default: `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233005,"byte_end":233025,"line_start":65,"line_end":65,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233160,"byte_end":233166,"line_start":69,"line_end":69,"column_start":9,"column_end":15},"name":"halign","qualname":"::text::text_layout_types::LayoutJob::halign","value":"emath::Align","parent":{"krate":0,"index":2058},"children":[],"decl_id":null,"docs":" How to horizontally align the text (`Align::LEFT`, `Align::Center`, `Align::RIGHT`).\n","sig":null,"attributes":[{"value":"/ How to horizontally align the text (`Align::LEFT`, `Align::Center`, `Align::RIGHT`).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233063,"byte_end":233151,"line_start":68,"line_end":68,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233267,"byte_end":233274,"line_start":72,"line_end":72,"column_start":9,"column_end":16},"name":"justify","qualname":"::text::text_layout_types::LayoutJob::justify","value":"bool","parent":{"krate":0,"index":2058},"children":[],"decl_id":null,"docs":" Justify text so that word-wrapped rows fill the whole [`Self::wrap_width`]\n","sig":null,"attributes":[{"value":"/ Justify text so that word-wrapped rows fill the whole [`Self::wrap_width`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233180,"byte_end":233258,"line_start":71,"line_end":71,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233737,"byte_end":233743,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"simple","qualname":"<LayoutJob>::simple","value":"pub fn simple(String, FontId, Color32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Break on `\\n` and at the given wrap width.\n","sig":null,"attributes":[{"value":"/ Break on `\\n` and at the given wrap width.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233665,"byte_end":233711,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233716,"byte_end":233725,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":234261,"byte_end":234278,"line_start":109,"line_end":109,"column_start":12,"column_end":29},"name":"simple_singleline","qualname":"<LayoutJob>::simple_singleline","value":"pub fn simple_singleline(String, FontId, Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Does not break on `\\n`, but shows the replacement character instead.\n","sig":null,"attributes":[{"value":"/ Does not break on `\\n`, but shows the replacement character instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":234163,"byte_end":234235,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":234240,"byte_end":234249,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":234718,"byte_end":234732,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"name":"single_section","qualname":"<LayoutJob>::single_section","value":"pub fn single_section(String, TextFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":234697,"byte_end":234706,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":235130,"byte_end":235138,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LayoutJob>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":235101,"byte_end":235118,"line_start":138,"line_end":138,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":235276,"byte_end":235282,"line_start":144,"line_end":144,"column_start":12,"column_end":18},"name":"append","qualname":"<LayoutJob>::append","value":"pub fn append(&mut Self, &str, f32, TextFormat)","parent":null,"children":[],"decl_id":null,"docs":" Helper for adding a new section when building a `LayoutJob`.\n","sig":null,"attributes":[{"value":"/ Helper for adding a new section when building a `LayoutJob`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":235200,"byte_end":235264,"line_start":143,"line_end":143,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":235661,"byte_end":235672,"line_start":156,"line_end":156,"column_start":12,"column_end":23},"name":"font_height","qualname":"<LayoutJob>::font_height","value":"pub fn font_height(&Self, &crate::Fonts) -> f32","parent":null,"children":[],"decl_id":null,"docs":" The height of the tallest used font in the job.\n","sig":null,"attributes":[{"value":"/ The height of the tallest used font in the job.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":235598,"byte_end":235649,"line_start":155,"line_end":155,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":236691,"byte_end":236704,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"LayoutSection","qualname":"::text::text_layout_types::LayoutSection","value":"LayoutSection { leading_space, byte_range, format }","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":236762,"byte_end":236775,"line_start":194,"line_end":194,"column_start":9,"column_end":22},"name":"leading_space","qualname":"::text::text_layout_types::LayoutSection::leading_space","value":"f32","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Can be used for first row indentation.\n","sig":null,"attributes":[{"value":"/ Can be used for first row indentation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":236711,"byte_end":236753,"line_start":193,"line_end":193,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":236825,"byte_end":236835,"line_start":196,"line_end":196,"column_start":9,"column_end":19},"name":"byte_range","qualname":"::text::text_layout_types::LayoutSection::byte_range","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":" Range into the galley text\n","sig":null,"attributes":[{"value":"/ Range into the galley text","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":236786,"byte_end":236816,"line_start":195,"line_end":195,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":236859,"byte_end":236865,"line_start":197,"line_end":197,"column_start":9,"column_end":15},"name":"format","qualname":"::text::text_layout_types::LayoutSection::format","value":"text::text_layout_types::TextFormat","parent":{"krate":0,"index":2074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2086},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237430,"byte_end":237440,"line_start":218,"line_end":218,"column_start":12,"column_end":22},"name":"TextFormat","qualname":"::text::text_layout_types::TextFormat","value":"TextFormat { font_id, color, background, italics, underline, strikethrough, valign }","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2087},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237451,"byte_end":237458,"line_start":219,"line_end":219,"column_start":9,"column_end":16},"name":"font_id","qualname":"::text::text_layout_types::TextFormat::font_id","value":"text::fonts::FontId","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2088},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237495,"byte_end":237500,"line_start":221,"line_end":221,"column_start":9,"column_end":14},"name":"color","qualname":"::text::text_layout_types::TextFormat::color","value":"color::Color32","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" Text color\n","sig":null,"attributes":[{"value":"/ Text color","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237472,"byte_end":237486,"line_start":220,"line_end":220,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":2089},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237519,"byte_end":237529,"line_start":222,"line_end":222,"column_start":9,"column_end":19},"name":"background","qualname":"::text::text_layout_types::TextFormat::background","value":"color::Color32","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237548,"byte_end":237555,"line_start":223,"line_end":223,"column_start":9,"column_end":16},"name":"italics","qualname":"::text::text_layout_types::TextFormat::italics","value":"bool","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2091},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237571,"byte_end":237580,"line_start":224,"line_end":224,"column_start":9,"column_end":18},"name":"underline","qualname":"::text::text_layout_types::TextFormat::underline","value":"stroke::Stroke","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237598,"byte_end":237611,"line_start":225,"line_end":225,"column_start":9,"column_end":22},"name":"strikethrough","qualname":"::text::text_layout_types::TextFormat::strikethrough","value":"stroke::Stroke","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2093},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237727,"byte_end":237733,"line_start":228,"line_end":228,"column_start":9,"column_end":15},"name":"valign","qualname":"::text::text_layout_types::TextFormat::valign","value":"emath::Align","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" If you use a small font and [`Align::TOP`] you\n can get the effect of raised text.\n","sig":null,"attributes":[{"value":"/ If you use a small font and [`Align::TOP`] you","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237625,"byte_end":237675,"line_start":226,"line_end":226,"column_start":5,"column_end":55}},{"value":"/ can get the effect of raised text.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237680,"byte_end":237718,"line_start":227,"line_end":227,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238179,"byte_end":238185,"line_start":249,"line_end":249,"column_start":12,"column_end":18},"name":"simple","qualname":"<TextFormat>::simple","value":"pub fn simple(FontId, Color32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238158,"byte_end":238167,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2105},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238666,"byte_end":238672,"line_start":265,"line_end":265,"column_start":12,"column_end":18},"name":"Galley","qualname":"::text::text_layout_types::Galley","value":"Galley { job, rows, rect, mesh_bounds, num_vertices, num_indices }","parent":null,"children":[{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111}],"decl_id":null,"docs":" Text that has been layed out, ready for painting.","sig":null,"attributes":[{"value":"/ Text that has been layed out, ready for painting.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238417,"byte_end":238470,"line_start":260,"line_end":260,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238471,"byte_end":238474,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ You can create a [`Galley`] using [`crate::Fonts::layout_job`];","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238475,"byte_end":238542,"line_start":262,"line_end":262,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2106},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238791,"byte_end":238794,"line_start":268,"line_end":268,"column_start":9,"column_end":12},"name":"job","qualname":"::text::text_layout_types::Galley::job","value":"std::sync::Arc<text::text_layout_types::LayoutJob>","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" The job that this galley is the result of.\n Contains the original string and style sections.\n","sig":null,"attributes":[{"value":"/ The job that this galley is the result of.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238679,"byte_end":238725,"line_start":266,"line_end":266,"column_start":5,"column_end":51}},{"value":"/ Contains the original string and style sections.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238730,"byte_end":238782,"line_start":267,"line_end":267,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2107},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239060,"byte_end":239064,"line_start":274,"line_end":274,"column_start":9,"column_end":13},"name":"rows","qualname":"::text::text_layout_types::Galley::rows","value":"std::vec::Vec<text::text_layout_types::Row>","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" Rows of text, from top to bottom.\n The number of characters in all rows sum up to `job.text.chars().count()`.\n Note that each paragraph (pieces of text separated with `\\n`)\n can be split up into multiple rows.\n","sig":null,"attributes":[{"value":"/ Rows of text, from top to bottom.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238817,"byte_end":238854,"line_start":270,"line_end":270,"column_start":5,"column_end":42}},{"value":"/ The number of characters in all rows sum up to `job.text.chars().count()`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238859,"byte_end":238937,"line_start":271,"line_end":271,"column_start":5,"column_end":83}},{"value":"/ Note that each paragraph (pieces of text separated with `\\n`)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238942,"byte_end":239007,"line_start":272,"line_end":272,"column_start":5,"column_end":70}},{"value":"/ can be split up into multiple rows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239012,"byte_end":239051,"line_start":273,"line_end":273,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2108},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239340,"byte_end":239344,"line_start":284,"line_end":284,"column_start":9,"column_end":13},"name":"rect","qualname":"::text::text_layout_types::Galley::rect","value":"emath::Rect","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" Bounding rect.","sig":null,"attributes":[{"value":"/ Bounding rect.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239081,"byte_end":239099,"line_start":276,"line_end":276,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239104,"byte_end":239107,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ `rect.top()` is always 0.0.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239112,"byte_end":239143,"line_start":278,"line_end":278,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239148,"byte_end":239151,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ With [`LayoutJob::halign`]:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239156,"byte_end":239187,"line_start":280,"line_end":280,"column_start":5,"column_end":36}},{"value":"/ * [`Align::LEFT`]: rect.left() == 0.0","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239192,"byte_end":239233,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/ * [`Align::Center`]: rect.center() == 0.0","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239238,"byte_end":239283,"line_start":282,"line_end":282,"column_start":5,"column_end":50}},{"value":"/ * [`Align::RIGHT`]: rect.right() == 0.0","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239288,"byte_end":239331,"line_start":283,"line_end":283,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2109},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239460,"byte_end":239471,"line_start":288,"line_end":288,"column_start":9,"column_end":20},"name":"mesh_bounds","qualname":"::text::text_layout_types::Galley::mesh_bounds","value":"emath::Rect","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" Tight bounding box around all the meshes in all the rows.\n Can be used for culling.\n","sig":null,"attributes":[{"value":"/ Tight bounding box around all the meshes in all the rows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239357,"byte_end":239418,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"/ Can be used for culling.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239423,"byte_end":239451,"line_start":287,"line_end":287,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2110},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239544,"byte_end":239556,"line_start":291,"line_end":291,"column_start":9,"column_end":21},"name":"num_vertices","qualname":"::text::text_layout_types::Galley::num_vertices","value":"usize","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" Total number of vertices in all the row meshes.\n","sig":null,"attributes":[{"value":"/ Total number of vertices in all the row meshes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239484,"byte_end":239535,"line_start":290,"line_end":290,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2111},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239629,"byte_end":239640,"line_start":294,"line_end":294,"column_start":9,"column_end":20},"name":"num_indices","qualname":"::text::text_layout_types::Galley::num_indices","value":"usize","parent":{"krate":0,"index":2105},"children":[],"decl_id":null,"docs":" Total number of indices in all the row meshes.\n","sig":null,"attributes":[{"value":"/ Total number of indices in all the row meshes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239570,"byte_end":239620,"line_start":293,"line_end":293,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2120},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239775,"byte_end":239778,"line_start":299,"line_end":299,"column_start":12,"column_end":15},"name":"Row","qualname":"::text::text_layout_types::Row","value":"Row { glyphs, rect, visuals, ends_with_newline }","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239818,"byte_end":239824,"line_start":301,"line_end":301,"column_start":9,"column_end":15},"name":"glyphs","qualname":"::text::text_layout_types::Row::glyphs","value":"std::vec::Vec<text::text_layout_types::Glyph>","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" One for each `char`.\n","sig":null,"attributes":[{"value":"/ One for each `char`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239785,"byte_end":239809,"line_start":300,"line_end":300,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2122},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240013,"byte_end":240017,"line_start":306,"line_end":306,"column_start":9,"column_end":13},"name":"rect","qualname":"::text::text_layout_types::Row::rect","value":"emath::Rect","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" Logical bounding rectangle based on font heights etc.\n Use this when drawing a selection or similar!\n Includes leading and trailing whitespace.\n","sig":null,"attributes":[{"value":"/ Logical bounding rectangle based on font heights etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239843,"byte_end":239900,"line_start":303,"line_end":303,"column_start":5,"column_end":62}},{"value":"/ Use this when drawing a selection or similar!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239905,"byte_end":239954,"line_start":304,"line_end":304,"column_start":5,"column_end":54}},{"value":"/ Includes leading and trailing whitespace.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":239959,"byte_end":240004,"line_start":305,"line_end":305,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240074,"byte_end":240081,"line_start":309,"line_end":309,"column_start":9,"column_end":16},"name":"visuals","qualname":"::text::text_layout_types::Row::visuals","value":"text::text_layout_types::RowVisuals","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" The mesh, ready to be rendered.\n","sig":null,"attributes":[{"value":"/ The mesh, ready to be rendered.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240030,"byte_end":240065,"line_start":308,"line_end":308,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2124},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240469,"byte_end":240486,"line_start":316,"line_end":316,"column_start":9,"column_end":26},"name":"ends_with_newline","qualname":"::text::text_layout_types::Row::ends_with_newline","value":"bool","parent":{"krate":0,"index":2120},"children":[],"decl_id":null,"docs":" If true, this `Row` came from a paragraph ending with a `\\n`.\n The `\\n` itself is omitted from [`Self::glyphs`].\n A `\\n` in the input text always creates a new `Row` below it,\n so that text that ends with `\\n` has an empty `Row` last.\n This also implies that the last `Row` in a `Galley` always has `ends_with_newline == false`.\n","sig":null,"attributes":[{"value":"/ If true, this `Row` came from a paragraph ending with a `\\n`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240100,"byte_end":240165,"line_start":311,"line_end":311,"column_start":5,"column_end":70}},{"value":"/ The `\\n` itself is omitted from [`Self::glyphs`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240170,"byte_end":240223,"line_start":312,"line_end":312,"column_start":5,"column_end":58}},{"value":"/ A `\\n` in the input text always creates a new `Row` below it,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240228,"byte_end":240293,"line_start":313,"line_end":313,"column_start":5,"column_end":70}},{"value":"/ so that text that ends with `\\n` has an empty `Row` last.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240298,"byte_end":240359,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/ This also implies that the last `Row` in a `Galley` always has `ends_with_newline == false`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240364,"byte_end":240460,"line_start":315,"line_end":315,"column_start":5,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240657,"byte_end":240667,"line_start":322,"line_end":322,"column_start":12,"column_end":22},"name":"RowVisuals","qualname":"::text::text_layout_types::RowVisuals","value":"RowVisuals { mesh, mesh_bounds, glyph_vertex_range }","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136}],"decl_id":null,"docs":" The tessellated output of a row.\n","sig":null,"attributes":[{"value":"/ The tessellated output of a row.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240497,"byte_end":240533,"line_start":319,"line_end":319,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240829,"byte_end":240833,"line_start":325,"line_end":325,"column_start":9,"column_end":13},"name":"mesh","qualname":"::text::text_layout_types::RowVisuals::mesh","value":"mesh::Mesh","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The tessellated text, using non-normalized (texel) UV coordinates.\n That is, you need to divide the uv coordinates by the texture size.\n","sig":null,"attributes":[{"value":"/ The tessellated text, using non-normalized (texel) UV coordinates.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240674,"byte_end":240744,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ That is, you need to divide the uv coordinates by the texture size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240749,"byte_end":240820,"line_start":324,"line_end":324,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240972,"byte_end":240983,"line_start":329,"line_end":329,"column_start":9,"column_end":20},"name":"mesh_bounds","qualname":"::text::text_layout_types::RowVisuals::mesh_bounds","value":"emath::Rect","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" Bounds of the mesh, and can be used for culling.\n Does NOT include leading or trailing whitespace glyphs!!\n","sig":null,"attributes":[{"value":"/ Bounds of the mesh, and can be used for culling.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240846,"byte_end":240898,"line_start":327,"line_end":327,"column_start":5,"column_end":57}},{"value":"/ Does NOT include leading or trailing whitespace glyphs!!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240903,"byte_end":240963,"line_start":328,"line_end":328,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241149,"byte_end":241167,"line_start":333,"line_end":333,"column_start":9,"column_end":27},"name":"glyph_vertex_range","qualname":"::text::text_layout_types::RowVisuals::glyph_vertex_range","value":"std::ops::Range<usize>","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The range of vertices in the mesh the contain glyphs.\n Before comes backgrounds (if any), and after any underlines and strikethrough.\n","sig":null,"attributes":[{"value":"/ The range of vertices in the mesh the contain glyphs.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":240996,"byte_end":241053,"line_start":331,"line_end":331,"column_start":5,"column_end":62}},{"value":"/ Before comes backgrounds (if any), and after any underlines and strikethrough.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241058,"byte_end":241140,"line_start":332,"line_end":332,"column_start":5,"column_end":87}}]},{"kind":"Struct","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241522,"byte_end":241527,"line_start":348,"line_end":348,"column_start":12,"column_end":17},"name":"Glyph","qualname":"::text::text_layout_types::Glyph","value":"Glyph { chr, pos, size, uv_rect, section_index }","parent":null,"children":[{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2150}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2146},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241538,"byte_end":241541,"line_start":349,"line_end":349,"column_start":9,"column_end":12},"name":"chr","qualname":"::text::text_layout_types::Glyph::chr","value":"char","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241684,"byte_end":241687,"line_start":352,"line_end":352,"column_start":9,"column_end":12},"name":"pos","qualname":"::text::text_layout_types::Glyph::pos","value":"emath::Pos2","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":" Relative to the galley position.\n Logical position: pos.y is the same for all chars of the same [`TextFormat`].\n","sig":null,"attributes":[{"value":"/ Relative to the galley position.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241553,"byte_end":241589,"line_start":350,"line_end":350,"column_start":5,"column_end":41}},{"value":"/ Logical position: pos.y is the same for all chars of the same [`TextFormat`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241594,"byte_end":241675,"line_start":351,"line_end":351,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241746,"byte_end":241750,"line_start":354,"line_end":354,"column_start":9,"column_end":13},"name":"size","qualname":"::text::text_layout_types::Glyph::size","value":"emath::Vec2","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":" Advance width and font row height.\n","sig":null,"attributes":[{"value":"/ Advance width and font row height.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241699,"byte_end":241737,"line_start":353,"line_end":353,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241817,"byte_end":241824,"line_start":356,"line_end":356,"column_start":9,"column_end":16},"name":"uv_rect","qualname":"::text::text_layout_types::Glyph::uv_rect","value":"text::font::UvRect","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":" Position of the glyph in the font texture.\n","sig":null,"attributes":[{"value":"/ Position of the glyph in the font texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241762,"byte_end":241808,"line_start":355,"line_end":355,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2150},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241905,"byte_end":241918,"line_start":358,"line_end":358,"column_start":9,"column_end":22},"name":"section_index","qualname":"::text::text_layout_types::Glyph::section_index","value":"u32","parent":{"krate":0,"index":2145},"children":[],"decl_id":null,"docs":" Index into [`LayoutJob::sections`]. Decides color etc.\n","sig":null,"attributes":[{"value":"/ Index into [`LayoutJob::sections`]. Decides color etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241838,"byte_end":241896,"line_start":357,"line_end":357,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241952,"byte_end":241957,"line_start":362,"line_end":362,"column_start":12,"column_end":17},"name":"max_x","qualname":"<Glyph>::max_x","value":"pub fn max_x(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242109,"byte_end":242121,"line_start":368,"line_end":368,"column_start":12,"column_end":24},"name":"logical_rect","qualname":"<Glyph>::logical_rect","value":"pub fn logical_rect(&Self) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Same y range for all characters with the same [`TextFormat`].\n","sig":null,"attributes":[{"value":"/ Same y range for all characters with the same [`TextFormat`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242018,"byte_end":242083,"line_start":366,"line_end":366,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242088,"byte_end":242097,"line_start":367,"line_end":367,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242374,"byte_end":242402,"line_start":378,"line_end":378,"column_start":12,"column_end":40},"name":"char_count_excluding_newline","qualname":"<Row>::char_count_excluding_newline","value":"pub fn char_count_excluding_newline(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Excludes the implicit `\\n` after the `Row`, if any.\n","sig":null,"attributes":[{"value":"/ Excludes the implicit `\\n` after the `Row`, if any.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242293,"byte_end":242348,"line_start":376,"line_end":376,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242353,"byte_end":242362,"line_start":377,"line_end":377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242539,"byte_end":242567,"line_start":384,"line_end":384,"column_start":12,"column_end":40},"name":"char_count_including_newline","qualname":"<Row>::char_count_including_newline","value":"pub fn char_count_including_newline(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Includes the implicit `\\n` after the `Row`, if any.\n","sig":null,"attributes":[{"value":"/ Includes the implicit `\\n` after the `Row`, if any.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242458,"byte_end":242513,"line_start":382,"line_end":382,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242518,"byte_end":242527,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242680,"byte_end":242685,"line_start":389,"line_end":389,"column_start":12,"column_end":17},"name":"min_y","qualname":"<Row>::min_y","value":"pub fn min_y(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242659,"byte_end":242668,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242758,"byte_end":242763,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"name":"max_y","qualname":"<Row>::max_y","value":"pub fn max_y(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242737,"byte_end":242746,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242839,"byte_end":242845,"line_start":399,"line_end":399,"column_start":12,"column_end":18},"name":"height","qualname":"<Row>::height","value":"pub fn height(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242818,"byte_end":242827,"line_start":398,"line_end":398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243035,"byte_end":243042,"line_start":405,"line_end":405,"column_start":12,"column_end":19},"name":"char_at","qualname":"<Row>::char_at","value":"pub fn char_at(&Self, f32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Closest char at the desired x coordinate.\n Returns something in the range `[0, char_count_excluding_newline()]`.\n","sig":null,"attributes":[{"value":"/ Closest char at the desired x coordinate.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242900,"byte_end":242945,"line_start":403,"line_end":403,"column_start":5,"column_end":50}},{"value":"/ Returns something in the range `[0, char_count_excluding_newline()]`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242950,"byte_end":243023,"line_start":404,"line_end":404,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243309,"byte_end":243317,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"x_offset","qualname":"<Row>::x_offset","value":"pub fn x_offset(&Self, usize) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243541,"byte_end":243549,"line_start":425,"line_end":425,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Galley>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243512,"byte_end":243529,"line_start":424,"line_end":424,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243635,"byte_end":243639,"line_start":430,"line_end":430,"column_start":12,"column_end":16},"name":"text","qualname":"<Galley>::text","value":"pub fn text(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243606,"byte_end":243623,"line_start":429,"line_end":429,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243698,"byte_end":243702,"line_start":434,"line_end":434,"column_start":12,"column_end":16},"name":"size","qualname":"<Galley>::size","value":"pub fn size(&Self) -> Vec2","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":244283,"byte_end":244299,"line_start":455,"line_end":455,"column_start":12,"column_end":28},"name":"pos_from_pcursor","qualname":"<Galley>::pos_from_pcursor","value":"pub fn pos_from_pcursor(&Self, PCursor) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a 0-width Rect.\n","sig":null,"attributes":[{"value":"/ Returns a 0-width Rect.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":244244,"byte_end":244271,"line_start":454,"line_end":454,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":245545,"byte_end":245560,"line_start":490,"line_end":490,"column_start":12,"column_end":27},"name":"pos_from_cursor","qualname":"<Galley>::pos_from_cursor","value":"pub fn pos_from_cursor(&Self, &Cursor) -> Rect","parent":null,"children":[],"decl_id":null,"docs":" Returns a 0-width Rect.\n","sig":null,"attributes":[{"value":"/ Returns a 0-width Rect.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":245506,"byte_end":245533,"line_start":489,"line_end":489,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":245749,"byte_end":245764,"line_start":495,"line_end":495,"column_start":12,"column_end":27},"name":"cursor_from_pos","qualname":"<Galley>::cursor_from_pos","value":"pub fn cursor_from_pos(&Self, Vec2) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Cursor at the given position within the galley\n","sig":null,"attributes":[{"value":"/ Cursor at the given position within the galley","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":245687,"byte_end":245737,"line_start":494,"line_end":494,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":247517,"byte_end":247520,"line_start":544,"line_end":544,"column_start":12,"column_end":15},"name":"end","qualname":"<Galley>::end","value":"pub fn end(&Self) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":" Cursor to one-past last character.\n","sig":null,"attributes":[{"value":"/ Cursor to one-past last character.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":247467,"byte_end":247505,"line_start":543,"line_end":543,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":248342,"byte_end":248353,"line_start":574,"line_end":574,"column_start":12,"column_end":23},"name":"end_rcursor","qualname":"<Galley>::end_rcursor","value":"pub fn end_rcursor(&Self) -> RCursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":248789,"byte_end":248801,"line_start":590,"line_end":590,"column_start":12,"column_end":24},"name":"from_ccursor","qualname":"<Galley>::from_ccursor","value":"pub fn from_ccursor(&Self, CCursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":250572,"byte_end":250584,"line_start":641,"line_end":641,"column_start":12,"column_end":24},"name":"from_rcursor","qualname":"<Galley>::from_rcursor","value":"pub fn from_rcursor(&Self, RCursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":252249,"byte_end":252261,"line_start":690,"line_end":690,"column_start":12,"column_end":24},"name":"from_pcursor","qualname":"<Galley>::from_pcursor","value":"pub fn from_pcursor(&Self, PCursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":254275,"byte_end":254300,"line_start":749,"line_end":749,"column_start":12,"column_end":37},"name":"cursor_left_one_character","qualname":"<Galley>::cursor_left_one_character","value":"pub fn cursor_left_one_character(&Self, &Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":254745,"byte_end":254771,"line_start":761,"line_end":761,"column_start":12,"column_end":38},"name":"cursor_right_one_character","qualname":"<Galley>::cursor_right_one_character","value":"pub fn cursor_right_one_character(&Self, &Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":255099,"byte_end":255116,"line_start":769,"line_end":769,"column_start":12,"column_end":29},"name":"cursor_up_one_row","qualname":"<Galley>::cursor_up_one_row","value":"pub fn cursor_up_one_row(&Self, &Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":256271,"byte_end":256290,"line_start":802,"line_end":802,"column_start":12,"column_end":31},"name":"cursor_down_one_row","qualname":"<Galley>::cursor_down_one_row","value":"pub fn cursor_down_one_row(&Self, &Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":257461,"byte_end":257480,"line_start":836,"line_end":836,"column_start":12,"column_end":31},"name":"cursor_begin_of_row","qualname":"<Galley>::cursor_begin_of_row","value":"pub fn cursor_begin_of_row(&Self, &Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":257642,"byte_end":257659,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"cursor_end_of_row","qualname":"<Galley>::cursor_end_of_row","value":"pub fn cursor_end_of_row(&Self, &Cursor) -> Cursor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168063,"byte_end":168071,"line_start":10,"line_end":10,"column_start":11,"column_end":19},"name":"TAB_SIZE","qualname":"::text::TAB_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" One `\\t` character is this many spaces wide.\n","sig":null,"attributes":[{"value":"/ One `\\t` character is this many spaces wide.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168004,"byte_end":168052,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168322,"byte_end":168347,"line_start":19,"line_end":19,"column_start":11,"column_end":36},"name":"PASSWORD_REPLACEMENT_CHAR","qualname":"::text::PASSWORD_REPLACEMENT_CHAR","value":"char","parent":null,"children":[],"decl_id":null,"docs":" Suggested character to use to replace those in password text fields.\n","sig":null,"attributes":[{"value":"/ Suggested character to use to replace those in password text fields.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":168239,"byte_end":168311,"line_start":18,"line_end":18,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":258571,"byte_end":258583,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"name":"TextureAtlas","qualname":"::texture_atlas::TextureAtlas","value":"TextureAtlas {  }","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180}],"decl_id":null,"docs":" Contains font data in an atlas, where each character occupied a small rectangle.","sig":null,"attributes":[{"value":"/ Contains font data in an atlas, where each character occupied a small rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":258388,"byte_end":258472,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":258473,"byte_end":258476,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ More characters can be added, possibly expanding the texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":258477,"byte_end":258542,"line_start":32,"line_end":32,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":258896,"byte_end":258899,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<TextureAtlas>::new","value":"pub fn new([usize; ]) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":259193,"byte_end":259197,"line_start":59,"line_end":59,"column_start":12,"column_end":16},"name":"size","qualname":"<TextureAtlas>::size","value":"pub fn size(&Self) -> [usize; ]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":259468,"byte_end":259478,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"fill_ratio","qualname":"<TextureAtlas>::fill_ratio","value":"pub fn fill_ratio(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" When this get high, it might be time to clear and start over!\n","sig":null,"attributes":[{"value":"/ When this get high, it might be time to clear and start over!","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":259391,"byte_end":259456,"line_start":68,"line_end":68,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":259726,"byte_end":259736,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"take_delta","qualname":"<TextureAtlas>::take_delta","value":"pub fn take_delta(&mut Self) -> Option<ImageDelta>","parent":null,"children":[],"decl_id":null,"docs":" Call to get the change to the image since last call.\n","sig":null,"attributes":[{"value":"/ Call to get the change to the image since last call.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":259658,"byte_end":259714,"line_start":77,"line_end":77,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":260376,"byte_end":260384,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"allocate","qualname":"<TextureAtlas>::allocate","value":"pub fn allocate(&mut Self, (usize, usize))\n-> ((usize, usize), &mut AlphaImage)","parent":null,"children":[],"decl_id":null,"docs":" Returns the coordinates of where the rect ended up,\n and invalidates the region.\n","sig":null,"attributes":[{"value":"/ Returns the coordinates of where the rect ended up,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":260273,"byte_end":260328,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/ and invalidates the region.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":260333,"byte_end":260364,"line_start":93,"line_end":93,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263102,"byte_end":263115,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"TextureHandle","qualname":"::texture_handle::TextureHandle","value":"TextureHandle {  }","parent":null,"children":[{"krate":0,"index":1105},{"krate":0,"index":1106}],"decl_id":null,"docs":" Used to paint images.","sig":null,"attributes":[{"value":"/ Used to paint images.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":262649,"byte_end":262674,"line_start":7,"line_end":7,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":262675,"byte_end":262678,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ An _image_ is pixels stored in RAM, and represented using [`ImageData`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":262679,"byte_end":262755,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ Before you can paint it however, you need to convert it to a _texture_.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":262756,"byte_end":262831,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":262832,"byte_end":262835,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ If you are using egui, use `egui::Context::load_texture`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":262836,"byte_end":262897,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":262898,"byte_end":262901,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The [`TextureHandle`] can be cloned cheaply.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":262902,"byte_end":262950,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/ When the last [`TextureHandle`] for specific texture is dropped, the texture is freed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":262951,"byte_end":263041,"line_start":15,"line_end":15,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263042,"byte_end":263045,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ See also [`TextureManager`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263046,"byte_end":263078,"line_start":17,"line_end":17,"column_start":1,"column_end":33}},{"value":"must_use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263079,"byte_end":263090,"line_start":18,"line_end":18,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263918,"byte_end":263921,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<TextureHandle>::new","value":"pub fn new(Arc<RwLock<TextureManager>>, TextureId) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If you are using egui, use `egui::Context::load_texture` instead.\n","sig":null,"attributes":[{"value":"/ If you are using egui, use `egui::Context::load_texture` instead.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263837,"byte_end":263906,"line_start":57,"line_end":57,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264048,"byte_end":264050,"line_start":63,"line_end":63,"column_start":12,"column_end":14},"name":"id","qualname":"<TextureHandle>::id","value":"pub fn id(&Self) -> TextureId","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264027,"byte_end":264036,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264158,"byte_end":264161,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"set","qualname":"<TextureHandle>::set","value":"pub fn set<impl Into<ImageData>: Into<ImageData>>(&mut Self,\n                                                  impl Into<ImageData>)","parent":null,"children":[],"decl_id":null,"docs":" Assign a new image to an existing texture.\n","sig":null,"attributes":[{"value":"/ Assign a new image to an existing texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264100,"byte_end":264146,"line_start":67,"line_end":67,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264388,"byte_end":264399,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"set_partial","qualname":"<TextureHandle>::set_partial","value":"pub fn set_partial<impl Into<ImageData>: Into<ImageData>>(&mut Self,\n                                                          [usize; ],\n                                                          impl Into<ImageData>)","parent":null,"children":[],"decl_id":null,"docs":" Assign a new image to a subregion of the whole texture.\n","sig":null,"attributes":[{"value":"/ Assign a new image to a subregion of the whole texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264317,"byte_end":264376,"line_start":74,"line_end":74,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264610,"byte_end":264614,"line_start":82,"line_end":82,"column_start":12,"column_end":16},"name":"size","qualname":"<TextureHandle>::size","value":"pub fn size(&Self) -> [usize; ]","parent":null,"children":[],"decl_id":null,"docs":" width x height\n","sig":null,"attributes":[{"value":"/ width x height","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264580,"byte_end":264598,"line_start":81,"line_end":81,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264736,"byte_end":264745,"line_start":87,"line_end":87,"column_start":12,"column_end":21},"name":"size_vec2","qualname":"<TextureHandle>::size_vec2","value":"pub fn size_vec2(&Self) -> crate::Vec2","parent":null,"children":[],"decl_id":null,"docs":" width x height\n","sig":null,"attributes":[{"value":"/ width x height","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264706,"byte_end":264724,"line_start":86,"line_end":86,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264890,"byte_end":264902,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"aspect_ratio","qualname":"<TextureHandle>::aspect_ratio","value":"pub fn aspect_ratio(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" width / height\n","sig":null,"attributes":[{"value":"/ width / height","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":264860,"byte_end":264878,"line_start":92,"line_end":92,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":265031,"byte_end":265035,"line_start":99,"line_end":99,"column_start":12,"column_end":16},"name":"name","qualname":"<TextureHandle>::name","value":"pub fn name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Debug-name.\n","sig":null,"attributes":[{"value":"/ Debug-name.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":265004,"byte_end":265019,"line_start":98,"line_end":98,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":1134},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"textures","qualname":"::textures","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1139},{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":2183},{"krate":0,"index":2187},{"krate":0,"index":1148},{"krate":0,"index":2189},{"krate":0,"index":2195},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2200},{"krate":0,"index":1159},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":1161},{"krate":0,"index":1165}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2183},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":265719,"byte_end":265733,"line_start":10,"line_end":10,"column_start":12,"column_end":26},"name":"TextureManager","qualname":"::textures::TextureManager","value":"TextureManager {  }","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186}],"decl_id":null,"docs":" Low-level manager for allocating textures.","sig":null,"attributes":[{"value":"/ Low-level manager for allocating textures.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":265565,"byte_end":265611,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":265612,"byte_end":265615,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Communicates with the painting subsystem using [`Self::take_delta`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":265616,"byte_end":265688,"line_start":8,"line_end":8,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266503,"byte_end":266508,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"alloc","qualname":"<TextureManager>::alloc","value":"pub fn alloc(&mut Self, String, ImageData) -> TextureId","parent":null,"children":[],"decl_id":null,"docs":" Allocate a new texture.","sig":null,"attributes":[{"value":"/ Allocate a new texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":265953,"byte_end":265980,"line_start":19,"line_end":19,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":265985,"byte_end":265988,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ The given name can be useful for later debugging.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":265993,"byte_end":266046,"line_start":21,"line_end":21,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266051,"byte_end":266054,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ The returned [`TextureId`] will be [`TextureId::Managed`], with an index","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266059,"byte_end":266135,"line_start":23,"line_end":23,"column_start":5,"column_end":81}},{"value":"/ starting from zero and increasing with each call to [`Self::alloc`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266140,"byte_end":266212,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266217,"byte_end":266220,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ The first texture you allocate will be `TextureId::Managed(0) == TexureId::default()` and","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266225,"byte_end":266318,"line_start":26,"line_end":26,"column_start":5,"column_end":98}},{"value":"/ MUST have a white pixel at (0,0) ([`crate::WHITE_UV`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266323,"byte_end":266382,"line_start":27,"line_end":27,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266387,"byte_end":266390,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ The texture is given a retain-count of `1`, requiring one call to [`Self::free`] to free it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266395,"byte_end":266491,"line_start":29,"line_end":29,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":267027,"byte_end":267030,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"set","qualname":"<TextureManager>::set","value":"pub fn set(&mut Self, TextureId, ImageDelta)","parent":null,"children":[],"decl_id":null,"docs":" Assign a new image to an existing texture,\n or update a region of it.\n","sig":null,"attributes":[{"value":"/ Assign a new image to an existing texture,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266935,"byte_end":266981,"line_start":45,"line_end":45,"column_start":5,"column_end":51}},{"value":"/ or update a region of it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":266986,"byte_end":267015,"line_start":46,"line_end":46,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":267584,"byte_end":267588,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"free","qualname":"<TextureManager>::free","value":"pub fn free(&mut Self, TextureId)","parent":null,"children":[],"decl_id":null,"docs":" Free an existing texture.\n","sig":null,"attributes":[{"value":"/ Free an existing texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":267543,"byte_end":267572,"line_start":63,"line_end":63,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268283,"byte_end":268289,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"retain","qualname":"<TextureManager>::retain","value":"pub fn retain(&mut Self, TextureId)","parent":null,"children":[],"decl_id":null,"docs":" Increase the retain-count of the given texture.","sig":null,"attributes":[{"value":"/ Increase the retain-count of the given texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268115,"byte_end":268166,"line_start":81,"line_end":81,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268171,"byte_end":268174,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ For each time you call [`Self::retain`] you must call [`Self::free`] on additional time.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268179,"byte_end":268271,"line_start":83,"line_end":83,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268743,"byte_end":268753,"line_start":99,"line_end":99,"column_start":12,"column_end":22},"name":"take_delta","qualname":"<TextureManager>::take_delta","value":"pub fn take_delta(&mut Self) -> TexturesDelta","parent":null,"children":[],"decl_id":null,"docs":" Take and reset changes since last frame.","sig":null,"attributes":[{"value":"/ Take and reset changes since last frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268609,"byte_end":268653,"line_start":96,"line_end":96,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268658,"byte_end":268661,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ These should be applied to the painting subsystem each frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268666,"byte_end":268731,"line_start":98,"line_end":98,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268890,"byte_end":268894,"line_start":104,"line_end":104,"column_start":12,"column_end":16},"name":"meta","qualname":"<TextureManager>::meta","value":"pub fn meta(&Self, TextureId) -> Option<&TextureMeta>","parent":null,"children":[],"decl_id":null,"docs":" Get meta-data about a specific texture.\n","sig":null,"attributes":[{"value":"/ Get meta-data about a specific texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268835,"byte_end":268878,"line_start":103,"line_end":103,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269065,"byte_end":269074,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"allocated","qualname":"<TextureManager>::allocated","value":"pub fn allocated(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get meta-data about all allocated textures in some arbitrary order.\n","sig":null,"attributes":[{"value":"/ Get meta-data about all allocated textures in some arbitrary order.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":268982,"byte_end":269053,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269233,"byte_end":269246,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"num_allocated","qualname":"<TextureManager>::num_allocated","value":"pub fn num_allocated(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Total number of allocated textures.\n","sig":null,"attributes":[{"value":"/ Total number of allocated textures.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269182,"byte_end":269221,"line_start":113,"line_end":113,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269387,"byte_end":269398,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"TextureMeta","qualname":"::textures::TextureMeta","value":"TextureMeta { name, size, bytes_per_pixel, retain_count }","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2194}],"decl_id":null,"docs":" Meta-data about an allocated texture.\n","sig":null,"attributes":[{"value":"/ Meta-data about an allocated texture.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269299,"byte_end":269340,"line_start":119,"line_end":119,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269461,"byte_end":269465,"line_start":123,"line_end":123,"column_start":9,"column_end":13},"name":"name","qualname":"::textures::TextureMeta::name","value":"std::string::String","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":" A human-readable name useful for debugging.\n","sig":null,"attributes":[{"value":"/ A human-readable name useful for debugging.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269405,"byte_end":269452,"line_start":122,"line_end":122,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269507,"byte_end":269511,"line_start":126,"line_end":126,"column_start":9,"column_end":13},"name":"size","qualname":"::textures::TextureMeta::size","value":"[usize; 2]","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":" width x height\n","sig":null,"attributes":[{"value":"/ width x height","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269480,"byte_end":269498,"line_start":125,"line_end":125,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269549,"byte_end":269564,"line_start":129,"line_end":129,"column_start":9,"column_end":24},"name":"bytes_per_pixel","qualname":"::textures::TextureMeta::bytes_per_pixel","value":"usize","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":" 4 or 1\n","sig":null,"attributes":[{"value":"/ 4 or 1","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269530,"byte_end":269540,"line_start":128,"line_end":128,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269619,"byte_end":269631,"line_start":132,"line_end":132,"column_start":9,"column_end":21},"name":"retain_count","qualname":"::textures::TextureMeta::retain_count","value":"usize","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":" Free when this reaches zero.\n","sig":null,"attributes":[{"value":"/ Free when this reaches zero.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269578,"byte_end":269610,"line_start":131,"line_end":131,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269748,"byte_end":269758,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"bytes_used","qualname":"<TextureMeta>::bytes_used","value":"pub fn bytes_used(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Size in bytes.\n width x height x [`Self::bytes_per_pixel`].\n","sig":null,"attributes":[{"value":"/ Size in bytes.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269666,"byte_end":269684,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ width x height x [`Self::bytes_per_pixel`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269689,"byte_end":269736,"line_start":137,"line_end":137,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2203},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270225,"byte_end":270238,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"TexturesDelta","qualname":"::textures::TexturesDelta","value":"TexturesDelta { set, free }","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2205}],"decl_id":null,"docs":" What has been allocated and freed during the last period.","sig":null,"attributes":[{"value":"/ What has been allocated and freed during the last period.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269926,"byte_end":269987,"line_start":145,"line_end":145,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269988,"byte_end":269991,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ These are commands given to the integration painter.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269992,"byte_end":270048,"line_start":147,"line_end":147,"column_start":1,"column_end":57}},{"value":"must_use = \"The painter must take care of this\"","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270163,"byte_end":270213,"line_start":150,"line_end":150,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270305,"byte_end":270308,"line_start":153,"line_end":153,"column_start":9,"column_end":12},"name":"set","qualname":"::textures::TexturesDelta::set","value":"ahash::AHashMap<TextureId, image::ImageDelta>","parent":{"krate":0,"index":2203},"children":[],"decl_id":null,"docs":" New or changed textures. Apply before painting.\n","sig":null,"attributes":[{"value":"/ New or changed textures. Apply before painting.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270245,"byte_end":270296,"line_start":152,"line_end":152,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2205},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270393,"byte_end":270397,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"name":"free","qualname":"::textures::TexturesDelta::free","value":"std::vec::Vec<TextureId>","parent":{"krate":0,"index":2203},"children":[],"decl_id":null,"docs":" Textures to free after painting.\n","sig":null,"attributes":[{"value":"/ Textures to free after painting.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270348,"byte_end":270384,"line_start":155,"line_end":155,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270450,"byte_end":270458,"line_start":160,"line_end":160,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<TexturesDelta>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270546,"byte_end":270552,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"append","qualname":"<TexturesDelta>::append","value":"pub fn append(&mut Self, TexturesDelta)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270701,"byte_end":270706,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"clear","qualname":"<TexturesDelta>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\mod.rs","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1179},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":272660,"byte_end":272672,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"OrderedFloat","qualname":"::util::ordered_float::OrderedFloat","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps a floating-point value to add total order and hash.\n Possible types for `T` are `f32` and `f64`.","sig":null,"attributes":[{"value":"/ Wraps a floating-point value to add total order and hash.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":272508,"byte_end":272569,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/ Possible types for `T` are `f32` and `f64`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":272570,"byte_end":272617,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":272618,"byte_end":272621,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ See also [`FloatOrd`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":272622,"byte_end":272648,"line_start":10,"line_end":10,"column_start":1,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274023,"byte_end":274031,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"FloatOrd","qualname":"::util::ordered_float::FloatOrd","value":"FloatOrd","parent":null,"children":[{"krate":0,"index":1199}],"decl_id":null,"docs":" Extension trait to provide `ord()` method.","sig":null,"attributes":[{"value":"/ Extension trait to provide `ord()` method.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273760,"byte_end":273806,"line_start":55,"line_end":55,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273807,"byte_end":273810,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Example with `f64`:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273811,"byte_end":273834,"line_start":57,"line_end":57,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273835,"byte_end":273842,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use epaint::util::FloatOrd;","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273843,"byte_end":273874,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273875,"byte_end":273878,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let array = [1.0, 2.5, 2.0];","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273879,"byte_end":273911,"line_start":61,"line_end":61,"column_start":1,"column_end":33}},{"value":"/ let max = array.iter().max_by_key(|val| val.ord());","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273912,"byte_end":273967,"line_start":62,"line_end":62,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273968,"byte_end":273971,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(max, Some(&2.5));","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273972,"byte_end":274004,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274005,"byte_end":274012,"line_start":65,"line_end":65,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274112,"byte_end":274115,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"ord","qualname":"::util::ordered_float::FloatOrd::ord","value":"pub fn ord(Self) -> OrderedFloat<Self> where Self: Sized","parent":{"krate":0,"index":1198},"children":[],"decl_id":null,"docs":" Type to provide total order, useful as key in sorted contexts.\n","sig":null,"attributes":[{"value":"/ Type to provide total order, useful as key in sorted contexts.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274038,"byte_end":274104,"line_start":67,"line_end":67,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274563,"byte_end":274568,"line_start":91,"line_end":91,"column_start":11,"column_end":16},"name":"Float","qualname":"::util::ordered_float::Float","value":"Float: PartialOrd + PartialEq + private::FloatImpl","parent":null,"children":[],"decl_id":null,"docs":" Internal abstraction over floating point types\n","sig":null,"attributes":[{"value":"/ Internal abstraction over floating point types","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274487,"byte_end":274537,"line_start":89,"line_end":89,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274804,"byte_end":274813,"line_start":99,"line_end":99,"column_start":15,"column_end":24},"name":"FloatImpl","qualname":"::util::ordered_float::private::FloatImpl","value":"FloatImpl","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274827,"byte_end":274833,"line_start":100,"line_end":100,"column_start":12,"column_end":18},"name":"is_nan","qualname":"::util::ordered_float::private::FloatImpl::is_nan","value":"pub fn is_nan(&Self) -> bool","parent":{"krate":0,"index":1209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274861,"byte_end":274865,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"hash","qualname":"::util::ordered_float::private::FloatImpl::hash","value":"pub fn hash<H: Hasher>(&Self, &mut H)","parent":{"krate":0,"index":1209},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\mod.rs","byte_start":271937,"byte_end":271941,"line_start":7,"line_end":7,"column_start":8,"column_end":12},"name":"hash","qualname":"::util::hash","value":"pub fn hash<impl std::hash::Hash: std::hash::Hash>(impl std::hash::Hash)\n-> u64","parent":null,"children":[],"decl_id":null,"docs":" Hash the given value with a predictable hasher.\n","sig":null,"attributes":[{"value":"/ Hash the given value with a predictable hasher.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\mod.rs","byte_start":271868,"byte_end":271919,"line_start":5,"line_end":5,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\mod.rs","byte_start":271920,"byte_end":271929,"line_start":6,"line_end":6,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\mod.rs","byte_start":272191,"byte_end":272200,"line_start":16,"line_end":16,"column_start":8,"column_end":17},"name":"hash_with","qualname":"::util::hash_with","value":"pub fn hash_with<impl std::hash::Hash: std::hash::Hash,\n                 impl std::hash::Hasher: std::hash::Hasher>(impl std::hash::Hash,\n                                                            impl std::hash::Hasher)\n-> u64","parent":null,"children":[],"decl_id":null,"docs":" Hash the given value with the given hasher.\n","sig":null,"attributes":[{"value":"/ Hash the given value with the given hasher.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\mod.rs","byte_start":272126,"byte_end":272173,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\mod.rs","byte_start":272174,"byte_end":272183,"line_start":15,"line_end":15,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3960,"byte_end":3968,"line_start":132,"line_end":132,"column_start":11,"column_end":19},"name":"WHITE_UV","qualname":"::WHITE_UV","value":"emath::Pos2","parent":null,"children":[],"decl_id":null,"docs":" The UV coordinate of a white region of the texture mesh.\n The default egui texture has the top-left corner pixel fully white.\n You need need use a clamping texture sampler for this to work\n (so it doesn't do bilinear blending with bottom right corner).\n","sig":null,"attributes":[{"value":"/ The UV coordinate of a white region of the texture mesh.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3684,"byte_end":3744,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ The default egui texture has the top-left corner pixel fully white.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3745,"byte_end":3816,"line_start":129,"line_end":129,"column_start":1,"column_end":72}},{"value":"/ You need need use a clamping texture sampler for this to work","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3817,"byte_end":3882,"line_start":130,"line_end":130,"column_start":1,"column_end":66}},{"value":"/ (so it doesn't do bilinear blending with bottom right corner).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3883,"byte_end":3949,"line_start":131,"line_end":131,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4467,"byte_end":4474,"line_start":143,"line_end":143,"column_start":5,"column_end":12},"name":"Managed","qualname":"::TextureId::Managed","value":"TextureId::Managed(u64)","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" Textures allocated using [`TextureManager`].","sig":null,"attributes":[{"value":"/ Textures allocated using [`TextureManager`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4328,"byte_end":4376,"line_start":140,"line_end":140,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4381,"byte_end":4384,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ The first texture (`TextureId::Epaint(0)`) is used for the font data.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4389,"byte_end":4462,"line_start":142,"line_end":142,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4633,"byte_end":4637,"line_start":147,"line_end":147,"column_start":5,"column_end":9},"name":"User","qualname":"::TextureId::User","value":"TextureId::User(u64)","parent":{"krate":0,"index":2214},"children":[],"decl_id":null,"docs":" Your own texture, defined in any which way you want.\n The backend renderer will presumably use this to look up what texture to use.\n","sig":null,"attributes":[{"value":"/ Your own texture, defined in any which way you want.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4486,"byte_end":4542,"line_start":145,"line_end":145,"column_start":5,"column_end":61}},{"value":"/ The backend renderer will presumably use this to look up what texture to use.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4547,"byte_end":4628,"line_start":146,"line_end":146,"column_start":5,"column_end":86}}]},{"kind":"Enum","id":{"krate":0,"index":2214},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4312,"byte_end":4321,"line_start":139,"line_end":139,"column_start":10,"column_end":19},"name":"TextureId","qualname":"::TextureId","value":"pub enum TextureId { Managed(u64), User(u64), }","parent":null,"children":[{"krate":0,"index":2215},{"krate":0,"index":2218}],"decl_id":null,"docs":" What texture to use in a [`Mesh`] mesh.","sig":null,"attributes":[{"value":"/ What texture to use in a [`Mesh`] mesh.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4008,"byte_end":4051,"line_start":134,"line_end":134,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4052,"byte_end":4055,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ If you don't want to use a texture, use `TextureId::Epaint(0)` and the [`WHITE_UV`] for uv-coord.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4056,"byte_end":4157,"line_start":136,"line_end":136,"column_start":1,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":2240},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4901,"byte_end":4913,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"ClippedShape","qualname":"::ClippedShape","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Shape`] within a clip rectangle.","sig":null,"attributes":[{"value":"/ A [`Shape`] within a clip rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4770,"byte_end":4810,"line_start":157,"line_end":157,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4811,"byte_end":4814,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ Everything is using logical points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4815,"byte_end":4854,"line_start":159,"line_end":159,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2242},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5021,"byte_end":5036,"line_start":164,"line_end":164,"column_start":5,"column_end":20},"name":"0","qualname":"::ClippedShape::0","value":"emath::Rect","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":" Clip / scissor rectangle.\n Only show the part of the [`Shape`] that falls within this.\n","sig":null,"attributes":[{"value":"/ Clip / scissor rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4919,"byte_end":4948,"line_start":162,"line_end":162,"column_start":5,"column_end":34}},{"value":"/ Only show the part of the [`Shape`] that falls within this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4953,"byte_end":5016,"line_start":163,"line_end":163,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2243},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5060,"byte_end":5069,"line_start":166,"line_end":166,"column_start":5,"column_end":14},"name":"1","qualname":"::ClippedShape::1","value":"shape::Shape","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":" The shape\n","sig":null,"attributes":[{"value":"/ The shape","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5042,"byte_end":5055,"line_start":165,"line_end":165,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2252},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5271,"byte_end":5282,"line_start":174,"line_end":174,"column_start":12,"column_end":23},"name":"ClippedMesh","qualname":"::ClippedMesh","value":"","parent":null,"children":[],"decl_id":null,"docs":" A [`Mesh`] within a clip rectangle.","sig":null,"attributes":[{"value":"/ A [`Mesh`] within a clip rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5075,"byte_end":5114,"line_start":169,"line_end":169,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5115,"byte_end":5118,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Everything is using logical points.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5119,"byte_end":5158,"line_start":171,"line_end":171,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5389,"byte_end":5404,"line_start":177,"line_end":177,"column_start":5,"column_end":20},"name":"0","qualname":"::ClippedMesh::0","value":"emath::Rect","parent":{"krate":0,"index":2252},"children":[],"decl_id":null,"docs":" Clip / scissor rectangle.\n Only show the part of the [`Mesh`] that falls within this.\n","sig":null,"attributes":[{"value":"/ Clip / scissor rectangle.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5288,"byte_end":5317,"line_start":175,"line_end":175,"column_start":5,"column_end":34}},{"value":"/ Only show the part of the [`Mesh`] that falls within this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5322,"byte_end":5384,"line_start":176,"line_end":176,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5428,"byte_end":5436,"line_start":179,"line_end":179,"column_start":5,"column_end":13},"name":"1","qualname":"::ClippedMesh::1","value":"mesh::Mesh","parent":{"krate":0,"index":2252},"children":[],"decl_id":null,"docs":" The shape\n","sig":null,"attributes":[{"value":"/ The shape","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":5410,"byte_end":5423,"line_start":178,"line_end":178,"column_start":5,"column_end":18}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7298,"byte_end":7314,"line_start":24,"line_end":24,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":21469,"byte_end":21474,"line_start":363,"line_end":363,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22192,"byte_end":22212,"line_start":387,"line_end":387,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":27587,"byte_end":27592,"line_start":551,"line_end":551,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":29256,"byte_end":29276,"line_start":606,"line_end":606,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46730,"byte_end":46737,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46895,"byte_end":46902,"line_start":31,"line_end":31,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47023,"byte_end":47030,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52208,"byte_end":52212,"line_start":198,"line_end":198,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52372,"byte_end":52376,"line_start":207,"line_end":207,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52555,"byte_end":52559,"line_start":215,"line_end":215,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52820,"byte_end":52824,"line_start":225,"line_end":225,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":57307,"byte_end":57311,"line_start":385,"line_end":385,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":57583,"byte_end":57587,"line_start":399,"line_end":399,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":57868,"byte_end":57872,"line_start":413,"line_end":413,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":58510,"byte_end":58514,"line_start":444,"line_end":444,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":58811,"byte_end":58818,"line_start":455,"line_end":455,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61438,"byte_end":61442,"line_start":556,"line_end":556,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65199,"byte_end":65203,"line_start":683,"line_end":683,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65311,"byte_end":65315,"line_start":688,"line_end":688,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65463,"byte_end":65470,"line_start":694,"line_end":694,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65581,"byte_end":65585,"line_start":699,"line_end":699,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67775,"byte_end":67779,"line_start":780,"line_end":780,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67889,"byte_end":67896,"line_start":786,"line_end":786,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68009,"byte_end":68013,"line_start":792,"line_end":792,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68238,"byte_end":68247,"line_start":804,"line_end":804,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68353,"byte_end":68362,"line_start":810,"line_end":810,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68470,"byte_end":68479,"line_start":816,"line_end":816,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74420,"byte_end":74429,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75275,"byte_end":75285,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":77836,"byte_end":77846,"line_start":131,"line_end":131,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78099,"byte_end":78109,"line_start":142,"line_end":142,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78332,"byte_end":78341,"line_start":151,"line_end":151,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79009,"byte_end":79019,"line_start":174,"line_end":174,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":80648,"byte_end":80658,"line_start":231,"line_end":231,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":80901,"byte_end":80911,"line_start":242,"line_end":242,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81129,"byte_end":81138,"line_start":251,"line_end":251,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81851,"byte_end":81861,"line_start":276,"line_end":276,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83835,"byte_end":83839,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90798,"byte_end":90804,"line_start":265,"line_end":265,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":95989,"byte_end":95994,"line_start":162,"line_end":162,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96855,"byte_end":96861,"line_start":190,"line_end":190,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97721,"byte_end":97726,"line_start":221,"line_end":221,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99296,"byte_end":99302,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101970,"byte_end":101975,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102097,"byte_end":102102,"line_start":41,"line_end":41,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102220,"byte_end":102225,"line_start":49,"line_end":49,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":107125,"byte_end":107130,"line_start":204,"line_end":204,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109118,"byte_end":109129,"line_start":271,"line_end":271,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110043,"byte_end":110048,"line_start":305,"line_end":305,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110754,"byte_end":110763,"line_start":328,"line_end":328,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112228,"byte_end":112233,"line_start":381,"line_end":381,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":476}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112765,"byte_end":112774,"line_start":401,"line_end":401,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":113704,"byte_end":113709,"line_start":437,"line_end":437,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114365,"byte_end":114373,"line_start":458,"line_end":458,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114466,"byte_end":114474,"line_start":465,"line_end":465,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114661,"byte_end":114669,"line_start":477,"line_end":477,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116125,"byte_end":116134,"line_start":531,"line_end":531,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116590,"byte_end":116595,"line_start":550,"line_end":550,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":120890,"byte_end":120901,"line_start":13,"line_end":13,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":121211,"byte_end":121220,"line_start":28,"line_end":28,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":121322,"byte_end":121331,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":122070,"byte_end":122079,"line_start":54,"line_end":54,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":122191,"byte_end":122200,"line_start":60,"line_end":60,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":122413,"byte_end":122422,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125492,"byte_end":125502,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128400,"byte_end":128406,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128948,"byte_end":128954,"line_start":37,"line_end":37,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":129133,"byte_end":129139,"line_start":47,"line_end":47,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130485,"byte_end":130489,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140795,"byte_end":140814,"line_start":326,"line_end":326,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":141255,"byte_end":141274,"line_start":343,"line_end":343,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":141490,"byte_end":141509,"line_start":353,"line_end":353,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154352,"byte_end":154363,"line_start":687,"line_end":687,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168976,"byte_end":168983,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":169270,"byte_end":169277,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":169397,"byte_end":169404,"line_start":34,"line_end":34,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":169650,"byte_end":169657,"line_start":44,"line_end":44,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":169909,"byte_end":169916,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170060,"byte_end":170067,"line_start":60,"line_end":60,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":641}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171724,"byte_end":171731,"line_start":104,"line_end":104,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":173078,"byte_end":173084,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":173397,"byte_end":173406,"line_start":45,"line_end":45,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":174136,"byte_end":174144,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":695},{"krate":0,"index":699},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":178770,"byte_end":178774,"line_start":226,"line_end":226,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":723},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185701,"byte_end":185707,"line_start":27,"line_end":27,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185860,"byte_end":185866,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186266,"byte_end":186272,"line_start":55,"line_end":55,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187566,"byte_end":187576,"line_start":94,"line_end":94,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187689,"byte_end":187699,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188538,"byte_end":188546,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189822,"byte_end":189831,"line_start":175,"line_end":175,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":192590,"byte_end":192605,"line_start":246,"line_end":246,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195248,"byte_end":195253,"line_start":326,"line_end":326,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":200878,"byte_end":200891,"line_start":500,"line_end":500,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":832}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":201442,"byte_end":201451,"line_start":520,"line_end":520,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":204382,"byte_end":204393,"line_start":618,"line_end":618,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":206021,"byte_end":206034,"line_start":665,"line_end":665,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout.rs","byte_start":208419,"byte_end":208429,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout.rs","byte_start":229869,"byte_end":229887,"line_start":645,"line_end":645,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233302,"byte_end":233311,"line_start":75,"line_end":75,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233649,"byte_end":233658,"line_start":90,"line_end":90,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":235936,"byte_end":235945,"line_start":165,"line_end":165,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":236907,"byte_end":236920,"line_start":200,"line_end":200,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237783,"byte_end":237793,"line_start":232,"line_end":232,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238141,"byte_end":238151,"line_start":247,"line_end":247,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241203,"byte_end":241213,"line_start":336,"line_end":336,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241933,"byte_end":241938,"line_start":361,"line_end":361,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242283,"byte_end":242286,"line_start":375,"line_end":375,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243499,"byte_end":243505,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243866,"byte_end":243872,"line_start":442,"line_end":442,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":247454,"byte_end":247460,"line_start":542,"line_end":542,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1016},{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":248730,"byte_end":248736,"line_start":588,"line_end":588,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":254255,"byte_end":254261,"line_start":748,"line_end":748,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":258114,"byte_end":258119,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":258870,"byte_end":258882,"line_start":47,"line_end":47,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263197,"byte_end":263210,"line_start":24,"line_end":24,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263307,"byte_end":263320,"line_start":30,"line_end":30,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263523,"byte_end":263536,"line_start":40,"line_end":40,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263643,"byte_end":263656,"line_start":47,"line_end":47,"column_start":13,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263686,"byte_end":263699,"line_start":49,"line_end":49,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263817,"byte_end":263830,"line_start":56,"line_end":56,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":265159,"byte_end":265168,"line_start":104,"line_end":104,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":265302,"byte_end":265311,"line_start":111,"line_end":111,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":265932,"byte_end":265946,"line_start":18,"line_end":18,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269648,"byte_end":269659,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270423,"byte_end":270436,"line_start":159,"line_end":159,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270807,"byte_end":270820,"line_start":175,"line_end":175,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":272703,"byte_end":272715,"line_start":13,"line_end":13,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":272758,"byte_end":272770,"line_start":15,"line_end":15,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273067,"byte_end":273079,"line_start":27,"line_end":27,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273350,"byte_end":273362,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273577,"byte_end":273589,"line_start":47,"line_end":47,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4664,"byte_end":4673,"line_start":150,"line_end":150,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":2830,"byte_end":2835,"line_start":91,"line_end":91,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":86}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":2845,"byte_end":2850,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":250}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":2870,"byte_end":2875,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":332}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":2908,"byte_end":2923,"line_start":97,"line_end":97,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":504}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":2933,"byte_end":2938,"line_start":98,"line_end":98,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":508}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":2960,"byte_end":2971,"line_start":100,"line_end":100,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":566}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":2981,"byte_end":2985,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":626}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\mod.rs","byte_start":167934,"byte_end":167940,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":627}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3034,"byte_end":3042,"line_start":104,"line_end":104,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1134}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":3052,"byte_end":3056,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1167}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":7298,"byte_end":7314,"line_start":24,"line_end":24,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":21469,"byte_end":21474,"line_start":363,"line_end":363,"column_start":33,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":22192,"byte_end":22212,"line_start":387,"line_end":387,"column_start":6,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":27587,"byte_end":27592,"line_start":551,"line_end":551,"column_start":37,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\bezier.rs","byte_start":29256,"byte_end":29276,"line_start":606,"line_end":606,"column_start":6,"column_end":26},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":68},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46730,"byte_end":46737,"line_start":22,"line_end":22,"column_start":33,"column_end":40},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1415},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":46895,"byte_end":46902,"line_start":31,"line_end":31,"column_start":36,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1415},"to":{"krate":2,"index":3316}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":47023,"byte_end":47030,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52208,"byte_end":52212,"line_start":198,"line_end":198,"column_start":33,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52372,"byte_end":52376,"line_start":207,"line_end":207,"column_start":36,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":3316}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52555,"byte_end":52559,"line_start":215,"line_end":215,"column_start":26,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":9607}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":52820,"byte_end":52824,"line_start":225,"line_end":225,"column_start":6,"column_end":10},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":57307,"byte_end":57311,"line_start":385,"line_end":385,"column_start":24,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":3083}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":57583,"byte_end":57587,"line_start":399,"line_end":399,"column_start":30,"column_end":34},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":3093}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":57868,"byte_end":57872,"line_start":413,"line_end":413,"column_start":29,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":3093}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":58510,"byte_end":58514,"line_start":444,"line_end":444,"column_start":24,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":58811,"byte_end":58818,"line_start":455,"line_end":455,"column_start":21,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1415},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":61438,"byte_end":61442,"line_start":556,"line_end":556,"column_start":6,"column_end":10},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65199,"byte_end":65203,"line_start":683,"line_end":683,"column_start":21,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65311,"byte_end":65315,"line_start":688,"line_end":688,"column_start":21,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65463,"byte_end":65470,"line_start":694,"line_end":694,"column_start":21,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1415},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":65581,"byte_end":65585,"line_start":699,"line_end":699,"column_start":24,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67775,"byte_end":67779,"line_start":780,"line_end":780,"column_start":26,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":67889,"byte_end":67896,"line_start":786,"line_end":786,"column_start":26,"column_end":33},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1415},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68009,"byte_end":68013,"line_start":792,"line_end":792,"column_start":26,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1477},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68238,"byte_end":68247,"line_start":804,"line_end":804,"column_start":21,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68353,"byte_end":68362,"line_start":810,"line_end":810,"column_start":24,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\color.rs","byte_start":68470,"byte_end":68479,"line_start":816,"line_end":816,"column_start":21,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1493},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":74420,"byte_end":74429,"line_start":19,"line_end":19,"column_start":6,"column_end":15},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1509},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":75275,"byte_end":75285,"line_start":55,"line_end":55,"column_start":6,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":77836,"byte_end":77846,"line_start":131,"line_end":131,"column_start":42,"column_end":52},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1522},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78099,"byte_end":78109,"line_start":142,"line_end":142,"column_start":45,"column_end":55},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1522},"to":{"krate":2,"index":3316}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":78332,"byte_end":78341,"line_start":151,"line_end":151,"column_start":27,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1509},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":79009,"byte_end":79019,"line_start":174,"line_end":174,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1534},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":80648,"byte_end":80658,"line_start":231,"line_end":231,"column_start":42,"column_end":52},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":3312}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":80901,"byte_end":80911,"line_start":242,"line_end":242,"column_start":45,"column_end":55},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1534},"to":{"krate":2,"index":3316}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81129,"byte_end":81138,"line_start":251,"line_end":251,"column_start":27,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1509},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\image.rs","byte_start":81851,"byte_end":81861,"line_start":276,"line_end":276,"column_start":6,"column_end":16},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":83835,"byte_end":83839,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mesh.rs","byte_start":90798,"byte_end":90804,"line_start":265,"line_end":265,"column_start":6,"column_end":12},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":95989,"byte_end":95994,"line_start":162,"line_end":162,"column_start":13,"column_end":18},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":96855,"byte_end":96861,"line_start":190,"line_end":190,"column_start":13,"column_end":19},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\mutex.rs","byte_start":97721,"byte_end":97726,"line_start":221,"line_end":221,"column_start":19,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1631},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shadow.rs","byte_start":99296,"byte_end":99302,"line_start":16,"line_end":16,"column_start":6,"column_end":12},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":101970,"byte_end":101975,"line_start":34,"line_end":34,"column_start":27,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102097,"byte_end":102102,"line_start":41,"line_end":41,"column_start":21,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":102220,"byte_end":102225,"line_start":49,"line_end":49,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":107125,"byte_end":107130,"line_start":204,"line_end":204,"column_start":6,"column_end":11},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":109118,"byte_end":109129,"line_start":271,"line_end":271,"column_start":6,"column_end":17},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110043,"byte_end":110048,"line_start":305,"line_end":305,"column_start":28,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":110754,"byte_end":110763,"line_start":328,"line_end":328,"column_start":6,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112228,"byte_end":112233,"line_start":381,"line_end":381,"column_start":26,"column_end":31},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":112765,"byte_end":112774,"line_start":401,"line_end":401,"column_start":6,"column_end":15},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":113704,"byte_end":113709,"line_start":437,"line_end":437,"column_start":26,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114365,"byte_end":114373,"line_start":458,"line_end":458,"column_start":18,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1739},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114466,"byte_end":114474,"line_start":465,"line_end":465,"column_start":20,"column_end":28},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1739},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":114661,"byte_end":114669,"line_start":477,"line_end":477,"column_start":6,"column_end":14},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1739},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116125,"byte_end":116134,"line_start":531,"line_end":531,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1753},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\shape.rs","byte_start":116590,"byte_end":116595,"line_start":550,"line_end":550,"column_start":26,"column_end":31},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":120890,"byte_end":120901,"line_start":13,"line_end":13,"column_start":18,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1767},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":121211,"byte_end":121220,"line_start":28,"line_end":28,"column_start":24,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1782},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":121322,"byte_end":121331,"line_start":34,"line_end":34,"column_start":24,"column_end":33},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1782},"to":{"krate":2,"index":3083}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":122070,"byte_end":122079,"line_start":54,"line_end":54,"column_start":30,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1782},"to":{"krate":2,"index":3114}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":122191,"byte_end":122200,"line_start":60,"line_end":60,"column_start":25,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1782},"to":{"krate":2,"index":7432}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":122413,"byte_end":122422,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stats.rs","byte_start":125492,"byte_end":125502,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128400,"byte_end":128406,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1812},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":128948,"byte_end":128954,"line_start":37,"line_end":37,"column_start":36,"column_end":42},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1812},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\stroke.rs","byte_start":129133,"byte_end":129139,"line_start":47,"line_end":47,"column_start":26,"column_end":32},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1812},"to":{"krate":2,"index":9607}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":130485,"byte_end":130489,"line_start":36,"line_end":36,"column_start":6,"column_end":10},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":140795,"byte_end":140814,"line_start":326,"line_end":326,"column_start":18,"column_end":37},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1855},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":141255,"byte_end":141274,"line_start":343,"line_end":343,"column_start":6,"column_end":25},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":141490,"byte_end":141509,"line_start":353,"line_end":353,"column_start":6,"column_end":25},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\tessellator.rs","byte_start":154352,"byte_end":154363,"line_start":687,"line_end":687,"column_start":6,"column_end":17},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":168976,"byte_end":168983,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":169270,"byte_end":169277,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":2667}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":169397,"byte_end":169404,"line_start":34,"line_end":34,"column_start":31,"column_end":38},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":3083}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":169650,"byte_end":169657,"line_start":44,"line_end":44,"column_start":31,"column_end":38},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":3088}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":169909,"byte_end":169916,"line_start":54,"line_end":54,"column_start":37,"column_end":44},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":3114}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":170060,"byte_end":170067,"line_start":60,"line_end":60,"column_start":37,"column_end":44},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":3118}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\cursor.rs","byte_start":171724,"byte_end":171731,"line_start":104,"line_end":104,"column_start":20,"column_end":27},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1899},"to":{"krate":2,"index":2667}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":173078,"byte_end":173084,"line_start":28,"line_end":28,"column_start":6,"column_end":12},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":173397,"byte_end":173406,"line_start":45,"line_end":45,"column_start":18,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1941},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":174136,"byte_end":174144,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\font.rs","byte_start":178770,"byte_end":178774,"line_start":226,"line_end":226,"column_start":6,"column_end":10},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185701,"byte_end":185707,"line_start":27,"line_end":27,"column_start":18,"column_end":24},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1950},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":185860,"byte_end":185866,"line_start":37,"line_end":37,"column_start":6,"column_end":12},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":186266,"byte_end":186272,"line_start":55,"line_end":55,"column_start":26,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1950},"to":{"krate":2,"index":9607}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187566,"byte_end":187576,"line_start":94,"line_end":94,"column_start":18,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1961},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":187689,"byte_end":187699,"line_start":101,"line_end":101,"column_start":28,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1961},"to":{"krate":2,"index":9408}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":188538,"byte_end":188546,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":189822,"byte_end":189831,"line_start":175,"line_end":175,"column_start":18,"column_end":27},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":192590,"byte_end":192605,"line_start":246,"line_end":246,"column_start":18,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2012},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":195248,"byte_end":195253,"line_start":326,"line_end":326,"column_start":6,"column_end":11},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":200878,"byte_end":200891,"line_start":500,"line_end":500,"column_start":6,"column_end":19},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":201442,"byte_end":201451,"line_start":520,"line_end":520,"column_start":6,"column_end":15},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":833},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":204382,"byte_end":204393,"line_start":618,"line_end":618,"column_start":6,"column_end":17},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\fonts.rs","byte_start":206021,"byte_end":206034,"line_start":665,"line_end":665,"column_start":6,"column_end":19},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout.rs","byte_start":208419,"byte_end":208429,"line_start":15,"line_end":15,"column_start":6,"column_end":16},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout.rs","byte_start":229869,"byte_end":229887,"line_start":645,"line_end":645,"column_start":6,"column_end":24},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233302,"byte_end":233311,"line_start":75,"line_end":75,"column_start":18,"column_end":27},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2058},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":233649,"byte_end":233658,"line_start":90,"line_end":90,"column_start":6,"column_end":15},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":235936,"byte_end":235945,"line_start":165,"line_end":165,"column_start":26,"column_end":35},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2058},"to":{"krate":2,"index":9607}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":236907,"byte_end":236920,"line_start":200,"line_end":200,"column_start":26,"column_end":39},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2074},"to":{"krate":2,"index":9607}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":237783,"byte_end":237793,"line_start":232,"line_end":232,"column_start":18,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2086},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":238141,"byte_end":238151,"line_start":247,"line_end":247,"column_start":6,"column_end":16},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241203,"byte_end":241213,"line_start":336,"line_end":336,"column_start":18,"column_end":28},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2133},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":241933,"byte_end":241938,"line_start":361,"line_end":361,"column_start":6,"column_end":11},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":242283,"byte_end":242286,"line_start":375,"line_end":375,"column_start":6,"column_end":9},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243499,"byte_end":243505,"line_start":423,"line_end":423,"column_start":6,"column_end":12},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":243866,"byte_end":243872,"line_start":442,"line_end":442,"column_start":6,"column_end":12},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":247454,"byte_end":247460,"line_start":542,"line_end":542,"column_start":6,"column_end":12},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":248730,"byte_end":248736,"line_start":588,"line_end":588,"column_start":6,"column_end":12},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\text\\text_layout_types.rs","byte_start":254255,"byte_end":254261,"line_start":748,"line_end":748,"column_start":6,"column_end":12},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":258114,"byte_end":258119,"line_start":15,"line_end":15,"column_start":6,"column_end":11},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_atlas.rs","byte_start":258870,"byte_end":258882,"line_start":47,"line_end":47,"column_start":6,"column_end":18},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263197,"byte_end":263210,"line_start":24,"line_end":24,"column_start":15,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":3251}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263307,"byte_end":263320,"line_start":30,"line_end":30,"column_start":16,"column_end":29},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2637}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263523,"byte_end":263536,"line_start":40,"line_end":40,"column_start":20,"column_end":33},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2667}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263643,"byte_end":263656,"line_start":47,"line_end":47,"column_start":13,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":2672}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263686,"byte_end":263699,"line_start":49,"line_end":49,"column_start":26,"column_end":39},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1104},"to":{"krate":2,"index":9607}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":263817,"byte_end":263830,"line_start":56,"line_end":56,"column_start":6,"column_end":19},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1104},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":265159,"byte_end":265168,"line_start":104,"line_end":104,"column_start":31,"column_end":40},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2214},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\texture_handle.rs","byte_start":265302,"byte_end":265311,"line_start":111,"line_end":111,"column_start":35,"column_end":44},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2214},"to":{"krate":2,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":265932,"byte_end":265946,"line_start":18,"line_end":18,"column_start":6,"column_end":20},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":269648,"byte_end":269659,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270423,"byte_end":270436,"line_start":159,"line_end":159,"column_start":6,"column_end":19},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\textures.rs","byte_start":270807,"byte_end":270820,"line_start":175,"line_end":175,"column_start":26,"column_end":39},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2203},"to":{"krate":2,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":272703,"byte_end":272715,"line_start":13,"line_end":13,"column_start":23,"column_end":35},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":2672}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":272758,"byte_end":272770,"line_start":15,"line_end":15,"column_start":36,"column_end":48},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":2667}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273067,"byte_end":273079,"line_start":27,"line_end":27,"column_start":37,"column_end":49},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":2714}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273350,"byte_end":273362,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":2703}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":273577,"byte_end":273589,"line_start":47,"line_end":47,"column_start":25,"column_end":37},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":9607}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274570,"byte_end":274580,"line_start":91,"line_end":91,"column_start":18,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2714},"to":{"krate":0,"index":1204}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274583,"byte_end":274592,"line_start":91,"line_end":91,"column_start":31,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2667},"to":{"krate":0,"index":1204}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\util\\ordered_float.rs","byte_start":274604,"byte_end":274613,"line_start":91,"line_end":91,"column_start":52,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":1209},"to":{"krate":0,"index":1204}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epaint-0.17.0\\src\\lib.rs","byte_start":4664,"byte_end":4673,"line_start":150,"line_end":150,"column_start":18,"column_end":27},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2214},"to":{"krate":2,"index":2994}}]}