{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0","program":"C:\\Users\\Tyra Bjurman\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","epi","--edition=2021","C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=c5c51da004b7fc20","-C","extra-filename=-c5c51da004b7fc20","--out-dir","c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps","--extern","egui=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libegui-a1173a48bd4949b9.rmeta","--extern","tracing=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libtracing-b62a08bf68a02b73.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Tyra Bjurman\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libepi-c5c51da004b7fc20.rmeta"},"prelude":{"crate_id":{"name":"epi","disambiguator":[8697382366904975968,0]},"crate_root":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src","external_crates":[{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[5748888646060736057,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11647781593125135854,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13810207351280985286,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10856308035441163175,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15195352194256834944,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[8936219983177082535,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9514052684633617057,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[11173665669995955307,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[11489992985031151541,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16828784558795307081,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[10060143980449217236,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[14817981415011782061,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[16087529398371340149,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":14,"id":{"name":"egui","disambiguator":[11556362777420533189,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":15,"id":{"name":"epaint","disambiguator":[15603212726322193755,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":16,"id":{"name":"emath","disambiguator":[1857022275223742910,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":17,"id":{"name":"bytemuck","disambiguator":[6027384491255769145,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":18,"id":{"name":"bytemuck_derive","disambiguator":[3807360260228750469,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":19,"id":{"name":"atomic_refcell","disambiguator":[5087543260144174942,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":20,"id":{"name":"ahash","disambiguator":[7678121960710224047,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":21,"id":{"name":"once_cell","disambiguator":[7981614201203751029,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":22,"id":{"name":"getrandom","disambiguator":[8713240416360518369,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":23,"id":{"name":"cfg_if","disambiguator":[13690946024276880309,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":24,"id":{"name":"ab_glyph","disambiguator":[16103060746931527796,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":25,"id":{"name":"ab_glyph_rasterizer","disambiguator":[17601843927899529409,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":26,"id":{"name":"owned_ttf_parser","disambiguator":[15467540707023769811,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":27,"id":{"name":"ttf_parser","disambiguator":[15142029793234110151,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","num":28,"id":{"name":"nohash_hasher","disambiguator":[16649505969791144709,0]}}],"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":19111,"line_start":1,"line_end":546,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":0},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":2994,"byte_end":2998,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"alias_span":null,"name":"egui","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":19111,"line_start":1,"line_end":546,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":61},{"krate":0,"index":73},{"krate":0,"index":26},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":28},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":53}],"decl_id":null,"docs":" Backend-agnostic interface for writing apps using [`egui`].","sig":null,"attributes":[{"value":"/ Backend-agnostic interface for writing apps using [`egui`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":0,"byte_end":63,"line_start":1,"line_end":1,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":64,"byte_end":67,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `epi` provides interfaces for window management and serialization.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":68,"byte_end":138,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ An app written for `epi` can then be plugged into [`eframe`](https://docs.rs/eframe),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":139,"byte_end":228,"line_start":4,"line_end":4,"column_start":1,"column_end":90}},{"value":"/ the egui framework crate.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":229,"byte_end":258,"line_start":5,"line_end":5,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":259,"byte_end":262,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Start by looking at the [`App`] trait, and implement [`App::update`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":263,"byte_end":336,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"forbid(unsafe_code)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":428,"byte_end":451,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"warn(clippy :: all, clippy :: await_holding_lock, clippy :: char_lit_as_u8,\n       clippy :: checked_conversions, clippy :: dbg_macro, clippy ::\n       debug_assert_with_mut_call, clippy :: disallowed_method, clippy ::\n       doc_markdown, clippy :: empty_enum, clippy :: enum_glob_use, clippy ::\n       exit, clippy :: expl_impl_clone_on_copy, clippy ::\n       explicit_deref_methods, clippy :: explicit_into_iter_loop, clippy ::\n       fallible_impl_from, clippy :: filter_map_next, clippy ::\n       flat_map_option, clippy :: float_cmp_const, clippy ::\n       fn_params_excessive_bools, clippy :: from_iter_instead_of_collect,\n       clippy :: if_let_mutex, clippy :: implicit_clone, clippy ::\n       imprecise_flops, clippy :: inefficient_to_string, clippy ::\n       invalid_upcast_comparisons, clippy :: large_digit_groups, clippy ::\n       large_stack_arrays, clippy :: large_types_passed_by_value, clippy ::\n       let_unit_value, clippy :: linkedlist, clippy :: lossy_float_literal,\n       clippy :: macro_use_imports, clippy :: manual_ok_or, clippy ::\n       map_err_ignore, clippy :: map_flatten, clippy :: map_unwrap_or, clippy\n       :: match_on_vec_items, clippy :: match_same_arms, clippy ::\n       match_wild_err_arm, clippy :: match_wildcard_for_single_variants,\n       clippy :: mem_forget, clippy :: mismatched_target_os, clippy ::\n       missing_errors_doc, clippy :: missing_safety_doc, clippy :: mut_mut,\n       clippy :: mutex_integer, clippy :: needless_borrow, clippy ::\n       needless_continue, clippy :: needless_for_each, clippy ::\n       needless_pass_by_value, clippy :: option_option, clippy ::\n       path_buf_push_overwrite, clippy :: ptr_as_ptr, clippy ::\n       ref_option_ref, clippy :: rest_pat_in_fully_bound_structs, clippy ::\n       same_functions_in_if_condition, clippy ::\n       semicolon_if_nothing_returned, clippy :: single_match_else, clippy ::\n       string_add_assign, clippy :: string_add, clippy :: string_lit_as_bytes,\n       clippy :: string_to_string, clippy :: todo, clippy ::\n       trait_duplication_in_bounds, clippy :: unimplemented, clippy ::\n       unnested_or_patterns, clippy :: unused_self, clippy ::\n       useless_transmute, clippy :: verbose_file_reads, clippy ::\n       zero_sized_map_values, future_incompatible, nonstandard_style,\n       rust_2018_idioms, rustdoc :: missing_crate_level_docs)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":452,"byte_end":2743,"line_start":12,"line_end":87,"column_start":1,"column_end":3}},{"value":"allow(clippy :: float_cmp)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":2744,"byte_end":2772,"line_start":88,"line_end":88,"column_start":1,"column_end":29}},{"value":"allow(clippy :: manual_range_contains)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":2773,"byte_end":2813,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":2814,"byte_end":2836,"line_start":90,"line_end":90,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3429,"byte_end":3432,"line_start":104,"line_end":104,"column_start":11,"column_end":14},"name":"App","qualname":"::App","value":"App","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":" Implement this trait to write apps that can be compiled both natively using the [`egui_glium`](https://github.com/emilk/egui/tree/master/egui_glium) crate,\n and deployed as a web site using the [`egui_web`](https://github.com/emilk/egui/tree/master/egui_web) crate.\n","sig":null,"attributes":[{"value":"/ Implement this trait to write apps that can be compiled both natively using the [`egui_glium`](https://github.com/emilk/egui/tree/master/egui_glium) crate,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3146,"byte_end":3305,"line_start":102,"line_end":102,"column_start":1,"column_end":160}},{"value":"/ and deployed as a web site using the [`egui_web`](https://github.com/emilk/egui/tree/master/egui_web) crate.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3306,"byte_end":3418,"line_start":103,"line_end":103,"column_start":1,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3959,"byte_end":3965,"line_start":113,"line_end":113,"column_start":8,"column_end":14},"name":"update","qualname":"::App::update","value":"pub fn update(&mut Self, &egui::Context, &Frame)","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Called each time the UI needs repainting, which may be many times per second.","sig":null,"attributes":[{"value":"/ Called each time the UI needs repainting, which may be many times per second.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3439,"byte_end":3520,"line_start":105,"line_end":105,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3525,"byte_end":3528,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Put your widgets into a [`egui::SidePanel`], [`egui::TopBottomPanel`], [`egui::CentralPanel`], [`egui::Window`] or [`egui::Area`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3533,"byte_end":3667,"line_start":107,"line_end":107,"column_start":5,"column_end":139}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3672,"byte_end":3675,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ The [`egui::Context`] and [`Frame`] can be cloned and saved if you like.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3680,"byte_end":3756,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3761,"byte_end":3764,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ To force a repaint, call either [`egui::Context::request_repaint`] during the call to `update`,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3769,"byte_end":3868,"line_start":111,"line_end":111,"column_start":5,"column_end":104}},{"value":"/ or call [`Frame::request_repaint`] at any time (e.g. from another thread).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":3873,"byte_end":3951,"line_start":112,"line_end":112,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4307,"byte_end":4312,"line_start":121,"line_end":121,"column_start":8,"column_end":13},"name":"setup","qualname":"::App::setup","value":"pub fn setup(&mut Self, &egui::Context, &Frame, Option<&dyn Storage>)","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Called once before the first frame.","sig":null,"attributes":[{"value":"/ Called once before the first frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4019,"byte_end":4058,"line_start":115,"line_end":115,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4063,"byte_end":4066,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Allows you to do setup code, e.g to call [`egui::Context::set_fonts`],","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4071,"byte_end":4145,"line_start":117,"line_end":117,"column_start":5,"column_end":79}},{"value":"/ [`egui::Context::set_visuals`] etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4150,"byte_end":4189,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4194,"byte_end":4197,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Also allows you to restore state, if there is a storage (required the \"persistence\" feature).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4202,"byte_end":4299,"line_start":120,"line_end":120,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5088,"byte_end":5092,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"name":"save","qualname":"::App::save","value":"pub fn save(&mut Self, &mut dyn Storage)","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Called on shutdown, and perhaps at regular intervals. Allows you to save state.","sig":null,"attributes":[{"value":"/ Called on shutdown, and perhaps at regular intervals. Allows you to save state.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4402,"byte_end":4485,"line_start":123,"line_end":123,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4490,"byte_end":4493,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Only called when the \"persistence\" feature is enabled.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4498,"byte_end":4556,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4561,"byte_end":4564,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ On web the states is stored to \"Local Storage\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4569,"byte_end":4620,"line_start":127,"line_end":127,"column_start":5,"column_end":56}},{"value":"/ On native the path is picked using [`directories_next::ProjectDirs::data_dir`](https://docs.rs/directories-next/2.0.0/directories_next/struct.ProjectDirs.html#method.data_dir) which is:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4625,"byte_end":4814,"line_start":128,"line_end":128,"column_start":5,"column_end":194}},{"value":"/ * Linux:   `/home/UserName/.local/share/APPNAME`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4819,"byte_end":4871,"line_start":129,"line_end":129,"column_start":5,"column_end":57}},{"value":"/ * macOS:   `/Users/UserName/Library/Application Support/APPNAME`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4876,"byte_end":4944,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/ * Windows: `C:\\Users\\UserName\\AppData\\Roaming\\APPNAME`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":4949,"byte_end":5007,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5012,"byte_end":5015,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ where `APPNAME` is what is returned by [`Self::name()`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5020,"byte_end":5080,"line_start":133,"line_end":133,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5659,"byte_end":5672,"line_start":144,"line_end":144,"column_start":8,"column_end":21},"name":"on_exit_event","qualname":"::App::on_exit_event","value":"pub fn on_exit_event(&mut Self) -> bool","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Called before an exit that can be aborted.\n By returning `false` the exit will be aborted. To continue the exit return `true`.","sig":null,"attributes":[{"value":"/ Called before an exit that can be aborted.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5140,"byte_end":5186,"line_start":136,"line_end":136,"column_start":5,"column_end":51}},{"value":"/ By returning `false` the exit will be aborted. To continue the exit return `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5191,"byte_end":5277,"line_start":137,"line_end":137,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5282,"byte_end":5285,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ A scenario where this method will be run is after pressing the close button on a native","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5290,"byte_end":5381,"line_start":139,"line_end":139,"column_start":5,"column_end":96}},{"value":"/ window, which allows you to ask the user whether they want to do something before exiting.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5386,"byte_end":5480,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ See the example `eframe/examples/confirm_exit.rs` for practical usage.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5485,"byte_end":5559,"line_start":141,"line_end":141,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5564,"byte_end":5567,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ It will _not_ be called on the web or when the window is forcefully closed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5572,"byte_end":5651,"line_start":143,"line_end":143,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5852,"byte_end":5859,"line_start":150,"line_end":150,"column_start":8,"column_end":15},"name":"on_exit","qualname":"::App::on_exit","value":"pub fn on_exit(&mut Self)","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Called once on shutdown (before or after [`Self::save`]). If you need to abort an exit use\n [`Self::on_exit_event`]\n","sig":null,"attributes":[{"value":"/ Called once on shutdown (before or after [`Self::save`]). If you need to abort an exit use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5718,"byte_end":5812,"line_start":148,"line_end":148,"column_start":5,"column_end":99}},{"value":"/ [`Self::on_exit_event`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5817,"byte_end":5844,"line_start":149,"line_end":149,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6055,"byte_end":6059,"line_start":157,"line_end":157,"column_start":8,"column_end":12},"name":"name","qualname":"::App::name","value":"pub fn name(&Self) -> &str","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" The name of your App, used for the title bar of native windows\n and the save location of persistence (see [`Self::save`]).\n","sig":null,"attributes":[{"value":"/ The name of your App, used for the title bar of native windows","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5914,"byte_end":5980,"line_start":155,"line_end":155,"column_start":5,"column_end":71}},{"value":"/ and the save location of persistence (see [`Self::save`]).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":5985,"byte_end":6047,"line_start":156,"line_end":156,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6139,"byte_end":6157,"line_start":160,"line_end":160,"column_start":8,"column_end":26},"name":"auto_save_interval","qualname":"::App::auto_save_interval","value":"pub fn auto_save_interval(&Self) -> std::time::Duration","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Time between automatic calls to [`Self::save`]\n","sig":null,"attributes":[{"value":"/ Time between automatic calls to [`Self::save`]","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6081,"byte_end":6131,"line_start":159,"line_end":159,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6634,"byte_end":6649,"line_start":171,"line_end":171,"column_start":8,"column_end":23},"name":"max_size_points","qualname":"::App::max_size_points","value":"pub fn max_size_points(&Self) -> egui::Vec2","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" The size limit of the web app canvas.","sig":null,"attributes":[{"value":"/ The size limit of the web app canvas.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6244,"byte_end":6285,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6290,"byte_end":6293,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ By default the size if limited to 1024x2048.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6298,"byte_end":6346,"line_start":166,"line_end":166,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6351,"byte_end":6354,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ A larger canvas can lead to bad frame rates on some browsers on some platforms.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6359,"byte_end":6442,"line_start":168,"line_end":168,"column_start":5,"column_end":88}},{"value":"/ In particular, Firefox on Mac and Linux is really bad at handling large WebGL canvases:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6447,"byte_end":6538,"line_start":169,"line_end":169,"column_start":5,"column_end":96}},{"value":"/ <https://bugzilla.mozilla.org/show_bug.cgi?id=1010527#c0> (unfixed since 2014).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6543,"byte_end":6626,"line_start":170,"line_end":170,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6884,"byte_end":6895,"line_start":177,"line_end":177,"column_start":8,"column_end":19},"name":"clear_color","qualname":"::App::clear_color","value":"pub fn clear_color(&Self) -> egui::Rgba","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Background color for the app, e.g. what is sent to `gl.clearColor`.\n This is the background of your windows if you don't set a central panel.\n","sig":null,"attributes":[{"value":"/ Background color for the app, e.g. what is sent to `gl.clearColor`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6724,"byte_end":6795,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ This is the background of your windows if you don't set a central panel.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":6800,"byte_end":6876,"line_start":176,"line_end":176,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7359,"byte_end":7380,"line_start":186,"line_end":186,"column_start":8,"column_end":29},"name":"persist_native_window","qualname":"::App::persist_native_window","value":"pub fn persist_native_window(&Self) -> bool","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Controls whether or not the native window position and size will be\n persisted (only if the \"persistence\" feature is enabled).\n","sig":null,"attributes":[{"value":"/ Controls whether or not the native window position and size will be","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7214,"byte_end":7285,"line_start":184,"line_end":184,"column_start":5,"column_end":76}},{"value":"/ persisted (only if the \"persistence\" feature is enabled).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7290,"byte_end":7351,"line_start":185,"line_end":185,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7570,"byte_end":7589,"line_start":192,"line_end":192,"column_start":8,"column_end":27},"name":"persist_egui_memory","qualname":"::App::persist_egui_memory","value":"pub fn persist_egui_memory(&Self) -> bool","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Controls whether or not the egui memory (window positions etc) will be\n persisted (only if the \"persistence\" feature is enabled).\n","sig":null,"attributes":[{"value":"/ Controls whether or not the egui memory (window positions etc) will be","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7422,"byte_end":7496,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ persisted (only if the \"persistence\" feature is enabled).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7501,"byte_end":7562,"line_start":191,"line_end":191,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8059,"byte_end":8074,"line_start":204,"line_end":204,"column_start":8,"column_end":23},"name":"warm_up_enabled","qualname":"::App::warm_up_enabled","value":"pub fn warm_up_enabled(&Self) -> bool","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" If `true` a warm-up call to [`Self::update`] will be issued where\n `ctx.memory().everything_is_visible()` will be set to `true`.","sig":null,"attributes":[{"value":"/ If `true` a warm-up call to [`Self::update`] will be issued where","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7631,"byte_end":7700,"line_start":196,"line_end":196,"column_start":5,"column_end":74}},{"value":"/ `ctx.memory().everything_is_visible()` will be set to `true`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7705,"byte_end":7770,"line_start":197,"line_end":197,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7775,"byte_end":7778,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ This can help pre-caching resources loaded by different parts of the UI, preventing stutter later on.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7783,"byte_end":7888,"line_start":199,"line_end":199,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7893,"byte_end":7896,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ In this warm-up call, all painted shapes will be ignored.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7901,"byte_end":7962,"line_start":201,"line_end":201,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7967,"byte_end":7970,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ The default is `false`, and it is unlikely you will want to change this.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":7975,"byte_end":8051,"line_start":203,"line_end":203,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8260,"byte_end":8273,"line_start":213,"line_end":213,"column_start":12,"column_end":25},"name":"NativeOptions","qualname":"::NativeOptions","value":"NativeOptions { always_on_top, maximized, decorated, drag_and_drop_support, icon_data, initial_window_pos, initial_window_size, min_window_size, max_window_size, resizable, transparent }","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" Options controlling the behavior of a native window.","sig":null,"attributes":[{"value":"/ Options controlling the behavior of a native window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8115,"byte_end":8171,"line_start":209,"line_end":209,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8172,"byte_end":8175,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ Only a single native window is currently supported.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8176,"byte_end":8231,"line_start":211,"line_end":211,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8363,"byte_end":8376,"line_start":215,"line_end":215,"column_start":9,"column_end":22},"name":"always_on_top","qualname":"::NativeOptions::always_on_top","value":"bool","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Sets whether or not the window will always be on top of other windows.\n","sig":null,"attributes":[{"value":"/ Sets whether or not the window will always be on top of other windows.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8280,"byte_end":8354,"line_start":214,"line_end":214,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8431,"byte_end":8440,"line_start":218,"line_end":218,"column_start":9,"column_end":18},"name":"maximized","qualname":"::NativeOptions::maximized","value":"bool","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Show window in maximized mode\n","sig":null,"attributes":[{"value":"/ Show window in maximized mode","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8389,"byte_end":8422,"line_start":217,"line_end":217,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":64},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8598,"byte_end":8607,"line_start":222,"line_end":222,"column_start":9,"column_end":18},"name":"decorated","qualname":"::NativeOptions::decorated","value":"bool","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" On desktop: add window decorations (i.e. a frame around your app)?\n If false it will be difficult to move and resize the app.\n","sig":null,"attributes":[{"value":"/ On desktop: add window decorations (i.e. a frame around your app)?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8453,"byte_end":8523,"line_start":220,"line_end":220,"column_start":5,"column_end":75}},{"value":"/ If false it will be difficult to move and resize the app.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8528,"byte_end":8589,"line_start":221,"line_end":221,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8906,"byte_end":8927,"line_start":228,"line_end":228,"column_start":9,"column_end":30},"name":"drag_and_drop_support","qualname":"::NativeOptions::drag_and_drop_support","value":"bool","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" On Windows: enable drag and drop support.\n Default is `false` to avoid issues with crates such as [`cpal`](https://github.com/RustAudio/cpal) which\n will hang when combined with drag-and-drop.\n See <https://github.com/rust-windowing/winit/issues/1255>.\n","sig":null,"attributes":[{"value":"/ On Windows: enable drag and drop support.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8620,"byte_end":8665,"line_start":224,"line_end":224,"column_start":5,"column_end":50}},{"value":"/ Default is `false` to avoid issues with crates such as [`cpal`](https://github.com/RustAudio/cpal) which","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8670,"byte_end":8778,"line_start":225,"line_end":225,"column_start":5,"column_end":113}},{"value":"/ will hang when combined with drag-and-drop.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8783,"byte_end":8830,"line_start":226,"line_end":226,"column_start":5,"column_end":52}},{"value":"/ See <https://github.com/rust-windowing/winit/issues/1255>.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8835,"byte_end":8897,"line_start":227,"line_end":227,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9008,"byte_end":9017,"line_start":231,"line_end":231,"column_start":9,"column_end":18},"name":"icon_data","qualname":"::NativeOptions::icon_data","value":"std::option::Option<IconData>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" The application icon, e.g. in the Windows task bar etc.\n","sig":null,"attributes":[{"value":"/ The application icon, e.g. in the Windows task bar etc.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":8940,"byte_end":8999,"line_start":230,"line_end":230,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9132,"byte_end":9150,"line_start":234,"line_end":234,"column_start":9,"column_end":27},"name":"initial_window_pos","qualname":"::NativeOptions::initial_window_pos","value":"std::option::Option<egui::Pos2>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" The initial (inner) position of the native window in points (logical pixels).\n","sig":null,"attributes":[{"value":"/ The initial (inner) position of the native window in points (logical pixels).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9042,"byte_end":9123,"line_start":233,"line_end":233,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9261,"byte_end":9280,"line_start":237,"line_end":237,"column_start":9,"column_end":28},"name":"initial_window_size","qualname":"::NativeOptions::initial_window_size","value":"std::option::Option<egui::Vec2>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" The initial inner size of the native window in points (logical pixels).\n","sig":null,"attributes":[{"value":"/ The initial inner size of the native window in points (logical pixels).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9177,"byte_end":9252,"line_start":236,"line_end":236,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9349,"byte_end":9364,"line_start":240,"line_end":240,"column_start":9,"column_end":24},"name":"min_window_size","qualname":"::NativeOptions::min_window_size","value":"std::option::Option<egui::Vec2>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" The minimum inner window size\n","sig":null,"attributes":[{"value":"/ The minimum inner window size","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9307,"byte_end":9340,"line_start":239,"line_end":239,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9433,"byte_end":9448,"line_start":243,"line_end":243,"column_start":9,"column_end":24},"name":"max_window_size","qualname":"::NativeOptions::max_window_size","value":"std::option::Option<egui::Vec2>","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" The maximum inner window size\n","sig":null,"attributes":[{"value":"/ The maximum inner window size","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9391,"byte_end":9424,"line_start":242,"line_end":242,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9523,"byte_end":9532,"line_start":246,"line_end":246,"column_start":9,"column_end":18},"name":"resizable","qualname":"::NativeOptions::resizable","value":"bool","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" Should the app window be resizable?\n","sig":null,"attributes":[{"value":"/ Should the app window be resizable?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9475,"byte_end":9514,"line_start":245,"line_end":245,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":72},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9766,"byte_end":9777,"line_start":251,"line_end":251,"column_start":9,"column_end":20},"name":"transparent","qualname":"::NativeOptions::transparent","value":"bool","parent":{"krate":0,"index":61},"children":[],"decl_id":null,"docs":" On desktop: make the window transparent.\n You control the transparency with [`App::clear_color()`].\n You should avoid having a [`egui::CentralPanel`], or make sure its frame is also transparent.\n","sig":null,"attributes":[{"value":"/ On desktop: make the window transparent.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9545,"byte_end":9589,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/ You control the transparency with [`App::clear_color()`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9594,"byte_end":9655,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/ You should avoid having a [`egui::CentralPanel`], or make sure its frame is also transparent.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9660,"byte_end":9757,"line_start":250,"line_end":250,"column_start":5,"column_end":102}}]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10311,"byte_end":10319,"line_start":274,"line_end":274,"column_start":12,"column_end":20},"name":"IconData","qualname":"::IconData","value":"IconData { rgba, width, height }","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78}],"decl_id":null,"docs":" Image data for the icon.\n","sig":null,"attributes":[{"value":"/ Image data for the icon.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10254,"byte_end":10282,"line_start":272,"line_end":272,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10365,"byte_end":10369,"line_start":276,"line_end":276,"column_start":9,"column_end":13},"name":"rgba","qualname":"::IconData::rgba","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" RGBA pixels, unmultiplied.\n","sig":null,"attributes":[{"value":"/ RGBA pixels, unmultiplied.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10326,"byte_end":10356,"line_start":275,"line_end":275,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10442,"byte_end":10447,"line_start":279,"line_end":279,"column_start":9,"column_end":14},"name":"width","qualname":"::IconData::width","value":"u32","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Image width. This should be a multiple of 4.\n","sig":null,"attributes":[{"value":"/ Image width. This should be a multiple of 4.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10385,"byte_end":10433,"line_start":278,"line_end":278,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10517,"byte_end":10523,"line_start":282,"line_end":282,"column_start":9,"column_end":15},"name":"height","qualname":"::IconData::height","value":"u32","parent":{"krate":0,"index":75},"children":[],"decl_id":null,"docs":" Image height. This should be a multiple of 4.\n","sig":null,"attributes":[{"value":"/ Image height. This should be a multiple of 4.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10459,"byte_end":10508,"line_start":281,"line_end":281,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10821,"byte_end":10826,"line_start":292,"line_end":292,"column_start":12,"column_end":17},"name":"Frame","qualname":"::Frame","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents the surroundings of your app.","sig":null,"attributes":[{"value":"/ Represents the surroundings of your app.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10533,"byte_end":10577,"line_start":285,"line_end":285,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10578,"byte_end":10581,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ It provides methods to inspect the surroundings (are we on the web?),","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10582,"byte_end":10655,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ allocate textures, and change settings (e.g. window size).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10656,"byte_end":10718,"line_start":288,"line_end":288,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10719,"byte_end":10722,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ [`Frame`] is cheap to clone and is safe to pass to other threads.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10723,"byte_end":10792,"line_start":290,"line_end":290,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10827,"byte_end":10861,"line_start":292,"line_end":292,"column_start":18,"column_end":52},"name":"0","qualname":"::Frame::0","value":"std::sync::Arc<std::sync::Mutex<backend::FrameData>>","parent":{"krate":0,"index":81},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10962,"byte_end":10965,"line_start":297,"line_end":297,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"pub fn new(backend::FrameData) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Frame` - called by the integration.\n","sig":null,"attributes":[{"value":"/ Create a `Frame` - called by the integration.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10882,"byte_end":10931,"line_start":295,"line_end":295,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11160,"byte_end":11164,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"lock","qualname":"<Frame>::lock","value":"pub fn lock(&Self) -> std::sync::MutexGuard<, backend::FrameData>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying [`backend::FrameData`].\n","sig":null,"attributes":[{"value":"/ Access the underlying [`backend::FrameData`].","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11066,"byte_end":11115,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11139,"byte_end":11148,"line_start":303,"line_end":303,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11318,"byte_end":11324,"line_start":309,"line_end":309,"column_start":12,"column_end":18},"name":"is_web","qualname":"<Frame>::is_web","value":"pub fn is_web(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if you are in a web environment.\n","sig":null,"attributes":[{"value":"/ True if you are in a web environment.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11265,"byte_end":11306,"line_start":308,"line_end":308,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11447,"byte_end":11451,"line_start":314,"line_end":314,"column_start":12,"column_end":16},"name":"info","qualname":"<Frame>::info","value":"pub fn info(&Self) -> IntegrationInfo","parent":null,"children":[],"decl_id":null,"docs":" Information about the integration.\n","sig":null,"attributes":[{"value":"/ Information about the integration.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11397,"byte_end":11435,"line_start":313,"line_end":313,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11707,"byte_end":11711,"line_start":320,"line_end":320,"column_start":12,"column_end":16},"name":"quit","qualname":"<Frame>::quit","value":"pub fn quit(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Signal the app to stop/exit/quit the app (only works for native apps, not web apps).\n The framework will not quit immediately, but at the end of the this frame.\n","sig":null,"attributes":[{"value":"/ Signal the app to stop/exit/quit the app (only works for native apps, not web apps).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11524,"byte_end":11612,"line_start":318,"line_end":318,"column_start":5,"column_end":93}},{"value":"/ The framework will not quit immediately, but at the end of the this frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11617,"byte_end":11695,"line_start":319,"line_end":319,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11846,"byte_end":11861,"line_start":325,"line_end":325,"column_start":12,"column_end":27},"name":"set_window_size","qualname":"<Frame>::set_window_size","value":"pub fn set_window_size(&Self, egui::Vec2)","parent":null,"children":[],"decl_id":null,"docs":" Set the desired inner size of the window (in egui points).\n","sig":null,"attributes":[{"value":"/ Set the desired inner size of the window (in egui points).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11772,"byte_end":11834,"line_start":324,"line_end":324,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12005,"byte_end":12021,"line_start":330,"line_end":330,"column_start":12,"column_end":28},"name":"set_window_title","qualname":"<Frame>::set_window_title","value":"pub fn set_window_title(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Set the desired title of the window.\n","sig":null,"attributes":[{"value":"/ Set the desired title of the window.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":11953,"byte_end":11993,"line_start":329,"line_end":329,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12272,"byte_end":12287,"line_start":336,"line_end":336,"column_start":12,"column_end":27},"name":"set_decorations","qualname":"<Frame>::set_decorations","value":"pub fn set_decorations(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether to show window decorations (i.e. a frame around you app).\n If false it will be difficult to move and resize the app.\n","sig":null,"attributes":[{"value":"/ Set whether to show window decorations (i.e. a frame around you app).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12121,"byte_end":12194,"line_start":334,"line_end":334,"column_start":5,"column_end":78}},{"value":"/ If false it will be difficult to move and resize the app.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12199,"byte_end":12260,"line_start":335,"line_end":335,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12556,"byte_end":12567,"line_start":344,"line_end":344,"column_start":12,"column_end":23},"name":"drag_window","qualname":"<Frame>::drag_window","value":"pub fn drag_window(&Self)","parent":null,"children":[],"decl_id":null,"docs":" When called, the native window will follow the\n movement of the cursor while the primary mouse button is down.","sig":null,"attributes":[{"value":"/ When called, the native window will follow the","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12381,"byte_end":12431,"line_start":340,"line_end":340,"column_start":5,"column_end":55}},{"value":"/ movement of the cursor while the primary mouse button is down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12436,"byte_end":12502,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12507,"byte_end":12510,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Does not work on the web.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12515,"byte_end":12544,"line_start":343,"line_end":343,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12828,"byte_end":12843,"line_start":351,"line_end":351,"column_start":12,"column_end":27},"name":"request_repaint","qualname":"<Frame>::request_repaint","value":"pub fn request_repaint(&Self)","parent":null,"children":[],"decl_id":null,"docs":" This signals the [`egui`] integration that a repaint is required.","sig":null,"attributes":[{"value":"/ This signals the [`egui`] integration that a repaint is required.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12635,"byte_end":12704,"line_start":348,"line_end":348,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12709,"byte_end":12712,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Call this e.g. when a background process finishes in an async context and/or background thread.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12717,"byte_end":12816,"line_start":350,"line_end":350,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12976,"byte_end":12991,"line_start":356,"line_end":356,"column_start":12,"column_end":27},"name":"take_app_output","qualname":"<Frame>::take_app_output","value":"pub fn take_app_output(&Self) -> crate::backend::AppOutput","parent":null,"children":[],"decl_id":null,"docs":" for integrations only: call once per frame\n","sig":null,"attributes":[{"value":"/ for integrations only: call once per frame","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":12918,"byte_end":12964,"line_start":355,"line_end":355,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13181,"byte_end":13188,"line_start":363,"line_end":363,"column_start":12,"column_end":19},"name":"WebInfo","qualname":"::WebInfo","value":"WebInfo { location }","parent":null,"children":[{"krate":0,"index":87}],"decl_id":null,"docs":" Information about the web environment (if applicable).\n","sig":null,"attributes":[{"value":"/ Information about the web environment (if applicable).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13087,"byte_end":13145,"line_start":361,"line_end":361,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13234,"byte_end":13242,"line_start":365,"line_end":365,"column_start":9,"column_end":17},"name":"location","qualname":"::WebInfo::location","value":"Location","parent":{"krate":0,"index":86},"children":[],"decl_id":null,"docs":" Information about the URL.\n","sig":null,"attributes":[{"value":"/ Information about the URL.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13195,"byte_end":13225,"line_start":364,"line_end":364,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13387,"byte_end":13395,"line_start":372,"line_end":372,"column_start":12,"column_end":20},"name":"Location","qualname":"::Location","value":"Location { url, protocol, host, hostname, port, hash, query, query_map, origin }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":" Information about the URL.","sig":null,"attributes":[{"value":"/ Information about the URL.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13257,"byte_end":13287,"line_start":368,"line_end":368,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13288,"byte_end":13291,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ Everything has been percent decoded (`%20` -> ` ` etc).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13292,"byte_end":13351,"line_start":370,"line_end":370,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13538,"byte_end":13541,"line_start":376,"line_end":376,"column_start":9,"column_end":12},"name":"url","qualname":"::Location::url","value":"std::string::String","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The full URL (`location.href`) without the hash.","sig":null,"attributes":[{"value":"/ The full URL (`location.href`) without the hash.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13402,"byte_end":13454,"line_start":373,"line_end":373,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13459,"byte_end":13462,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Example: `\"http://www.example.com:80/index.html?foo=bar\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13467,"byte_end":13529,"line_start":375,"line_end":375,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13624,"byte_end":13632,"line_start":381,"line_end":381,"column_start":9,"column_end":17},"name":"protocol","qualname":"::Location::protocol","value":"std::string::String","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" `location.protocol`","sig":null,"attributes":[{"value":"/ `location.protocol`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13556,"byte_end":13579,"line_start":378,"line_end":378,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13584,"byte_end":13587,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Example: `\"http:\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13592,"byte_end":13615,"line_start":380,"line_end":380,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13720,"byte_end":13724,"line_start":386,"line_end":386,"column_start":9,"column_end":13},"name":"host","qualname":"::Location::host","value":"std::string::String","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" `location.host`","sig":null,"attributes":[{"value":"/ `location.host`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13647,"byte_end":13666,"line_start":383,"line_end":383,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13671,"byte_end":13674,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Example: `\"example.com:80\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13679,"byte_end":13711,"line_start":385,"line_end":385,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13813,"byte_end":13821,"line_start":391,"line_end":391,"column_start":9,"column_end":17},"name":"hostname","qualname":"::Location::hostname","value":"std::string::String","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" `location.hostname`","sig":null,"attributes":[{"value":"/ `location.hostname`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13739,"byte_end":13762,"line_start":388,"line_end":388,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13767,"byte_end":13770,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ Example: `\"example.com\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13775,"byte_end":13804,"line_start":390,"line_end":390,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13897,"byte_end":13901,"line_start":396,"line_end":396,"column_start":9,"column_end":13},"name":"port","qualname":"::Location::port","value":"std::string::String","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" `location.port`","sig":null,"attributes":[{"value":"/ `location.port`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13836,"byte_end":13855,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13860,"byte_end":13863,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Example: `\"80\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13868,"byte_end":13888,"line_start":395,"line_end":395,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14113,"byte_end":14117,"line_start":402,"line_end":402,"column_start":9,"column_end":13},"name":"hash","qualname":"::Location::hash","value":"std::string::String","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The \"#fragment\" part of \"www.example.com/index.html?query#fragment\".","sig":null,"attributes":[{"value":"/ The \"#fragment\" part of \"www.example.com/index.html?query#fragment\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13916,"byte_end":13988,"line_start":398,"line_end":398,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":13993,"byte_end":13996,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that the leading `#` is included in the string.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14001,"byte_end":14057,"line_start":400,"line_end":400,"column_start":5,"column_end":61}},{"value":"/ Also known as \"hash-link\" or \"anchor\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14062,"byte_end":14104,"line_start":401,"line_end":401,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14359,"byte_end":14364,"line_start":409,"line_end":409,"column_start":9,"column_end":14},"name":"query","qualname":"::Location::query","value":"std::string::String","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The \"query\" part of \"www.example.com/index.html?query#fragment\".","sig":null,"attributes":[{"value":"/ The \"query\" part of \"www.example.com/index.html?query#fragment\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14132,"byte_end":14200,"line_start":404,"line_end":404,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14205,"byte_end":14208,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that the leading `?` is NOT included in the string.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14213,"byte_end":14273,"line_start":406,"line_end":406,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14278,"byte_end":14281,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Use [`Self::web_query_map]` to get the parsed version of it.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14286,"byte_end":14350,"line_start":408,"line_end":408,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14537,"byte_end":14546,"line_start":414,"line_end":414,"column_start":9,"column_end":18},"name":"query_map","qualname":"::Location::query_map","value":"std::collections::BTreeMap<std::string::String, std::string::String>","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" The parsed \"query\" part of \"www.example.com/index.html?query#fragment\".","sig":null,"attributes":[{"value":"/ The parsed \"query\" part of \"www.example.com/index.html?query#fragment\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14379,"byte_end":14454,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14459,"byte_end":14462,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ \"foo=42&bar%20\" is parsed as `{\"foo\": \"42\",  \"bar \": \"\"}`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14467,"byte_end":14528,"line_start":413,"line_end":413,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14683,"byte_end":14689,"line_start":419,"line_end":419,"column_start":9,"column_end":15},"name":"origin","qualname":"::Location::origin","value":"std::string::String","parent":{"krate":0,"index":92},"children":[],"decl_id":null,"docs":" `location.origin`","sig":null,"attributes":[{"value":"/ `location.origin`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14597,"byte_end":14618,"line_start":416,"line_end":416,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14623,"byte_end":14626,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Example: `\"http://www.example.com:80\"`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14631,"byte_end":14674,"line_start":418,"line_end":418,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14809,"byte_end":14824,"line_start":424,"line_end":424,"column_start":12,"column_end":27},"name":"IntegrationInfo","qualname":"::IntegrationInfo","value":"IntegrationInfo { name, web_info, prefer_dark_mode, cpu_usage, native_pixels_per_point }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"decl_id":null,"docs":" Information about the integration passed to the use app each frame.\n","sig":null,"attributes":[{"value":"/ Information about the integration passed to the use app each frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14702,"byte_end":14773,"line_start":422,"line_end":422,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":107},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14915,"byte_end":14919,"line_start":426,"line_end":426,"column_start":9,"column_end":13},"name":"name","qualname":"::IntegrationInfo::name","value":"&'static str","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" The name of the integration, e.g. `egui_web`, `egui_glium`, `egui_glow`\n","sig":null,"attributes":[{"value":"/ The name of the integration, e.g. `egui_web`, `egui_glium`, `egui_glow`","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14831,"byte_end":14906,"line_start":425,"line_end":425,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":108},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15040,"byte_end":15048,"line_start":429,"line_end":429,"column_start":9,"column_end":17},"name":"web_info","qualname":"::IntegrationInfo::web_info","value":"std::option::Option<WebInfo>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" If the app is running in a Web context, this returns information about the environment.\n","sig":null,"attributes":[{"value":"/ If the app is running in a Web context, this returns information about the environment.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":14940,"byte_end":15031,"line_start":428,"line_end":428,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15171,"byte_end":15187,"line_start":433,"line_end":433,"column_start":9,"column_end":25},"name":"prefer_dark_mode","qualname":"::IntegrationInfo::prefer_dark_mode","value":"std::option::Option<bool>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Does the system prefer dark mode (over light mode)?\n `None` means \"don't know\".\n","sig":null,"attributes":[{"value":"/ Does the system prefer dark mode (over light mode)?","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15072,"byte_end":15127,"line_start":431,"line_end":431,"column_start":5,"column_end":60}},{"value":"/ `None` means \"don't know\".","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15132,"byte_end":15162,"line_start":432,"line_end":432,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15331,"byte_end":15340,"line_start":437,"line_end":437,"column_start":9,"column_end":18},"name":"cpu_usage","qualname":"::IntegrationInfo::cpu_usage","value":"std::option::Option<f32>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" Seconds of cpu usage (in seconds) of UI code on the previous frame.\n `None` if this is the first frame.\n","sig":null,"attributes":[{"value":"/ Seconds of cpu usage (in seconds) of UI code on the previous frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15208,"byte_end":15279,"line_start":435,"line_end":435,"column_start":5,"column_end":76}},{"value":"/ `None` if this is the first frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15284,"byte_end":15322,"line_start":436,"line_end":436,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":111},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15403,"byte_end":15426,"line_start":440,"line_end":440,"column_start":9,"column_end":32},"name":"native_pixels_per_point","qualname":"::IntegrationInfo::native_pixels_per_point","value":"std::option::Option<f32>","parent":{"krate":0,"index":106},"children":[],"decl_id":null,"docs":" The OS native pixels-per-point\n","sig":null,"attributes":[{"value":"/ The OS native pixels-per-point","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15360,"byte_end":15394,"line_start":439,"line_end":439,"column_start":5,"column_end":39}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15511,"byte_end":15524,"line_start":444,"line_end":444,"column_start":11,"column_end":24},"name":"NativeTexture","qualname":"::NativeTexture","value":"NativeTexture","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" Abstraction for platform dependent texture reference\n","sig":null,"attributes":[{"value":"/ Abstraction for platform dependent texture reference","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15444,"byte_end":15500,"line_start":443,"line_end":443,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15569,"byte_end":15576,"line_start":446,"line_end":446,"column_start":10,"column_end":17},"name":"Texture","qualname":"::NativeTexture::Texture","value":"type Texture;","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" The native texture type.\n","sig":null,"attributes":[{"value":"/ The native texture type.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15531,"byte_end":15559,"line_start":445,"line_end":445,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15637,"byte_end":15660,"line_start":449,"line_end":449,"column_start":8,"column_end":31},"name":"register_native_texture","qualname":"::NativeTexture::register_native_texture","value":"pub fn register_native_texture(&mut Self, Self::Texture) -> egui::TextureId","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Bind native texture to an egui texture id.\n","sig":null,"attributes":[{"value":"/ Bind native texture to an egui texture id.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15583,"byte_end":15629,"line_start":448,"line_end":448,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15775,"byte_end":15797,"line_start":452,"line_end":452,"column_start":8,"column_end":30},"name":"replace_native_texture","qualname":"::NativeTexture::replace_native_texture","value":"pub fn replace_native_texture(&mut Self, egui::TextureId, Self::Texture)","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Change what texture the given id refers to.\n","sig":null,"attributes":[{"value":"/ Change what texture the given id refers to.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15720,"byte_end":15767,"line_start":451,"line_end":451,"column_start":5,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16218,"byte_end":16225,"line_start":461,"line_end":461,"column_start":11,"column_end":18},"name":"Storage","qualname":"::Storage","value":"Storage","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" A place where you can store custom data in a way that persists when you restart the app.","sig":null,"attributes":[{"value":"/ A place where you can store custom data in a way that persists when you restart the app.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":15941,"byte_end":16033,"line_start":457,"line_end":457,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16034,"byte_end":16037,"line_start":458,"line_end":458,"column_start":1,"column_end":4}},{"value":"/ On the web this is backed by [local storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16038,"byte_end":16157,"line_start":459,"line_end":459,"column_start":1,"column_end":120}},{"value":"/ On desktop this is backed by the file system.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16158,"byte_end":16207,"line_start":460,"line_end":460,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16276,"byte_end":16286,"line_start":463,"line_end":463,"column_start":8,"column_end":18},"name":"get_string","qualname":"::Storage::get_string","value":"pub fn get_string(&Self, &str) -> Option<String>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Get the value for the given key.\n","sig":null,"attributes":[{"value":"/ Get the value for the given key.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16232,"byte_end":16268,"line_start":462,"line_end":462,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16372,"byte_end":16382,"line_start":465,"line_end":465,"column_start":8,"column_end":18},"name":"set_string","qualname":"::Storage::set_string","value":"pub fn set_string(&mut Self, &str, String)","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Set the value for the given key.\n","sig":null,"attributes":[{"value":"/ Set the value for the given key.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16328,"byte_end":16364,"line_start":464,"line_end":464,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16462,"byte_end":16467,"line_start":468,"line_end":468,"column_start":8,"column_end":13},"name":"flush","qualname":"::Storage::flush","value":"pub fn flush(&mut Self)","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" write-to-disk or similar\n","sig":null,"attributes":[{"value":"/ write-to-disk or similar","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16426,"byte_end":16454,"line_start":467,"line_end":467,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":116},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16540,"byte_end":16552,"line_start":473,"line_end":473,"column_start":12,"column_end":24},"name":"DummyStorage","qualname":"::DummyStorage","value":"DummyStorage {  }","parent":null,"children":[],"decl_id":null,"docs":" Stores nothing.\n","sig":null,"attributes":[{"value":"/ Stores nothing.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16483,"byte_end":16502,"line_start":471,"line_end":471,"column_start":1,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17386,"byte_end":17393,"line_start":498,"line_end":498,"column_start":11,"column_end":18},"name":"APP_KEY","qualname":"::APP_KEY","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" [`Storage`] key used for app\n","sig":null,"attributes":[{"value":"/ [`Storage`] key used for app","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17343,"byte_end":17375,"line_start":497,"line_end":497,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17570,"byte_end":17577,"line_start":503,"line_end":503,"column_start":9,"column_end":16},"name":"backend","qualname":"::backend","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":57},{"krate":0,"index":121},{"krate":0,"index":127}],"decl_id":null,"docs":" You only need to look here if you are writing a backend for `epi`.\n","sig":null,"attributes":[{"value":"/ You only need to look here if you are writing a backend for `epi`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17491,"byte_end":17561,"line_start":502,"line_end":502,"column_start":1,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17688,"byte_end":17701,"line_start":507,"line_end":507,"column_start":15,"column_end":28},"name":"RepaintSignal","qualname":"::backend::RepaintSignal","value":"RepaintSignal: Send + Sync","parent":null,"children":[{"krate":0,"index":56}],"decl_id":null,"docs":" How to signal the [`egui`] integration that a repaint is required.\n","sig":null,"attributes":[{"value":"/ How to signal the [`egui`] integration that a repaint is required.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17603,"byte_end":17673,"line_start":506,"line_end":506,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17926,"byte_end":17941,"line_start":511,"line_end":511,"column_start":12,"column_end":27},"name":"request_repaint","qualname":"::backend::RepaintSignal::request_repaint","value":"pub fn request_repaint(&Self)","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" This signals the [`egui`] integration that a repaint is required.","sig":null,"attributes":[{"value":"/ This signals the [`egui`] integration that a repaint is required.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17725,"byte_end":17794,"line_start":508,"line_end":508,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17803,"byte_end":17806,"line_start":509,"line_end":509,"column_start":9,"column_end":12}},{"value":"/ Call this e.g. when a background process finishes in an async context and/or background thread.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17815,"byte_end":17914,"line_start":510,"line_end":510,"column_start":9,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18023,"byte_end":18032,"line_start":515,"line_end":515,"column_start":16,"column_end":25},"name":"FrameData","qualname":"::backend::FrameData","value":"FrameData { info, output, repaint_signal }","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"decl_id":null,"docs":" The data required by [`Frame`] each frame.\n","sig":null,"attributes":[{"value":"/ The data required by [`Frame`] each frame.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17961,"byte_end":18007,"line_start":514,"line_end":514,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18094,"byte_end":18098,"line_start":517,"line_end":517,"column_start":13,"column_end":17},"name":"info","qualname":"::backend::FrameData::info","value":"IntegrationInfo","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Information about the integration.\n","sig":null,"attributes":[{"value":"/ Information about the integration.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18043,"byte_end":18081,"line_start":516,"line_end":516,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18200,"byte_end":18206,"line_start":520,"line_end":520,"column_start":13,"column_end":19},"name":"output","qualname":"::backend::FrameData::output","value":"backend::AppOutput","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" Where the app can issue commands back to the integration.\n","sig":null,"attributes":[{"value":"/ Where the app can issue commands back to the integration.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18126,"byte_end":18187,"line_start":519,"line_end":519,"column_start":9,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18343,"byte_end":18357,"line_start":523,"line_end":523,"column_start":13,"column_end":27},"name":"repaint_signal","qualname":"::backend::FrameData::repaint_signal","value":"std::sync::Arc<(dyn backend::RepaintSignal + 'static)>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":" If you need to request a repaint from another thread, clone this and send it to that other thread.\n","sig":null,"attributes":[{"value":"/ If you need to request a repaint from another thread, clone this and send it to that other thread.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18228,"byte_end":18330,"line_start":522,"line_end":522,"column_start":9,"column_end":111}}]},{"kind":"Struct","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18505,"byte_end":18514,"line_start":529,"line_end":529,"column_start":16,"column_end":25},"name":"AppOutput","qualname":"::backend::AppOutput","value":"AppOutput { quit, window_size, window_title, decorated, drag_window }","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":" Action that can be taken by the user app.\n","sig":null,"attributes":[{"value":"/ Action that can be taken by the user app.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18405,"byte_end":18450,"line_start":526,"line_end":526,"column_start":5,"column_end":50}},{"value":"must_use","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18478,"byte_end":18489,"line_start":528,"line_end":528,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":122},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18616,"byte_end":18620,"line_start":532,"line_end":532,"column_start":13,"column_end":17},"name":"quit","qualname":"::backend::AppOutput::quit","value":"bool","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Set to `true` to stop the app.\n This does nothing for web apps.\n","sig":null,"attributes":[{"value":"/ Set to `true` to stop the app.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18525,"byte_end":18559,"line_start":530,"line_end":530,"column_start":9,"column_end":43}},{"value":"/ This does nothing for web apps.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18568,"byte_end":18603,"line_start":531,"line_end":531,"column_start":9,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18731,"byte_end":18742,"line_start":535,"line_end":535,"column_start":13,"column_end":24},"name":"window_size","qualname":"::backend::AppOutput::window_size","value":"std::option::Option<egui::Vec2>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Set to some size to resize the outer window (e.g. glium window) to this size.\n","sig":null,"attributes":[{"value":"/ Set to some size to resize the outer window (e.g. glium window) to this size.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18637,"byte_end":18718,"line_start":534,"line_end":534,"column_start":9,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18870,"byte_end":18882,"line_start":538,"line_end":538,"column_start":13,"column_end":25},"name":"window_title","qualname":"::backend::AppOutput::window_title","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Set to some string to rename the outer window (e.g. glium window) to this title.\n","sig":null,"attributes":[{"value":"/ Set to some string to rename the outer window (e.g. glium window) to this title.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18773,"byte_end":18857,"line_start":537,"line_end":537,"column_start":9,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18972,"byte_end":18981,"line_start":541,"line_end":541,"column_start":13,"column_end":22},"name":"decorated","qualname":"::backend::AppOutput::decorated","value":"std::option::Option<bool>","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Set to some bool to change window decorations.\n","sig":null,"attributes":[{"value":"/ Set to some bool to change window decorations.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":18909,"byte_end":18959,"line_start":540,"line_end":540,"column_start":9,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":19085,"byte_end":19096,"line_start":544,"line_end":544,"column_start":13,"column_end":24},"name":"drag_window","qualname":"::backend::AppOutput::drag_window","value":"bool","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Set to true to drag window while primary mouse button is down.\n","sig":null,"attributes":[{"value":"/ Set to true to drag window while primary mouse button is down.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":19006,"byte_end":19072,"line_start":543,"line_end":543,"column_start":9,"column_end":75}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9805,"byte_end":9818,"line_start":254,"line_end":254,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10870,"byte_end":10875,"line_start":294,"line_end":294,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16574,"byte_end":16586,"line_start":475,"line_end":475,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":9805,"byte_end":9818,"line_start":254,"line_end":254,"column_start":18,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":10870,"byte_end":10875,"line_start":294,"line_end":294,"column_start":6,"column_end":11},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":16574,"byte_end":16586,"line_start":475,"line_end":475,"column_start":18,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":116},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17703,"byte_end":17707,"line_start":507,"line_end":507,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3016},"to":{"krate":0,"index":55}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\epi-0.17.0\\src\\lib.rs","byte_start":17710,"byte_end":17714,"line_start":507,"line_end":507,"column_start":37,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":3028},"to":{"krate":0,"index":55}}]}