{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8","program":"C:\\Users\\Tyra Bjurman\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","atomic_refcell","C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=1d90111341ddb257","-C","extra-filename=-1d90111341ddb257","--out-dir","c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Tyra Bjurman\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Tyra Bjurman\\Google Drive\\Projekt\\Stock screener\\target\\rls\\debug\\deps\\libatomic_refcell-1d90111341ddb257.rmeta"},"prelude":{"crate_id":{"name":"atomic_refcell","disambiguator":[5087543260144174942,0]},"crate_root":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src","external_crates":[{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11647781593125135854,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13810207351280985286,0]}},{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10856308035441163175,0]}}],"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":206,"byte_end":15994,"line_start":5,"line_end":486,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":206,"byte_end":15994,"line_start":5,"line_end":486,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":53},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":118},{"krate":0,"index":123},{"krate":0,"index":133},{"krate":0,"index":142},{"krate":0,"index":147},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":164}],"decl_id":null,"docs":" Implements a container type providing RefCell-like semantics for objects\n shared across threads.","sig":null,"attributes":[{"value":"/ Implements a container type providing RefCell-like semantics for objects","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":206,"byte_end":282,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ shared across threads.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":283,"byte_end":309,"line_start":6,"line_end":6,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":310,"byte_end":313,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ RwLock is traditionally considered to be the |Sync| analogue of RefCell.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":314,"byte_end":390,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ However, for consumers that can guarantee that they will never mutably","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":391,"byte_end":465,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"/ borrow the contents concurrently with immutable borrows, an RwLock is","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":466,"byte_end":539,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ overkill, and has key disadvantages:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":540,"byte_end":580,"line_start":11,"line_end":11,"column_start":1,"column_end":41}},{"value":"/ * Performance: Even the fastest existing implementation of RwLock (that of","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":581,"byte_end":659,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/   parking_lot) performs at least two atomic operations during immutable","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":660,"byte_end":735,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   borrows. This makes mutable borrows significantly cheaper than immutable","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":736,"byte_end":814,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/   borrows, leading to weird incentives when writing performance-critical","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":815,"byte_end":891,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/   code.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":892,"byte_end":903,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/ * Features: Implementing AtomicRefCell on top of RwLock makes it impossible","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":904,"byte_end":983,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/   to implement useful things like AtomicRef{,Mut}::map.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":984,"byte_end":1043,"line_start":18,"line_end":18,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1044,"byte_end":1047,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ As such, we re-implement RefCell semantics from scratch with a single atomic","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1048,"byte_end":1128,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ reference count. The primary complication of this scheme relates to keeping","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1129,"byte_end":1208,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ things in a consistent state when one thread performs an illegal borrow and","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1209,"byte_end":1288,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ panics. Since an AtomicRefCell can be accessed by multiple threads, and since","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1289,"byte_end":1370,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ panics are recoverable, we need to ensure that an illegal (panicking) access by","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1371,"byte_end":1454,"line_start":24,"line_end":24,"column_start":1,"column_end":84}},{"value":"/ one thread does not lead to undefined behavior on other, still-running threads.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1455,"byte_end":1538,"line_start":25,"line_end":25,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1539,"byte_end":1542,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ So we represent things as follows:","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1543,"byte_end":1581,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/ * Any value with the high bit set (so half the total refcount space) indicates","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1582,"byte_end":1664,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/   a mutable borrow.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1665,"byte_end":1688,"line_start":29,"line_end":29,"column_start":1,"column_end":24}},{"value":"/ * Mutable borrows perform an atomic compare-and-swap, swapping in the high bit","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1689,"byte_end":1771,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/   if the current value is zero. If the current value is non-zero, the thread","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1772,"byte_end":1852,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/   panics and the value is left undisturbed.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1853,"byte_end":1900,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ * Immutable borrows perform an atomic increment. If the new value has the high","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1901,"byte_end":1983,"line_start":33,"line_end":33,"column_start":1,"column_end":83}},{"value":"/   bit set, the thread panics. The incremented refcount is left as-is, since it","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":1984,"byte_end":2066,"line_start":34,"line_end":34,"column_start":1,"column_end":83}},{"value":"/   still represents a valid mutable borrow. When the mutable borrow is released,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2067,"byte_end":2150,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/   the refcount is set unconditionally to zero, clearing any stray increments by","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2151,"byte_end":2234,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/   panicked threads.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2235,"byte_end":2258,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2259,"byte_end":2262,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ There are a few additional purely-academic complications to handle overflow,","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2263,"byte_end":2343,"line_start":39,"line_end":39,"column_start":1,"column_end":81}},{"value":"/ which are documented in the implementation.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2344,"byte_end":2391,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2392,"byte_end":2395,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ The rest of this module is mostly derived by copy-pasting the implementation of","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2396,"byte_end":2479,"line_start":42,"line_end":42,"column_start":1,"column_end":84}},{"value":"/ RefCell and fixing things up as appropriate. Certain non-threadsafe methods","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2480,"byte_end":2559,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ have been removed. We segment the concurrency logic from the rest of the code to","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2560,"byte_end":2644,"line_start":44,"line_end":44,"column_start":1,"column_end":85}},{"value":"/ keep the tricky parts small and easy to audit.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2645,"byte_end":2695,"line_start":45,"line_end":45,"column_start":1,"column_end":51}},{"value":"no_std","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2697,"byte_end":2707,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"allow(unsafe_code)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2708,"byte_end":2730,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2731,"byte_end":2753,"line_start":49,"line_end":49,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2991,"byte_end":3004,"line_start":60,"line_end":60,"column_start":12,"column_end":25},"name":"AtomicRefCell","qualname":"::AtomicRefCell","value":"AtomicRefCell {  }","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"decl_id":null,"docs":" A threadsafe analogue to RefCell.\n","sig":null,"attributes":[{"value":"/ A threadsafe analogue to RefCell.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":2942,"byte_end":2979,"line_start":59,"line_end":59,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3184,"byte_end":3195,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"BorrowError","qualname":"::BorrowError","value":"BorrowError {  }","parent":null,"children":[{"krate":0,"index":38}],"decl_id":null,"docs":" An error returned by [`AtomicRefCell::try_borrow`](struct.AtomicRefCell.html#method.try_borrow).\n","sig":null,"attributes":[{"value":"/ An error returned by [`AtomicRefCell::try_borrow`](struct.AtomicRefCell.html#method.try_borrow).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3072,"byte_end":3172,"line_start":65,"line_end":65,"column_start":1,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3642,"byte_end":3656,"line_start":83,"line_end":83,"column_start":12,"column_end":26},"name":"BorrowMutError","qualname":"::BorrowMutError","value":"BorrowMutError {  }","parent":null,"children":[{"krate":0,"index":44}],"decl_id":null,"docs":" An error returned by [`AtomicRefCell::try_borrow_mut`](struct.AtomicRefCell.html#method.try_borrow_mut).\n","sig":null,"attributes":[{"value":"/ An error returned by [`AtomicRefCell::try_borrow_mut`](struct.AtomicRefCell.html#method.try_borrow_mut).","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3522,"byte_end":3630,"line_start":82,"line_end":82,"column_start":1,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4100,"byte_end":4103,"line_start":102,"line_end":102,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicRefCell<T>>::new","value":"pub const fn new(T) -> AtomicRefCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AtomicRefCell` containing `value`.\n","sig":null,"attributes":[{"value":"/ Creates a new `AtomicRefCell` containing `value`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4015,"byte_end":4068,"line_start":100,"line_end":100,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4073,"byte_end":4082,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4353,"byte_end":4363,"line_start":111,"line_end":111,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AtomicRefCell<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `AtomicRefCell`, returning the wrapped value.\n","sig":null,"attributes":[{"value":"/ Consumes the `AtomicRefCell`, returning the wrapped value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4265,"byte_end":4327,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4332,"byte_end":4341,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4596,"byte_end":4602,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"borrow","qualname":"<AtomicRefCell<T>>::borrow","value":"pub fn borrow(&Self) -> AtomicRef<, T>","parent":null,"children":[],"decl_id":null,"docs":" Immutably borrows the wrapped value.\n","sig":null,"attributes":[{"value":"/ Immutably borrows the wrapped value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4530,"byte_end":4570,"line_start":118,"line_end":118,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4575,"byte_end":4584,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":5019,"byte_end":5029,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"try_borrow","qualname":"<AtomicRefCell<T>>::try_borrow","value":"pub fn try_borrow(&Self) -> Result<AtomicRef<, T>, BorrowError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immutably borrow the wrapped value, but instead of panicking\n on a failed borrow, returns `Err`.\n","sig":null,"attributes":[{"value":"/ Attempts to immutably borrow the wrapped value, but instead of panicking","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4874,"byte_end":4950,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ on a failed borrow, returns `Err`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4955,"byte_end":4993,"line_start":131,"line_end":131,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4998,"byte_end":5007,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":5408,"byte_end":5418,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"borrow_mut","qualname":"<AtomicRefCell<T>>::borrow_mut","value":"pub fn borrow_mut(&Self) -> AtomicRefMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Mutably borrows the wrapped value.\n","sig":null,"attributes":[{"value":"/ Mutably borrows the wrapped value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":5344,"byte_end":5382,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":5387,"byte_end":5396,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":5846,"byte_end":5860,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"try_borrow_mut","qualname":"<AtomicRefCell<T>>::try_borrow_mut","value":"pub fn try_borrow_mut(&Self) -> Result<AtomicRefMut<, T>, BorrowMutError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to mutably borrow the wrapped value, but instead of panicking\n on a failed borrow, returns `Err`.\n","sig":null,"attributes":[{"value":"/ Attempts to mutably borrow the wrapped value, but instead of panicking","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":5703,"byte_end":5777,"line_start":155,"line_end":155,"column_start":5,"column_end":79}},{"value":"/ on a failed borrow, returns `Err`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":5782,"byte_end":5820,"line_start":156,"line_end":156,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":5825,"byte_end":5834,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6393,"byte_end":6399,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AtomicRefCell<T>>::as_ptr","value":"pub fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying data in this cell.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying data in this cell.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6194,"byte_end":6256,"line_start":168,"line_end":168,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6261,"byte_end":6264,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ External synchronization is needed to avoid data races when dereferencing","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6269,"byte_end":6346,"line_start":170,"line_end":170,"column_start":5,"column_end":82}},{"value":"/ the pointer.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6351,"byte_end":6367,"line_start":171,"line_end":171,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6372,"byte_end":6381,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6692,"byte_end":6699,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AtomicRefCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the wrapped value.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the wrapped value.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6455,"byte_end":6508,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6513,"byte_end":6516,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ No runtime checks take place (unless debug assertions are enabled)","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6521,"byte_end":6591,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/ because this call borrows `AtomicRefCell` mutably at compile-time.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6596,"byte_end":6666,"line_start":180,"line_end":180,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":6671,"byte_end":6680,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13127,"byte_end":13136,"line_start":372,"line_end":372,"column_start":12,"column_end":21},"name":"AtomicRef","qualname":"::AtomicRef","value":"AtomicRef {  }","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117}],"decl_id":null,"docs":" A wrapper type for an immutably borrowed value from an `AtomicRefCell<T>`.\n","sig":null,"attributes":[{"value":"/ A wrapper type for an immutably borrowed value from an `AtomicRefCell<T>`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13037,"byte_end":13115,"line_start":371,"line_end":371,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13449,"byte_end":13454,"line_start":389,"line_end":389,"column_start":12,"column_end":17},"name":"clone","qualname":"<AtomicRef>::clone","value":"pub fn clone(&AtomicRef) -> AtomicRef","parent":null,"children":[],"decl_id":null,"docs":" Copies an `AtomicRef`.\n","sig":null,"attributes":[{"value":"/ Copies an `AtomicRef`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13397,"byte_end":13423,"line_start":387,"line_end":387,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13428,"byte_end":13437,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13705,"byte_end":13708,"line_start":398,"line_end":398,"column_start":12,"column_end":15},"name":"map","qualname":"<AtomicRef>::map","value":"pub fn map<U: ?Sized, F>(AtomicRef, F) -> AtomicRef where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `AtomicRef` for a component of the borrowed data.\n","sig":null,"attributes":[{"value":"/ Make a new `AtomicRef` for a component of the borrowed data.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13615,"byte_end":13679,"line_start":396,"line_end":396,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13684,"byte_end":13693,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14026,"byte_end":14036,"line_start":410,"line_end":410,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<AtomicRef>::filter_map","value":"pub fn filter_map<U: ?Sized, F>(AtomicRef, F) -> Option<AtomicRef> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Make a new `AtomicRef` for an optional component of the borrowed data.\n","sig":null,"attributes":[{"value":"/ Make a new `AtomicRef` for an optional component of the borrowed data.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13926,"byte_end":14000,"line_start":408,"line_end":408,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14005,"byte_end":14014,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14444,"byte_end":14447,"line_start":425,"line_end":425,"column_start":12,"column_end":15},"name":"map","qualname":"<AtomicRefMut>::map","value":"pub fn map<U: ?Sized, F>(AtomicRefMut, F) -> AtomicRefMut where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `AtomicRefMut` for a component of the borrowed data, e.g. an enum\n variant.\n","sig":null,"attributes":[{"value":"/ Make a new `AtomicRefMut` for a component of the borrowed data, e.g. an enum","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14321,"byte_end":14401,"line_start":422,"line_end":422,"column_start":5,"column_end":85}},{"value":"/ variant.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14406,"byte_end":14418,"line_start":423,"line_end":423,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14423,"byte_end":14432,"line_start":424,"line_end":424,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14785,"byte_end":14795,"line_start":437,"line_end":437,"column_start":12,"column_end":22},"name":"filter_map","qualname":"<AtomicRefMut>::filter_map","value":"pub fn filter_map<U: ?Sized, F>(AtomicRefMut, F) -> Option<AtomicRefMut> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Make a new `AtomicRefMut` for an optional component of the borrowed data.\n","sig":null,"attributes":[{"value":"/ Make a new `AtomicRefMut` for an optional component of the borrowed data.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14682,"byte_end":14759,"line_start":435,"line_end":435,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14764,"byte_end":14773,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15138,"byte_end":15150,"line_start":449,"line_end":449,"column_start":12,"column_end":24},"name":"AtomicRefMut","qualname":"::AtomicRefMut","value":"AtomicRefMut {  }","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146}],"decl_id":null,"docs":" A wrapper type for a mutably borrowed value from an `AtomicRefCell<T>`.\n","sig":null,"attributes":[{"value":"/ A wrapper type for a mutably borrowed value from an `AtomicRefCell<T>`.","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15051,"byte_end":15126,"line_start":448,"line_end":448,"column_start":1,"column_end":76}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3234,"byte_end":3245,"line_start":70,"line_end":70,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3384,"byte_end":3395,"line_start":76,"line_end":76,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3695,"byte_end":3709,"line_start":87,"line_end":87,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3851,"byte_end":3865,"line_start":93,"line_end":93,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3992,"byte_end":4005,"line_start":99,"line_end":99,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4507,"byte_end":4520,"line_start":117,"line_end":117,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":7113,"byte_end":7128,"line_start":199,"line_end":199,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":9871,"byte_end":9881,"line_start":254,"line_end":254,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":10154,"byte_end":10169,"line_start":265,"line_end":265,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":10735,"byte_end":10753,"line_start":281,"line_end":281,"column_start":19,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":10874,"byte_end":10892,"line_start":288,"line_end":288,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":11631,"byte_end":11644,"line_start":313,"line_end":313,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":11697,"byte_end":11710,"line_start":314,"line_end":314,"column_start":47,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":11840,"byte_end":11853,"line_start":321,"line_end":321,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12003,"byte_end":12016,"line_start":328,"line_end":328,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12173,"byte_end":12186,"line_start":335,"line_end":335,"column_start":43,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12338,"byte_end":12351,"line_start":342,"line_end":342,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12403,"byte_end":12416,"line_start":344,"line_end":344,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12606,"byte_end":12619,"line_start":351,"line_end":351,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12775,"byte_end":12788,"line_start":358,"line_end":358,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12892,"byte_end":12907,"line_start":364,"line_end":364,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13243,"byte_end":13252,"line_start":377,"line_end":377,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13374,"byte_end":13383,"line_start":386,"line_end":386,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14295,"byte_end":14307,"line_start":421,"line_end":421,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15264,"byte_end":15276,"line_start":454,"line_end":454,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15411,"byte_end":15423,"line_start":463,"line_end":463,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15558,"byte_end":15567,"line_start":470,"line_end":470,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15714,"byte_end":15726,"line_start":476,"line_end":476,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15864,"byte_end":15877,"line_start":482,"line_end":482,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3234,"byte_end":3245,"line_start":70,"line_end":70,"column_start":16,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3384,"byte_end":3395,"line_start":76,"line_end":76,"column_start":18,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":37},"to":{"krate":1,"index":9408}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3695,"byte_end":3709,"line_start":87,"line_end":87,"column_start":16,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":43},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3851,"byte_end":3865,"line_start":93,"line_end":93,"column_start":18,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":43},"to":{"krate":1,"index":9408}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":3992,"byte_end":4005,"line_start":99,"line_end":99,"column_start":9,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":4507,"byte_end":4520,"line_start":117,"line_end":117,"column_start":17,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":7113,"byte_end":7128,"line_start":199,"line_end":199,"column_start":10,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":63},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":9871,"byte_end":9881,"line_start":254,"line_end":254,"column_start":27,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":70},"to":{"krate":1,"index":3251}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":10154,"byte_end":10169,"line_start":265,"line_end":265,"column_start":19,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":63},"to":{"krate":1,"index":3251}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":10735,"byte_end":10753,"line_start":281,"line_end":281,"column_start":19,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":3251}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":10874,"byte_end":10892,"line_start":288,"line_end":288,"column_start":10,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":11631,"byte_end":11644,"line_start":313,"line_end":313,"column_start":40,"column_end":53},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":3016}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":11697,"byte_end":11710,"line_start":314,"line_end":314,"column_start":47,"column_end":60},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":3028}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":11840,"byte_end":11853,"line_start":321,"line_end":321,"column_start":26,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":2637}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12003,"byte_end":12016,"line_start":328,"line_end":328,"column_start":30,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":2994}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12173,"byte_end":12186,"line_start":335,"line_end":335,"column_start":43,"column_end":56},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":2667}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12338,"byte_end":12351,"line_start":342,"line_end":342,"column_start":29,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":2672}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12403,"byte_end":12416,"line_start":344,"line_end":344,"column_start":45,"column_end":58},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":2714}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12606,"byte_end":12619,"line_start":351,"line_end":351,"column_start":31,"column_end":44},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":2703}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12775,"byte_end":12788,"line_start":358,"line_end":358,"column_start":21,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":2922}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":12892,"byte_end":12907,"line_start":364,"line_end":364,"column_start":20,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":63},"to":{"krate":1,"index":2637}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13243,"byte_end":13252,"line_start":377,"line_end":377,"column_start":31,"column_end":40},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":3227}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":13374,"byte_end":13383,"line_start":386,"line_end":386,"column_start":21,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":14295,"byte_end":14307,"line_start":421,"line_end":421,"column_start":21,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15264,"byte_end":15276,"line_start":454,"line_end":454,"column_start":31,"column_end":43},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":142},"to":{"krate":1,"index":3227}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15411,"byte_end":15423,"line_start":463,"line_end":463,"column_start":34,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":142},"to":{"krate":1,"index":3240}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15558,"byte_end":15567,"line_start":470,"line_end":470,"column_start":44,"column_end":53},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":113},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15714,"byte_end":15726,"line_start":476,"line_end":476,"column_start":44,"column_end":56},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":142},"to":{"krate":1,"index":9401}},{"span":{"file_name":"C:\\Users\\Tyra Bjurman\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\atomic_refcell-0.1.8\\src\\lib.rs","byte_start":15864,"byte_end":15877,"line_start":482,"line_end":482,"column_start":35,"column_end":48},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":33},"to":{"krate":1,"index":9401}}]}